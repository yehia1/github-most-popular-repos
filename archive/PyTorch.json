[{"id": 155220641, "repo_name": "transformers", "full_name": "huggingface/transformers", "description": "\ud83e\udd17 Transformers: State-of-the-art Machine Learning for Pytorch, TensorFlow, and JAX.", "created": "2018-10-29 13:56:00", "language": "Python", "type": "Organization", "username": "huggingface", "stars": 58802, "forks": 13897, "subscribers": 793, "open_issues": 450, "topics": ["nlp", "natural-language-processing", "pytorch", "language-model", "tensorflow", "bert", "language-models", "pytorch-transformers", "nlp-library", "transformer", "model-hub", "pretrained-models", "jax", "flax", "seq2seq", "speech-recognition", "hacktoberfest", "python", "machine-learning", "deep-learning"]}, {"id": 65600975, "repo_name": "pytorch", "full_name": "pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration", "created": "2016-08-13 05:26:41", "language": "C++", "type": "Organization", "username": "pytorch", "stars": 54311, "forks": 15033, "subscribers": 1594, "open_issues": 11328, "topics": ["neural-network", "autograd", "gpu", "numpy", "deep-learning", "tensor", "python", "machine-learning"]}, {"id": 145553672, "repo_name": "funNLP", "full_name": "fighting41love/funNLP", "description": "\u4e2d\u82f1\u6587\u654f\u611f\u8bcd\u3001\u8bed\u8a00\u68c0\u6d4b\u3001\u4e2d\u5916\u624b\u673a/\u7535\u8bdd\u5f52\u5c5e\u5730/\u8fd0\u8425\u5546\u67e5\u8be2\u3001\u540d\u5b57\u63a8\u65ad\u6027\u522b\u3001\u624b\u673a\u53f7\u62bd\u53d6\u3001\u8eab\u4efd\u8bc1\u62bd\u53d6\u3001\u90ae\u7bb1\u62bd\u53d6\u3001\u4e2d\u65e5\u6587\u4eba\u540d\u5e93\u3001\u4e2d\u6587\u7f29\u5199\u5e93\u3001\u62c6\u5b57\u8bcd\u5178\u3001\u8bcd\u6c47\u60c5\u611f\u503c\u3001\u505c\u7528\u8bcd\u3001\u53cd\u52a8\u8bcd\u8868\u3001\u66b4\u6050\u8bcd\u8868\u3001\u7e41\u7b80\u4f53\u8f6c\u6362\u3001\u82f1\u6587\u6a21\u62df\u4e2d\u6587\u53d1\u97f3\u3001\u6c6a\u5cf0\u6b4c\u8bcd\u751f\u6210\u5668\u3001\u804c\u4e1a\u540d\u79f0\u8bcd\u5e93\u3001\u540c\u4e49\u8bcd\u5e93\u3001\u53cd\u4e49\u8bcd\u5e93\u3001\u5426\u5b9a\u8bcd\u5e93\u3001\u6c7d\u8f66\u54c1\u724c\u8bcd\u5e93\u3001\u6c7d\u8f66\u96f6\u4ef6\u8bcd\u5e93\u3001\u8fde\u7eed\u82f1\u6587\u5207\u5272\u3001\u5404\u79cd\u4e2d\u6587\u8bcd\u5411\u91cf\u3001\u516c\u53f8\u540d\u5b57\u5927\u5168\u3001\u53e4\u8bd7\u8bcd\u5e93\u3001IT\u8bcd\u5e93\u3001\u8d22\u7ecf\u8bcd\u5e93\u3001\u6210\u8bed\u8bcd\u5e93\u3001\u5730\u540d\u8bcd\u5e93\u3001\u5386\u53f2\u540d\u4eba\u8bcd\u5e93\u3001\u8bd7\u8bcd\u8bcd\u5e93\u3001\u533b\u5b66\u8bcd\u5e93\u3001\u996e\u98df\u8bcd\u5e93\u3001\u6cd5\u5f8b\u8bcd\u5e93\u3001\u6c7d\u8f66\u8bcd\u5e93\u3001\u52a8\u7269\u8bcd\u5e93\u3001\u4e2d\u6587\u804a\u5929\u8bed\u6599\u3001\u4e2d\u6587\u8c23\u8a00\u6570\u636e\u3001\u767e\u5ea6\u4e2d\u6587\u95ee\u7b54\u6570\u636e\u96c6\u3001\u53e5\u5b50\u76f8\u4f3c\u5ea6\u5339\u914d\u7b97\u6cd5\u96c6\u5408\u3001bert\u8d44\u6e90\u3001\u6587\u672c\u751f\u6210&\u6458\u8981\u76f8\u5173\u5de5\u5177\u3001cocoNLP\u4fe1\u606f\u62bd\u53d6\u5de5\u5177\u3001\u56fd\u5185\u7535\u8bdd\u53f7\u7801\u6b63\u5219\u5339\u914d\u3001\u6e05\u534e\u5927\u5b66XLORE:\u4e2d\u82f1\u6587\u8de8\u8bed\u8a00\u767e\u79d1\u77e5\u8bc6\u56fe\u8c31\u3001\u6e05\u534e\u5927\u5b66\u4eba\u5de5\u667a\u80fd\u6280\u672f\u7cfb\u5217\u62a5\u544a\u3001\u81ea\u7136\u8bed\u8a00\u751f\u6210\u3001NLU\u592a\u96be\u4e86\u7cfb\u5217\u3001\u81ea\u52a8\u5bf9\u8054\u6570\u636e\u53ca\u673a\u5668\u4eba\u3001\u7528\u6237\u540d\u9ed1\u540d\u5355\u5217\u8868\u3001\u7f6a\u540d\u6cd5\u52a1\u540d\u8bcd\u53ca\u5206\u7c7b\u6a21\u578b\u3001\u5fae\u4fe1\u516c\u4f17\u53f7\u8bed\u6599\u3001cs224n\u6df1\u5ea6\u5b66\u4e60\u81ea\u7136\u8bed\u8a00\u5904\u7406\u8bfe\u7a0b\u3001\u4e2d\u6587\u624b\u5199\u6c49\u5b57\u8bc6\u522b\u3001\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406 \u8bed\u6599/\u6570\u636e\u96c6\u3001\u53d8\u91cf\u547d\u540d\u795e\u5668\u3001\u5206\u8bcd\u8bed\u6599\u5e93+\u4ee3\u7801\u3001\u4efb\u52a1\u578b\u5bf9\u8bdd\u82f1\u6587\u6570\u636e\u96c6\u3001ASR \u8bed\u97f3\u6570\u636e\u96c6 + \u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u4e2d\u6587\u8bed\u97f3\u8bc6\u522b\u7cfb\u7edf\u3001\u7b11\u58f0\u68c0\u6d4b\u5668\u3001Microsoft\u591a\u8bed\u8a00\u6570\u5b57/\u5355\u4f4d/\u5982\u65e5\u671f\u65f6\u95f4\u8bc6\u522b\u5305\u3001\u4e2d\u534e\u65b0\u534e\u5b57\u5178\u6570\u636e\u5e93\u53caapi(\u5305\u62ec\u5e38\u7528\u6b47\u540e\u8bed\u3001\u6210\u8bed\u3001\u8bcd\u8bed\u548c\u6c49\u5b57)\u3001\u6587\u6863\u56fe\u8c31\u81ea\u52a8\u751f\u6210\u3001SpaCy \u4e2d\u6587\u6a21\u578b\u3001Common Voice\u8bed\u97f3\u8bc6\u522b\u6570\u636e\u96c6\u65b0\u7248\u3001\u795e\u7ecf\u7f51\u7edc\u5173\u7cfb\u62bd\u53d6\u3001\u57fa\u4e8ebert\u7684\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u3001\u5173\u952e\u8bcd(Keyphrase)\u62bd\u53d6\u5305pke\u3001\u57fa\u4e8e\u533b\u7597\u9886\u57df\u77e5\u8bc6\u56fe\u8c31\u7684\u95ee\u7b54\u7cfb\u7edf\u3001\u57fa\u4e8e\u4f9d\u5b58\u53e5\u6cd5\u4e0e\u8bed\u4e49\u89d2\u8272\u6807\u6ce8\u7684\u4e8b\u4ef6\u4e09\u5143\u7ec4\u62bd\u53d6\u3001\u4f9d\u5b58\u53e5\u6cd5\u5206\u67904\u4e07\u53e5\u9ad8\u8d28\u91cf\u6807\u6ce8\u6570\u636e\u3001cnocr\uff1a\u7528\u6765\u505a\u4e2d\u6587OCR\u7684Python3\u5305\u3001\u4e2d\u6587\u4eba\u7269\u5173\u7cfb\u77e5\u8bc6\u56fe\u8c31\u9879\u76ee\u3001\u4e2d\u6587nlp\u7ade\u8d5b\u9879\u76ee\u53ca\u4ee3\u7801\u6c47\u603b\u3001\u4e2d\u6587\u5b57\u7b26\u6570\u636e\u3001speech-aligner: \u4ece\u201c\u4eba\u58f0\u8bed\u97f3\u201d\u53ca\u5176\u201c\u8bed\u8a00\u6587\u672c\u201d\u4ea7\u751f\u97f3\u7d20\u7ea7\u522b\u65f6\u95f4\u5bf9\u9f50\u6807\u6ce8\u7684\u5de5\u5177\u3001AmpliGraph: \u77e5\u8bc6\u56fe\u8c31\u8868\u793a\u5b66\u4e60(Python)\u5e93\uff1a\u77e5\u8bc6\u56fe\u8c31\u6982\u5ff5\u94fe\u63a5\u9884\u6d4b\u3001Scattertext \u6587\u672c\u53ef\u89c6\u5316(python)\u3001\u8bed\u8a00/\u77e5\u8bc6\u8868\u793a\u5de5\u5177\uff1aBERT & ERNIE\u3001\u4e2d\u6587\u5bf9\u6bd4\u82f1\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406NLP\u7684\u533a\u522b\u7efc\u8ff0\u3001Synonyms\u4e2d\u6587\u8fd1\u4e49\u8bcd\u5de5\u5177\u5305\u3001HarvestText\u9886\u57df\u81ea\u9002\u5e94\u6587\u672c\u6316\u6398\u5de5\u5177\uff08\u65b0\u8bcd\u53d1\u73b0-\u60c5\u611f\u5206\u6790-\u5b9e\u4f53\u94fe\u63a5\u7b49\uff09\u3001word2word\uff1a(Python)\u65b9\u4fbf\u6613\u7528\u7684\u591a\u8bed\u8a00\u8bcd-\u8bcd\u5bf9\u96c6\uff1a62\u79cd\u8bed\u8a00/3,564\u4e2a\u591a\u8bed\u8a00\u5bf9\u3001\u8bed\u97f3\u8bc6\u522b\u8bed\u6599\u751f\u6210\u5de5\u5177\uff1a\u4ece\u5177\u6709\u97f3\u9891/\u5b57\u5e55\u7684\u5728\u7ebf\u89c6\u9891\u521b\u5efa\u81ea\u52a8\u8bed\u97f3\u8bc6\u522b(ASR)\u8bed\u6599\u5e93\u3001\u6784\u5efa\u533b\u7597\u5b9e\u4f53\u8bc6\u522b\u7684\u6a21\u578b\uff08\u5305\u542b\u8bcd\u5178\u548c\u8bed\u6599\u6807\u6ce8\uff09\u3001\u5355\u6587\u6863\u975e\u76d1\u7763\u7684\u5173\u952e\u8bcd\u62bd\u53d6\u3001Kashgari\u4e2d\u4f7f\u7528gpt-2\u8bed\u8a00\u6a21\u578b\u3001\u5f00\u6e90\u7684\u91d1\u878d\u6295\u8d44\u6570\u636e\u63d0\u53d6\u5de5\u5177\u3001\u6587\u672c\u81ea\u52a8\u6458\u8981\u5e93TextTeaser: \u4ec5\u652f\u6301\u82f1\u6587\u3001\u4eba\u6c11\u65e5\u62a5\u8bed\u6599\u5904\u7406\u5de5\u5177\u96c6\u3001\u4e00\u4e9b\u5173\u4e8e\u81ea\u7136\u8bed\u8a00\u7684\u57fa\u672c\u6a21\u578b\u3001\u57fa\u4e8e14W\u6b4c\u66f2\u77e5\u8bc6\u5e93\u7684\u95ee\u7b54\u5c1d\u8bd5--\u529f\u80fd\u5305\u62ec\u6b4c\u8bcd\u63a5\u9f99and\u5df2\u77e5\u6b4c\u8bcd\u627e\u6b4c\u66f2\u4ee5\u53ca\u6b4c\u66f2\u6b4c\u624b\u6b4c\u8bcd\u4e09\u89d2\u5173\u7cfb\u7684\u95ee\u7b54\u3001\u57fa\u4e8eSiamese bilstm\u6a21\u578b\u7684\u76f8\u4f3c\u53e5\u5b50\u5224\u5b9a\u6a21\u578b\u5e76\u63d0\u4f9b\u8bad\u7ec3\u6570\u636e\u96c6\u548c\u6d4b\u8bd5\u6570\u636e\u96c6\u3001\u7528Transformer\u7f16\u89e3\u7801\u6a21\u578b\u5b9e\u73b0\u7684\u6839\u636eHacker News\u6587\u7ae0\u6807\u9898\u81ea\u52a8\u751f\u6210\u8bc4\u8bba\u3001\u7528BERT\u8fdb\u884c\u5e8f\u5217\u6807\u8bb0\u548c\u6587\u672c\u5206\u7c7b\u7684\u6a21\u677f\u4ee3\u7801\u3001LitBank\uff1aNLP\u6570\u636e\u96c6\u2014\u2014\u652f\u6301\u81ea\u7136\u8bed\u8a00\u5904\u7406\u548c\u8ba1\u7b97\u4eba\u6587\u5b66\u79d1\u4efb\u52a1\u7684100\u90e8\u5e26\u6807\u8bb0\u82f1\u6587\u5c0f\u8bf4\u8bed\u6599\u3001\u767e\u5ea6\u5f00\u6e90\u7684\u57fa\u51c6\u4fe1\u606f\u62bd\u53d6\u7cfb\u7edf\u3001\u865a\u5047\u65b0\u95fb\u6570\u636e\u96c6\u3001Facebook: LAMA\u8bed\u8a00\u6a21\u578b\u5206\u6790\uff0c\u63d0\u4f9bTransformer-XL/BERT/ELMo/GPT\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\u7684\u7edf\u4e00\u8bbf\u95ee\u63a5\u53e3\u3001CommonsenseQA\uff1a\u9762\u5411\u5e38\u8bc6\u7684\u82f1\u6587QA\u6311\u6218\u3001\u4e2d\u6587\u77e5\u8bc6\u56fe\u8c31\u8d44\u6599\u3001\u6570\u636e\u53ca\u5de5\u5177\u3001\u5404\u5927\u516c\u53f8\u5185\u90e8\u91cc\u5927\u725b\u5206\u4eab\u7684\u6280\u672f\u6587\u6863 PDF \u6216\u8005 PPT\u3001\u81ea\u7136\u8bed\u8a00\u751f\u6210SQL\u8bed\u53e5\uff08\u82f1\u6587\uff09\u3001\u4e2d\u6587NLP\u6570\u636e\u589e\u5f3a\uff08EDA\uff09\u5de5\u5177\u3001\u82f1\u6587NLP\u6570\u636e\u589e\u5f3a\u5de5\u5177 \u3001\u57fa\u4e8e\u533b\u836f\u77e5\u8bc6\u56fe\u8c31\u7684\u667a\u80fd\u95ee\u7b54\u7cfb\u7edf\u3001\u4eac\u4e1c\u5546\u54c1\u77e5\u8bc6\u56fe\u8c31\u3001\u57fa\u4e8emongodb\u5b58\u50a8\u7684\u519b\u4e8b\u9886\u57df\u77e5\u8bc6\u56fe\u8c31\u95ee\u7b54\u9879\u76ee\u3001\u57fa\u4e8e\u8fdc\u76d1\u7763\u7684\u4e2d\u6587\u5173\u7cfb\u62bd\u53d6\u3001\u8bed\u97f3\u60c5\u611f\u5206\u6790\u3001\u4e2d\u6587ULMFiT-\u60c5\u611f\u5206\u6790-\u6587\u672c\u5206\u7c7b-\u8bed\u6599\u53ca\u6a21\u578b\u3001\u4e00\u4e2a\u62cd\u7167\u505a\u9898\u7a0b\u5e8f\u3001\u4e16\u754c\u5404\u56fd\u5927\u89c4\u6a21\u4eba\u540d\u5e93\u3001\u4e00\u4e2a\u5229\u7528\u6709\u8da3\u4e2d\u6587\u8bed\u6599\u5e93 qingyun \u8bad\u7ec3\u51fa\u6765\u7684\u4e2d\u6587\u804a\u5929\u673a\u5668\u4eba\u3001\u4e2d\u6587\u804a\u5929\u673a\u5668\u4ebaseqGAN\u3001\u7701\u5e02\u533a\u9547\u884c\u653f\u533a\u5212\u6570\u636e\u5e26\u62fc\u97f3\u6807\u6ce8\u3001\u6559\u80b2\u884c\u4e1a\u65b0\u95fb\u8bed\u6599\u5e93\u5305\u542b\u81ea\u52a8\u6587\u6458\u529f\u80fd\u3001\u5f00\u653e\u4e86\u5bf9\u8bdd\u673a\u5668\u4eba-\u77e5\u8bc6\u56fe\u8c31-\u8bed\u4e49\u7406\u89e3-\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u53ca\u6570\u636e\u3001\u4e2d\u6587\u77e5\u8bc6\u56fe\u8c31\uff1a\u57fa\u4e8e\u767e\u5ea6\u767e\u79d1\u4e2d\u6587\u9875\u9762-\u62bd\u53d6\u4e09\u5143\u7ec4\u4fe1\u606f-\u6784\u5efa\u4e2d\u6587\u77e5\u8bc6\u56fe\u8c31\u3001masr: \u4e2d\u6587\u8bed\u97f3\u8bc6\u522b-\u63d0\u4f9b\u9884\u8bad\u7ec3\u6a21\u578b-\u9ad8\u8bc6\u522b\u7387\u3001Python\u97f3\u9891\u6570\u636e\u589e\u5e7f\u5e93\u3001\u4e2d\u6587\u5168\u8bcd\u8986\u76d6BERT\u53ca\u4e24\u4efd\u9605\u8bfb\u7406\u89e3\u6570\u636e\u3001ConvLab\uff1a\u5f00\u6e90\u591a\u57df\u7aef\u5230\u7aef\u5bf9\u8bdd\u7cfb\u7edf\u5e73\u53f0\u3001\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6570\u636e\u96c6\u3001\u57fa\u4e8e\u6700\u65b0\u7248\u672crasa\u642d\u5efa\u7684\u5bf9\u8bdd\u7cfb\u7edf\u3001\u57fa\u4e8eTensorFlow\u548cBERT\u7684\u7ba1\u9053\u5f0f\u5b9e\u4f53\u53ca\u5173\u7cfb\u62bd\u53d6\u3001\u4e00\u4e2a\u5c0f\u578b\u7684\u8bc1\u5238\u77e5\u8bc6\u56fe\u8c31/\u77e5\u8bc6\u5e93\u3001\u590d\u76d8\u6240\u6709NLP\u6bd4\u8d5b\u7684TOP\u65b9\u6848\u3001OpenCLaP\uff1a\u591a\u9886\u57df\u5f00\u6e90\u4e2d\u6587\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\u4ed3\u5e93\u3001UER\uff1a\u57fa\u4e8e\u4e0d\u540c\u8bed\u6599+\u7f16\u7801\u5668+\u76ee\u6807\u4efb\u52a1\u7684\u4e2d\u6587\u9884\u8bad\u7ec3\u6a21\u578b\u4ed3\u5e93\u3001\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5411\u91cf\u5408\u96c6\u3001\u57fa\u4e8e\u91d1\u878d-\u53f8\u6cd5\u9886\u57df(\u517c\u6709\u95f2\u804a\u6027\u8d28)\u7684\u804a\u5929\u673a\u5668\u4eba\u3001g2pC\uff1a\u57fa\u4e8e\u4e0a\u4e0b\u6587\u7684\u6c49\u8bed\u8bfb\u97f3\u81ea\u52a8\u6807\u8bb0\u6a21\u5757\u3001Zincbase \u77e5\u8bc6\u56fe\u8c31\u6784\u5efa\u5de5\u5177\u5305\u3001\u8bd7\u6b4c\u8d28\u91cf\u8bc4\u4ef7/\u7ec6\u7c92\u5ea6\u60c5\u611f\u8bd7\u6b4c\u8bed\u6599\u5e93\u3001\u5feb\u901f\u8f6c\u5316\u300c\u4e2d\u6587\u6570\u5b57\u300d\u548c\u300c\u963f\u62c9\u4f2f\u6570\u5b57\u300d\u3001\u767e\u5ea6\u77e5\u9053\u95ee\u7b54\u8bed\u6599\u5e93\u3001\u57fa\u4e8e\u77e5\u8bc6\u56fe\u8c31\u7684\u95ee\u7b54\u7cfb\u7edf\u3001jieba_fast \u52a0\u901f\u7248\u7684jieba\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\u6559\u7a0b\u3001\u4e2d\u6587\u9605\u8bfb\u7406\u89e3\u6570\u636e\u96c6\u3001\u57fa\u4e8eBERT\u7b49\u6700\u65b0\u8bed\u8a00\u6a21\u578b\u7684\u62bd\u53d6\u5f0f\u6458\u8981\u63d0\u53d6\u3001Python\u5229\u7528\u6df1\u5ea6\u5b66\u4e60\u8fdb\u884c\u6587\u672c\u6458\u8981\u7684\u7efc\u5408\u6307\u5357\u3001\u77e5\u8bc6\u56fe\u8c31\u6df1\u5ea6\u5b66\u4e60\u76f8\u5173\u8d44\u6599\u6574\u7406\u3001\u7ef4\u57fa\u5927\u89c4\u6a21\u5e73\u884c\u6587\u672c\u8bed\u6599\u3001StanfordNLP 0.2.0\uff1a\u7eafPython\u7248\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5305\u3001NeuralNLP-NeuralClassifier\uff1a\u817e\u8baf\u5f00\u6e90\u6df1\u5ea6\u5b66\u4e60\u6587\u672c\u5206\u7c7b\u5de5\u5177\u3001\u7aef\u5230\u7aef\u7684\u5c01\u95ed\u57df\u5bf9\u8bdd\u7cfb\u7edf\u3001\u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\uff1aNeuroNER vs. BertNER\u3001\u65b0\u95fb\u4e8b\u4ef6\u7ebf\u7d22\u62bd\u53d6\u30012019\u5e74\u767e\u5ea6\u7684\u4e09\u5143\u7ec4\u62bd\u53d6\u6bd4\u8d5b\uff1a\u201c\u79d1\u5b66\u7a7a\u95f4\u961f\u201d\u6e90\u7801\u3001\u57fa\u4e8e\u4f9d\u5b58\u53e5\u6cd5\u7684\u5f00\u653e\u57df\u6587\u672c\u77e5\u8bc6\u4e09\u5143\u7ec4\u62bd\u53d6\u548c\u77e5\u8bc6\u5e93\u6784\u5efa\u3001\u4e2d\u6587\u7684GPT2\u8bad\u7ec3\u4ee3\u7801\u3001ML-NLP - \u673a\u5668\u5b66\u4e60(Machine Learning)NLP\u9762\u8bd5\u4e2d\u5e38\u8003\u5230\u7684\u77e5\u8bc6\u70b9\u548c\u4ee3\u7801\u5b9e\u73b0\u3001nlp4han:\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u96c6(\u65ad\u53e5/\u5206\u8bcd/\u8bcd\u6027\u6807\u6ce8/\u7ec4\u5757/\u53e5\u6cd5\u5206\u6790/\u8bed\u4e49\u5206\u6790/NER/N\u5143\u8bed\u6cd5/HMM/\u4ee3\u8bcd\u6d88\u89e3/\u60c5\u611f\u5206\u6790/\u62fc\u5199\u68c0\u67e5\u3001XLM\uff1aFacebook\u7684\u8de8\u8bed\u8a00\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\u3001\u7528\u57fa\u4e8eBERT\u7684\u5fae\u8c03\u548c\u7279\u5f81\u63d0\u53d6\u65b9\u6cd5\u6765\u8fdb\u884c\u77e5\u8bc6\u56fe\u8c31\u767e\u5ea6\u767e\u79d1\u4eba\u7269\u8bcd\u6761\u5c5e\u6027\u62bd\u53d6\u3001\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u76f8\u5173\u7684\u5f00\u653e\u4efb\u52a1-\u6570\u636e\u96c6-\u5f53\u524d\u6700\u4f73\u7ed3\u679c\u3001CoupletAI - \u57fa\u4e8eCNN+Bi-LSTM+Attention \u7684\u81ea\u52a8\u5bf9\u5bf9\u8054\u7cfb\u7edf\u3001\u62bd\u8c61\u77e5\u8bc6\u56fe\u8c31\u3001MiningZhiDaoQACorpus - 580\u4e07\u767e\u5ea6\u77e5\u9053\u95ee\u7b54\u6570\u636e\u6316\u6398\u9879\u76ee\u3001brat rapid annotation tool: \u5e8f\u5217\u6807\u6ce8\u5de5\u5177\u3001\u5927\u89c4\u6a21\u4e2d\u6587\u77e5\u8bc6\u56fe\u8c31\u6570\u636e\uff1a1.4\u4ebf\u5b9e\u4f53\u3001\u6570\u636e\u589e\u5f3a\u5728\u673a\u5668\u7ffb\u8bd1\u53ca\u5176\u4ed6nlp\u4efb\u52a1\u4e2d\u7684\u5e94\u7528\u53ca\u6548\u679c\u3001allennlp\u9605\u8bfb\u7406\u89e3:\u652f\u6301\u591a\u79cd\u6570\u636e\u548c\u6a21\u578b\u3001PDF\u8868\u683c\u6570\u636e\u63d0\u53d6\u5de5\u5177 \u3001 Graphbrain\uff1aAI\u5f00\u6e90\u8f6f\u4ef6\u5e93\u548c\u79d1\u7814\u5de5\u5177\uff0c\u76ee\u7684\u662f\u4fc3\u8fdb\u81ea\u52a8\u610f\u4e49\u63d0\u53d6\u548c\u6587\u672c\u7406\u89e3\u4ee5\u53ca\u77e5\u8bc6\u7684\u63a2\u7d22\u548c\u63a8\u65ad\u3001\u7b80\u5386\u81ea\u52a8\u7b5b\u9009\u7cfb\u7edf\u3001\u57fa\u4e8e\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u7684\u7b80\u5386\u81ea\u52a8\u6458\u8981\u3001\u4e2d\u6587\u8bed\u8a00\u7406\u89e3\u6d4b\u8bc4\u57fa\u51c6\uff0c\u5305\u62ec\u4ee3\u8868\u6027\u7684\u6570\u636e\u96c6&\u57fa\u51c6\u6a21\u578b&\u8bed\u6599\u5e93&\u6392\u884c\u699c\u3001\u6811\u6d1e OCR \u6587\u5b57\u8bc6\u522b \u3001\u4ece\u5305\u542b\u8868\u683c\u7684\u626b\u63cf\u56fe\u7247\u4e2d\u8bc6\u522b\u8868\u683c\u548c\u6587\u5b57\u3001\u8bed\u58f0\u8fc1\u79fb\u3001Python\u53e3\u8bed\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u96c6(\u82f1\u6587)\u3001 similarity\uff1a\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u5de5\u5177\u5305\uff0cjava\u7f16\u5199\u3001\u6d77\u91cf\u4e2d\u6587\u9884\u8bad\u7ec3ALBERT\u6a21\u578b \u3001Transformers 2.0 \u3001\u57fa\u4e8e\u5927\u89c4\u6a21\u97f3\u9891\u6570\u636e\u96c6Audioset\u7684\u97f3\u9891\u589e\u5f3a \u3001Poplar\uff1a\u7f51\u9875\u7248\u81ea\u7136\u8bed\u8a00\u6807\u6ce8\u5de5\u5177\u3001\u56fe\u7247\u6587\u5b57\u53bb\u9664\uff0c\u53ef\u7528\u4e8e\u6f2b\u753b\u7ffb\u8bd1 \u3001186\u79cd\u8bed\u8a00\u7684\u6570\u5b57\u53eb\u6cd5\u5e93\u3001Amazon\u53d1\u5e03\u57fa\u4e8e\u77e5\u8bc6\u7684\u4eba-\u4eba\u5f00\u653e\u9886\u57df\u5bf9\u8bdd\u6570\u636e\u96c6 \u3001\u4e2d\u6587\u6587\u672c\u7ea0\u9519\u6a21\u5757\u4ee3\u7801\u3001\u7e41\u7b80\u4f53\u8f6c\u6362 \u3001 Python\u5b9e\u73b0\u7684\u591a\u79cd\u6587\u672c\u53ef\u8bfb\u6027\u8bc4\u4ef7\u6307\u6807\u3001\u7c7b\u4f3c\u4e8e\u4eba\u540d/\u5730\u540d/\u7ec4\u7ec7\u673a\u6784\u540d\u7684\u547d\u540d\u4f53\u8bc6\u522b\u6570\u636e\u96c6 \u3001\u4e1c\u5357\u5927\u5b66\u300a\u77e5\u8bc6\u56fe\u8c31\u300b\u7814\u7a76\u751f\u8bfe\u7a0b(\u8d44\u6599)\u3001. \u82f1\u6587\u62fc\u5199\u68c0\u67e5\u5e93 \u3001 wwsearch\u662f\u4f01\u4e1a\u5fae\u4fe1\u540e\u53f0\u81ea\u7814\u7684\u5168\u6587\u68c0\u7d22\u5f15\u64ce\u3001CHAMELEON\uff1a\u6df1\u5ea6\u5b66\u4e60\u65b0\u95fb\u63a8\u8350\u7cfb\u7edf\u5143\u67b6\u6784 \u3001 8\u7bc7\u8bba\u6587\u68b3\u7406BERT\u76f8\u5173\u6a21\u578b\u8fdb\u5c55\u4e0e\u53cd\u601d\u3001DocSearch\uff1a\u514d\u8d39\u6587\u6863\u641c\u7d22\u5f15\u64ce\u3001 LIDA\uff1a\u8f7b\u91cf\u4ea4\u4e92\u5f0f\u5bf9\u8bdd\u6807\u6ce8\u5de5\u5177 \u3001aili - the fastest in-memory index in the East \u4e1c\u534a\u7403\u6700\u5feb\u5e76\u53d1\u7d22\u5f15 \u3001\u77e5\u8bc6\u56fe\u8c31\u8f66\u97f3\u5de5\u4f5c\u9879\u76ee\u3001\u81ea\u7136\u8bed\u8a00\u751f\u6210\u8d44\u6e90\u5927\u5168 \u3001\u4e2d\u65e5\u97e9\u5206\u8bcd\u5e93mecab\u7684Python\u63a5\u53e3\u5e93\u3001\u4e2d\u6587\u6587\u672c\u6458\u8981/\u5173\u952e\u8bcd\u63d0\u53d6\u3001\u6c49\u5b57\u5b57\u7b26\u7279\u5f81\u63d0\u53d6\u5668 (featurizer)\uff0c\u63d0\u53d6\u6c49\u5b57\u7684\u7279\u5f81\uff08\u53d1\u97f3\u7279\u5f81\u3001\u5b57\u5f62\u7279\u5f81\uff09\u7528\u505a\u6df1\u5ea6\u5b66\u4e60\u7684\u7279\u5f81\u3001\u4e2d\u6587\u751f\u6210\u4efb\u52a1\u57fa\u51c6\u6d4b\u8bc4 \u3001\u4e2d\u6587\u7f29\u5199\u6570\u636e\u96c6\u3001\u4e2d\u6587\u4efb\u52a1\u57fa\u51c6\u6d4b\u8bc4 - \u4ee3\u8868\u6027\u7684\u6570\u636e\u96c6-\u57fa\u51c6(\u9884\u8bad\u7ec3)\u6a21\u578b-\u8bed\u6599\u5e93-baseline-\u5de5\u5177\u5305-\u6392\u884c\u699c\u3001PySS3\uff1a\u9762\u5411\u53ef\u89e3\u91caAI\u7684SS3\u6587\u672c\u5206\u7c7b\u5668\u673a\u5668\u53ef\u89c6\u5316\u5de5\u5177 \u3001\u4e2d\u6587NLP\u6570\u636e\u96c6\u5217\u8868\u3001COPE - \u683c\u5f8b\u8bd7\u7f16\u8f91\u7a0b\u5e8f\u3001doccano\uff1a\u57fa\u4e8e\u7f51\u9875\u7684\u5f00\u6e90\u534f\u540c\u591a\u8bed\u8a00\u6587\u672c\u6807\u6ce8\u5de5\u5177 \u3001PreNLP\uff1a\u81ea\u7136\u8bed\u8a00\u9884\u5904\u7406\u5e93\u3001\u7b80\u5355\u7684\u7b80\u5386\u89e3\u6790\u5668\uff0c\u7528\u6765\u4ece\u7b80\u5386\u4e2d\u63d0\u53d6\u5173\u952e\u4fe1\u606f\u3001\u7528\u4e8e\u4e2d\u6587\u95f2\u804a\u7684GPT2\u6a21\u578b\uff1aGPT2-chitchat\u3001\u57fa\u4e8e\u68c0\u7d22\u804a\u5929\u673a\u5668\u4eba\u591a\u8f6e\u54cd\u5e94\u9009\u62e9\u76f8\u5173\u8d44\u6e90\u5217\u8868(Leaderboards\u3001Datasets\u3001Papers)\u3001(Colab)\u62bd\u8c61\u6587\u672c\u6458\u8981\u5b9e\u73b0\u96c6\u9526(\u6559\u7a0b \u3001\u8bcd\u8bed\u62fc\u97f3\u6570\u636e\u3001\u9ad8\u6548\u6a21\u7cca\u641c\u7d22\u5de5\u5177\u3001NLP\u6570\u636e\u589e\u5e7f\u8d44\u6e90\u96c6\u3001\u5fae\u8f6f\u5bf9\u8bdd\u673a\u5668\u4eba\u6846\u67b6 \u3001 GitHub Typo Corpus\uff1a\u5927\u89c4\u6a21GitHub\u591a\u8bed\u8a00\u62fc\u5199\u9519\u8bef/\u8bed\u6cd5\u9519\u8bef\u6570\u636e\u96c6\u3001TextCluster\uff1a\u77ed\u6587\u672c\u805a\u7c7b\u9884\u5904\u7406\u6a21\u5757 Short text cluster\u3001\u9762\u5411\u8bed\u97f3\u8bc6\u522b\u7684\u4e2d\u6587\u6587\u672c\u89c4\u8303\u5316\u3001BLINK\uff1a\u6700\u5148\u8fdb\u7684\u5b9e\u4f53\u94fe\u63a5\u5e93\u3001BertPunc\uff1a\u57fa\u4e8eBERT\u7684\u6700\u5148\u8fdb\u6807\u70b9\u4fee\u590d\u6a21\u578b\u3001Tokenizer\uff1a\u5feb\u901f\u3001\u53ef\u5b9a\u5236\u7684\u6587\u672c\u8bcd\u6761\u5316\u5e93\u3001\u4e2d\u6587\u8bed\u8a00\u7406\u89e3\u6d4b\u8bc4\u57fa\u51c6\uff0c\u5305\u62ec\u4ee3\u8868\u6027\u7684\u6570\u636e\u96c6\u3001\u57fa\u51c6(\u9884\u8bad\u7ec3)\u6a21\u578b\u3001\u8bed\u6599\u5e93\u3001\u6392\u884c\u699c\u3001spaCy \u533b\u5b66\u6587\u672c\u6316\u6398\u4e0e\u4fe1\u606f\u63d0\u53d6 \u3001 NLP\u4efb\u52a1\u793a\u4f8b\u9879\u76ee\u4ee3\u7801\u96c6\u3001 python\u62fc\u5199\u68c0\u67e5\u5e93\u3001chatbot-list - \u884c\u4e1a\u5185\u5173\u4e8e\u667a\u80fd\u5ba2\u670d\u3001\u804a\u5929\u673a\u5668\u4eba\u7684\u5e94\u7528\u548c\u67b6\u6784\u3001\u7b97\u6cd5\u5206\u4eab\u548c\u4ecb\u7ecd\u3001\u8bed\u97f3\u8d28\u91cf\u8bc4\u4ef7\u6307\u6807(MOSNet, BSSEval, STOI, PESQ, SRMR)\u3001 \u7528138GB\u8bed\u6599\u8bad\u7ec3\u7684\u6cd5\u6587RoBERTa\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b \u3001BERT-NER-Pytorch\uff1a\u4e09\u79cd\u4e0d\u540c\u6a21\u5f0f\u7684BERT\u4e2d\u6587NER\u5b9e\u9a8c\u3001\u65e0\u9053\u8bcd\u5178 - \u6709\u9053\u8bcd\u5178\u7684\u547d\u4ee4\u884c\u7248\u672c\uff0c\u652f\u6301\u82f1\u6c49\u4e92\u67e5\u548c\u5728\u7ebf\u67e5\u8be2\u30012019\u5e74NLP\u4eae\u70b9\u56de\u987e\u3001 Chinese medical dialogue data \u4e2d\u6587\u533b\u7597\u5bf9\u8bdd\u6570\u636e\u96c6 \u3001\u6700\u597d\u7684\u6c49\u5b57\u6570\u5b57(\u4e2d\u6587\u6570\u5b57)-\u963f\u62c9\u4f2f\u6570\u5b57\u8f6c\u6362\u5de5\u5177\u3001 \u57fa\u4e8e\u767e\u79d1\u77e5\u8bc6\u5e93\u7684\u4e2d\u6587\u8bcd\u8bed\u591a\u8bcd\u4e49/\u4e49\u9879\u83b7\u53d6\u4e0e\u7279\u5b9a\u53e5\u5b50\u8bcd\u8bed\u8bed\u4e49\u6d88\u6b67\u3001awesome-nlp-sentiment-analysis - \u60c5\u611f\u5206\u6790\u3001\u60c5\u7eea\u539f\u56e0\u8bc6\u522b\u3001\u8bc4\u4ef7\u5bf9\u8c61\u548c\u8bc4\u4ef7\u8bcd\u62bd\u53d6\u3001LineFlow\uff1a\u9762\u5411\u6240\u6709\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u7684NLP\u6570\u636e\u9ad8\u6548\u52a0\u8f7d\u5668\u3001\u4e2d\u6587\u533b\u5b66NLP\u516c\u5f00\u8d44\u6e90\u6574\u7406 \u3001MedQuAD\uff1a(\u82f1\u6587)\u533b\u5b66\u95ee\u7b54\u6570\u636e\u96c6\u3001\u5c06\u81ea\u7136\u8bed\u8a00\u6570\u5b57\u4e32\u89e3\u6790\u8f6c\u6362\u4e3a\u6574\u6570\u548c\u6d6e\u70b9\u6570\u3001Transfer Learning in Natural Language Processing (NLP) \u3001\u9762\u5411\u8bed\u97f3\u8bc6\u522b\u7684\u4e2d\u6587/\u82f1\u6587\u53d1\u97f3\u8f9e\u5178\u3001Tokenizers\uff1a\u6ce8\u91cd\u6027\u80fd\u4e0e\u591a\u529f\u80fd\u6027\u7684\u6700\u5148\u8fdb\u5206\u8bcd\u5668\u3001CLUENER \u7ec6\u7c92\u5ea6\u547d\u540d\u5b9e\u4f53\u8bc6\u522b Fine Grained Named Entity Recognition\u3001 \u57fa\u4e8eBERT\u7684\u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u3001\u4e2d\u6587\u8c23\u8a00\u6570\u636e\u5e93\u3001NLP\u6570\u636e\u96c6/\u57fa\u51c6\u4efb\u52a1\u5927\u5217\u8868\u3001nlp\u76f8\u5173\u7684\u4e00\u4e9b\u8bba\u6587\u53ca\u4ee3\u7801, \u5305\u62ec\u4e3b\u9898\u6a21\u578b\u3001\u8bcd\u5411\u91cf(Word Embedding)\u3001\u547d\u540d\u5b9e\u4f53\u8bc6\u522b(NER)\u3001\u6587\u672c\u5206\u7c7b(Text Classificatin)\u3001\u6587\u672c\u751f\u6210(Text Generation)\u3001\u6587\u672c\u76f8\u4f3c\u6027(Text Similarity)\u8ba1\u7b97\u7b49\uff0c\u6d89\u53ca\u5230\u5404\u79cd\u4e0enlp\u76f8\u5173\u7684\u7b97\u6cd5\uff0c\u57fa\u4e8ekeras\u548ctensorflow \u3001Python\u6587\u672c\u6316\u6398/NLP\u5b9e\u6218\u793a\u4f8b\u3001 Blackstone\uff1a\u9762\u5411\u975e\u7ed3\u6784\u5316\u6cd5\u5f8b\u6587\u672c\u7684spaCy pipeline\u548cNLP\u6a21\u578b\u901a\u8fc7\u540c\u4e49\u8bcd\u66ff\u6362\u5b9e\u73b0\u6587\u672c\u201c\u53d8\u8138\u201d \u3001\u4e2d\u6587 \u9884\u8bad\u7ec3 ELECTREA \u6a21\u578b: \u57fa\u4e8e\u5bf9\u6297\u5b66\u4e60 pretrain Chinese Model \u3001albert-chinese-ner - \u7528\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578bALBERT\u505a\u4e2d\u6587NER \u3001\u57fa\u4e8eGPT2\u7684\u7279\u5b9a\u4e3b\u9898\u6587\u672c\u751f\u6210/\u6587\u672c\u589e\u5e7f\u3001\u5f00\u6e90\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\u5408\u96c6\u3001\u591a\u8bed\u8a00\u53e5\u5411\u91cf\u5305\u3001\u7f16\u7801\u3001\u6807\u8bb0\u548c\u5b9e\u73b0\uff1a\u4e00\u79cd\u53ef\u63a7\u9ad8\u6548\u7684\u6587\u672c\u751f\u6210\u65b9\u6cd5\u3001 \u82f1\u6587\u810f\u8bdd\u5927\u5217\u8868 \u3001attnvis\uff1aGPT2\u3001BERT\u7b49transformer\u8bed\u8a00\u6a21\u578b\u6ce8\u610f\u529b\u4ea4\u4e92\u53ef\u89c6\u5316\u3001CoVoST\uff1aFacebook\u53d1\u5e03\u7684\u591a\u8bed\u79cd\u8bed\u97f3-\u6587\u672c\u7ffb\u8bd1\u8bed\u6599\u5e93\uff0c\u5305\u62ec11\u79cd\u8bed\u8a00(\u6cd5\u8bed\u3001\u5fb7\u8bed\u3001\u8377\u5170\u8bed\u3001\u4fc4\u8bed\u3001\u897f\u73ed\u7259\u8bed\u3001\u610f\u5927\u5229\u8bed\u3001\u571f\u8033\u5176\u8bed\u3001\u6ce2\u65af\u8bed\u3001\u745e\u5178\u8bed\u3001\u8499\u53e4\u8bed\u548c\u4e2d\u6587)\u7684\u8bed\u97f3\u3001\u6587\u5b57\u8f6c\u5f55\u53ca\u82f1\u6587\u8bd1\u6587\u3001Jiagu\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177 - \u4ee5BiLSTM\u7b49\u6a21\u578b\u4e3a\u57fa\u7840\uff0c\u63d0\u4f9b\u77e5\u8bc6\u56fe\u8c31\u5173\u7cfb\u62bd\u53d6 \u4e2d\u6587\u5206\u8bcd \u8bcd\u6027\u6807\u6ce8 \u547d\u540d\u5b9e\u4f53\u8bc6\u522b \u60c5\u611f\u5206\u6790 \u65b0\u8bcd\u53d1\u73b0 \u5173\u952e\u8bcd \u6587\u672c\u6458\u8981 \u6587\u672c\u805a\u7c7b\u7b49\u529f\u80fd\u3001\u7528unet\u5b9e\u73b0\u5bf9\u6587\u6863\u8868\u683c\u7684\u81ea\u52a8\u68c0\u6d4b\uff0c\u8868\u683c\u91cd\u5efa\u3001NLP\u4e8b\u4ef6\u63d0\u53d6\u6587\u732e\u8d44\u6e90\u5217\u8868 \u3001 \u91d1\u878d\u9886\u57df\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7814\u7a76\u8d44\u6e90\u5927\u5217\u8868\u3001CLUEDatasetSearch - \u4e2d\u82f1\u6587NLP\u6570\u636e\u96c6\uff1a\u641c\u7d22\u6240\u6709\u4e2d\u6587NLP\u6570\u636e\u96c6\uff0c\u9644\u5e38\u7528\u82f1\u6587NLP\u6570\u636e\u96c6 \u3001medical_NER - \u4e2d\u6587\u533b\u5b66\u77e5\u8bc6\u56fe\u8c31\u547d\u540d\u5b9e\u4f53\u8bc6\u522b \u3001(\u54c8\u4f5b)\u8bb2\u56e0\u679c\u63a8\u7406\u7684\u514d\u8d39\u4e66\u3001\u77e5\u8bc6\u56fe\u8c31\u76f8\u5173\u5b66\u4e60\u8d44\u6599/\u6570\u636e\u96c6/\u5de5\u5177\u8d44\u6e90\u5927\u5217\u8868\u3001Forte\uff1a\u7075\u6d3b\u5f3a\u5927\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406pipeline\u5de5\u5177\u96c6 \u3001Python\u5b57\u7b26\u4e32\u76f8\u4f3c\u6027\u7b97\u6cd5\u5e93\u3001PyLaia\uff1a\u9762\u5411\u624b\u5199\u6587\u6863\u5206\u6790\u7684\u6df1\u5ea6\u5b66\u4e60\u5de5\u5177\u5305\u3001TextFooler\uff1a\u9488\u5bf9\u6587\u672c\u5206\u7c7b/\u63a8\u7406\u7684\u5bf9\u6297\u6587\u672c\u751f\u6210\u6a21\u5757\u3001Haystack\uff1a\u7075\u6d3b\u3001\u5f3a\u5927\u7684\u53ef\u6269\u5c55\u95ee\u7b54(QA)\u6846\u67b6\u3001\u4e2d\u6587\u5173\u952e\u77ed\u8bed\u62bd\u53d6\u5de5\u5177", "created": "2018-08-21 11:20:39", "language": "Python", "type": "User", "username": "fighting41love", "stars": 36817, "forks": 10653, "subscribers": 1395, "open_issues": 21, "topics": []}, {"id": 188660663, "repo_name": "Real-Time-Voice-Cloning", "full_name": "CorentinJ/Real-Time-Voice-Cloning", "description": "Clone a voice in 5 seconds to generate arbitrary speech in real-time", "created": "2019-05-26 08:56:15", "language": "Python", "type": "User", "username": "CorentinJ", "stars": 33731, "forks": 6188, "subscribers": 816, "open_issues": 35, "topics": ["deep-learning", "pytorch", "tensorflow", "tts", "voice-cloning", "python"]}, {"id": 83119431, "repo_name": "ailearning", "full_name": "apachecn/ailearning", "description": "AiLearning\uff1a\u6570\u636e\u5206\u6790+\u673a\u5668\u5b66\u4e60\u5b9e\u6218+\u7ebf\u6027\u4ee3\u6570+PyTorch+NLTK+TF2", "created": "2017-02-25 08:53:02", "language": "Python", "type": "Organization", "username": "apachecn", "stars": 32767, "forks": 10758, "subscribers": 1710, "open_issues": 2, "topics": ["fp-growth", "apriori", "mahchine-leaning", "naivebayes", "svm", "adaboost", "kmeans", "svd", "pca", "logistic", "regression", "recommendedsystem", "sklearn", "scikit-learn", "nlp", "deeplearning", "python", "dnn", "lstm", "rnn"]}, {"id": 156157055, "repo_name": "MadeWithML", "full_name": "GokuMohandas/MadeWithML", "description": "Learn how to responsibly deliver value with ML.", "created": "2018-11-05 03:44:27", "language": "Jupyter Notebook", "type": "User", "username": "GokuMohandas", "stars": 29645, "forks": 4997, "subscribers": 1201, "open_issues": 3, "topics": ["machine-learning", "deep-learning", "pytorch", "natural-language-processing", "mlops", "data-science", "python"]}, {"id": 84533158, "repo_name": "pytorch-tutorial", "full_name": "yunjey/pytorch-tutorial", "description": "PyTorch Tutorial for Deep Learning Researchers", "created": "2017-03-10 07:41:47", "language": "Python", "type": "User", "username": "yunjey", "stars": 23137, "forks": 7096, "subscribers": 612, "open_issues": 84, "topics": ["deep-learning", "pytorch-tutorial", "neural-networks", "pytorch"]}, {"id": 264818686, "repo_name": "yolov5", "full_name": "ultralytics/yolov5", "description": "YOLOv5 \ud83d\ude80 in PyTorch > ONNX > CoreML > TFLite", "created": "2020-05-18 03:45:11", "language": "Python", "type": "Organization", "username": "ultralytics", "stars": 22676, "forks": 8094, "subscribers": 283, "open_issues": 223, "topics": ["yolov3", "yolov4", "yolov5", "object-detection", "pytorch", "onnx", "coreml", "ios", "tflite", "yolo", "deep-learning", "machine-learning", "ml"]}, {"id": 102973646, "repo_name": "fastai", "full_name": "fastai/fastai", "description": "The fastai deep learning library", "created": "2017-09-09 17:43:36", "language": "Jupyter Notebook", "type": "Organization", "username": "fastai", "stars": 21994, "forks": 7206, "subscribers": 629, "open_issues": 112, "topics": ["deep-learning", "machine-learning", "pytorch", "python", "gpu", "fastai", "notebooks", "colab"]}, {"id": 393571599, "repo_name": "MockingBird", "full_name": "babysor/MockingBird", "description": "\ud83d\ude80AI\u62df\u58f0: 5\u79d2\u5185\u514b\u9686\u60a8\u7684\u58f0\u97f3\u5e76\u751f\u6210\u4efb\u610f\u8bed\u97f3\u5185\u5bb9 Clone a voice in 5 seconds to generate arbitrary speech in real-time", "created": "2021-08-07 03:53:39", "language": "JavaScript", "type": "User", "username": "babysor", "stars": 19967, "forks": 2773, "subscribers": 202, "open_issues": 170, "topics": ["ai", "speech", "pytorch", "deep-learning"]}, {"id": 145670234, "repo_name": "mmdetection", "full_name": "open-mmlab/mmdetection", "description": "OpenMMLab Detection Toolbox and Benchmark", "created": "2018-08-22 07:06:06", "language": "Python", "type": "Organization", "username": "open-mmlab", "stars": 18476, "forks": 6757, "subscribers": 353, "open_issues": 511, "topics": ["object-detection", "instance-segmentation", "rpn", "fast-rcnn", "faster-rcnn", "mask-rcnn", "cascade-rcnn", "ssd", "retinanet", "pytorch"]}, {"id": 66424871, "repo_name": "examples", "full_name": "pytorch/examples", "description": "A set of examples around pytorch in Vision, Text, Reinforcement Learning, etc.", "created": "2016-08-24 03:12:48", "language": "Python", "type": "Organization", "username": "pytorch", "stars": 17886, "forks": 8393, "subscribers": 400, "open_issues": 326, "topics": []}, {"id": 1198539, "repo_name": "netron", "full_name": "lutzroeder/netron", "description": "Visualizer for neural network, deep learning, and machine learning models", "created": "2010-12-26 12:53:43", "language": "JavaScript", "type": "User", "username": "lutzroeder", "stars": 17869, "forks": 2058, "subscribers": 260, "open_issues": 20, "topics": ["neural-network", "deep-learning", "machine-learning", "deeplearning", "machinelearning", "ai", "ml", "visualizer", "onnx", "keras", "tensorflow", "tensorflow-lite", "coreml", "caffe", "caffe2", "mxnet", "pytorch", "torch", "paddle", "darknet"]}, {"id": 178626720, "repo_name": "pytorch-lightning", "full_name": "PyTorchLightning/pytorch-lightning", "description": "The lightweight PyTorch wrapper for high-performance AI research. Scale your models, not the boilerplate.", "created": "2019-03-31 00:45:57", "language": "Python", "type": "Organization", "username": "PyTorchLightning", "stars": 17506, "forks": 2193, "subscribers": 222, "open_issues": 533, "topics": ["python", "deep-learning", "artificial-intelligence", "ai", "pytorch", "data-science", "machine-learning"]}, {"id": 349321229, "repo_name": "GFPGAN", "full_name": "TencentARC/GFPGAN", "description": "GFPGAN aims at developing Practical Algorithms for Real-world Face Restoration.", "created": "2021-03-19 06:18:20", "language": "Python", "type": "Organization", "username": "TencentARC", "stars": 17506, "forks": 2660, "subscribers": 297, "open_issues": 87, "topics": ["pytorch", "gan", "deep-learning", "super-resolution", "face-restoration", "image-restoration", "gfpgan"]}, {"id": 88612945, "repo_name": "pytorch-CycleGAN-and-pix2pix", "full_name": "junyanz/pytorch-CycleGAN-and-pix2pix", "description": "Image-to-Image Translation in PyTorch", "created": "2017-04-18 10:33:05", "language": "Python", "type": "User", "username": "junyanz", "stars": 16949, "forks": 5102, "subscribers": 344, "open_issues": 382, "topics": ["pytorch", "gan", "cyclegan", "pix2pix", "deep-learning", "computer-vision", "computer-graphics", "image-manipulation", "image-generation", "generative-adversarial-network", "gans"]}, {"id": 168799526, "repo_name": "pytorch-image-models", "full_name": "rwightman/pytorch-image-models", "description": "PyTorch image models, scripts, pretrained weights -- ResNet, ResNeXT, EfficientNet, EfficientNetV2, NFNet, Vision Transformer, MixNet, MobileNet-V3/V2, RegNet, DPN, CSPNet, and more", "created": "2019-02-02 05:51:12", "language": "Python", "type": "User", "username": "rwightman", "stars": 16756, "forks": 2752, "subscribers": 266, "open_issues": 71, "topics": ["pytorch", "imagenet-classifier", "resnet", "dual-path-networks", "cnn-classification", "pretrained-models", "pretrained-weights", "distributed-training", "mobile-deep-learning", "mobilenet-v2", "mnasnet", "mobilenetv3", "efficientnet", "augmix", "randaugment", "mixnet", "efficientnet-training", "vision-transformer-models", "nfnets", "normalization-free-training"]}, {"id": 101782647, "repo_name": "fairseq", "full_name": "pytorch/fairseq", "description": "Facebook AI Research Sequence-to-Sequence Toolkit written in Python.", "created": "2017-08-29 16:26:12", "language": "Python", "type": "Organization", "username": "pytorch", "stars": 16237, "forks": 4220, "subscribers": 341, "open_issues": 1246, "topics": ["python", "pytorch", "artificial-intelligence"]}, {"id": 160124067, "repo_name": "pytorch-handbook", "full_name": "zergtant/pytorch-handbook", "description": "pytorch handbook\u662f\u4e00\u672c\u5f00\u6e90\u7684\u4e66\u7c4d\uff0c\u76ee\u6807\u662f\u5e2e\u52a9\u90a3\u4e9b\u5e0c\u671b\u548c\u4f7f\u7528PyTorch\u8fdb\u884c\u6df1\u5ea6\u5b66\u4e60\u5f00\u53d1\u548c\u7814\u7a76\u7684\u670b\u53cb\u5feb\u901f\u5165\u95e8\uff0c\u5176\u4e2d\u5305\u542b\u7684Pytorch\u6559\u7a0b\u5168\u90e8\u901a\u8fc7\u6d4b\u8bd5\u4fdd\u8bc1\u53ef\u4ee5\u6210\u529f\u8fd0\u884c", "created": "2018-12-03 02:57:04", "language": "Jupyter Notebook", "type": "User", "username": "zergtant", "stars": 16105, "forks": 4927, "subscribers": 518, "open_issues": 45, "topics": ["pytorch", "pytorch-tutorials", "pytorch-handbook", "deep-learning", "neural-network", "machine-learning"]}, {"id": 171795571, "repo_name": "Dive-into-DL-PyTorch", "full_name": "ShusenTang/Dive-into-DL-PyTorch", "description": "\u672c\u9879\u76ee\u5c06\u300a\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60\u300b(Dive into Deep Learning)\u539f\u4e66\u4e2d\u7684MXNet\u5b9e\u73b0\u6539\u4e3aPyTorch\u5b9e\u73b0\u3002", "created": "2019-02-21 03:45:20", "language": "Jupyter Notebook", "type": "User", "username": "ShusenTang", "stars": 14578, "forks": 4706, "subscribers": 385, "open_issues": 76, "topics": ["deep-learning", "deep-learning-tutorial", "pytorch", "pytorch-tutorial", "computer-vision", "natural-language-processing", "d2l"]}, {"id": 95879426, "repo_name": "ncnn", "full_name": "Tencent/ncnn", "description": "ncnn is a high-performance neural network inference framework optimized for the mobile platform", "created": "2017-06-30 10:55:37", "language": "C++", "type": "Organization", "username": "Tencent", "stars": 13926, "forks": 3346, "subscribers": 564, "open_issues": 639, "topics": ["inference", "high-preformance", "simd", "arm-neon", "deep-learning", "artificial-intelligence", "android", "ios", "ncnn", "vulkan", "neural-network", "caffe", "mxnet", "pytorch", "onnx", "darknet", "tensorflow", "mlir", "keras", "riscv"]}, {"id": 106024057, "repo_name": "pytorch_geometric", "full_name": "pyg-team/pytorch_geometric", "description": "Graph Neural Network Library for PyTorch", "created": "2017-10-06 16:03:03", "language": "Python", "type": "Organization", "username": "pyg-team", "stars": 13924, "forks": 2461, "subscribers": 246, "open_issues": 936, "topics": ["pytorch", "geometric-deep-learning", "graph-neural-networks", "deep-learning", "graph-convolutional-networks"]}, {"id": 247266215, "repo_name": "EasyOCR", "full_name": "JaidedAI/EasyOCR", "description": "Ready-to-use OCR with 80+ supported languages and all popular writing scripts including Latin, Chinese, Arabic, Devanagari, Cyrillic and etc.", "created": "2020-03-14 11:46:39", "language": "Python", "type": "Organization", "username": "JaidedAI", "stars": 13911, "forks": 1892, "subscribers": 273, "open_issues": 71, "topics": ["ocr", "deep-learning", "crnn", "pytorch", "lstm", "machine-learning", "scene-text", "scene-text-recognition", "optical-character-recognition", "cnn", "data-mining", "image-processing", "python", "easyocr", "information-retrieval"]}, {"id": 83579167, "repo_name": "Awesome-pytorch-list", "full_name": "bharathgs/Awesome-pytorch-list", "description": "A comprehensive list of pytorch related content on github,such as different models,implementations,helper libraries,tutorials etc.", "created": "2017-03-01 16:58:16", "language": null, "type": "User", "username": "bharathgs", "stars": 12676, "forks": 2645, "subscribers": 592, "open_issues": 5, "topics": ["pytorch", "python", "machine-learning", "deep-learning", "tutorials", "papers", "awesome", "awesome-list", "pytorch-tutorials", "data-science", "nlp", "nlp-library", "cv", "computer-vision", "natural-language-processing", "facebook", "probabilistic-programming", "utility-library", "neural-network", "pytorch-model"]}, {"id": 250213286, "repo_name": "datasets", "full_name": "huggingface/datasets", "description": "\ud83e\udd17 The largest hub of ready-to-use datasets for ML models with fast, easy-to-use and efficient data manipulation tools", "created": "2020-03-26 09:23:22", "language": "Python", "type": "Organization", "username": "huggingface", "stars": 12561, "forks": 1521, "subscribers": 242, "open_issues": 505, "topics": ["nlp", "datasets", "metrics", "evaluation", "pytorch", "tensorflow", "pandas", "numpy", "natural-language-processing", "computer-vision", "machine-learning", "deep-learning", "speech"]}, {"id": 152166877, "repo_name": "d2l-en", "full_name": "d2l-ai/d2l-en", "description": "Interactive deep learning book with multi-framework code, math, and discussions. Adopted at 300 universities from 55 countries including Stanford, MIT, Harvard, and Cambridge.", "created": "2018-10-09 01:04:37", "language": "Python", "type": "Organization", "username": "d2l-ai", "stars": 12537, "forks": 2920, "subscribers": 346, "open_issues": 71, "topics": ["deep-learning", "machine-learning", "book", "notebook", "computer-vision", "natural-language-processing", "python", "kaggle", "data-science", "mxnet", "pytorch", "tensorflow", "keras"]}, {"id": 14734876, "repo_name": "deeplearning4j", "full_name": "eclipse/deeplearning4j", "description": "Suite of tools for deploying and training deep learning models using the JVM. Highlights include model import for keras, tensorflow, and onnx/pytorch, a modular and tiny c++ library for running math code and a java based math library on top of the core c++ library. Also includes samediff: a pytorch/tensorflow like library for running deep learning using automatic differentiation.", "created": "2013-11-27 02:03:28", "language": "Java", "type": "Organization", "username": "eclipse", "stars": 12371, "forks": 4924, "subscribers": 783, "open_issues": 763, "topics": ["java", "gpu", "deeplearning", "neural-nets", "deeplearning4j", "dl4j", "hadoop", "spark", "intellij", "artificial-intelligence", "python", "scala", "clojure", "linear-algebra", "matrix-library"]}, {"id": 192155460, "repo_name": "Deep-Learning-with-TensorFlow-book", "full_name": "dragen1860/Deep-Learning-with-TensorFlow-book", "description": "\u6df1\u5ea6\u5b66\u4e60\u5165\u95e8\u5f00\u6e90\u4e66\uff0c\u57fa\u4e8eTensorFlow 2.0\u6848\u4f8b\u5b9e\u6218\u3002Open source Deep Learning book, based on TensorFlow 2.0 framework.", "created": "2019-06-16 05:53:27", "language": "Jupyter Notebook", "type": "User", "username": "dragen1860", "stars": 12216, "forks": 3977, "subscribers": 483, "open_issues": 81, "topics": ["tensorflow", "tensorflow2", "deeplearning", "machinelearning", "python", "pytorch", "book", "opensource"]}, {"id": 99846383, "repo_name": "horovod", "full_name": "horovod/horovod", "description": "Distributed training framework for TensorFlow, Keras, PyTorch, and Apache MXNet.", "created": "2017-08-09 19:39:59", "language": "Python", "type": "Organization", "username": "horovod", "stars": 12173, "forks": 2016, "subscribers": 334, "open_issues": 291, "topics": ["tensorflow", "uber", "machine-learning", "machinelearning", "mpi", "baidu", "deep-learning", "deeplearning", "keras", "pytorch", "mxnet", "spark", "ray"]}, {"id": 102692863, "repo_name": "onnx", "full_name": "onnx/onnx", "description": "Open standard for machine learning interoperability", "created": "2017-09-07 04:53:45", "language": "C++", "type": "Organization", "username": "onnx", "stars": 12121, "forks": 2472, "subscribers": 430, "open_issues": 519, "topics": ["deep-learning", "deep-neural-networks", "neural-network", "onnx", "pytorch", "mxnet", "tensorflow", "keras", "scikit-learn", "ml", "machine-learning", "dnn"]}, {"id": 130474497, "repo_name": "PyTorch-GAN", "full_name": "eriklindernoren/PyTorch-GAN", "description": "PyTorch implementations of Generative Adversarial Networks.", "created": "2018-04-21 13:06:40", "language": "Python", "type": "User", "username": "eriklindernoren", "stars": 11427, "forks": 3254, "subscribers": 223, "open_issues": 106, "topics": []}, {"id": 136914524, "repo_name": "flair", "full_name": "flairNLP/flair", "description": "A very simple framework for state-of-the-art Natural Language Processing (NLP)", "created": "2018-06-11 11:04:18", "language": "Python", "type": "Organization", "username": "flairNLP", "stars": 11307, "forks": 1831, "subscribers": 203, "open_issues": 83, "topics": ["pytorch", "nlp", "named-entity-recognition", "sequence-labeling", "semantic-role-labeling", "word-embeddings", "natural-language-processing", "machine-learning"]}, {"id": 102057483, "repo_name": "insightface", "full_name": "deepinsight/insightface", "description": "State-of-the-art 2D and 3D Face Analysis Project", "created": "2017-09-01 00:36:51", "language": "Python", "type": "Organization", "username": "deepinsight", "stars": 11293, "forks": 3664, "subscribers": 453, "open_issues": 1007, "topics": ["face-recognition", "face-detection", "mxnet", "face-alignment", "age-estimation", "arcface", "retinaface", "pytorch", "oneflow", "paddlepaddle"]}, {"id": 135673451, "repo_name": "nni", "full_name": "microsoft/nni", "description": "An open source AutoML toolkit for automate machine learning lifecycle, including feature engineering, neural architecture search, model compression and hyper-parameter tuning.", "created": "2018-06-01 05:51:44", "language": "Python", "type": "Organization", "username": "microsoft", "stars": 11069, "forks": 1580, "subscribers": 271, "open_issues": 293, "topics": ["automl", "deep-learning", "neural-architecture-search", "hyperparameter-optimization", "distributed", "bayesian-optimization", "automated-machine-learning", "machine-learning", "machine-learning-algorithms", "data-science", "tensorflow", "pytorch", "neural-network", "deep-neural-network", "model-compression", "feature-engineering", "nas", "python", "feature-extraction"]}, {"id": 91356408, "repo_name": "allennlp", "full_name": "allenai/allennlp", "description": "An open-source NLP research library, built on PyTorch.", "created": "2017-05-15 15:52:41", "language": "Python", "type": "Organization", "username": "allenai", "stars": 10831, "forks": 2165, "subscribers": 280, "open_issues": 92, "topics": ["pytorch", "nlp", "natural-language-processing", "deep-learning", "data-science", "python"]}, {"id": 164852596, "repo_name": "nlp-tutorial", "full_name": "graykode/nlp-tutorial", "description": "Natural Language Processing Tutorial for Deep Learning Researchers", "created": "2019-01-09 11:44:20", "language": "Jupyter Notebook", "type": "User", "username": "graykode", "stars": 10225, "forks": 3121, "subscribers": 280, "open_issues": 28, "topics": ["nlp", "natural-language-processing", "tutorial", "pytorch", "tensorflow", "transformer", "attention", "paper", "bert"]}, {"id": 274594200, "repo_name": "Bringing-Old-Photos-Back-to-Life", "full_name": "microsoft/Bringing-Old-Photos-Back-to-Life", "description": "Bringing Old Photo Back to Life (CVPR 2020 oral)", "created": "2020-06-24 06:37:58", "language": "Python", "type": "Organization", "username": "microsoft", "stars": 10068, "forks": 1226, "subscribers": 260, "open_issues": 48, "topics": ["image-restoration", "old-photo-restoration", "generative-adversarial-network", "gans", "pytorch", "image-manipulation", "photo-restoration", "photos"]}, {"id": 259249613, "repo_name": "IT_book", "full_name": "XiangLinPro/IT_book", "description": "\u672c\u9879\u76ee\u6536\u85cf\u8fd9\u4e9b\u5e74\u6765\u770b\u8fc7\u6216\u8005\u542c\u8fc7\u7684\u4e00\u4e9b\u4e0d\u9519\u7684\u5e38\u7528\u7684\u4e0a\u5343\u672c\u4e66\u7c4d\uff0c\u6ca1\u51c6\u4f60\u60f3\u627e\u7684\u4e66\u5c31\u5728\u8fd9\u91cc\u5462\uff0c\u5305\u542b\u4e86\u4e92\u8054\u7f51\u884c\u4e1a\u5927\u591a\u6570\u4e66\u7c4d\u548c\u9762\u8bd5\u7ecf\u9a8c\u9898\u76ee\u7b49\u7b49\u3002\u6709\u4eba\u5de5\u667a\u80fd\u7cfb\u5217\uff08\u5e38\u7528\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6TensorFlow\u3001pytorch\u3001keras\u3002NLP\u3001\u673a\u5668\u5b66\u4e60\uff0c\u6df1\u5ea6\u5b66\u4e60\u7b49\u7b49\uff09\uff0c\u5927\u6570\u636e\u7cfb\u5217(Spark,Hadoop,Scala,kafka\u7b49)\uff0c\u7a0b\u5e8f\u5458\u5fc5\u4fee\u7cfb\u5217\uff08C\u3001C++\u3001java\u3001\u6570\u636e\u7ed3\u6784\u3001linux\uff0c\u8bbe\u8ba1\u6a21\u5f0f\u3001\u6570\u636e\u5e93\u7b49\u7b49\uff09", "created": "2020-04-27 08:16:17", "language": null, "type": "User", "username": "XiangLinPro", "stars": 10024, "forks": 2927, "subscribers": 144, "open_issues": 10, "topics": []}, {"id": 387326890, "repo_name": "Real-ESRGAN", "full_name": "xinntao/Real-ESRGAN", "description": "Real-ESRGAN aims at developing Practical Algorithms for General Image/Video Restoration.", "created": "2021-07-19 03:23:30", "language": "Python", "type": "User", "username": "xinntao", "stars": 9781, "forks": 1040, "subscribers": 127, "open_issues": 147, "topics": ["esrgan", "pytorch", "real-esrgan", "super-resolution", "image-restoration", "denoise", "jpeg-compression", "amine"]}, {"id": 92265140, "repo_name": "pytorch-book", "full_name": "chenyuntc/pytorch-book", "description": "PyTorch tutorials and fun projects including neural talk, neural style, poem writing, anime generation (\u300a\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6PyTorch\uff1a\u5165\u95e8\u4e0e\u5b9e\u6218\u300b)", "created": "2017-05-24 07:49:38", "language": "Jupyter Notebook", "type": "User", "username": "chenyuntc", "stars": 9744, "forks": 3457, "subscribers": 280, "open_issues": 131, "topics": ["pytorch", "pytorch-tutorials", "pytorch-tutorials-cn", "deep-learning", "neural-style", "charrnn", "gan", "caption", "neuraltalk", "image-classification", "visdom", "tensorboard", "nn", "tensor", "autograd", "jupyter-notebook"]}, {"id": 154542095, "repo_name": "maskrcnn-benchmark", "full_name": "facebookresearch/maskrcnn-benchmark", "description": "Fast, modular reference implementation of Instance Segmentation and Object Detection algorithms in PyTorch.", "created": "2018-10-24 17:34:50", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 8759, "forks": 2507, "subscribers": 187, "open_issues": 518, "topics": []}, {"id": 81640848, "repo_name": "the-incredible-pytorch", "full_name": "ritchieng/the-incredible-pytorch", "description": "The Incredible PyTorch: a curated list of tutorials, papers, projects, communities and more relating to PyTorch. ", "created": "2017-02-11 08:33:11", "language": null, "type": "User", "username": "ritchieng", "stars": 8758, "forks": 1752, "subscribers": 452, "open_issues": 3, "topics": ["pytorch", "python", "deep-learning-tutorial", "deep-neural-networks", "deep-learning-library", "deep-learning"]}, {"id": 300996055, "repo_name": "vit-pytorch", "full_name": "lucidrains/vit-pytorch", "description": "Implementation of Vision Transformer, a simple way to achieve SOTA in vision classification with only a single transformer encoder, in Pytorch", "created": "2020-10-03 22:47:24", "language": "Python", "type": "User", "username": "lucidrains", "stars": 8751, "forks": 1432, "subscribers": 108, "open_issues": 85, "topics": ["artificial-intelligence", "attention-mechanism", "transformers", "computer-vision", "image-classification"]}, {"id": 243487250, "repo_name": "chineseocr_lite", "full_name": "DayBreak-u/chineseocr_lite", "description": "\u8d85\u8f7b\u91cf\u7ea7\u4e2d\u6587ocr\uff0c\u652f\u6301\u7ad6\u6392\u6587\u5b57\u8bc6\u522b, \u652f\u6301ncnn\u3001mnn\u3001tnn\u63a8\u7406 ( dbnet(1.8M) + crnn(2.5M) + anglenet(378KB)) \u603b\u6a21\u578b\u4ec54.7M ", "created": "2020-02-27 10:01:29", "language": "C++", "type": "User", "username": "DayBreak-u", "stars": 8595, "forks": 1770, "subscribers": 222, "open_issues": 215, "topics": ["ncnn", "ocr", "pytorch"]}, {"id": 87720287, "repo_name": "pretrained-models.pytorch", "full_name": "Cadene/pretrained-models.pytorch", "description": "Pretrained ConvNets for pytorch: NASNet, ResNeXt, ResNet, InceptionV4, InceptionResnetV2, Xception, DPN, etc.", "created": "2017-04-09 15:54:23", "language": "Python", "type": "User", "username": "Cadene", "stars": 8417, "forks": 1783, "subscribers": 227, "open_issues": 93, "topics": ["imagenet", "resnet", "resnext", "pretrained", "pytorch", "inception"]}, {"id": 146165888, "repo_name": "yolov3", "full_name": "ultralytics/yolov3", "description": "YOLOv3 in PyTorch > ONNX > CoreML > TFLite", "created": "2018-08-26 08:57:20", "language": "Python", "type": "Organization", "username": "ultralytics", "stars": 8370, "forks": 3088, "subscribers": 152, "open_issues": 10, "topics": ["yolov3", "object-detection", "pytorch", "yolo", "onnx", "coreml", "ios", "tflite", "yolov4", "yolov5", "deep-learning", "machine-learning", "ml"]}, {"id": 163346054, "repo_name": "ludwig", "full_name": "ludwig-ai/ludwig", "description": "Data-centric declarative deep learning framework", "created": "2018-12-27 23:58:12", "language": "Python", "type": "Organization", "username": "ludwig-ai", "stars": 8150, "forks": 973, "subscribers": 185, "open_issues": 190, "topics": ["deep-learning", "deeplearning", "deep", "learning", "machine-learning", "machinelearning", "machine", "natural-language-processing", "natural-language", "computer-vision", "data-centric", "data-science", "python", "pytorch", "neural-network", "ml", "datascience"]}, {"id": 97641933, "repo_name": "PySyft", "full_name": "OpenMined/PySyft", "description": "A library for answering questions using data you cannot see", "created": "2017-07-18 20:41:16", "language": "Jupyter Notebook", "type": "Organization", "username": "OpenMined", "stars": 7958, "forks": 1780, "subscribers": 210, "open_issues": 320, "topics": ["deep-learning", "secure-computation", "pytorch", "privacy", "cryptography", "python", "syft", "federated-learning", "hacktoberfest"]}, {"id": 144782044, "repo_name": "vid2vid", "full_name": "NVIDIA/vid2vid", "description": "Pytorch implementation of our method for high-resolution (e.g. 2048x1024) photorealistic video-to-video translation.", "created": "2018-08-14 23:27:15", "language": "Python", "type": "Organization", "username": "NVIDIA", "stars": 7926, "forks": 1160, "subscribers": 247, "open_issues": 102, "topics": []}, {"id": 94506832, "repo_name": "pyro", "full_name": "pyro-ppl/pyro", "description": "Deep universal probabilistic programming with Python and PyTorch", "created": "2017-06-16 05:03:47", "language": "Python", "type": "Organization", "username": "pyro-ppl", "stars": 7327, "forks": 896, "subscribers": 202, "open_issues": 201, "topics": ["python", "pytorch", "machine-learning", "bayesian", "probabilistic-programming", "bayesian-inference", "variational-inference", "probabilistic-modeling", "deep-learning"]}, {"id": 94218531, "repo_name": "tensorboardX", "full_name": "lanpa/tensorboardX", "description": "tensorboard for pytorch (and chainer, mxnet, numpy, ...)", "created": "2017-06-13 13:54:19", "language": "Python", "type": "User", "username": "lanpa", "stars": 7254, "forks": 851, "subscribers": 85, "open_issues": 72, "topics": ["pytorch", "tensorboard", "machine-learning", "visualization", "numpy"]}, {"id": 128796920, "repo_name": "DeepLearning", "full_name": "Mikoto10032/DeepLearning", "description": "\u6df1\u5ea6\u5b66\u4e60\u5165\u95e8\u6559\u7a0b, \u4f18\u79c0\u6587\u7ae0, Deep Learning Tutorial", "created": "2018-04-09 15:53:37", "language": "Jupyter Notebook", "type": "User", "username": "Mikoto10032", "stars": 7136, "forks": 2239, "subscribers": 255, "open_issues": 8, "topics": ["deeplearning", "cnn", "rnn", "gan", "machine-learning", "tensorflow", "mxnet", "deep-learning", "machinelearning", "pytorch", "gcn", "kaggle"]}, {"id": 288108533, "repo_name": "minGPT", "full_name": "karpathy/minGPT", "description": "A minimal PyTorch re-implementation of the OpenAI GPT (Generative Pretrained Transformer) training", "created": "2020-08-17 07:08:48", "language": "Jupyter Notebook", "type": "User", "username": "karpathy", "stars": 7015, "forks": 787, "subscribers": 147, "open_issues": 32, "topics": []}, {"id": 222183074, "repo_name": "python-small-examples", "full_name": "jackzhenguo/python-small-examples", "description": "\u544a\u522b\u67af\u71e5\uff0c\u81f4\u529b\u4e8e\u6253\u9020 Python \u5b9e\u7528\u5c0f\u4f8b\u5b50\uff0c\u66f4\u591aPython\u826f\u5fc3\u6559\u7a0b\u89c1 Python\u4e2d\u6587\u7f51 http://www.zglg.work", "created": "2019-11-17 01:47:01", "language": "Python", "type": "User", "username": "jackzhenguo", "stars": 6838, "forks": 1584, "subscribers": 279, "open_issues": 1, "topics": ["python", "data-science", "machine-learning", "python-web", "python-gui", "tensorflow", "pytorch"]}, {"id": 221723816, "repo_name": "deep-learning-for-image-processing", "full_name": "WZMIAOMIAO/deep-learning-for-image-processing", "description": "deep learning for image processing including classification and object-detection etc.", "created": "2019-11-14 15:02:27", "language": "Python", "type": "User", "username": "WZMIAOMIAO", "stars": 6815, "forks": 3337, "subscribers": 90, "open_issues": 2, "topics": ["pytorch", "tensorflow2", "classification", "object-detection", "bilibili", "deep-learning", "segmentation"]}, {"id": 189350661, "repo_name": "EfficientNet-PyTorch", "full_name": "lukemelas/EfficientNet-PyTorch", "description": "A PyTorch implementation of EfficientNet and EfficientNetV2 (coming soon!)", "created": "2019-05-30 05:24:11", "language": "Python", "type": "User", "username": "lukemelas", "stars": 6813, "forks": 1401, "subscribers": 128, "open_issues": 141, "topics": ["efficientnet-pytorch", "imagenet", "feature-extraction", "pretrained-models"]}, {"id": 75829600, "repo_name": "generative-models", "full_name": "wiseodd/generative-models", "description": "Collection of generative models, e.g. GAN, VAE in Pytorch and Tensorflow.", "created": "2016-12-07 11:28:16", "language": "Python", "type": "User", "username": "wiseodd", "stars": 6756, "forks": 2033, "subscribers": 299, "open_issues": 19, "topics": ["vae", "gan", "pytorch", "tensorflow", "generative-model", "machine-learning", "rbm", "restricted-boltzmann-machine"]}, {"id": 99269272, "repo_name": "faster-rcnn.pytorch", "full_name": "jwyang/faster-rcnn.pytorch", "description": "A faster pytorch implementation of faster r-cnn", "created": "2017-08-03 19:46:54", "language": "Python", "type": "User", "username": "jwyang", "stars": 6751, "forks": 2271, "subscribers": 87, "open_issues": 399, "topics": ["faster-rcnn", "pytorch"]}, {"id": 90388827, "repo_name": "PyTorch-Tutorial", "full_name": "MorvanZhou/PyTorch-Tutorial", "description": "Build your neural network easy and fast, \u83ab\u70e6Python\u4e2d\u6587\u6559\u5b66", "created": "2017-05-05 15:12:04", "language": "Jupyter Notebook", "type": "User", "username": "MorvanZhou", "stars": 6602, "forks": 2956, "subscribers": 211, "open_issues": 26, "topics": ["neural-network", "python", "pytorch-tutorial", "batch-normalization", "cnn", "rnn", "autoencoder", "pytorch", "regression", "classification", "batch", "tutorial", "dropout", "dqn", "reinforcement-learning", "gan", "generative-adversarial-network", "machine-learning", "pytorch-tutorials"]}, {"id": 192814419, "repo_name": "Chinese-BERT-wwm", "full_name": "ymcui/Chinese-BERT-wwm", "description": "Pre-Training with Whole Word Masking for Chinese BERT\uff08\u4e2d\u6587BERT-wwm\u7cfb\u5217\u6a21\u578b\uff09", "created": "2019-06-19 22:55:01", "language": "Python", "type": "User", "username": "ymcui", "stars": 6589, "forks": 1092, "subscribers": 137, "open_issues": 0, "topics": ["chinese-bert", "tensorflow", "pytorch", "bert", "nlp", "roberta", "bert-wwm", "bert-wwm-ext", "roberta-wwm", "rbt"]}, {"id": 134292654, "repo_name": "PyTorch-YOLOv3", "full_name": "eriklindernoren/PyTorch-YOLOv3", "description": "Minimal PyTorch implementation of YOLOv3", "created": "2018-05-21 16:05:55", "language": "Python", "type": "User", "username": "eriklindernoren", "stars": 6540, "forks": 2518, "subscribers": 103, "open_issues": 100, "topics": []}, {"id": 235860204, "repo_name": "DeepSpeed", "full_name": "microsoft/DeepSpeed", "description": "DeepSpeed is a deep learning optimization library that makes distributed training and inference easy, efficient, and effective.", "created": "2020-01-23 18:35:18", "language": "Python", "type": "Organization", "username": "microsoft", "stars": 6373, "forks": 737, "subscribers": 124, "open_issues": 431, "topics": ["deep-learning", "pytorch", "gpu", "machine-learning", "billion-parameters", "data-parallelism", "model-parallelism", "inference", "pipeline-parallelism"]}, {"id": 107760466, "repo_name": "pytorch-cnn-visualizations", "full_name": "utkuozbulak/pytorch-cnn-visualizations", "description": "Pytorch implementation of convolutional neural network visualization techniques", "created": "2017-10-21 07:25:07", "language": "Python", "type": "User", "username": "utkuozbulak", "stars": 6325, "forks": 1321, "subscribers": 108, "open_issues": 2, "topics": ["grad-cam", "cam", "pytorch", "guided-backpropagation", "guided-grad-cam", "gradient", "saliency", "segmentation", "gradient-visualization", "deep-dream", "cnn-visualization", "smooth-grad"]}, {"id": 317029148, "repo_name": "best-of-ml-python", "full_name": "ml-tooling/best-of-ml-python", "description": "\ud83c\udfc6 A ranked list of awesome machine learning Python libraries. Updated weekly.", "created": "2020-11-29 19:41:36", "language": "Python", "type": "Organization", "username": "ml-tooling", "stars": 6319, "forks": 868, "subscribers": 235, "open_issues": 2, "topics": ["best-of", "awesome", "python", "machine-learning", "data-science", "awesome-list", "nlp", "data-visualization", "tensorflow", "pytorch", "scikit-learn", "keras", "python-library", "data-visualizations", "deep-learning"]}, {"id": 156939672, "repo_name": "onnxruntime", "full_name": "microsoft/onnxruntime", "description": "ONNX Runtime: cross-platform, high performance ML inferencing and training accelerator", "created": "2018-11-10 02:22:53", "language": "C++", "type": "Organization", "username": "microsoft", "stars": 6310, "forks": 1469, "subscribers": 194, "open_issues": 894, "topics": ["deep-learning", "onnx", "neural-networks", "machine-learning", "ai-framework", "hardware-acceleration", "pytorch", "tensorflow", "scikit-learn", "hacktoberfest"]}, {"id": 143080897, "repo_name": "pytext", "full_name": "facebookresearch/pytext", "description": "A natural language modeling framework based on PyTorch", "created": "2018-07-31 23:40:46", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 6281, "forks": 817, "subscribers": 169, "open_issues": 141, "topics": []}, {"id": 290091948, "repo_name": "annotated_deep_learning_paper_implementations", "full_name": "labmlai/annotated_deep_learning_paper_implementations", "description": "\ud83e\uddd1\u200d\ud83c\udfeb 50! Implementations/tutorials of deep learning papers with side-by-side notes \ud83d\udcdd; including transformers (original, xl, switch, feedback, vit, ...), optimizers (adam, adabelief, ...), gans(cyclegan, stylegan2, ...), \ud83c\udfae reinforcement learning (ppo, dqn), capsnet, distillation, ... \ud83e\udde0", "created": "2020-08-25 02:29:34", "language": "Jupyter Notebook", "type": "Organization", "username": "labmlai", "stars": 6272, "forks": 478, "subscribers": 174, "open_issues": 10, "topics": ["deep-learning", "deep-learning-tutorial", "pytorch", "gan", "transformers", "reinforcement-learning", "optimizers", "neural-networks", "transformer", "machine-learning"]}, {"id": 94317993, "repo_name": "attention-is-all-you-need-pytorch", "full_name": "jadore801120/attention-is-all-you-need-pytorch", "description": "A PyTorch implementation of the Transformer model in \"Attention is All You Need\".", "created": "2017-06-14 10:15:20", "language": "Python", "type": "User", "username": "jadore801120", "stars": 6271, "forks": 1573, "subscribers": 97, "open_issues": 63, "topics": ["attention", "deep-learning", "attention-is-all-you-need", "pytorch", "nlp", "natural-language-processing"]}, {"id": 75413130, "repo_name": "Open3D", "full_name": "isl-org/Open3D", "description": "Open3D: A Modern Library for 3D Data Processing", "created": "2016-12-02 16:40:38", "language": "C++", "type": "Organization", "username": "isl-org", "stars": 6261, "forks": 1558, "subscribers": 164, "open_issues": 369, "topics": ["mesh-processing", "computer-graphics", "opengl", "cpp", "python", "reconstruction", "odometry", "visualization", "registration", "machine-learning", "3d", "pointcloud", "rendering", "gui", "3d-perception", "gpu", "arm", "cuda", "pytorch", "tensorflow"]}, {"id": 108539084, "repo_name": "deepo", "full_name": "ufoym/deepo", "description": "Setup and customize deep learning environment in seconds.", "created": "2017-10-27 11:41:49", "language": "Python", "type": "User", "username": "ufoym", "stars": 6185, "forks": 775, "subscribers": 180, "open_issues": 2, "topics": ["deep-learning", "jupyter", "lasagne", "caffe", "tensorflow", "sonnet", "keras", "theano", "chainer", "torch", "pytorch", "mxnet", "cntk", "dockerfile-generator", "docker-image", "caffe2", "onnx"]}, {"id": 130725814, "repo_name": "apex", "full_name": "NVIDIA/apex", "description": "A PyTorch Extension:  Tools for easy mixed precision and distributed training in Pytorch", "created": "2018-04-23 16:28:52", "language": "Python", "type": "Organization", "username": "NVIDIA", "stars": 6122, "forks": 947, "subscribers": 98, "open_issues": 567, "topics": []}, {"id": 104854615, "repo_name": "stanza", "full_name": "stanfordnlp/stanza", "description": "Official Stanford NLP Python Library for Many Human Languages", "created": "2017-09-26 08:00:56", "language": "Python", "type": "Organization", "username": "stanfordnlp", "stars": 6029, "forks": 779, "subscribers": 146, "open_issues": 78, "topics": ["python", "nlp", "natural-language-processing", "machine-learning", "deep-learning", "artificial-intelligence", "pytorch", "universal-dependencies", "named-entity-recognition", "corenlp"]}, {"id": 143328315, "repo_name": "mindsdb", "full_name": "mindsdb/mindsdb", "description": "In-Database Machine Learning", "created": "2018-08-02 17:56:45", "language": "Python", "type": "Organization", "username": "mindsdb", "stars": 5992, "forks": 644, "subscribers": 229, "open_issues": 96, "topics": ["ml", "pytorch", "automl", "explainable-ai", "explainable-ml", "artificial-intelligence", "machine-learning", "mariadb", "clickhouse", "hacktoberfest", "mysql", "machine-learning-api", "postgresql", "snowflake", "singlestore"]}, {"id": 145693916, "repo_name": "kornia", "full_name": "kornia/kornia", "description": "Open Source Differentiable Computer Vision Library", "created": "2018-08-22 10:31:37", "language": "Python", "type": "Organization", "username": "kornia", "stars": 5975, "forks": 600, "subscribers": 110, "open_issues": 145, "topics": ["computer-vision", "image-processing", "machine-learning", "pytorch", "deep-learning", "neural-network", "python", "artificial-intelligence"]}, {"id": 117772329, "repo_name": "AlphaPose", "full_name": "MVIG-SJTU/AlphaPose", "description": "Real-Time and Accurate Full-Body Multi-Person Pose Estimation&Tracking System", "created": "2018-01-17 02:33:17", "language": "Python", "type": "Organization", "username": "MVIG-SJTU", "stars": 5913, "forks": 1653, "subscribers": 212, "open_issues": 162, "topics": ["pose-estimation", "posetracking", "tracking", "gpu", "pytorch", "realtime", "human-pose-estimation", "human-tracking", "human-pose-tracking", "alpha-pose", "alphapose", "person-pose-estimation", "accurate", "crowdpose", "full-body", "whole-body", "skeleton", "keypoints", "human-computer-interaction", "human-joints"]}, {"id": 69709572, "repo_name": "tutorials", "full_name": "pytorch/tutorials", "description": "PyTorch tutorials.", "created": "2016-09-30 23:48:36", "language": "Python", "type": "Organization", "username": "pytorch", "stars": 5812, "forks": 3217, "subscribers": 163, "open_issues": 187, "topics": []}, {"id": 386811486, "repo_name": "YOLOX", "full_name": "Megvii-BaseDetection/YOLOX", "description": "YOLOX is a high-performance anchor-free YOLO, exceeding yolov3~v5 with MegEngine, ONNX, TensorRT, ncnn, and OpenVINO supported. Documentation: https://yolox.readthedocs.io/", "created": "2021-07-17 02:01:45", "language": "Python", "type": "Organization", "username": "Megvii-BaseDetection", "stars": 5775, "forks": 1270, "subscribers": 67, "open_issues": 391, "topics": ["yolox", "yolov3", "onnx", "tensorrt", "ncnn", "openvino", "pytorch", "megengine", "object-detection", "yolo", "deep-learning"]}, {"id": 140277116, "repo_name": "pytorch-Deep-Learning", "full_name": "Atcold/pytorch-Deep-Learning", "description": "Deep Learning (with PyTorch)", "created": "2018-07-09 11:40:25", "language": "Jupyter Notebook", "type": "User", "username": "Atcold", "stars": 5706, "forks": 1909, "subscribers": 131, "open_issues": 46, "topics": ["jupyter-notebook", "pytorch", "deep-learning", "neural-nets"]}, {"id": 217433767, "repo_name": "pytorch3d", "full_name": "facebookresearch/pytorch3d", "description": "PyTorch3D is FAIR's library of reusable components for deep learning with 3D data", "created": "2019-10-25 02:23:45", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 5697, "forks": 817, "subscribers": 140, "open_issues": 71, "topics": []}, {"id": 118620583, "repo_name": "TTS", "full_name": "mozilla/TTS", "description": ":robot: :speech_balloon: Deep learning for Text to Speech  (Discussion forum: https://discourse.mozilla.org/c/tts)", "created": "2018-01-23 14:22:06", "language": "Jupyter Notebook", "type": "Organization", "username": "mozilla", "stars": 5670, "forks": 910, "subscribers": 158, "open_issues": 20, "topics": ["deep-learning", "text-to-speech", "python", "pytorch", "tacotron", "tts", "speaker-encoder", "dataset-analysis", "tacotron2", "tensorflow2", "vocoder", "melgan", "gantts", "multiband-melgan", "glow-tts", "speech"]}, {"id": 112777740, "repo_name": "pix2pixHD", "full_name": "NVIDIA/pix2pixHD", "description": "Synthesizing and manipulating 2048x1024 images with conditional GANs", "created": "2017-12-01 19:19:14", "language": "Python", "type": "Organization", "username": "NVIDIA", "stars": 5643, "forks": 1237, "subscribers": 169, "open_issues": 210, "topics": ["gan", "deep-learning", "deep-neural-networks", "pytorch", "pix2pix", "image-to-image-translation", "generative-adversarial-network", "computer-vision", "computer-graphics"]}, {"id": 103698763, "repo_name": "face-alignment", "full_name": "1adrianb/face-alignment", "description": ":fire: 2D and 3D Face alignment library build using pytorch ", "created": "2017-09-15 20:32:44", "language": "Python", "type": "User", "username": "1adrianb", "stars": 5555, "forks": 1181, "subscribers": 169, "open_issues": 57, "topics": ["python", "deep-learning", "face-alignment", "face-detector", "pytorch", "face-detection"]}, {"id": 100464123, "repo_name": "MMdnn", "full_name": "microsoft/MMdnn", "description": "MMdnn is a set of tools to help users inter-operate among different deep learning frameworks. E.g. model conversion and visualization. Convert models between Caffe, Keras, MXNet, Tensorflow, CNTK, PyTorch Onnx and CoreML.", "created": "2017-08-16 08:03:52", "language": "Python", "type": "Organization", "username": "microsoft", "stars": 5522, "forks": 977, "subscribers": 185, "open_issues": 329, "topics": ["cntk", "visualization", "tensorflow", "model-converter", "pytorch", "caffe", "keras", "mxnet", "coreml", "onnx", "darknet"]}, {"id": 82841862, "repo_name": "OpenNMT-py", "full_name": "OpenNMT/OpenNMT-py", "description": "Open Source Neural Machine Translation in PyTorch", "created": "2017-02-22 19:01:50", "language": "Python", "type": "Organization", "username": "OpenNMT", "stars": 5483, "forks": 2079, "subscribers": 165, "open_issues": 106, "topics": ["deep-learning", "pytorch", "machine-translation", "neural-machine-translation"]}, {"id": 57182702, "repo_name": "TopDeepLearning", "full_name": "aymericdamien/TopDeepLearning", "description": "A list of popular github projects related to deep learning", "created": "2016-04-27 04:13:03", "language": "Python", "type": "User", "username": "aymericdamien", "stars": 5364, "forks": 1182, "subscribers": 358, "open_issues": 17, "topics": ["deep-learning", "machine-learning", "tensorflow", "pytorch"]}, {"id": 401484223, "repo_name": "RobustVideoMatting", "full_name": "PeterL1n/RobustVideoMatting", "description": "Robust Video Matting in PyTorch, TensorFlow, TensorFlow.js, ONNX, CoreML!", "created": "2021-08-30 20:57:44", "language": "Python", "type": "User", "username": "PeterL1n", "stars": 5258, "forks": 603, "subscribers": 108, "open_issues": 34, "topics": ["computer-vision", "machine-learning", "ai", "matting", "deep-learning"]}, {"id": 305144746, "repo_name": "tinygrad", "full_name": "geohot/tinygrad", "description": "You like pytorch? You like micrograd? You love tinygrad! \u2764\ufe0f ", "created": "2020-10-18 16:23:12", "language": "Python", "type": "User", "username": "geohot", "stars": 5185, "forks": 588, "subscribers": 122, "open_issues": 10, "topics": []}, {"id": 259842566, "repo_name": "PythonPark", "full_name": "Jack-Cherish/PythonPark", "description": "Python \u5f00\u6e90\u9879\u76ee\u4e4b\u300c\u81ea\u5b66\u7f16\u7a0b\u4e4b\u8def\u300d\uff0c\u4fdd\u59c6\u7ea7\u6559\u7a0b\uff1aAI\u5b9e\u9a8c\u5ba4\u3001\u5b9d\u85cf\u89c6\u9891\u3001\u6570\u636e\u7ed3\u6784\u3001\u5b66\u4e60\u6307\u5357\u3001\u673a\u5668\u5b66\u4e60\u5b9e\u6218\u3001\u6df1\u5ea6\u5b66\u4e60\u5b9e\u6218\u3001\u7f51\u7edc\u722c\u866b\u3001\u5927\u5382\u9762\u7ecf\u3001\u7a0b\u5e8f\u4eba\u751f\u3001\u8d44\u6e90\u5206\u4eab\u3002", "created": "2020-04-29 06:24:33", "language": "Python", "type": "User", "username": "Jack-Cherish", "stars": 5062, "forks": 954, "subscribers": 132, "open_issues": 0, "topics": ["python3", "pytorch", "deeplearning", "deep-learning", "webspider", "python", "python-spider"]}, {"id": 100485912, "repo_name": "Pytorch-UNet", "full_name": "milesial/Pytorch-UNet", "description": "PyTorch implementation of the U-Net for image semantic segmentation with high quality images", "created": "2017-08-16 12:17:08", "language": "Python", "type": "User", "username": "milesial", "stars": 5014, "forks": 1611, "subscribers": 64, "open_issues": 26, "topics": ["pytorch", "unet", "pytorch-unet", "semantic-segmentation", "convolutional-networks", "kaggle", "tensorboard", "wandb", "weights-and-biases", "deep-learning", "convolutional-neural-networks"]}, {"id": 259991778, "repo_name": "jukebox", "full_name": "openai/jukebox", "description": "Code for the paper \"Jukebox: A Generative Model for Music\"", "created": "2020-04-29 17:16:12", "language": "Python", "type": "Organization", "username": "openai", "stars": 5004, "forks": 801, "subscribers": 199, "open_issues": 159, "topics": ["paper", "audio", "music", "pytorch", "generative-model", "vq-vae", "transformer"]}, {"id": 112133243, "repo_name": "stargan", "full_name": "yunjey/stargan", "description": "StarGAN - Official PyTorch Implementation (CVPR 2018)", "created": "2017-11-27 01:43:01", "language": "Python", "type": "User", "username": "yunjey", "stars": 4987, "forks": 947, "subscribers": 135, "open_issues": 63, "topics": ["stargan", "pytorch", "image-to-image-translation", "generative-models", "cvpr2018"]}, {"id": 253385242, "repo_name": "Yet-Another-EfficientDet-Pytorch", "full_name": "zylo117/Yet-Another-EfficientDet-Pytorch", "description": "The pytorch re-implement of the official efficientdet with SOTA performance in real time and pretrained weights.", "created": "2020-04-06 03:27:06", "language": "Jupyter Notebook", "type": "User", "username": "zylo117", "stars": 4984, "forks": 1260, "subscribers": 117, "open_issues": 341, "topics": ["efficientdet", "efficientnet", "pytorch", "object-detection", "detection", "bifpn"]}, {"id": 173333035, "repo_name": "segmentation_models.pytorch", "full_name": "qubvel/segmentation_models.pytorch", "description": "Segmentation models with pretrained backbones. PyTorch.", "created": "2019-03-01 16:21:21", "language": "Python", "type": "User", "username": "qubvel", "stars": 4962, "forks": 992, "subscribers": 64, "open_issues": 96, "topics": ["segmentation", "image-processing", "neural-networks", "pspnet", "linknet", "unet", "unet-pytorch", "pytorch", "fpn", "models", "imagenet", "pretrained-models", "semantic-segmentation", "image-segmentation", "segmentation-models", "pretrained-backbones", "unetplusplus", "deeplabv3", "deeplab-v3-plus", "pretrained-weights"]}, {"id": 79821807, "repo_name": "Practical_RL", "full_name": "yandexdataschool/Practical_RL", "description": "A course in reinforcement learning in the wild", "created": "2017-01-23 16:18:00", "language": "Jupyter Notebook", "type": "Organization", "username": "yandexdataschool", "stars": 4842, "forks": 1481, "subscribers": 207, "open_issues": 35, "topics": ["reinforcement-learning", "course-materials", "deep-learning", "deep-reinforcement-learning", "git-course", "mooc", "tensorflow", "pytorch", "pytorch-tutorials", "keras", "hacktoberfest"]}, {"id": 138831170, "repo_name": "mmf", "full_name": "facebookresearch/mmf", "description": "A modular framework for vision & language multimodal research from Facebook AI Research (FAIR)", "created": "2018-06-27 04:52:40", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 4812, "forks": 834, "subscribers": 110, "open_issues": 200, "topics": ["pytorch", "vqa", "pretrained-models", "multimodal", "deep-learning", "captioning", "dialog", "textvqa", "hateful-memes", "multi-tasking"]}, {"id": 152646389, "repo_name": "course-v3", "full_name": "fastai/course-v3", "description": "The 3rd edition of course.fast.ai", "created": "2018-10-11 19:41:45", "language": "Jupyter Notebook", "type": "Organization", "username": "fastai", "stars": 4793, "forks": 3651, "subscribers": 232, "open_issues": 43, "topics": ["data-science", "fastai", "deep-learning", "pytorch", "machine-learning", "machine-learning-courses", "mooc"]}, {"id": 153113207, "repo_name": "BERT-pytorch", "full_name": "codertimo/BERT-pytorch", "description": "Google AI 2018 BERT pytorch implementation", "created": "2018-10-15 12:58:15", "language": "Python", "type": "User", "username": "codertimo", "stars": 4757, "forks": 1075, "subscribers": 126, "open_issues": 54, "topics": ["bert", "transformer", "pytorch", "nlp", "language-model"]}, {"id": 114054873, "repo_name": "espnet", "full_name": "espnet/espnet", "description": "End-to-End Speech Processing Toolkit", "created": "2017-12-13 00:45:11", "language": "Python", "type": "Organization", "username": "espnet", "stars": 4739, "forks": 1483, "subscribers": 178, "open_issues": 329, "topics": ["deep-learning", "end-to-end", "chainer", "pytorch", "kaldi", "speech-recognition", "speech-synthesis", "speech-translation", "machine-translation", "voice-conversion", "speech-enhancement", "speech-separation"]}, {"id": 236637683, "repo_name": "Ai-Learn", "full_name": "tangyudi/Ai-Learn", "description": "\u4eba\u5de5\u667a\u80fd\u5b66\u4e60\u8def\u7ebf\u56fe\uff0c\u6574\u7406\u8fd1200\u4e2a\u5b9e\u6218\u6848\u4f8b\u4e0e\u9879\u76ee\uff0c\u514d\u8d39\u63d0\u4f9b\u914d\u5957\u6559\u6750\uff0c\u96f6\u57fa\u7840\u5165\u95e8\uff0c\u5c31\u4e1a\u5b9e\u6218\uff01\u5305\u62ec\uff1aPython\uff0c\u6570\u5b66\uff0c\u673a\u5668\u5b66\u4e60\uff0c\u6570\u636e\u5206\u6790\uff0c\u6df1\u5ea6\u5b66\u4e60\uff0c\u8ba1\u7b97\u673a\u89c6\u89c9\uff0c\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff0cPyTorch tensorflow machine-learning,deep-learning data-analysis data-mining mathematics data-science artificial-intelligence python tensorflow tensorflow2 caffe keras pytorch algorithm numpy pandas matplotlib seaborn nlp cv\u7b49\u70ed\u95e8\u9886\u57df", "created": "2020-01-28 01:55:06", "language": null, "type": "User", "username": "tangyudi", "stars": 4625, "forks": 1247, "subscribers": 168, "open_issues": 19, "topics": ["machine-learning", "deep-learning", "data-analysis", "data-mining", "mathematics", "data-science", "artificial-intelligence", "python", "tensorflow", "tensorflow2", "caffe", "keras", "pytorch", "algorithm", "numpy", "pandas", "matplotlib", "seaborn", "nlp", "cv"]}, {"id": 149832847, "repo_name": "einops", "full_name": "arogozhnikov/einops", "description": "Deep learning operations reinvented (for pytorch, tensorflow, jax and others)", "created": "2018-09-22 00:45:08", "language": "Python", "type": "User", "username": "arogozhnikov", "stars": 4569, "forks": 187, "subscribers": 55, "open_issues": 32, "topics": ["deep-learning", "pytorch", "tensorflow", "numpy", "gluon", "cupy", "chainer", "keras", "tensor", "jax"]}, {"id": 81275248, "repo_name": "ssd.pytorch", "full_name": "amdegroot/ssd.pytorch", "description": "A PyTorch Implementation of Single Shot MultiBox Detector", "created": "2017-02-08 01:50:36", "language": "Python", "type": "User", "username": "amdegroot", "stars": 4564, "forks": 1700, "subscribers": 84, "open_issues": 357, "topics": ["pytorch", "deep-learning", "ssd", "object-detection", "computer-vision", "machine-learning", "image-recognition", "webcam"]}, {"id": 147386085, "repo_name": "deep-learning-v2-pytorch", "full_name": "udacity/deep-learning-v2-pytorch", "description": "Projects and exercises for the latest Deep Learning ND program https://www.udacity.com/course/deep-learning-nanodegree--nd101", "created": "2018-09-04 17:53:50", "language": "Jupyter Notebook", "type": "Organization", "username": "udacity", "stars": 4526, "forks": 4992, "subscribers": 172, "open_issues": 3, "topics": ["deep-learning", "neural-network", "convolutional-networks", "pytorch", "recurrent-networks", "style-transfer", "sentiment-analysis"]}, {"id": 79626502, "repo_name": "pytorch-cifar", "full_name": "kuangliu/pytorch-cifar", "description": "95.47% on CIFAR10 with PyTorch", "created": "2017-01-21 05:43:20", "language": "Python", "type": "User", "username": "kuangliu", "stars": 4497, "forks": 1787, "subscribers": 87, "open_issues": 94, "topics": ["pytorch"]}, {"id": 97533515, "repo_name": "skorch", "full_name": "skorch-dev/skorch", "description": "A scikit-learn compatible neural network library that wraps PyTorch", "created": "2017-07-18 00:13:54", "language": "Jupyter Notebook", "type": "Organization", "username": "skorch-dev", "stars": 4389, "forks": 309, "subscribers": 82, "open_issues": 56, "topics": ["scikit-learn", "pytorch", "machine-learning"]}, {"id": 65924871, "repo_name": "pyprobml", "full_name": "probml/pyprobml", "description": "Python code for \"Probabilistic Machine learning\" book by Kevin Murphy", "created": "2016-08-17 16:42:24", "language": "Python", "type": "Organization", "username": "probml", "stars": 4353, "forks": 1009, "subscribers": 163, "open_issues": 17, "topics": ["jupyter-notebooks", "machine-learning", "colab", "pml", "probabilistic-programming", "jax", "tensorflow", "pytorch", "pymc3", "numpyro", "flax", "pyro"]}, {"id": 79684696, "repo_name": "practical-pytorch", "full_name": "spro/practical-pytorch", "description": "Go to https://github.com/pytorch/tutorials - this repo is deprecated and no longer maintained", "created": "2017-01-22 01:28:10", "language": "Jupyter Notebook", "type": "User", "username": "spro", "stars": 4346, "forks": 1089, "subscribers": 149, "open_issues": 91, "topics": ["natural-language-processing", "natural-language-generation", "nlp", "nlg", "seq2seq"]}, {"id": 129815042, "repo_name": "tianshou", "full_name": "thu-ml/tianshou", "description": "An elegant PyTorch deep reinforcement learning library.", "created": "2018-04-16 22:47:38", "language": "Python", "type": "Organization", "username": "thu-ml", "stars": 4342, "forks": 686, "subscribers": 76, "open_issues": 46, "topics": ["pytorch", "policy-gradient", "dqn", "double-dqn", "a2c", "ddpg", "ppo", "td3", "sac", "imitation-learning", "mujoco", "atari", "bcq", "library", "rl", "drl", "benchmark", "trpo", "npg", "cql"]}, {"id": 201403923, "repo_name": "Hub", "full_name": "activeloopai/Hub", "description": "Dataset format for AI. Build, manage, query & visualize datasets for deep learning. Stream data real-time to PyTorch/TensorFlow & version-control it. https://activeloop.ai ", "created": "2019-08-09 06:17:59", "language": "Python", "type": "Organization", "username": "activeloopai", "stars": 4319, "forks": 354, "subscribers": 63, "open_issues": 60, "topics": ["datasets", "data-pipelines", "deep-learning", "machine-learning", "data-science", "training", "pytorch", "tensorflow", "data-version-control", "collaboration", "python", "ai", "ml", "mlops", "computer-vision", "cv", "data-processing", "cloud-computing", "image-processing", "data-centric"]}, {"id": 82524265, "repo_name": "DeepLearningZeroToAll", "full_name": "hunkim/DeepLearningZeroToAll", "description": "TensorFlow Basic Tutorial Labs", "created": "2017-02-20 06:26:23", "language": "Jupyter Notebook", "type": "User", "username": "hunkim", "stars": 4271, "forks": 2732, "subscribers": 429, "open_issues": 0, "topics": ["tensorflow", "keras", "mxnet", "pytorch", "python", "tutorial", "lab"]}, {"id": 221654678, "repo_name": "haystack", "full_name": "deepset-ai/haystack", "description": ":mag: Haystack is an open source NLP framework that leverages Transformer models. It enables developers to implement production-ready neural search, question answering, semantic document search and summarization for a wide range of applications.", "created": "2019-11-14 09:05:28", "language": "Python", "type": "Organization", "username": "deepset-ai", "stars": 4267, "forks": 691, "subscribers": 80, "open_issues": 192, "topics": ["nlp", "question-answering", "bert", "transfer-learning", "language-model", "pytorch", "semantic-search", "neural-search", "squad", "elasticsearch", "dpr", "information-retrieval", "summarization", "search-engine", "transformers", "natural-language-processing", "machine-learning", "ai", "python"]}, {"id": 92983437, "repo_name": "pytorch-grad-cam", "full_name": "jacobgil/pytorch-grad-cam", "description": "Many Class Activation Map methods implemented in Pytorch for CNNs and Vision Transformers. Including Grad-CAM, Grad-CAM++, Score-CAM, Ablation-CAM and XGrad-CAM", "created": "2017-05-31 19:55:15", "language": "Python", "type": "User", "username": "jacobgil", "stars": 4255, "forks": 835, "subscribers": 32, "open_issues": 20, "topics": ["deep-learning", "pytorch", "grad-cam", "visualizations", "interpretability", "interpretable-ai", "interpretable-deep-learning", "score-cam", "class-activation-maps", "vision-transformers"]}, {"id": 106061907, "repo_name": "semantic-segmentation-pytorch", "full_name": "CSAILVision/semantic-segmentation-pytorch", "description": "Pytorch implementation for Semantic Segmentation/Scene Parsing on MIT ADE20K dataset", "created": "2017-10-07 00:52:17", "language": "Python", "type": "Organization", "username": "CSAILVision", "stars": 4234, "forks": 984, "subscribers": 127, "open_issues": 62, "topics": ["pytorch", "semantic-segmentation", "scene-recognition", "ade20k"]}, {"id": 365517762, "repo_name": "External-Attention-pytorch", "full_name": "xmu-xiaoma666/External-Attention-pytorch", "description": "\ud83c\udf40 Pytorch implementation of various Attention Mechanisms, MLP, Re-parameter, Convolution, which is helpful to further understand papers.\u2b50\u2b50\u2b50", "created": "2021-05-08 13:11:46", "language": "Python", "type": "User", "username": "xmu-xiaoma666", "stars": 4189, "forks": 821, "subscribers": 69, "open_issues": 31, "topics": ["attention", "pytorch", "paper", "cbam", "squeeze", "excitation-networks", "linear-layers", "visual-tasks"]}, {"id": 217113590, "repo_name": "pytorch-metric-learning", "full_name": "KevinMusgrave/pytorch-metric-learning", "description": "The easiest way to use deep metric learning in your application. Modular, flexible, and extensible. Written in PyTorch.", "created": "2019-10-23 17:20:35", "language": "Python", "type": "User", "username": "KevinMusgrave", "stars": 4183, "forks": 520, "subscribers": 67, "open_issues": 43, "topics": ["metric-learning", "deep-learning", "computer-vision", "machine-learning", "pytorch", "deep-metric-learning", "image-retrieval", "self-supervised-learning", "contrastive-learning"]}, {"id": 79775156, "repo_name": "pytorch-examples", "full_name": "jcjohnson/pytorch-examples", "description": "Simple examples to introduce PyTorch", "created": "2017-01-23 06:05:21", "language": "Python", "type": "User", "username": "jcjohnson", "stars": 4178, "forks": 908, "subscribers": 149, "open_issues": 8, "topics": []}, {"id": 199509705, "repo_name": "autogluon", "full_name": "awslabs/autogluon", "description": "AutoGluon: AutoML for Image, Text, and Tabular Data", "created": "2019-07-29 18:51:24", "language": "Python", "type": "Organization", "username": "awslabs", "stars": 4176, "forks": 557, "subscribers": 82, "open_issues": 134, "topics": ["automl", "machine-learning", "data-science", "deep-learning", "ensemble-learning", "image-classification", "computer-vision", "natural-language-processing", "structured-data", "object-detection", "gluon", "mxnet", "transfer-learning", "pytorch", "automated-machine-learning", "scikit-learn", "autogluon", "tabular-data", "neural-architecture-search", "hyperparameter-optimization"]}, {"id": 147824034, "repo_name": "Deep-Reinforcement-Learning-Algorithms-with-PyTorch", "full_name": "p-christ/Deep-Reinforcement-Learning-Algorithms-with-PyTorch", "description": "PyTorch implementations of deep reinforcement learning algorithms and environments", "created": "2018-09-07 13:01:21", "language": "Python", "type": "User", "username": "p-christ", "stars": 4158, "forks": 997, "subscribers": 111, "open_issues": 38, "topics": []}, {"id": 38730494, "repo_name": "pipeline", "full_name": "PipelineAI/pipeline", "description": "PipelineAI Kubeflow Distribution", "created": "2015-07-08 03:49:23", "language": "Jsonnet", "type": "Organization", "username": "PipelineAI", "stars": 4143, "forks": 983, "subscribers": 351, "open_issues": 1, "topics": ["machine-learning", "artificial-intelligence", "tensorflow", "kubernetes", "cassandra", "spark", "kafka", "airflow", "docker", "redis", "neural-network", "gpu", "pipelineai", "tfx", "keras", "kubeflow", "pytorch", "scikit-learn"]}, {"id": 138796699, "repo_name": "yolact", "full_name": "dbolya/yolact", "description": "A simple, fully convolutional model for real-time instance segmentation.", "created": "2018-06-26 21:41:31", "language": "Python", "type": "User", "username": "dbolya", "stars": 4140, "forks": 1123, "subscribers": 108, "open_issues": 340, "topics": ["realtime", "real-time", "instance-segmentation", "yolact", "pytorch"]}, {"id": 305316768, "repo_name": "nanodet", "full_name": "RangiLyu/nanodet", "description": "NanoDet-Plus\u26a1Super fast and lightweight anchor-free object detection model. \ud83d\udd25Only 980 KB(int8) / 1.8MB (fp16) and run 97FPS on cellphone\ud83d\udd25", "created": "2020-10-19 08:36:25", "language": "Python", "type": "User", "username": "RangiLyu", "stars": 4112, "forks": 766, "subscribers": 61, "open_issues": 138, "topics": ["deep-neural-networks", "deep-learning", "object-detection", "anchor-free", "ncnn", "shufflenet", "pytorch", "mnn", "repvgg", "openvino", "efficientnet", "android", "model-zoo", "nanodet-plus", "nanodet"]}, {"id": 140018843, "repo_name": "deep-reinforcement-learning", "full_name": "udacity/deep-reinforcement-learning", "description": "Repo for the Deep Reinforcement Learning Nanodegree program", "created": "2018-07-06 18:36:23", "language": "Jupyter Notebook", "type": "Organization", "username": "udacity", "stars": 4080, "forks": 2139, "subscribers": 179, "open_issues": 23, "topics": ["deep-reinforcement-learning", "reinforcement-learning", "reinforcement-learning-algorithms", "neural-networks", "pytorch", "pytorch-rl", "ddpg", "dqn", "ppo", "dynamic-programming", "cross-entropy", "hill-climbing", "ml-agents", "openai-gym-solutions", "openai-gym", "rl-algorithms"]}, {"id": 265612440, "repo_name": "TTS", "full_name": "coqui-ai/TTS", "description": "\ud83d\udc38\ud83d\udcac - a deep learning toolkit for Text-to-Speech, battle-tested in research and production", "created": "2020-05-20 15:45:28", "language": "Python", "type": "Organization", "username": "coqui-ai", "stars": 4075, "forks": 392, "subscribers": 83, "open_issues": 42, "topics": ["python", "text-to-speech", "deep-learning", "speech", "pytorch", "tts", "vocoder", "tacotron", "glow-tts", "melgan", "speaker-encoder", "hifigan", "speaker-encodings", "multi-speaker-tts", "tts-model", "speech-synthesis", "voice-cloning", "voice-synthesis"]}, {"id": 341714203, "repo_name": "DALL-E", "full_name": "openai/DALL-E", "description": "PyTorch package for the discrete VAE used for DALL\u00b7E.", "created": "2021-02-23 23:01:11", "language": "Python", "type": "Organization", "username": "openai", "stars": 4066, "forks": 679, "subscribers": 132, "open_issues": 24, "topics": []}, {"id": 108454049, "repo_name": "pygcn", "full_name": "tkipf/pygcn", "description": "Graph Convolutional Networks in PyTorch", "created": "2017-10-26 19:05:04", "language": "Python", "type": "User", "username": "tkipf", "stars": 4041, "forks": 1032, "subscribers": 51, "open_issues": 51, "topics": []}, {"id": 111835796, "repo_name": "ignite", "full_name": "pytorch/ignite", "description": "High-level library to help with training and evaluating neural networks in PyTorch flexibly and transparently.", "created": "2017-11-23 17:31:21", "language": "Python", "type": "Organization", "username": "pytorch", "stars": 3884, "forks": 531, "subscribers": 60, "open_issues": 145, "topics": ["pytorch", "neural-network", "python", "machine-learning", "deep-learning", "metrics", "hacktoberfest"]}, {"id": 327113050, "repo_name": "DALLE-pytorch", "full_name": "lucidrains/DALLE-pytorch", "description": "Implementation / replication of DALL-E, OpenAI's Text to Image Transformer, in Pytorch", "created": "2021-01-05 20:35:16", "language": "Python", "type": "User", "username": "lucidrains", "stars": 3860, "forks": 400, "subscribers": 86, "open_issues": 104, "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "text-to-image", "transformers", "multi-modal"]}, {"id": 66823715, "repo_name": "BigDL", "full_name": "intel-analytics/BigDL", "description": "Building Large-Scale AI Applications for Distributed Big Data", "created": "2016-08-29 07:59:50", "language": "Jupyter Notebook", "type": "Organization", "username": "intel-analytics", "stars": 3848, "forks": 969, "subscribers": 243, "open_issues": 369, "topics": ["spark", "tensorflow", "keras", "pytorch", "bigdl", "analytics-zoo", "distributed-deep-learning", "python", "scala"]}, {"id": 186088004, "repo_name": "d2l-pytorch", "full_name": "dsgiitr/d2l-pytorch", "description": "This project reproduces the book Dive Into Deep Learning (https://d2l.ai/), adapting the code from MXNet into PyTorch.", "created": "2019-05-11 04:35:20", "language": "Jupyter Notebook", "type": "Organization", "username": "dsgiitr", "stars": 3842, "forks": 1139, "subscribers": 168, "open_issues": 10, "topics": ["deep-learning", "d2l", "data-science", "pytorch-implmention", "book", "nlp", "computer-vision", "pytorch", "mxnet", "dive-into-deep-learning"]}, {"id": 130871393, "repo_name": "distiller", "full_name": "IntelLabs/distiller", "description": "Neural Network Distiller by Intel AI Lab: a Python package for neural network compression research.  https://intellabs.github.io/distiller", "created": "2018-04-24 14:58:12", "language": "Jupyter Notebook", "type": "Organization", "username": "IntelLabs", "stars": 3834, "forks": 753, "subscribers": 138, "open_issues": 71, "topics": ["pytorch", "pruning", "quantization", "pruning-structures", "jupyter-notebook", "network-compression", "deep-neural-networks", "regularization", "group-lasso", "distillation", "early-exit", "truncated-svd", "onnx", "automl-for-compression"]}, {"id": 258745062, "repo_name": "pytorch-YOLOv4", "full_name": "Tianxiaomo/pytorch-YOLOv4", "description": "PyTorch ,ONNX and TensorRT implementation of YOLOv4", "created": "2020-04-25 10:11:33", "language": "Python", "type": "User", "username": "Tianxiaomo", "stars": 3822, "forks": 1277, "subscribers": 52, "open_issues": 298, "topics": ["yolov4", "pytorch", "darknet2pytorch", "darknet2onnx", "tensorrt", "onnx", "pytorch-yolov4", "yolov4-tiny", "yolov3"]}, {"id": 115765590, "repo_name": "Tengine", "full_name": "OAID/Tengine", "description": "Tengine is a lite, high performance, modular inference engine for embedded device ", "created": "2017-12-30 01:21:41", "language": "C++", "type": "Organization", "username": "OAID", "stars": 3819, "forks": 915, "subscribers": 218, "open_issues": 159, "topics": ["arm", "machine-learning", "artificial-intelligence", "cnn", "tensorflow", "pytorch", "onnx", "x86-64", "mips", "cuda", "tensorrt", "acl", "npu", "riscv", "supperedge", "container", "nvdla"]}, {"id": 259710503, "repo_name": "speechbrain", "full_name": "speechbrain/speechbrain", "description": "A PyTorch-based Speech Toolkit", "created": "2020-04-28 17:48:45", "language": "Python", "type": "Organization", "username": "speechbrain", "stars": 3773, "forks": 701, "subscribers": 107, "open_issues": 162, "topics": ["speech-recognition", "speech-toolkit", "speaker-recognition", "speech-to-text", "speech-enhancement", "speech-separation", "audio", "audio-processing", "speech-processing", "speechrecognition", "asr", "voice-recognition", "spoken-language-understanding", "speaker-diarization", "speaker-verification", "pytorch", "huggingface", "transformers", "language-model", "deep-learning"]}, {"id": 414545335, "repo_name": "stylegan3", "full_name": "NVlabs/stylegan3", "description": "Official PyTorch implementation of StyleGAN3", "created": "2021-10-07 09:52:04", "language": "Python", "type": "Organization", "username": "NVlabs", "stars": 3739, "forks": 526, "subscribers": 49, "open_issues": 79, "topics": []}, {"id": 135768037, "repo_name": "DALI", "full_name": "NVIDIA/DALI", "description": "A GPU-accelerated library containing highly optimized building blocks and an execution engine for data processing to accelerate deep learning training and inference applications.", "created": "2018-06-01 22:18:01", "language": "C++", "type": "Organization", "username": "NVIDIA", "stars": 3730, "forks": 482, "subscribers": 83, "open_issues": 171, "topics": ["fast-data-pipeline", "image-augmentation", "data-augmentation", "image-processing", "data-processing", "deep-learning", "machine-learning", "python", "neural-network", "gpu", "gpu-tensorflow", "audio-processing", "pytorch", "mxnet", "paddle"]}, {"id": 86031674, "repo_name": "client", "full_name": "wandb/client", "description": "\ud83d\udd25 A tool for visualizing and tracking your machine learning experiments. This repo contains the CLI and Python API.", "created": "2017-03-24 05:46:23", "language": "Python", "type": "Organization", "username": "wandb", "stars": 3729, "forks": 300, "subscribers": 35, "open_issues": 368, "topics": ["machine-learning", "experiment-track", "deep-learning", "keras", "tensorflow", "pytorch", "hyperparameter-search", "reinforcement-learning", "mlops", "data-science", "collaboration", "hyperparameter-optimization", "reproducibility", "hyperparameter-tuning", "data-versioning", "model-versioning", "ml-platform"]}, {"id": 162021652, "repo_name": "bertviz", "full_name": "jessevig/bertviz", "description": "BertViz: Visualize Attention in Transformer Models (BERT, GPT2, BART, etc.) ", "created": "2018-12-16 16:50:42", "language": "Python", "type": "User", "username": "jessevig", "stars": 3637, "forks": 555, "subscribers": 56, "open_issues": 5, "topics": ["natural-language-processing", "machine-learning", "visualization", "neural-network", "pytorch", "nlp", "bert", "transformer", "gpt2", "roberta", "transformers"]}, {"id": 105828839, "repo_name": "PyTorchZeroToAll", "full_name": "hunkim/PyTorchZeroToAll", "description": "Simple PyTorch Tutorials Zero to ALL!", "created": "2017-10-04 23:14:04", "language": "Python", "type": "User", "username": "hunkim", "stars": 3625, "forks": 1184, "subscribers": 151, "open_issues": 30, "topics": ["deeplearning", "pytorch", "python", "tutorial", "basic"]}, {"id": 160367888, "repo_name": "PyTorch_Tutorial", "full_name": "TingsongYu/PyTorch_Tutorial", "description": "\u300aPytorch\u6a21\u578b\u8bad\u7ec3\u5b9e\u7528\u6559\u7a0b\u300b\u4e2d\u914d\u5957\u4ee3\u7801", "created": "2018-12-04 14:12:31", "language": "Python", "type": "User", "username": "TingsongYu", "stars": 3599, "forks": 1140, "subscribers": 73, "open_issues": 20, "topics": []}, {"id": 172426938, "repo_name": "deep-high-resolution-net.pytorch", "full_name": "leoxiaobin/deep-high-resolution-net.pytorch", "description": "The project is an official implementation of our CVPR2019 paper \"Deep High-Resolution Representation Learning for Human Pose Estimation\"", "created": "2019-02-25 03:21:43", "language": "Cuda", "type": "User", "username": "leoxiaobin", "stars": 3595, "forks": 829, "subscribers": 78, "open_issues": 181, "topics": ["human-pose-estimation", "deep-learning", "coco-keypoints-detection", "mpii-dataset", "mpii", "mscoco-keypoint", "deep-high-resolution-net", "high-resolution-net"]}, {"id": 141286594, "repo_name": "pytorch-seq2seq", "full_name": "bentrevett/pytorch-seq2seq", "description": "Tutorials on implementing a few sequence-to-sequence (seq2seq) models with PyTorch and TorchText.", "created": "2018-07-17 12:26:59", "language": "Jupyter Notebook", "type": "User", "username": "bentrevett", "stars": 3592, "forks": 984, "subscribers": 65, "open_issues": 41, "topics": ["pytorch", "seq2seq", "sequence-to-sequence", "tutorial", "rnn", "gru", "lstm", "torchtext", "pytorch-tutorial", "pytorch-implmention", "encoder-decoder", "encoder-decoder-model", "neural-machine-translation", "pytorch-seq2seq", "attention", "transformer", "cnn-seq2seq", "pytorch-implementation", "pytorch-tutorials", "pytorch-nlp"]}, {"id": 211137351, "repo_name": "albert_zh", "full_name": "brightmart/albert_zh", "description": "A LITE BERT FOR SELF-SUPERVISED LEARNING OF LANGUAGE REPRESENTATIONS, \u6d77\u91cf\u4e2d\u6587\u9884\u8bad\u7ec3ALBERT\u6a21\u578b", "created": "2019-09-26 16:45:30", "language": "Python", "type": "User", "username": "brightmart", "stars": 3540, "forks": 729, "subscribers": 102, "open_issues": 95, "topics": ["albert", "bert", "roberta", "xlnet", "tensorflow", "pytorch", "pre-trained-model", "chinese-corpus", "pre-trained"]}, {"id": 138547383, "repo_name": "darts", "full_name": "quark0/darts", "description": "Differentiable architecture search for convolutional and recurrent networks", "created": "2018-06-25 05:27:29", "language": "Python", "type": "User", "username": "quark0", "stars": 3511, "forks": 787, "subscribers": 93, "open_issues": 89, "topics": ["deep-learning", "automl", "image-classification", "language-modeling", "pytorch", "convolutional-networks", "recurrent-networks", "neural-architecture-search"]}, {"id": 113670476, "repo_name": "simple-faster-rcnn-pytorch", "full_name": "chenyuntc/simple-faster-rcnn-pytorch", "description": "A simplified implemention of Faster R-CNN that replicate performance from origin paper", "created": "2017-12-09 13:13:54", "language": "Jupyter Notebook", "type": "User", "username": "chenyuntc", "stars": 3499, "forks": 1092, "subscribers": 54, "open_issues": 170, "topics": ["pytorch", "object-detection", "faster-rcnn", "voc", "visdom", "pythonic", "cupy"]}, {"id": 132042932, "repo_name": "tacotron2", "full_name": "NVIDIA/tacotron2", "description": "Tacotron 2 - PyTorch implementation with faster-than-realtime inference", "created": "2018-05-03 19:54:06", "language": "Jupyter Notebook", "type": "Organization", "username": "NVIDIA", "stars": 3435, "forks": 1034, "subscribers": 118, "open_issues": 143, "topics": []}, {"id": 116650018, "repo_name": "pytorch-doc-zh", "full_name": "apachecn/pytorch-doc-zh", "description": "Pytorch \u4e2d\u6587\u6587\u6863", "created": "2018-01-08 08:28:04", "language": "JavaScript", "type": "Organization", "username": "apachecn", "stars": 3428, "forks": 929, "subscribers": 89, "open_issues": 8, "topics": ["python", "pytorch", "deep-learning", "documentation"]}, {"id": 412151953, "repo_name": "interviews.ai", "full_name": "BoltzmannEntropy/interviews.ai", "description": "It is my belief that you, the postgraduate students and job-seekers for whom the book is primarily meant will benefit from reading it; however, it is my hope that even the most experienced researchers will find it fascinating as well.", "created": "2021-09-30 17:04:46", "language": null, "type": "User", "username": "BoltzmannEntropy", "stars": 3418, "forks": 250, "subscribers": 45, "open_issues": 4, "topics": ["data-science", "machine-learning", "deep-learning", "interview-preparation", "jobs", "artificial-intelligence", "pytorch-tutorial", "graduate-school", "pytorch", "python", "jax", "autograd", "information-theory", "bayesian-statistics", "convolutional-neural-networks", "ensemble-learning", "feature-extraction", "logistic-regression", "loss-functions"]}, {"id": 130704865, "repo_name": "pytorch-summary", "full_name": "sksq96/pytorch-summary", "description": "Model summary in PyTorch similar to `model.summary()` in Keras", "created": "2018-04-23 13:58:04", "language": "Python", "type": "User", "username": "sksq96", "stars": 3412, "forks": 392, "subscribers": 35, "open_issues": 123, "topics": ["pytorch", "keras", "summary", "deep-learning"]}, {"id": 267792621, "repo_name": "TNN", "full_name": "Tencent/TNN", "description": "TNN: developed by Tencent Youtu Lab and Guangying Lab, a uniform deep learning inference framework for mobile\u3001desktop and server. TNN is distinguished by several outstanding features, including its cross-platform capability, high performance, model compression and code pruning. Based on ncnn and Rapidnet, TNN further strengthens the support and performance optimization for mobile devices, and also draws on the advantages of good extensibility and high performance from existed open source efforts. TNN has been deployed in multiple Apps from Tencent, such as Mobile QQ, Weishi, Pitu, etc. Contributions are welcome to work in collaborative with us and make TNN a better framework. ", "created": "2020-05-29 07:20:28", "language": "C++", "type": "Organization", "username": "Tencent", "stars": 3383, "forks": 604, "subscribers": 90, "open_issues": 199, "topics": ["deep-learning", "mnn", "ncnn", "inference", "pytorch", "tensorflow", "coreml", "tensorrt", "tengine", "openvino", "face-detection", "hairsegmentaion", "ocr"]}, {"id": 114125096, "repo_name": "pytorch-sentiment-analysis", "full_name": "bentrevett/pytorch-sentiment-analysis", "description": "Tutorials on getting started with PyTorch and TorchText for sentiment analysis.", "created": "2017-12-13 13:36:40", "language": "Jupyter Notebook", "type": "User", "username": "bentrevett", "stars": 3319, "forks": 948, "subscribers": 90, "open_issues": 21, "topics": ["pytorch", "sentiment-analysis", "tutorial", "rnn", "lstm", "fasttext", "torchtext", "sentiment-classification", "cnn", "cnn-text-classification", "lstm-sentiment-analysis", "pytorch-tutorial", "pytorch-tutorials", "pytorch-nlp", "nlp", "natural-language-processing", "recurrent-neural-networks", "word-embeddings", "transformers", "bert"]}, {"id": 360066433, "repo_name": "dino", "full_name": "facebookresearch/dino", "description": "PyTorch code for Vision Transformers training with the Self-Supervised learning method DINO", "created": "2021-04-21 07:09:37", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 3301, "forks": 459, "subscribers": 67, "open_issues": 34, "topics": []}, {"id": 126685014, "repo_name": "Deep_reinforcement_learning_Course", "full_name": "simoninithomas/Deep_reinforcement_learning_Course", "description": "Implementations from the free course Deep Reinforcement Learning with Tensorflow and PyTorch", "created": "2018-03-25 10:08:52", "language": "Jupyter Notebook", "type": "User", "username": "simoninithomas", "stars": 3290, "forks": 1159, "subscribers": 138, "open_issues": 45, "topics": ["deep-reinforcement-learning", "qlearning", "deep-learning", "tensorflow-tutorials", "tensorflow", "ppo", "a2c", "actor-critic", "deep-q-network", "deep-q-learning", "pytorch", "unity"]}, {"id": 196299328, "repo_name": "Chinese-Text-Classification-Pytorch", "full_name": "649453932/Chinese-Text-Classification-Pytorch", "description": "\u4e2d\u6587\u6587\u672c\u5206\u7c7b\uff0cTextCNN\uff0cTextRNN\uff0cFastText\uff0cTextRCNN\uff0cBiLSTM_Attention\uff0cDPCNN\uff0cTransformer\uff0c\u57fa\u4e8epytorch\uff0c\u5f00\u7bb1\u5373\u7528\u3002", "created": "2019-07-11 01:38:08", "language": "Python", "type": "User", "username": "649453932", "stars": 3281, "forks": 905, "subscribers": 35, "open_issues": 48, "topics": []}, {"id": 119014048, "repo_name": "pytorch-OpCounter", "full_name": "Lyken17/pytorch-OpCounter", "description": "Count the MACs / FLOPs of your PyTorch model.", "created": "2018-01-26 06:20:22", "language": "Python", "type": "User", "username": "Lyken17", "stars": 3261, "forks": 408, "subscribers": 27, "open_issues": 49, "topics": []}, {"id": 272133018, "repo_name": "mmsegmentation", "full_name": "open-mmlab/mmsegmentation", "description": "OpenMMLab Semantic Segmentation Toolbox and Benchmark.", "created": "2020-06-14 04:32:33", "language": "Python", "type": "Organization", "username": "open-mmlab", "stars": 3247, "forks": 1122, "subscribers": 48, "open_issues": 144, "topics": ["semantic-segmentation", "pytorch", "pspnet", "deeplabv3", "transformer", "swin-transformer", "realtime-segmentation", "vessel-segmentation", "retinal-vessel-segmentation", "image-segmentation", "medical-image-segmentation"]}, {"id": 173733017, "repo_name": "SiamMask", "full_name": "foolwood/SiamMask", "description": "[CVPR2019] Fast Online Object Tracking and Segmentation: A Unifying Approach", "created": "2019-03-04 11:34:17", "language": "Python", "type": "User", "username": "foolwood", "stars": 3240, "forks": 804, "subscribers": 97, "open_issues": 149, "topics": ["visual-tracking", "video-object-segmentation", "read-time", "pytorch", "deep-learning", "cvpr2019", "computer-vision", "object-tracking"]}, {"id": 127577916, "repo_name": "dlwpt-code", "full_name": "deep-learning-with-pytorch/dlwpt-code", "description": "Code for the book Deep Learning with PyTorch by Eli Stevens, Luca Antiga, and Thomas Viehmann.", "created": "2018-03-31 22:58:20", "language": "Jupyter Notebook", "type": "Organization", "username": "deep-learning-with-pytorch", "stars": 3231, "forks": 1347, "subscribers": 101, "open_issues": 53, "topics": ["pytorch", "deep-learning", "deep-neural-networks", "python", "python3"]}, {"id": 175274189, "repo_name": "ALAE", "full_name": "podgorskiy/ALAE", "description": "[CVPR2020] Adversarial Latent Autoencoders ", "created": "2019-03-12 18:31:50", "language": "Python", "type": "User", "username": "podgorskiy", "stars": 3230, "forks": 532, "subscribers": 84, "open_issues": 35, "topics": ["generative-adversarial-network", "deep-learning", "autoencoder", "ffhq", "celeba", "celeba-hq", "stylegan", "alae", "neural-network", "generative-model", "gan", "face-generation", "pytorch", "pytorch-implementation", "python", "paper", "paper-implementations", "cvpr2020", "computer-vision", "machine-learning"]}, {"id": 103528129, "repo_name": "3D-ResNets-PyTorch", "full_name": "kenshohara/3D-ResNets-PyTorch", "description": "3D ResNets for Action Recognition (CVPR 2018)", "created": "2017-09-14 12:14:44", "language": "Python", "type": "User", "username": "kenshohara", "stars": 3222, "forks": 868, "subscribers": 58, "open_issues": 144, "topics": ["deep-learning", "computer-vision", "pytorch", "python", "action-recognition", "video-recognition"]}, {"id": 85873012, "repo_name": "pytorch-semseg", "full_name": "meetps/pytorch-semseg", "description": "Semantic Segmentation Architectures Implemented in PyTorch", "created": "2017-03-22 20:28:59", "language": "Python", "type": "User", "username": "meetps", "stars": 3199, "forks": 799, "subscribers": 106, "open_issues": 128, "topics": ["pytorch", "semantic-segmentation", "deep-learning", "fully-convolutional-networks"]}, {"id": 139158036, "repo_name": "3DDFA", "full_name": "cleardusk/3DDFA", "description": "The PyTorch improved version of TPAMI 2017 paper: Face Alignment in Full Pose Range: A 3D Total Solution.", "created": "2018-06-29 14:19:21", "language": "Python", "type": "User", "username": "cleardusk", "stars": 3192, "forks": 616, "subscribers": 120, "open_issues": 50, "topics": ["face-alignment", "pytorch", "python", "computer-vision", "deep-learning", "3d-face", "3d", "3dmm"]}, {"id": 279729856, "repo_name": "imaginaire", "full_name": "NVlabs/imaginaire", "description": "NVIDIA's Deep Imagination Team's PyTorch Library", "created": "2020-07-15 01:17:40", "language": "Python", "type": "Organization", "username": "NVlabs", "stars": 3190, "forks": 344, "subscribers": 104, "open_issues": 25, "topics": []}, {"id": 131979161, "repo_name": "Deep-Learning-in-Production", "full_name": "ahkarami/Deep-Learning-in-Production", "description": "In this repository, I will share some useful notes and references about deploying deep learning-based models in production.", "created": "2018-05-03 10:24:24", "language": null, "type": "User", "username": "ahkarami", "stars": 3188, "forks": 526, "subscribers": 132, "open_issues": 4, "topics": ["deep-learning", "deep-neural-networks", "python", "pytorch", "tesnorflow", "keras", "mxnet", "caffe2", "production", "serving", "c-plus-plus", "model-serving", "tutorial", "flask", "rest-api", "react", "serving-pytorch-models", "convert-pytorch-models", "angularjs", "tensorflow-models"]}, {"id": 124800162, "repo_name": "deep-person-reid", "full_name": "KaiyangZhou/deep-person-reid", "description": "Torchreid: Deep learning person re-identification in PyTorch.", "created": "2018-03-11 21:14:39", "language": "Python", "type": "User", "username": "KaiyangZhou", "stars": 3186, "forks": 910, "subscribers": 104, "open_issues": 80, "topics": ["deep-learning", "pytorch", "computer-vision", "machine-learning", "deep-neural-networks", "person-reidentification", "person-reid", "image-retrieval", "re-ranking", "metric-learning", "cross-domain"]}, {"id": 124968184, "repo_name": "pytorch-template", "full_name": "victoresque/pytorch-template", "description": "PyTorch deep learning projects made easy.", "created": "2018-03-13 00:21:14", "language": "Python", "type": "User", "username": "victoresque", "stars": 3173, "forks": 788, "subscribers": 56, "open_issues": 16, "topics": []}, {"id": 183790380, "repo_name": "torch2trt", "full_name": "NVIDIA-AI-IOT/torch2trt", "description": "An easy to use PyTorch to TensorRT converter", "created": "2019-04-27 15:30:56", "language": "Python", "type": "Organization", "username": "NVIDIA-AI-IOT", "stars": 3163, "forks": 541, "subscribers": 74, "open_issues": 430, "topics": ["jetson-nano", "jetson-tx2", "jetson-xavier", "pytorch", "tensorrt", "inference", "classification"]}, {"id": 128474296, "repo_name": "pytorch-yolo-v3", "full_name": "ayooshkathuria/pytorch-yolo-v3", "description": "A PyTorch implementation of the YOLO v3 object detection algorithm", "created": "2018-04-06 21:55:48", "language": "Python", "type": "User", "username": "ayooshkathuria", "stars": 3159, "forks": 1055, "subscribers": 80, "open_issues": 107, "topics": ["yolov3", "yolo", "object-detection", "pytorch"]}, {"id": 339378016, "repo_name": "animegan2-pytorch", "full_name": "bryandlee/animegan2-pytorch", "description": "PyTorch implementation of AnimeGANv2", "created": "2021-02-16 11:34:21", "language": "Jupyter Notebook", "type": "User", "username": "bryandlee", "stars": 3150, "forks": 413, "subscribers": 50, "open_issues": 24, "topics": ["image2image", "style-transfer", "gan"]}, {"id": 184381881, "repo_name": "Awesome-PyTorch-Chinese", "full_name": "INTERMT/Awesome-PyTorch-Chinese", "description": "\u3010\u5e72\u8d27\u3011\u53f2\u4e0a\u6700\u5168\u7684PyTorch\u5b66\u4e60\u8d44\u6e90\u6c47\u603b", "created": "2019-05-01 07:16:27", "language": "Python", "type": "User", "username": "INTERMT", "stars": 3143, "forks": 722, "subscribers": 97, "open_issues": 2, "topics": ["pytroch", "awesome", "deep-learning", "neural-network"]}, {"id": 193652854, "repo_name": "byteps", "full_name": "bytedance/byteps", "description": "A high performance and generic framework for distributed DNN training", "created": "2019-06-25 07:00:13", "language": "Python", "type": "Organization", "username": "bytedance", "stars": 3089, "forks": 440, "subscribers": 81, "open_issues": 101, "topics": ["machine-learning", "deep-learning", "distributed-training", "tensorflow", "mxnet", "keras", "pytorch"]}, {"id": 88418646, "repo_name": "deep-learning-model-convertor", "full_name": "ysh329/deep-learning-model-convertor", "description": "The convertor/conversion of deep learning models for different deep learning frameworks/softwares.", "created": "2017-04-16 14:28:41", "language": null, "type": "User", "username": "ysh329", "stars": 3075, "forks": 476, "subscribers": 125, "open_issues": 5, "topics": ["deep-learning", "model", "neural-network", "convertor", "model-convertor", "awesome-list", "deep-learning-framework", "tensorflow", "caffe", "pytorch", "mxnet", "keras", "torch", "caffe2"]}, {"id": 248087594, "repo_name": "moco", "full_name": "facebookresearch/moco", "description": "PyTorch implementation of MoCo: https://arxiv.org/abs/1911.05722", "created": "2020-03-17 22:42:11", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 3069, "forks": 570, "subscribers": 50, "open_issues": 37, "topics": []}, {"id": 250184708, "repo_name": "Machine-Learning-Collection", "full_name": "aladdinpersson/Machine-Learning-Collection", "description": "A resource for learning about ML, DL, PyTorch and TensorFlow. Feedback always appreciated :)", "created": "2020-03-26 07:02:40", "language": "Python", "type": "User", "username": "aladdinpersson", "stars": 3066, "forks": 1397, "subscribers": 67, "open_issues": 55, "topics": ["pytorch", "pytorch-implementation", "pytorch-tutorial", "pytorch-gan", "pytorch-examples", "tensorflow2", "tensorflow-tutorials", "tensorflow-examples", "machine-learning", "machine-learning-algorithms", "pytorch-tutorials"]}, {"id": 115712649, "repo_name": "Person_reID_baseline_pytorch", "full_name": "layumi/Person_reID_baseline_pytorch", "description": "Pytorch ReID: A tiny, friendly, strong pytorch implement of object re-identification baseline. Tutorial \ud83d\udc49https://github.com/layumi/Person_reID_baseline_pytorch/tree/master/tutorial", "created": "2017-12-29 10:22:41", "language": "Python", "type": "User", "username": "layumi", "stars": 3060, "forks": 872, "subscribers": 78, "open_issues": 108, "topics": ["open-reid", "pytorch", "person-reidentification", "image-retrieval", "person-reid", "re-ranking", "random-erasing", "image-search", "market-1501", "tutorial", "apex", "baseline", "msmt17", "cuhk-np", "vehicle-reid", "awesome-list", "gait-recognition", "circle-loss", "metric-learning", "object-reid"]}, {"id": 261372860, "repo_name": "stable-baselines3", "full_name": "DLR-RM/stable-baselines3", "description": "PyTorch version of Stable Baselines, reliable implementations of reinforcement learning algorithms. ", "created": "2020-05-05 05:52:26", "language": "Python", "type": "Organization", "username": "DLR-RM", "stars": 3032, "forks": 676, "subscribers": 54, "open_issues": 56, "topics": ["reinforcement-learning", "reinforcement-learning-algorithms", "machine-learning", "gym", "openai", "baselines", "toolbox", "stable-baselines", "python", "pytorch", "robotics", "sde", "gsde", "sb3"]}, {"id": 97159209, "repo_name": "Artificial-Intelligence-Deep-Learning-Machine-Learning-Tutorials", "full_name": "TarrySingh/Artificial-Intelligence-Deep-Learning-Machine-Learning-Tutorials", "description": "A comprehensive list of Deep Learning / Artificial Intelligence and Machine Learning tutorials - rapidly expanding into areas of AI/Deep Learning / Machine Vision / NLP and industry specific areas such as Climate / Energy, Automotives, Retail, Pharma, Medicine, Healthcare, Policy, Ethics and more.", "created": "2017-07-13 19:46:01", "language": "Python", "type": "User", "username": "TarrySingh", "stars": 3032, "forks": 1499, "subscribers": 320, "open_issues": 111, "topics": ["machine-learning", "deep-learning", "tensorflow", "python", "pytorch", "keras", "lua", "matplotlib", "aws", "kaggle", "pandas", "scikit-learn", "torch", "artificial-intelligence", "neural-network", "convolutional-neural-networks", "tensorflow-tutorials", "python-data", "ipython-notebook", "capsule-network"]}, {"id": 77383688, "repo_name": "polyaxon", "full_name": "polyaxon/polyaxon", "description": "Machine Learning Management & Orchestration Platform (Monorepo for Polyaxon's MLOps Tools)", "created": "2016-12-26 12:48:47", "language": "Python", "type": "Organization", "username": "polyaxon", "stars": 3024, "forks": 302, "subscribers": 77, "open_issues": 112, "topics": ["deep-learning", "machine-learning", "artificial-intelligence", "data-science", "reinforcement-learning", "kubernetes", "tensorflow", "pytorch", "keras", "mxnet", "caffe", "ml", "k8s", "jupyter", "notebook", "jupyterlab", "pipelines", "workflow", "mlops", "hyperparameter-optimization"]}, {"id": 202940640, "repo_name": "SinGAN", "full_name": "tamarott/SinGAN", "description": "Official pytorch implementation of the paper: \"SinGAN: Learning a Generative Model from a Single Natural Image\"", "created": "2019-08-17 23:37:07", "language": "Python", "type": "User", "username": "tamarott", "stars": 3020, "forks": 580, "subscribers": 66, "open_issues": 94, "topics": ["singan", "gan", "official", "single-image", "harmonization", "animation", "single-image-animation", "single-image-generation", "image-edit", "arbitrery-sizes", "single-image-super-resolution", "super-resolution"]}, {"id": 151156413, "repo_name": "PyTorch-BigGraph", "full_name": "facebookresearch/PyTorch-BigGraph", "description": "Generate embeddings from large-scale graph-structured data.", "created": "2018-10-01 20:41:16", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 3007, "forks": 415, "subscribers": 91, "open_issues": 48, "topics": []}, {"id": 204734444, "repo_name": "captum", "full_name": "pytorch/captum", "description": "Model interpretability and understanding for PyTorch", "created": "2019-08-27 15:34:41", "language": "Python", "type": "Organization", "username": "pytorch", "stars": 2976, "forks": 321, "subscribers": 196, "open_issues": 85, "topics": ["interpretability", "interpretable-ai", "interpretable-ml", "feature-importance", "feature-attribution"]}, {"id": 233044521, "repo_name": "PyTorch-VAE", "full_name": "AntixK/PyTorch-VAE", "description": "A Collection of Variational Autoencoders (VAE) in PyTorch.", "created": "2020-01-10 12:41:23", "language": "Python", "type": "User", "username": "AntixK", "stars": 2973, "forks": 602, "subscribers": 33, "open_issues": 21, "topics": ["pytorch", "pytorch-implementation", "vae", "vae-implementation", "deep-learning", "reproducible-research", "paper-implementations", "pytorch-vae", "variational-autoencoders", "architecture", "beta-vae", "vqvae", "gumbel-softmax", "celeba-dataset", "iwae", "wae", "dfc-vae"]}, {"id": 130259654, "repo_name": "BasicSR", "full_name": "xinntao/BasicSR", "description": "Open Source Image and Video Restoration Toolbox for Super-resolution, Denoise, Deblurring, etc. Currently, it includes EDSR, RCAN, SRResNet, SRGAN, ESRGAN, EDVR, BasicVSR, SwinIR, ECBSR, etc. Also support StyleGAN2, DFDNet.", "created": "2018-04-19 18:58:00", "language": "Python", "type": "User", "username": "xinntao", "stars": 2965, "forks": 689, "subscribers": 74, "open_issues": 191, "topics": ["basicsr", "esrgan", "edsr", "rcan", "edvr", "srresnet", "srgan", "super-resolution", "restoration", "pytorch", "stylegan2", "dfdnet", "basicvsr", "swinir", "ecbsr"]}, {"id": 247528876, "repo_name": "ResNeSt", "full_name": "zhanghang1989/ResNeSt", "description": "ResNeSt: Split-Attention Networks", "created": "2020-03-15 18:42:11", "language": "Python", "type": "User", "username": "zhanghang1989", "stars": 2964, "forks": 479, "subscribers": 55, "open_issues": 53, "topics": ["deep-learning", "resnet", "resnest", "pytorch", "detectron-models", "split-attention-networks"]}, {"id": 76210069, "repo_name": "text", "full_name": "pytorch/text", "description": "Data loaders and abstractions for text and NLP", "created": "2016-12-12 00:56:03", "language": "Python", "type": "Organization", "username": "pytorch", "stars": 2954, "forks": 698, "subscribers": 250, "open_issues": 321, "topics": ["nlp", "data-loader", "deep-learning", "pytorch", "dataset"]}, {"id": 275342509, "repo_name": "eat_pytorch_in_20_days", "full_name": "lyhue1991/eat_pytorch_in_20_days", "description": "Pytorch\ud83c\udf4a\ud83c\udf49   is delicious, just eat it! \ud83d\ude0b\ud83d\ude0b", "created": "2020-06-27 09:48:13", "language": "Python", "type": "User", "username": "lyhue1991", "stars": 2935, "forks": 759, "subscribers": 50, "open_issues": 18, "topics": ["pytorch", "tensorflow2-pytorch"]}, {"id": 435653386, "repo_name": "mae", "full_name": "facebookresearch/mae", "description": "PyTorch implementation of MAE https//arxiv.org/abs/2111.06377", "created": "2021-12-06 21:29:09", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 2919, "forks": 354, "subscribers": 53, "open_issues": 18, "topics": []}, {"id": 221787282, "repo_name": "kaolin", "full_name": "NVIDIAGameWorks/kaolin", "description": "A PyTorch Library for Accelerating 3D Deep Learning Research", "created": "2019-11-14 21:09:40", "language": "Python", "type": "Organization", "username": "NVIDIAGameWorks", "stars": 2877, "forks": 408, "subscribers": 110, "open_issues": 118, "topics": ["pytorch", "3d-deep-learning", "neural-networks", "differentiable-rendering", "artificial-intelligence", "model-zoo"]}, {"id": 180512165, "repo_name": "FCOS", "full_name": "tianzhi0549/FCOS", "description": "FCOS: Fully Convolutional One-Stage Object Detection (ICCV'19)", "created": "2019-04-10 05:59:14", "language": "Python", "type": "User", "username": "tianzhi0549", "stars": 2873, "forks": 572, "subscribers": 56, "open_issues": 193, "topics": ["fcos", "object-detection", "one-stage", "anchor-free", "pytorch", "computer-vision", "iccv2019"]}, {"id": 145385156, "repo_name": "catalyst", "full_name": "catalyst-team/catalyst", "description": "Accelerated deep learning R&D", "created": "2018-08-20 07:56:13", "language": "Python", "type": "Organization", "username": "catalyst-team", "stars": 2855, "forks": 354, "subscribers": 47, "open_issues": 3, "topics": ["deep-learning", "reinforcement-learning", "machine-learning", "computer-vision", "pytorch", "python", "distributed-computing", "infrastructure", "research", "reproducibility", "image-processing", "image-classification", "image-segmentation", "object-detection", "natural-language-processing", "text-classification", "text-segmentation", "information-retrieval", "recommender-system", "metric-learning"]}, {"id": 184593965, "repo_name": "monodepth2", "full_name": "nianticlabs/monodepth2", "description": "[ICCV 2019] Monocular depth estimation from a single image", "created": "2019-05-02 14:17:17", "language": "Jupyter Notebook", "type": "Organization", "username": "nianticlabs", "stars": 2854, "forks": 728, "subscribers": 63, "open_issues": 33, "topics": ["depth-estimation", "neural-network", "deep-learning", "self-supervision", "pytorch", "monodepth", "computer-vision"]}, {"id": 401446691, "repo_name": "lama", "full_name": "saic-mdal/lama", "description": "\ud83e\udd99  LaMa Image Inpainting, Resolution-robust Large Mask Inpainting with Fourier Convolutions, WACV 2022", "created": "2021-08-30 18:27:52", "language": "Jupyter Notebook", "type": "Organization", "username": "saic-mdal", "stars": 2811, "forks": 274, "subscribers": 49, "open_issues": 23, "topics": ["inpainting", "inpainting-methods", "inpainting-algorithm", "computer-vision", "cnn", "deep-learning", "deep-neural-networks", "image-inpainting", "fourier", "fourier-transform", "fourier-convolutions", "colab-notebook", "colab", "high-resolution", "generative-adversarial-network", "gan", "generative-adversarial-networks", "pytorch"]}, {"id": 120733396, "repo_name": "Detectron.pytorch", "full_name": "roytseng-tw/Detectron.pytorch", "description": "A pytorch implementation of Detectron. Both training from scratch and inferring directly from pretrained Detectron weights are available.", "created": "2018-02-08 08:32:01", "language": "Python", "type": "User", "username": "roytseng-tw", "stars": 2810, "forks": 579, "subscribers": 78, "open_issues": 124, "topics": ["mask-rcnn", "pytorch", "detection", "pose-estimation", "segmentation", "detectron"]}, {"id": 232876381, "repo_name": "stylegan2-pytorch", "full_name": "lucidrains/stylegan2-pytorch", "description": "Simplest working implementation of Stylegan2, state of the art generative adversarial network, in Pytorch. Enabling everyone to experience disentanglement", "created": "2020-01-09 18:23:31", "language": "Python", "type": "User", "username": "lucidrains", "stars": 2810, "forks": 473, "subscribers": 64, "open_issues": 112, "topics": ["generative-adversarial-network", "artificial-intelligence", "pytorch", "machine-learning", "generative-model"]}, {"id": 133867923, "repo_name": "nlp-architect", "full_name": "IntelLabs/nlp-architect", "description": "A model library for exploring state-of-the-art deep learning topologies and techniques for optimizing Natural Language Processing neural networks", "created": "2018-05-17 21:00:13", "language": "Python", "type": "Organization", "username": "IntelLabs", "stars": 2804, "forks": 449, "subscribers": 168, "open_issues": 21, "topics": ["deeplearning", "nlp", "nlu", "tensorflow", "dynet", "deep-learning", "pytorch", "bert", "transformers", "quantization"]}, {"id": 164046740, "repo_name": "face.evoLVe", "full_name": "ZhaoJ9014/face.evoLVe", "description": "\ud83d\udd25\ud83d\udd25High-Performance Face Recognition Library on PaddlePaddle & PyTorch\ud83d\udd25\ud83d\udd25", "created": "2019-01-04 02:22:17", "language": "Python", "type": "User", "username": "ZhaoJ9014", "stars": 2796, "forks": 690, "subscribers": 113, "open_issues": 75, "topics": ["pytorch", "face-recognition", "face-detection", "face-alignment", "face-landmark-detection", "model-training", "feature-extraction", "fine-tuning", "data-augmentation", "deep-learning", "computer-vision", "imbalanced-learning", "transfer-learning", "hard-negative-mining", "supervised-learning", "nus", "tencent", "convolutional-neural-network", "machine-learning", "artificial-intelligence"]}, {"id": 225813090, "repo_name": "stargan-v2", "full_name": "clovaai/stargan-v2", "description": "StarGAN v2 - Official PyTorch Implementation (CVPR 2020)", "created": "2019-12-04 08:08:28", "language": "Python", "type": "Organization", "username": "clovaai", "stars": 2789, "forks": 528, "subscribers": 89, "open_issues": 78, "topics": ["pytorch", "image-to-image-translation", "generative-models", "stargan-v2", "cvpr2020"]}, {"id": 100433896, "repo_name": "DeepNLP-models-Pytorch", "full_name": "DSKSD/DeepNLP-models-Pytorch", "description": "Pytorch implementations of various Deep NLP models in cs-224n(Stanford Univ)", "created": "2017-08-16 01:22:16", "language": "Jupyter Notebook", "type": "User", "username": "DSKSD", "stars": 2787, "forks": 663, "subscribers": 116, "open_issues": 11, "topics": ["pytorch", "nlp", "deep-nlp-models", "stanford-univ", "rnn", "neural-network", "deep-learning", "cs-224n", "natural-language-processing"]}, {"id": 203999962, "repo_name": "mmediting", "full_name": "open-mmlab/mmediting", "description": "OpenMMLab Image and Video Editing Toolbox", "created": "2019-08-23 13:04:29", "language": "Python", "type": "Organization", "username": "open-mmlab", "stars": 2772, "forks": 538, "subscribers": 80, "open_issues": 73, "topics": ["super-resolution", "inpainting", "matting", "image-generation", "generative-adversarial-network", "pytorch"]}, {"id": 214485001, "repo_name": "MONAI", "full_name": "Project-MONAI/MONAI", "description": "AI Toolkit for Healthcare Imaging", "created": "2019-10-11 16:41:38", "language": "Python", "type": "Organization", "username": "Project-MONAI", "stars": 2767, "forks": 539, "subscribers": 81, "open_issues": 154, "topics": ["healthcare-imaging", "deep-learning", "medical-image-computing", "medical-image-processing", "pytorch", "python3", "monai"]}, {"id": 246924744, "repo_name": "hummingbird", "full_name": "microsoft/hummingbird", "description": "Hummingbird compiles trained ML models into tensor computation for faster inference.", "created": "2020-03-12 20:27:03", "language": "Python", "type": "Organization", "username": "microsoft", "stars": 2758, "forks": 214, "subscribers": 48, "open_issues": 52, "topics": ["machine-learning", "neural-networks", "scikit-learn", "pytorch", "tensor-computation"]}, {"id": 163100923, "repo_name": "Super-SloMo", "full_name": "avinashpaliwal/Super-SloMo", "description": "PyTorch implementation of Super SloMo by Jiang et al.", "created": "2018-12-25 17:34:17", "language": "Python", "type": "User", "username": "avinashpaliwal", "stars": 2750, "forks": 456, "subscribers": 103, "open_issues": 26, "topics": ["video-frame-interpolation", "super-slomo", "pytorch-implmention", "pytorch", "slow-motion", "deep-learning", "deep-neural-networks", "convolutional-neural-networks", "frame-interpolation", "slomo"]}, {"id": 76768630, "repo_name": "deep-learning-book", "full_name": "rasbt/deep-learning-book", "description": "Repository for \"Introduction to Artificial Neural Networks and Deep Learning: A Practical Guide with Applications in Python\"", "created": "2016-12-18 07:15:40", "language": "Jupyter Notebook", "type": "User", "username": "rasbt", "stars": 2716, "forks": 764, "subscribers": 214, "open_issues": 2, "topics": ["deep-learning", "neural-network", "machine-learning", "python", "tensorflow", "artificial-intelligence", "data-science", "pytorch"]}, {"id": 101081298, "repo_name": "pytorch-a2c-ppo-acktr-gail", "full_name": "ikostrikov/pytorch-a2c-ppo-acktr-gail", "description": "PyTorch implementation of Advantage Actor Critic (A2C), Proximal Policy Optimization (PPO), Scalable trust-region method for deep reinforcement learning using Kronecker-factored approximation (ACKTR) and Generative Adversarial Imitation Learning (GAIL).", "created": "2017-08-22 15:57:25", "language": "Python", "type": "User", "username": "ikostrikov", "stars": 2706, "forks": 732, "subscribers": 65, "open_issues": 84, "topics": ["pytorch", "reinforcement-learning", "deep-learning", "deep-reinforcement-learning", "actor-critic", "advantage-actor-critic", "a2c", "ppo", "proximal-policy-optimization", "acktr", "second-order", "hessian", "natural-gradients", "atari", "mujoco", "roboschool", "continuous-control", "kfac", "kronecker-factored-approximation", "ale"]}, {"id": 188506754, "repo_name": "facenet-pytorch", "full_name": "timesler/facenet-pytorch", "description": "Pretrained Pytorch face detection (MTCNN) and facial recognition (InceptionResnet) models", "created": "2019-05-25 01:29:24", "language": "Python", "type": "User", "username": "timesler", "stars": 2699, "forks": 598, "subscribers": 40, "open_issues": 58, "topics": ["pytorch", "resnet", "inception-resnet", "face-recognition", "face-identification", "face-tracking", "mtcnn", "pretrained-models", "face-detection", "facial-recognition"]}, {"id": 112687645, "repo_name": "alpha-zero-general", "full_name": "suragnair/alpha-zero-general", "description": "A clean implementation based on AlphaZero for any game in any framework + tutorial + Othello/Gobang/TicTacToe/Connect4 and more", "created": "2017-12-01 02:55:15", "language": "Jupyter Notebook", "type": "User", "username": "suragnair", "stars": 2696, "forks": 777, "subscribers": 103, "open_issues": 43, "topics": ["tensorflow", "pytorch", "keras", "gobang", "gomoku", "alpha-zero", "alphago-zero", "alphago", "reinforcement-learning", "self-play", "mcts", "monte-carlo-tree-search", "othello", "tf", "deep-learning", "alphazero", "chainer"]}, {"id": 93868719, "repo_name": "gpytorch", "full_name": "cornellius-gp/gpytorch", "description": "A highly efficient and modular implementation of Gaussian Processes in PyTorch", "created": "2017-06-09 14:48:20", "language": "Python", "type": "Organization", "username": "cornellius-gp", "stars": 2694, "forks": 412, "subscribers": 54, "open_issues": 271, "topics": ["pytorch", "gaussian-processes", "gpu-acceleration"]}, {"id": 88905488, "repo_name": "DeepRL", "full_name": "ShangtongZhang/DeepRL", "description": "Modularized Implementation of Deep RL Algorithms in PyTorch", "created": "2017-04-20 19:59:53", "language": "Python", "type": "User", "username": "ShangtongZhang", "stars": 2679, "forks": 606, "subscribers": 89, "open_issues": 5, "topics": ["pytorch", "deep-reinforcement-learning", "dqn", "dueling-network-architecture", "double-dqn", "deeprl", "ddpg", "ppo", "categorical-dqn", "option-critic", "quantile-regression", "td3", "a2c", "option-critic-architecture", "prioritized-experience-replay", "rainbow"]}, {"id": 95379459, "repo_name": "spotlight", "full_name": "maciejkula/spotlight", "description": "Deep recommender models using PyTorch.", "created": "2017-06-25 18:52:19", "language": "Python", "type": "User", "username": "maciejkula", "stars": 2666, "forks": 404, "subscribers": 111, "open_issues": 71, "topics": ["recommender-system", "deep-learning", "learning-to-rank", "python", "machine-learning", "matrix-factorization", "pytorch"]}, {"id": 90811441, "repo_name": "pytorch-beginner", "full_name": "L1aoXingyu/pytorch-beginner", "description": "pytorch tutorial for beginners", "created": "2017-05-10 02:18:22", "language": "Python", "type": "User", "username": "L1aoXingyu", "stars": 2646, "forks": 1038, "subscribers": 73, "open_issues": 19, "topics": ["pytorch-tutorial", "pytorch"]}, {"id": 129524821, "repo_name": "CHINESE-OCR", "full_name": "xiaofengShi/CHINESE-OCR", "description": "[python3.6] \u8fd0\u7528tf\u5b9e\u73b0\u81ea\u7136\u573a\u666f\u6587\u5b57\u68c0\u6d4b,keras/pytorch\u5b9e\u73b0ctpn+crnn+ctc\u5b9e\u73b0\u4e0d\u5b9a\u957f\u573a\u666f\u6587\u5b57OCR\u8bc6\u522b", "created": "2018-04-14 14:32:16", "language": "Python", "type": "User", "username": "xiaofengShi", "stars": 2613, "forks": 948, "subscribers": 92, "open_issues": 147, "topics": ["pytorch-crnn", "keras-crnn", "tensorflow", "ocr", "lstm-ctc", "ctpn"]}, {"id": 114990078, "repo_name": "AlphaZero_Gomoku", "full_name": "junxiaosong/AlphaZero_Gomoku", "description": "An implementation of the AlphaZero algorithm for Gomoku (also called Gobang or Five in a Row) ", "created": "2017-12-21 09:49:40", "language": "Python", "type": "User", "username": "junxiaosong", "stars": 2612, "forks": 845, "subscribers": 101, "open_issues": 67, "topics": ["alphazero", "mcts", "alphago-zero", "gomoku", "gobang", "monte-carlo-tree-search", "alphago", "reinforcement-learning", "rl", "theano", "lasagne", "board-game", "self-learning", "pytorch", "tensorflow"]}, {"id": 124146367, "repo_name": "siamese-triplet", "full_name": "adambielski/siamese-triplet", "description": "Siamese and triplet networks with online pair/triplet mining in PyTorch", "created": "2018-03-06 22:25:41", "language": "Python", "type": "User", "username": "adambielski", "stars": 2600, "forks": 560, "subscribers": 48, "open_issues": 18, "topics": ["machine-learning", "deep-learning", "siamese-network", "triplet-loss", "contrastive-loss", "pytorch", "embedding", "triplet-network", "learning-embeddings"]}, {"id": 111462767, "repo_name": "flownet2-pytorch", "full_name": "NVIDIA/flownet2-pytorch", "description": "Pytorch implementation of FlowNet 2.0: Evolution of Optical Flow Estimation with Deep Networks", "created": "2017-11-20 21:05:31", "language": "Python", "type": "Organization", "username": "NVIDIA", "stars": 2572, "forks": 650, "subscribers": 52, "open_issues": 145, "topics": []}, {"id": 95862535, "repo_name": "coremltools", "full_name": "apple/coremltools", "description": "Core ML tools contain supporting tools for Core ML model conversion, editing, and validation.", "created": "2017-06-30 07:39:02", "language": "Python", "type": "Organization", "username": "apple", "stars": 2570, "forks": 400, "subscribers": 99, "open_issues": 328, "topics": ["coremltools", "tensorflow", "pytorch", "coreml", "machine-learning", "model-converter", "model-conversion"]}, {"id": 168776578, "repo_name": "XLM", "full_name": "facebookresearch/XLM", "description": "PyTorch original implementation of Cross-lingual Language Model Pretraining.", "created": "2019-02-02 00:15:33", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 2566, "forks": 447, "subscribers": 57, "open_issues": 118, "topics": []}, {"id": 126627662, "repo_name": "RL-Adventure", "full_name": "higgsfield/RL-Adventure", "description": "Pytorch Implementation of DQN / DDQN / Prioritized replay/ noisy networks/ distributional values/ Rainbow/ hierarchical RL", "created": "2018-03-24 18:18:11", "language": "Jupyter Notebook", "type": "User", "username": "higgsfield", "stars": 2555, "forks": 540, "subscribers": 76, "open_issues": 16, "topics": []}, {"id": 116697549, "repo_name": "chatbot", "full_name": "zhaoyingjun/chatbot", "description": "\u4e00\u4e2a\u53ef\u4ee5\u81ea\u5df1\u8fdb\u884c\u8bad\u7ec3\u7684\u4e2d\u6587\u804a\u5929\u673a\u5668\u4eba\uff0c \u6839\u636e\u81ea\u5df1\u7684\u8bed\u6599\u8bad\u7ec3\u51fa\u81ea\u5df1\u60f3\u8981\u7684\u804a\u5929\u673a\u5668\u4eba\uff0c\u53ef\u4ee5\u7528\u4e8e\u667a\u80fd\u5ba2\u670d\u3001\u5728\u7ebf\u95ee\u7b54\u3001\u667a\u80fd\u804a\u5929\u7b49\u573a\u666f\u3002\u76ee\u524d\u5305\u542bseq2seq\u3001seqGAN\u7248\u672c\u3001tf2.0\u7248\u672c\u3001pytorch\u7248\u672c\u3002", "created": "2018-01-08 16:00:08", "language": "Python", "type": "User", "username": "zhaoyingjun", "stars": 2546, "forks": 873, "subscribers": 101, "open_issues": 65, "topics": ["chatbot", "ai", "nlp-machine-learning", "python", "seqgan-tensorflow", "seq2seq-chatbot", "tensorflow2", "seqgan", "pytorch"]}, {"id": 89074562, "repo_name": "pytorch-cifar100", "full_name": "weiaicunzai/pytorch-cifar100", "description": "Practice on cifar100(ResNet, DenseNet, VGG, GoogleNet, InceptionV3, InceptionV4, Inception-ResNetv2, Xception, Resnet In Resnet, ResNext,ShuffleNet, ShuffleNetv2, MobileNet, MobileNetv2, SqueezeNet, NasNet, Residual Attention Network, SENet, WideResNet)", "created": "2017-04-22 14:11:57", "language": "Python", "type": "User", "username": "weiaicunzai", "stars": 2535, "forks": 831, "subscribers": 28, "open_issues": 39, "topics": ["pytorch", "image-classification", "deep-learning", "cifar100", "resnet", "googlenet", "inceptionv4", "xception", "resnext", "inceptionv3", "inception-resnet-v2", "densenet", "shufflenet", "mobilenet", "squeezenet", "nasnet", "wideresnet"]}, {"id": 223357324, "repo_name": "CLUE", "full_name": "CLUEbenchmark/CLUE", "description": "\u4e2d\u6587\u8bed\u8a00\u7406\u89e3\u6d4b\u8bc4\u57fa\u51c6 Chinese Language Understanding Evaluation Benchmark: datasets, baselines, pre-trained models, corpus and leaderboard  ", "created": "2019-11-22 08:25:02", "language": "Python", "type": "Organization", "username": "CLUEbenchmark", "stars": 2535, "forks": 429, "subscribers": 82, "open_issues": 47, "topics": ["nlu", "benchmark", "chinese", "corpus", "dataset", "bert", "albert", "chineseglue", "glue", "roberta", "language-model", "pretrained-models", "transformers", "tensorflow", "pytorch"]}, {"id": 143120668, "repo_name": "human-pose-estimation.pytorch", "full_name": "microsoft/human-pose-estimation.pytorch", "description": "The project is an official implement of our ECCV2018 paper  \"Simple Baselines for Human Pose Estimation and Tracking(https://arxiv.org/abs/1804.06208)\"", "created": "2018-08-01 07:35:15", "language": "Python", "type": "Organization", "username": "microsoft", "stars": 2531, "forks": 552, "subscribers": 77, "open_issues": 88, "topics": ["human-pose-estimation", "deep-learning", "coco-keypoints-detection", "mpii-dataset", "mscoco-keypoint"]}, {"id": 121592531, "repo_name": "ENAS-pytorch", "full_name": "carpedm20/ENAS-pytorch", "description": "PyTorch implementation of \"Efficient Neural Architecture Search via Parameters Sharing\"", "created": "2018-02-15 04:54:37", "language": "Python", "type": "User", "username": "carpedm20", "stars": 2530, "forks": 473, "subscribers": 113, "open_issues": 37, "topics": ["pytorch", "neural-architecture-search", "google-brain"]}, {"id": 166696954, "repo_name": "BigGAN-PyTorch", "full_name": "ajbrock/BigGAN-PyTorch", "description": "The author's officially unofficial PyTorch BigGAN implementation.", "created": "2019-01-20 18:50:49", "language": "Python", "type": "User", "username": "ajbrock", "stars": 2514, "forks": 443, "subscribers": 52, "open_issues": 40, "topics": ["biggan", "pytorch", "deep-learning", "neural-networks", "gans", "dogball"]}, {"id": 137429940, "repo_name": "pytorch-deeplab-xception", "full_name": "jfzhang95/pytorch-deeplab-xception", "description": "DeepLab v3+ model in PyTorch. Support different backbones.", "created": "2018-06-15 02:07:37", "language": "Python", "type": "User", "username": "jfzhang95", "stars": 2510, "forks": 750, "subscribers": 46, "open_issues": 118, "topics": ["deeplab-v3-plus", "pytorch", "xception", "resnet", "mobilenetv2", "drn"]}, {"id": 96111593, "repo_name": "neuralcoref", "full_name": "huggingface/neuralcoref", "description": "\u2728Fast Coreference Resolution in spaCy with Neural Networks", "created": "2017-07-03 13:04:16", "language": "C", "type": "Organization", "username": "huggingface", "stars": 2490, "forks": 435, "subscribers": 92, "open_issues": 49, "topics": ["python", "machine-learning", "coreference", "spacy", "coreference-resolution", "spacy-extension", "spacy-pipeline", "nlp", "neural-networks", "pytorch"]}, {"id": 140285687, "repo_name": "imgclsmob", "full_name": "osmr/imgclsmob", "description": "Sandbox for training deep learning networks", "created": "2018-07-09 12:57:46", "language": "Python", "type": "User", "username": "osmr", "stars": 2487, "forks": 499, "subscribers": 75, "open_issues": 6, "topics": ["machine-learning", "deep-learning", "mxnet", "gluon", "pytorch", "classification", "imagenet", "neural-network", "image-classification", "chainer", "keras", "tensorflow", "pretrained-models", "cifar", "segmentation", "tensorflow2", "semantic-segmentation", "human-pose-estimation", "3d-face-reconstruction"]}, {"id": 161311113, "repo_name": "practicalAI-cn", "full_name": "MLEveryday/practicalAI-cn", "description": "AI\u5b9e\u6218-practicalAI \u4e2d\u6587\u7248", "created": "2018-12-11 09:40:16", "language": "Jupyter Notebook", "type": "Organization", "username": "MLEveryday", "stars": 2479, "forks": 632, "subscribers": 153, "open_issues": 6, "topics": ["machine-learning", "jupyter-notebook", "pytorch", "google-colab-notebook", "deep-learning"]}, {"id": 153490452, "repo_name": "a-PyTorch-Tutorial-to-Object-Detection", "full_name": "sgrvinod/a-PyTorch-Tutorial-to-Object-Detection", "description": "SSD: Single Shot MultiBox Detector | a PyTorch Tutorial to Object Detection", "created": "2018-10-17 16:39:03", "language": "Python", "type": "User", "username": "sgrvinod", "stars": 2478, "forks": 620, "subscribers": 45, "open_issues": 55, "topics": ["pytorch", "pytorch-tutorial", "object-detection", "single-shot-multibox-detector", "single-shot-detection", "object-recognition", "ssd", "tutorial", "detection"]}, {"id": 186872119, "repo_name": "gluon-ts", "full_name": "awslabs/gluon-ts", "description": "Probabilistic time series modeling in Python", "created": "2019-05-15 17:17:29", "language": "Python", "type": "Organization", "username": "awslabs", "stars": 2478, "forks": 526, "subscribers": 68, "open_issues": 287, "topics": ["time-series", "deep-learning", "forecasting", "neural-networks", "machine-learning", "time-series-prediction", "time-series-forecasting", "mxnet", "pytorch"]}, {"id": 90328920, "repo_name": "analytics-zoo", "full_name": "intel-analytics/analytics-zoo", "description": "Distributed Tensorflow, Keras and PyTorch on Apache Spark/Flink & Ray", "created": "2017-05-05 02:27:30", "language": "Jupyter Notebook", "type": "Organization", "username": "intel-analytics", "stars": 2477, "forks": 713, "subscribers": 102, "open_issues": 561, "topics": ["apache-spark", "deep-neural-network", "distributed-deep-learning", "keras-tensorflow", "bigdl", "analytics-zoo", "python", "scala", "pytorch"]}, {"id": 25311354, "repo_name": "thinc", "full_name": "explosion/thinc", "description": "\ud83d\udd2e A refreshing functional take on deep learning, compatible with your favorite libraries", "created": "2014-10-16 16:34:59", "language": "Python", "type": "Organization", "username": "explosion", "stars": 2465, "forks": 237, "subscribers": 82, "open_issues": 23, "topics": ["machine-learning", "deep-learning", "artificial-intelligence", "ai", "python", "nlp", "natural-language-processing", "spacy", "machine-learning-library", "type-checking", "functional-programming", "pytorch", "tensorflow", "mxnet", "jax"]}, {"id": 273400964, "repo_name": "PyTorch-StudioGAN", "full_name": "POSTECH-CVLab/PyTorch-StudioGAN", "description": "StudioGAN is a Pytorch library providing implementations of representative Generative Adversarial Networks (GANs) for conditional/unconditional image generation.", "created": "2020-06-19 04:09:13", "language": "Python", "type": "Organization", "username": "POSTECH-CVLab", "stars": 2456, "forks": 219, "subscribers": 57, "open_issues": 4, "topics": ["pytorch", "deep-learning", "generative-adversarial-network", "biggan", "stylegan2", "machine-learning", "stylegan2-ada", "stylegan3", "data-efficient-gan-training", "clean-fid"]}, {"id": 212488700, "repo_name": "serve", "full_name": "pytorch/serve", "description": "Model Serving on PyTorch", "created": "2019-10-03 03:17:43", "language": "Java", "type": "Organization", "username": "pytorch", "stars": 2448, "forks": 475, "subscribers": 47, "open_issues": 123, "topics": []}, {"id": 329045912, "repo_name": "stylegan2-ada-pytorch", "full_name": "NVlabs/stylegan2-ada-pytorch", "description": "StyleGAN2-ADA - Official PyTorch implementation", "created": "2021-01-12 16:28:39", "language": "Python", "type": "Organization", "username": "NVlabs", "stars": 2445, "forks": 670, "subscribers": 46, "open_issues": 132, "topics": []}, {"id": 188880197, "repo_name": "ml-workspace", "full_name": "ml-tooling/ml-workspace", "description": "\ud83d\udee0 All-in-one web-based IDE specialized for machine learning and data science.", "created": "2019-05-27 16:55:15", "language": "Jupyter Notebook", "type": "Organization", "username": "ml-tooling", "stars": 2439, "forks": 339, "subscribers": 64, "open_issues": 7, "topics": ["machine-learning", "deep-learning", "data-science", "docker", "jupyter", "jupyter-lab", "python", "anaconda", "tensorflow", "pytorch", "neural-networks", "data-analysis", "scikit-learn", "r", "gpu", "jupyter-notebook", "kubernetes", "data-visualization", "vscode", "nlp"]}, {"id": 111524376, "repo_name": "mmskeleton", "full_name": "open-mmlab/mmskeleton", "description": "A OpenMMLAB toolbox  for human pose estimation, skeleton-based action recognition, and action synthesis.", "created": "2017-11-21 09:01:44", "language": "Python", "type": "Organization", "username": "open-mmlab", "stars": 2432, "forks": 903, "subscribers": 72, "open_issues": 182, "topics": ["action-recognition", "deep-learning", "graph-convolutional-network", "pytorch", "skeleton-based-action-recognition"]}, {"id": 136302835, "repo_name": "fast-reid", "full_name": "JDAI-CV/fast-reid", "description": "SOTA Re-identification Methods and Toolbox", "created": "2018-06-06 09:08:20", "language": "Python", "type": "Organization", "username": "JDAI-CV", "stars": 2412, "forks": 649, "subscribers": 61, "open_issues": 19, "topics": ["person-reid", "open-reid", "re-identification", "person-reidentification", "image-retrieval", "re-ranking", "random-erasing", "image-search", "apex", "toolbox", "sota", "computer-vision", "pytorch", "baseline", "reids"]}, {"id": 247295191, "repo_name": "OpenPCDet", "full_name": "open-mmlab/OpenPCDet", "description": "OpenPCDet Toolbox for LiDAR-based 3D Object Detection.", "created": "2020-03-14 14:48:31", "language": "Python", "type": "Organization", "username": "open-mmlab", "stars": 2385, "forks": 761, "subscribers": 67, "open_issues": 234, "topics": ["point-cloud", "3d-detection", "autonomous-driving", "pv-rcnn", "object-detection", "pytorch"]}, {"id": 218396611, "repo_name": "djl", "full_name": "deepjavalibrary/djl", "description": "An Engine-Agnostic Deep Learning Framework in Java", "created": "2019-10-29 22:38:54", "language": "Java", "type": "Organization", "username": "deepjavalibrary", "stars": 2375, "forks": 382, "subscribers": 77, "open_issues": 99, "topics": ["deep-learning", "neural-network", "ai", "java", "mxnet", "machine-learning", "deep-neural-networks", "ml", "autograd", "djl", "pytorch", "tensorflow", "onnxruntime"]}, {"id": 160543708, "repo_name": "mars", "full_name": "mars-project/mars", "description": "Mars is a tensor-based unified framework for large-scale data computation which scales numpy, pandas, scikit-learn and Python functions.", "created": "2018-12-05 16:04:03", "language": "Python", "type": "Organization", "username": "mars-project", "stars": 2367, "forks": 298, "subscribers": 85, "open_issues": 174, "topics": ["python", "numpy", "tensor", "pandas", "machine-learning", "scikit-learn", "tensorflow", "pytorch", "xgboost", "lightgbm", "ray", "statsmodels", "joblib", "dataframe", "dask"]}, {"id": 231503549, "repo_name": "pytorch-optimizer", "full_name": "jettify/pytorch-optimizer", "description": "torch-optimizer -- collection of optimizers for Pytorch", "created": "2020-01-03 03:16:39", "language": "Python", "type": "User", "username": "jettify", "stars": 2338, "forks": 227, "subscribers": 33, "open_issues": 29, "topics": ["pytorch", "optimizer", "diffgrad", "adamod", "lamb", "yogi", "accsgd", "adabound", "novograd", "shampoo", "lookahead", "swats", "sgdp", "adabelief", "apollo", "hacktoberfest"]}, {"id": 36077404, "repo_name": "deepdetect", "full_name": "jolibrain/deepdetect", "description": "Deep Learning API and Server in C++14 support for Caffe, PyTorch,TensorRT, Dlib, NCNN, Tensorflow, XGBoost and TSNE", "created": "2015-05-22 14:45:28", "language": "C++", "type": "Organization", "username": "jolibrain", "stars": 2330, "forks": 541, "subscribers": 127, "open_issues": 89, "topics": ["deep-learning", "machine-learning", "caffe", "xgboost", "rest-api", "tsne", "object-detection", "image-segmentation", "image-classification", "neural-nets", "gpu", "ncnn", "tensorrt", "time-series", "pytorch", "tensorrt-conversion", "tensorrt-inference", "image-search"]}, {"id": 129712017, "repo_name": "satellite-image-deep-learning", "full_name": "robmarkcole/satellite-image-deep-learning", "description": " Resources for deep learning with satellite & aerial imagery", "created": "2018-04-16 08:42:09", "language": null, "type": "User", "username": "robmarkcole", "stars": 2322, "forks": 607, "subscribers": 123, "open_issues": 0, "topics": ["deep-learning", "deep-neural-networks", "satellite-imagery", "tensorflow", "keras", "pytorch", "python", "machine-learning", "sentinel", "satellite-images", "dataset", "remote-sensing", "datasets", "julia-language", "convolutional-neural-networks", "image-classification", "classification"]}, {"id": 101957429, "repo_name": "pytorch-generative-model-collections", "full_name": "znxlwm/pytorch-generative-model-collections", "description": "Collection of generative models in Pytorch version.", "created": "2017-08-31 03:58:25", "language": "Python", "type": "User", "username": "znxlwm", "stars": 2321, "forks": 522, "subscribers": 62, "open_issues": 26, "topics": ["pytorch", "gan", "cgan", "infogan", "acgan", "wgan", "dragan", "ebgan", "began", "generative-adversarial-network", "conditional-gan", "mnist", "fashion-mnist", "package", "collection", "wgan-gp", "lsgan"]}, {"id": 194876821, "repo_name": "video-object-removal", "full_name": "zllrunning/video-object-removal", "description": "Just draw a bounding box and you can remove the object you want to remove.", "created": "2019-07-02 14:14:39", "language": "Python", "type": "User", "username": "zllrunning", "stars": 2320, "forks": 397, "subscribers": 73, "open_issues": 30, "topics": ["pytorch", "inpainting", "video-inpainting", "image-inpainting", "object-removal"]}, {"id": 346138085, "repo_name": "pytorchvideo", "full_name": "facebookresearch/pytorchvideo", "description": "A deep learning library for video understanding research.", "created": "2021-03-09 20:39:13", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 2300, "forks": 227, "subscribers": 49, "open_issues": 55, "topics": []}, {"id": 199404030, "repo_name": "UGATIT-pytorch", "full_name": "znxlwm/UGATIT-pytorch", "description": "Official PyTorch implementation of U-GAT-IT: Unsupervised Generative Attentional Networks with Adaptive Layer-Instance Normalization for Image-to-Image Translation", "created": "2019-07-29 07:44:56", "language": "Python", "type": "User", "username": "znxlwm", "stars": 2299, "forks": 462, "subscribers": 64, "open_issues": 49, "topics": []}, {"id": 94848141, "repo_name": "code-of-learn-deep-learning-with-pytorch", "full_name": "L1aoXingyu/code-of-learn-deep-learning-with-pytorch", "description": "This is code of book \"Learn Deep Learning with PyTorch\"", "created": "2017-06-20 04:00:25", "language": "Jupyter Notebook", "type": "User", "username": "L1aoXingyu", "stars": 2293, "forks": 1142, "subscribers": 93, "open_issues": 21, "topics": ["pytorch", "pytorch-tutorials-cn", "pytorch-tutorial"]}, {"id": 190153979, "repo_name": "CRAFT-pytorch", "full_name": "clovaai/CRAFT-pytorch", "description": "Official implementation of Character Region Awareness for Text Detection (CRAFT)", "created": "2019-06-04 07:43:58", "language": "Python", "type": "Organization", "username": "clovaai", "stars": 2273, "forks": 697, "subscribers": 75, "open_issues": 77, "topics": ["ocr", "detection", "text-detection", "craft", "curved-text", "ocr-detection", "pytorch", "cvpr2019"]}, {"id": 104741169, "repo_name": "pai", "full_name": "microsoft/pai", "description": "Resource scheduling and cluster management for AI", "created": "2017-09-25 11:24:51", "language": "JavaScript", "type": "Organization", "username": "microsoft", "stars": 2265, "forks": 497, "subscribers": 105, "open_issues": 274, "topics": ["kubernetes", "resource-management", "scheduling", "machine-learning", "tensorflow", "cluster-manager", "gpu", "model-training", "ai", "artificial-intelligence", "pytorch", "jupyter", "chainer", "cluster-management", "cloud", "on-premise", "gpu-cluster", "gpu-computing", "gpu-scheduler"]}, {"id": 89674440, "repo_name": "pytorch-playground", "full_name": "aaron-xichen/pytorch-playground", "description": "Base pretrained models and datasets in pytorch (MNIST, SVHN, CIFAR10, CIFAR100, STL10, AlexNet, VGG16, VGG19, ResNet, Inception, SqueezeNet)", "created": "2017-04-28 06:22:30", "language": "Python", "type": "User", "username": "aaron-xichen", "stars": 2245, "forks": 579, "subscribers": 54, "open_issues": 7, "topics": ["pytorch-tutorial", "pytorch-tutorials", "pytorch", "quantization"]}, {"id": 308638334, "repo_name": "accelerate", "full_name": "huggingface/accelerate", "description": "\ud83d\ude80 A simple way to train and use PyTorch models with multi-GPU, TPU, mixed-precision", "created": "2020-10-30 13:27:12", "language": "Python", "type": "Organization", "username": "huggingface", "stars": 2218, "forks": 141, "subscribers": 45, "open_issues": 61, "topics": []}, {"id": 275118967, "repo_name": "Yolov5_DeepSort_Pytorch", "full_name": "mikel-brostrom/Yolov5_DeepSort_Pytorch", "description": "Real-time multi-object tracker using YOLO v5 and deep sort ", "created": "2020-06-26 09:26:23", "language": "Python", "type": "User", "username": "mikel-brostrom", "stars": 2206, "forks": 744, "subscribers": 33, "open_issues": 9, "topics": ["you-only-look-once", "simple-online-and-realtime-tracking", "http-stream", "rtsp-stream", "web-camera", "video", "pytorch-yolov5", "deep-association-metric", "yolov5", "computer-camera", "pedestrian-tracking", "real-time", "pytorch", "yolo-v5", "deep-sort", "person-reidentification", "object-reid", "reid", "multi-object-tracking", "multi-stream"]}, {"id": 142940093, "repo_name": "botorch", "full_name": "pytorch/botorch", "description": "Bayesian optimization in PyTorch", "created": "2018-07-30 23:59:57", "language": "Python", "type": "Organization", "username": "pytorch", "stars": 2204, "forks": 249, "subscribers": 50, "open_issues": 57, "topics": []}, {"id": 161960205, "repo_name": "edge-connect", "full_name": "knazeri/edge-connect", "description": "EdgeConnect: Structure Guided Image Inpainting using Edge Prediction, ICCV  2019 https://arxiv.org/abs/1901.00212 ", "created": "2018-12-16 02:14:19", "language": "Python", "type": "User", "username": "knazeri", "stars": 2199, "forks": 479, "subscribers": 69, "open_issues": 87, "topics": ["edgeconnect", "image-inpainting", "generative-adversarial-network", "gans", "canny-edge-detection", "deep-learning", "pytorch"]}, {"id": 189640071, "repo_name": "aim", "full_name": "aimhubio/aim", "description": "Aim \u2014 an easy-to-use and performant open-source experiment tracker.", "created": "2019-05-31 18:25:07", "language": "TypeScript", "type": "Organization", "username": "aimhubio", "stars": 2199, "forks": 133, "subscribers": 32, "open_issues": 124, "topics": ["machine-learning", "training-tracking", "experiment-tracking", "mlops", "pytorch", "tensorflow", "keras", "pytorch-lightning", "nlp", "reinforcement-learning"]}, {"id": 227483440, "repo_name": "VIBE", "full_name": "mkocabas/VIBE", "description": "Official implementation of CVPR2020 paper \"VIBE: Video Inference for Human Body Pose and Shape Estimation\"", "created": "2019-12-12 00:01:28", "language": "Python", "type": "User", "username": "mkocabas", "stars": 2184, "forks": 455, "subscribers": 70, "open_issues": 80, "topics": ["video-pose-estimation", "3d-pose-estimation", "human-pose-estimation", "smpl", "pytorch", "3d-human-pose", "cvpr2020", "cvpr-2020", "cvpr20", "cvpr"]}, {"id": 153722564, "repo_name": "torchcv", "full_name": "donnyyou/torchcv", "description": "TorchCV: A PyTorch-Based Framework for Deep Learning in Computer Vision", "created": "2018-10-19 03:38:47", "language": "Shell", "type": "User", "username": "donnyyou", "stars": 2173, "forks": 387, "subscribers": 71, "open_issues": 44, "topics": []}, {"id": 117034492, "repo_name": "PerceptualSimilarity", "full_name": "richzhang/PerceptualSimilarity", "description": "LPIPS metric. pip install lpips", "created": "2018-01-11 01:43:21", "language": "Python", "type": "User", "username": "richzhang", "stars": 2168, "forks": 371, "subscribers": 47, "open_issues": 21, "topics": ["deep-learning", "deep-neural-networks", "perceptual", "perceptual-metric", "perceptual-losses", "pytorch", "perceptual-similarity"]}, {"id": 94331757, "repo_name": "foolbox", "full_name": "bethgelab/foolbox", "description": "A Python toolbox to create adversarial examples that fool neural networks in PyTorch, TensorFlow, and JAX", "created": "2017-06-14 13:05:48", "language": "Python", "type": "Organization", "username": "bethgelab", "stars": 2165, "forks": 386, "subscribers": 46, "open_issues": 37, "topics": ["adversarial-examples", "machine-learning", "python", "adversarial-attacks", "pytorch", "tensorflow", "jax", "keras"]}, {"id": 355559187, "repo_name": "mmocr", "full_name": "open-mmlab/mmocr", "description": "OpenMMLab Text Detection, Recognition and Understanding Toolbox", "created": "2021-04-07 13:40:21", "language": "Python", "type": "Organization", "username": "open-mmlab", "stars": 2163, "forks": 375, "subscribers": 41, "open_issues": 88, "topics": ["pytorch", "ocr", "deep-learning", "text-detection", "text-recognition", "sar", "psenet", "panet", "maskrcnn", "key-information-extraction", "pan", "dbnet", "sdmg-r", "textsnake", "crnn", "robustscanner", "segmentation-based-text-recognition", "fcenet", "satrn", "abinet"]}, {"id": 319265460, "repo_name": "Informer2020", "full_name": "zhouhaoyi/Informer2020", "description": "The GitHub repository for the paper \"Informer\" accepted by AAAI 2021.", "created": "2020-12-07 09:18:24", "language": "Python", "type": "User", "username": "zhouhaoyi", "stars": 2160, "forks": 491, "subscribers": 25, "open_issues": 16, "topics": ["deep-learning", "self-attention", "time-series", "pytorch", "forecasting"]}, {"id": 119556311, "repo_name": "pytorchviz", "full_name": "szagoruyko/pytorchviz", "description": "A small package to create visualizations of PyTorch execution graphs", "created": "2018-01-30 15:37:55", "language": "Jupyter Notebook", "type": "User", "username": "szagoruyko", "stars": 2144, "forks": 229, "subscribers": 30, "open_issues": 23, "topics": []}, {"id": 135119628, "repo_name": "Self-Attention-GAN", "full_name": "heykeetae/Self-Attention-GAN", "description": "Pytorch implementation of Self-Attention Generative Adversarial Networks (SAGAN)", "created": "2018-05-28 06:37:49", "language": "Python", "type": "User", "username": "heykeetae", "stars": 2137, "forks": 431, "subscribers": 30, "open_issues": 40, "topics": []}, {"id": 123195515, "repo_name": "pytorch-kaldi", "full_name": "mravanelli/pytorch-kaldi", "description": "pytorch-kaldi is a project for developing state-of-the-art DNN/RNN hybrid speech recognition systems. The DNN part is managed by pytorch, while feature extraction, label computation, and decoding are performed with the kaldi toolkit.", "created": "2018-02-27 22:16:33", "language": "Python", "type": "User", "username": "mravanelli", "stars": 2128, "forks": 440, "subscribers": 93, "open_issues": 23, "topics": ["speech-recognition", "gru", "dnn", "kaldi", "rnn-model", "pytorch", "timit", "deep-learning", "deep-neural-networks", "recurrent-neural-networks", "multilayer-perceptron-network", "lstm", "lstm-neural-networks", "speech", "asr", "rnn", "dnn-hmm"]}, {"id": 182995939, "repo_name": "minimalRL", "full_name": "seungeunrho/minimalRL", "description": "Implementations of basic RL algorithms with minimal lines of codes! (pytorch based)", "created": "2019-04-23 10:57:44", "language": "Python", "type": "User", "username": "seungeunrho", "stars": 2104, "forks": 326, "subscribers": 48, "open_issues": 18, "topics": ["deep-reinforcement-learning", "pytorch", "simple", "deep-learning", "a3c", "ppo", "a2c", "reinforce", "acer", "dqn", "ddpg", "policy-gradients", "reinforcement-learning", "machine-learning", "sac"]}, {"id": 174904616, "repo_name": "awesome-semantic-segmentation-pytorch", "full_name": "Tramac/awesome-semantic-segmentation-pytorch", "description": "Semantic Segmentation on PyTorch (include FCN, PSPNet, Deeplabv3, Deeplabv3+, DANet, DenseASPP, BiSeNet, EncNet, DUNet, ICNet, ENet, OCNet, CCNet, PSANet, CGNet, ESPNet, LEDNet, DFANet)", "created": "2019-03-11 01:33:25", "language": "Python", "type": "User", "username": "Tramac", "stars": 2093, "forks": 508, "subscribers": 45, "open_issues": 104, "topics": ["semantic-segmentation", "pytorch"]}, {"id": 261086130, "repo_name": "neural_prophet", "full_name": "ourownstory/neural_prophet", "description": "NeuralProphet: A simple forecasting package", "created": "2020-05-04 05:12:43", "language": "Python", "type": "User", "username": "ourownstory", "stars": 2088, "forks": 265, "subscribers": 49, "open_issues": 86, "topics": ["forecasting", "time-series", "machine-learning", "fbprophet", "prophet", "forecast", "artificial-intelligence", "prediction", "trend", "seasonality", "autoregression", "pytorch", "timeseries", "forecasting-algorithm", "forecasting-model", "neuralprophet", "neural", "neural-network", "python", "deep-learning"]}, {"id": 277982133, "repo_name": "mmdetection3d", "full_name": "open-mmlab/mmdetection3d", "description": "OpenMMLab's next-generation platform for general 3D object detection.", "created": "2020-07-08 03:39:45", "language": "Python", "type": "Organization", "username": "open-mmlab", "stars": 2085, "forks": 577, "subscribers": 44, "open_issues": 79, "topics": ["pytorch", "3d-object-detection", "object-detection", "point-cloud"]}, {"id": 89488284, "repo_name": "DeblurGAN", "full_name": "KupynOrest/DeblurGAN", "description": "Image Deblurring using Generative Adversarial Networks", "created": "2017-04-26 14:08:11", "language": "Python", "type": "User", "username": "KupynOrest", "stars": 2077, "forks": 482, "subscribers": 58, "open_issues": 132, "topics": ["deep-learning", "gan", "deblurring", "image-processing", "image-manipulation", "neural-network", "convolutional-neural-networks", "convolutional-networks", "computer-vision", "image-to-image-translation", "blurry-images", "pytorch", "paper", "pix2pix"]}, {"id": 196991469, "repo_name": "Bert-Chinese-Text-Classification-Pytorch", "full_name": "649453932/Bert-Chinese-Text-Classification-Pytorch", "description": "\u4f7f\u7528Bert\uff0cERNIE\uff0c\u8fdb\u884c\u4e2d\u6587\u6587\u672c\u5206\u7c7b", "created": "2019-07-15 12:08:59", "language": "Python", "type": "User", "username": "649453932", "stars": 2073, "forks": 581, "subscribers": 21, "open_issues": 92, "topics": []}, {"id": 290171579, "repo_name": "3DDFA_V2", "full_name": "cleardusk/3DDFA_V2", "description": "The official PyTorch implementation of Towards Fast, Accurate and Stable 3D Dense Face Alignment, ECCV 2020.", "created": "2020-08-25 09:25:30", "language": "Python", "type": "User", "username": "cleardusk", "stars": 2062, "forks": 362, "subscribers": 59, "open_issues": 67, "topics": ["eccv", "3d-face-alignment", "pytorch", "face-alignment", "3d-face", "3dmm", "alignment", "3d", "computer-vision", "onnx", "3d-landmarks", "single-image-reconstruction", "eccv-2020"]}, {"id": 179265268, "repo_name": "pytracking", "full_name": "visionml/pytracking", "description": "Visual tracking library based on PyTorch.", "created": "2019-04-03 10:17:53", "language": "Python", "type": "Organization", "username": "visionml", "stars": 2059, "forks": 470, "subscribers": 81, "open_issues": 37, "topics": ["computer-vision", "tracking", "machine-learning", "visual-tracking"]}, {"id": 124047136, "repo_name": "AlphaTree-graphic-deep-neural-network", "full_name": "weslynn/AlphaTree-graphic-deep-neural-network", "description": "AI Roadmap:\u673a\u5668\u5b66\u4e60(Machine Learning)\u3001\u6df1\u5ea6\u5b66\u4e60(Deep Learning)\u3001\u5bf9\u6297\u795e\u7ecf\u7f51\u7edc(GAN\uff09\uff0c\u56fe\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\uff0cNLP\uff0c\u5927\u6570\u636e\u76f8\u5173\u7684\u53d1\u5c55\u8def\u4e66(roadmap), \u5e76\u9644\u6d77\u91cf\u6e90\u7801\uff08python\uff0cpytorch\uff09\u5e26\u5927\u5bb6\u6d88\u5316\u57fa\u672c\u77e5\u8bc6\u70b9\uff0c\u7a81\u7834\u9762\u8bd5\uff0c\u5b8c\u6210\u4ece\u65b0\u624b\u5230\u5408\u683c\u5de5\u7a0b\u5e08\u7684\u8de8\u8d8a\uff0c\u5176\u4e2d\u6df1\u5ea6\u5b66\u4e60\u76f8\u5173\u8bba\u6587\u9644\u6709tensorflow caffe\u5b98\u65b9\u6e90\u7801\uff0c\u5e94\u7528\u90e8\u5206\u542b\u63a8\u8350\u7b97\u6cd5\u548c\u77e5\u8bc6\u56fe\u8c31", "created": "2018-03-06 08:37:27", "language": null, "type": "User", "username": "weslynn", "stars": 2045, "forks": 523, "subscribers": 124, "open_issues": 6, "topics": []}, {"id": 159110178, "repo_name": "Deep-Learning-with-PyTorch-Tutorials", "full_name": "dragen1860/Deep-Learning-with-PyTorch-Tutorials", "description": "\u6df1\u5ea6\u5b66\u4e60\u4e0ePyTorch\u5165\u95e8\u5b9e\u6218\u89c6\u9891\u6559\u7a0b \u914d\u5957\u6e90\u4ee3\u7801\u548cPPT", "created": "2018-11-26 04:21:46", "language": "Python", "type": "User", "username": "dragen1860", "stars": 2041, "forks": 1080, "subscribers": 64, "open_issues": 5, "topics": ["deep-learning", "pytorch", "convolutional-neural-networks", "recurrent-neural-networks", "generative-adversarial-network", "machine-learning", "artificial-intelligence", "tutorial"]}, {"id": 174922473, "repo_name": "ICCV2019-LearningToPaint", "full_name": "megvii-research/ICCV2019-LearningToPaint", "description": "ICCV2019 - A painting AI that can reproduce paintings stroke by stroke using deep reinforcement learning.", "created": "2019-03-11 03:56:03", "language": "Python", "type": "Organization", "username": "megvii-research", "stars": 2041, "forks": 294, "subscribers": 48, "open_issues": 4, "topics": ["deep-learning", "reinforcement-learning", "computer-vision", "pytorch", "painting"]}, {"id": 101685663, "repo_name": "sru", "full_name": "asappresearch/sru", "description": "Training RNNs as Fast as CNNs (https://arxiv.org/abs/1709.02755)", "created": "2017-08-28 20:37:41", "language": "Python", "type": "Organization", "username": "asappresearch", "stars": 2033, "forks": 304, "subscribers": 68, "open_issues": 58, "topics": ["pytorch", "deep-learning", "recurrent-neural-networks", "nlp"]}, {"id": 150449550, "repo_name": "deep_sort_pytorch", "full_name": "ZQPei/deep_sort_pytorch", "description": "MOT using deepsort and yolov3 with pytorch ", "created": "2018-09-26 15:34:11", "language": "Python", "type": "User", "username": "ZQPei", "stars": 2032, "forks": 601, "subscribers": 43, "open_issues": 108, "topics": ["deepsort", "pytorch", "yolo3", "sort", "mot", "cnn-model", "mot-tracking", "yolov3", "deep-sort"]}, {"id": 136681445, "repo_name": "Deep-reinforcement-learning-with-pytorch", "full_name": "sweetice/Deep-reinforcement-learning-with-pytorch", "description": "PyTorch implementation of DQN, AC,  ACER, A2C, A3C, PG,  DDPG, TRPO, PPO, SAC, TD3 and ....", "created": "2018-06-09 01:43:02", "language": "Python", "type": "User", "username": "sweetice", "stars": 2027, "forks": 568, "subscribers": 33, "open_issues": 21, "topics": ["policy-gradient", "pytorch", "actor-critic-algorithm", "alphago", "deep-reinforcement-learning", "a2c", "dqn", "sarsa", "ppo", "a3c", "resnet", "algorithm", "deep-learning", "reinforce", "actor-critic", "sac", "td3", "trpo"]}, {"id": 122806629, "repo_name": "PyTorch-NLP", "full_name": "PetrochukM/PyTorch-NLP", "description": "Basic Utilities for PyTorch Natural Language Processing (NLP)", "created": "2018-02-25 05:00:36", "language": "Python", "type": "User", "username": "PetrochukM", "stars": 2025, "forks": 250, "subscribers": 57, "open_issues": 23, "topics": ["pytorch", "nlp", "natural-language-processing", "pytorch-nlp", "torchnlp", "data-loader", "embeddings", "word-vectors", "python", "deep-learning", "dataset", "metrics", "neural-network", "sru", "machine-learning"]}, {"id": 183944453, "repo_name": "rlpyt", "full_name": "astooke/rlpyt", "description": "Reinforcement Learning in PyTorch", "created": "2019-04-28 18:29:02", "language": "Python", "type": "User", "username": "astooke", "stars": 2003, "forks": 318, "subscribers": 52, "open_issues": 61, "topics": []}, {"id": 115492234, "repo_name": "wavenet_vocoder", "full_name": "r9y9/wavenet_vocoder", "description": "WaveNet vocoder", "created": "2017-12-27 07:03:23", "language": "Python", "type": "User", "username": "r9y9", "stars": 1984, "forks": 476, "subscribers": 99, "open_issues": 19, "topics": ["wavenet", "speech-synthesis", "speech-processing", "pytorch", "python", "wavenet-vocoder", "neural-vocoder", "speech"]}, {"id": 275761687, "repo_name": "TengineKit", "full_name": "OAID/TengineKit", "description": "TengineKit - Free, Fast, Easy, Real-Time Face Detection & Face Landmarks & Face Attributes & Hand Detection & Hand Landmarks & Body Detection & Body Landmarks &  Iris Landmarks & Yolov5 SDK On Mobile.", "created": "2020-06-29 07:28:46", "language": "C++", "type": "Organization", "username": "OAID", "stars": 1982, "forks": 275, "subscribers": 69, "open_issues": 18, "topics": ["mobile", "face-landmarks", "face-detection", "android", "face-tracking", "java", "face-attributes", "deep-neural-networks", "ai", "artificial-intelligence", "facial-landmarks", "tensorflow", "pytorch", "face-api", "face-alignment", "computer-vision"]}, {"id": 162696927, "repo_name": "UNet-family", "full_name": "ShawnBIT/UNet-family", "description": "Paper and implementation of UNet-related model. ", "created": "2018-12-21 09:51:06", "language": "Python", "type": "User", "username": "ShawnBIT", "stars": 1972, "forks": 448, "subscribers": 76, "open_issues": 4, "topics": ["segmentation", "unet", "pytorch"]}, {"id": 427625642, "repo_name": "MAE-pytorch", "full_name": "pengzhiliang/MAE-pytorch", "description": "Unofficial PyTorch implementation of Masked Autoencoders Are Scalable Vision Learners", "created": "2021-11-13 09:48:37", "language": "Python", "type": "User", "username": "pengzhiliang", "stars": 1962, "forks": 285, "subscribers": 20, "open_issues": 9, "topics": []}, {"id": 83292099, "repo_name": "crnn.pytorch", "full_name": "meijieru/crnn.pytorch", "description": "Convolutional recurrent network in pytorch", "created": "2017-02-27 09:26:06", "language": "Python", "type": "User", "username": "meijieru", "stars": 1959, "forks": 593, "subscribers": 53, "open_issues": 100, "topics": ["neural-network", "scene-texts", "recognition"]}, {"id": 107319450, "repo_name": "turkce-yapay-zeka-kaynaklari", "full_name": "deeplearningturkiye/turkce-yapay-zeka-kaynaklari", "description": "T\u00fcrkiye'de yap\u0131lan derin \u00f6\u011frenme (deep learning) ve makine \u00f6\u011frenmesi (machine learning) \u00e7al\u0131\u015fmalar\u0131n\u0131n derlendi\u011fi sayfa.", "created": "2017-10-17 20:19:31", "language": null, "type": "User", "username": "deeplearningturkiye", "stars": 1944, "forks": 394, "subscribers": 401, "open_issues": 9, "topics": ["deep-learning", "convolutional-neural-networks", "tensorflow", "pytorch", "caffe", "keras", "machine-learning", "derin-ogrenme", "makine-ogrenmesi", "yapay-zeka", "dogal-dil-isleme", "natural-language-processing"]}, {"id": 177785721, "repo_name": "Deep-Flow-Guided-Video-Inpainting", "full_name": "nbei/Deep-Flow-Guided-Video-Inpainting", "description": "pytorch implementation for \"Deep Flow-Guided Video Inpainting\"(CVPR'19)", "created": "2019-03-26 12:38:16", "language": "Python", "type": "User", "username": "nbei", "stars": 1941, "forks": 393, "subscribers": 73, "open_issues": 49, "topics": []}, {"id": 180572200, "repo_name": "UER-py", "full_name": "dbiir/UER-py", "description": "Open Source Pre-training Model Framework in PyTorch & Pre-trained Model Zoo", "created": "2019-04-10 12:00:20", "language": "Python", "type": "Organization", "username": "dbiir", "stars": 1933, "forks": 355, "subscribers": 67, "open_issues": 97, "topics": ["bert", "pre-training", "fine-tuning", "gpt", "chinese", "natural-language-processing", "pytorch", "elmo", "classification", "ner", "t5", "unilm", "roberta", "albert", "clue", "gpt-2", "model-zoo", "bart", "pegasus", "xlm-roberta"]}, {"id": 123565023, "repo_name": "pyGAT", "full_name": "Diego999/pyGAT", "description": "Pytorch implementation of the Graph Attention Network model by Veli\u010dkovi\u0107 et. al (2017, https://arxiv.org/abs/1710.10903)", "created": "2018-03-02 10:20:26", "language": "Python", "type": "User", "username": "Diego999", "stars": 1930, "forks": 543, "subscribers": 13, "open_issues": 35, "topics": ["graph-attention-networks", "attention-mechanism", "self-attention", "pytorch", "neural-networks", "python"]}, {"id": 135380336, "repo_name": "a-PyTorch-Tutorial-to-Image-Captioning", "full_name": "sgrvinod/a-PyTorch-Tutorial-to-Image-Captioning", "description": "Show, Attend, and Tell | a PyTorch Tutorial to Image Captioning", "created": "2018-05-30 03:00:58", "language": "Python", "type": "User", "username": "sgrvinod", "stars": 1928, "forks": 581, "subscribers": 26, "open_issues": 86, "topics": ["pytorch", "pytorch-tutorial", "show-attend-and-tell", "image-captioning", "encoder-decoder", "attention-mechanism", "computer-vision", "mscoco"]}, {"id": 255231293, "repo_name": "micrograd", "full_name": "karpathy/micrograd", "description": "A tiny scalar-valued autograd engine and a neural net library on top of it with PyTorch-like API", "created": "2020-04-13 04:31:18", "language": "Jupyter Notebook", "type": "User", "username": "karpathy", "stars": 1897, "forks": 153, "subscribers": 49, "open_issues": 8, "topics": []}, {"id": 91117406, "repo_name": "PyTorch-Encoding", "full_name": "zhanghang1989/PyTorch-Encoding", "description": "A CV toolkit for my papers.", "created": "2017-05-12 18:04:54", "language": "Python", "type": "User", "username": "zhanghang1989", "stars": 1879, "forks": 432, "subscribers": 43, "open_issues": 140, "topics": ["deep-learning", "batchnorm", "synchronized-batchnorm", "encoding-layer"]}, {"id": 305522835, "repo_name": "Objectron", "full_name": "google-research-datasets/Objectron", "description": "Objectron is a dataset of short, object-centric video clips. In addition, the videos also contain AR session metadata including camera poses, sparse point-clouds and planes. In each video, the camera moves around and above the object and captures it from different views. Each object is annotated with a 3D bounding box. The 3D bounding box describes the object\u2019s position, orientation, and dimensions. The dataset contains about 15K annotated video clips and 4M annotated images in the following categories: bikes, books, bottles, cameras, cereal boxes, chairs, cups, laptops, and shoes", "created": "2020-10-19 21:58:41", "language": "Jupyter Notebook", "type": "Organization", "username": "google-research-datasets", "stars": 1879, "forks": 231, "subscribers": 68, "open_issues": 17, "topics": ["deep-learning", "computer-vision", "machine-learning", "python", "tensorflow", "pytorch", "3d-vision", "3d-reconstruction", "ai", "3d", "neural-network", "dataset", "augmented-reality"]}, {"id": 222110214, "repo_name": "CV-Backbones", "full_name": "huawei-noah/CV-Backbones", "description": "CV backbones including GhostNet, TinyNet and TNT, developed by Huawei Noah's Ark Lab.", "created": "2019-11-16 14:21:35", "language": "Python", "type": "Organization", "username": "huawei-noah", "stars": 1866, "forks": 388, "subscribers": 36, "open_issues": 15, "topics": ["convolutional-neural-networks", "efficient-inference", "imagenet", "model-compression", "cvpr", "tensorflow", "pytorch", "ghostnet", "transformer", "pretrained-models", "vision-transformer"]}, {"id": 306383759, "repo_name": "SkyAR", "full_name": "jiupinjia/SkyAR", "description": "Official Pytorch implementation of the preprint paper \"Castle in the Sky: Dynamic Sky Replacement and Harmonization in Videos\", in arXiv:2010.11800.", "created": "2020-10-22 15:39:08", "language": "Python", "type": "User", "username": "jiupinjia", "stars": 1855, "forks": 231, "subscribers": 50, "open_issues": 4, "topics": ["dynamic-sky-replacement", "sky-matting", "harmonization", "skyar"]}, {"id": 78508757, "repo_name": "deepspeech.pytorch", "full_name": "SeanNaren/deepspeech.pytorch", "description": "Speech Recognition using DeepSpeech2.", "created": "2017-01-10 07:28:18", "language": "Python", "type": "User", "username": "SeanNaren", "stars": 1853, "forks": 597, "subscribers": 54, "open_issues": 4, "topics": []}, {"id": 191256013, "repo_name": "pycls", "full_name": "facebookresearch/pycls", "description": "Codebase for Image Classification Research, written in PyTorch.", "created": "2019-06-10 22:47:17", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 1852, "forks": 219, "subscribers": 59, "open_issues": 25, "topics": []}, {"id": 271716219, "repo_name": "mmselfsup", "full_name": "open-mmlab/mmselfsup", "description": "OpenMMLab Self-Supervised Learning Toolbox and Benchmark", "created": "2020-06-12 05:29:42", "language": "Python", "type": "Organization", "username": "open-mmlab", "stars": 1843, "forks": 255, "subscribers": 45, "open_issues": 9, "topics": ["self-supervised-learning", "unsupervised-learning", "pytorch", "moco", "simclr", "deepcluster", "swav", "simsiam"]}, {"id": 99707044, "repo_name": "awd-lstm-lm", "full_name": "salesforce/awd-lstm-lm", "description": "LSTM and QRNN Language Model Toolkit for PyTorch", "created": "2017-08-08 15:18:53", "language": "Python", "type": "Organization", "username": "salesforce", "stars": 1842, "forks": 494, "subscribers": 69, "open_issues": 64, "topics": ["lstm", "pytorch", "language-model", "sgd", "qrnn"]}, {"id": 108945887, "repo_name": "ml-road", "full_name": "yanshengjia/ml-road", "description": "Machine Learning Resources, Practice and Research", "created": "2017-10-31 04:36:37", "language": "Python", "type": "User", "username": "yanshengjia", "stars": 1840, "forks": 785, "subscribers": 108, "open_issues": 3, "topics": ["machine-learning", "deep-learning", "nlp", "computer-vision", "speech-recognition", "tensorflow", "pytorch"]}, {"id": 103267552, "repo_name": "senet.pytorch", "full_name": "moskomule/senet.pytorch", "description": "PyTorch implementation of SENet", "created": "2017-09-12 12:26:27", "language": "Python", "type": "User", "username": "moskomule", "stars": 1836, "forks": 399, "subscribers": 15, "open_issues": 0, "topics": ["senet", "pytorch"]}, {"id": 104037669, "repo_name": "EDSR-PyTorch", "full_name": "sanghyun-son/EDSR-PyTorch", "description": "PyTorch version of the paper 'Enhanced Deep Residual Networks for Single Image Super-Resolution' (CVPRW 2017) ", "created": "2017-09-19 06:50:43", "language": "Python", "type": "User", "username": "sanghyun-son", "stars": 1836, "forks": 603, "subscribers": 44, "open_issues": 113, "topics": []}, {"id": 313501668, "repo_name": "wenet", "full_name": "wenet-e2e/wenet", "description": "Production First and Production Ready End-to-End Speech Recognition Toolkit", "created": "2020-11-17 03:57:23", "language": "C++", "type": "Organization", "username": "wenet-e2e", "stars": 1814, "forks": 471, "subscribers": 71, "open_issues": 55, "topics": ["e2e-models", "pytorch", "asr", "transformer", "conformer", "production-ready", "automatic-speech-recognition", "speech-recognition"]}, {"id": 145103892, "repo_name": "flops-counter.pytorch", "full_name": "sovrasov/flops-counter.pytorch", "description": "Flops counter for convolutional networks in pytorch framework", "created": "2018-08-17 09:54:59", "language": "Python", "type": "User", "username": "sovrasov", "stars": 1805, "forks": 237, "subscribers": 15, "open_issues": 21, "topics": ["pytorch", "pytorch-cnn", "deep-neural-networks", "deeplearning", "pytorch-utils", "flops-counter"]}, {"id": 416829986, "repo_name": "ffcv", "full_name": "libffcv/ffcv", "description": "FFCV: Fast Forward Computer Vision (and other ML workloads!)", "created": "2021-10-13 17:03:39", "language": "Python", "type": "Organization", "username": "libffcv", "stars": 1805, "forks": 83, "subscribers": 14, "open_issues": 18, "topics": ["machine-learning", "data-science", "pytorch"]}, {"id": 312734031, "repo_name": "ScaledYOLOv4", "full_name": "WongKinYiu/ScaledYOLOv4", "description": "Scaled-YOLOv4: Scaling Cross Stage Partial Network", "created": "2020-11-14 03:01:11", "language": "Python", "type": "User", "username": "WongKinYiu", "stars": 1802, "forks": 493, "subscribers": 45, "open_issues": 278, "topics": ["machine-learning", "deep-learning", "ml", "pytorch", "yolo", "object-detection", "yolov3", "yolov4", "scaled-yolov4", "yolov4-tiny", "yolov4-csp", "yolov4-large"]}, {"id": 97850448, "repo_name": "pytorch-faster-rcnn", "full_name": "ruotianluo/pytorch-faster-rcnn", "description": "pytorch1.0 updated. Support cpu test and demo. (Use detectron2, it's a masterpiece)", "created": "2017-07-20 15:20:26", "language": "Jupyter Notebook", "type": "User", "username": "ruotianluo", "stars": 1797, "forks": 483, "subscribers": 43, "open_issues": 82, "topics": []}, {"id": 130927929, "repo_name": "pytorch-retinanet", "full_name": "yhenon/pytorch-retinanet", "description": "Pytorch implementation of RetinaNet object detection.", "created": "2018-04-25 00:15:22", "language": "Python", "type": "User", "username": "yhenon", "stars": 1790, "forks": 601, "subscribers": 30, "open_issues": 134, "topics": ["pytorch", "retinanet", "python"]}, {"id": 208611822, "repo_name": "Pytorch_Retinaface", "full_name": "biubug6/Pytorch_Retinaface", "description": "Retinaface get 80.99% in widerface hard val using mobilenet0.25.", "created": "2019-09-15 15:09:04", "language": "Python", "type": "User", "username": "biubug6", "stars": 1787, "forks": 584, "subscribers": 37, "open_issues": 125, "topics": []}, {"id": 113293394, "repo_name": "NCRFpp", "full_name": "jiesutd/NCRFpp", "description": "NCRF++, a Neural Sequence Labeling Toolkit. Easy use to any sequence labeling tasks (e.g. NER, POS, Segmentation). It includes character LSTM/CNN, word LSTM/CNN and softmax/CRF components. ", "created": "2017-12-06 09:04:43", "language": "Python", "type": "User", "username": "jiesutd", "stars": 1784, "forks": 445, "subscribers": 58, "open_issues": 13, "topics": ["pytorch", "ner", "sequence-labeling", "crf", "lstm-crf", "char-rnn", "char-cnn", "named-entity-recognition", "part-of-speech-tagger", "chunking", "neural-networks", "nbest", "lstm", "cnn", "natural-language-processing", "artificial-intelligence"]}, {"id": 183181254, "repo_name": "PyTorchDocs", "full_name": "fendouai/PyTorchDocs", "description": "PyTorch \u5b98\u65b9\u4e2d\u6587\u6559\u7a0b\u5305\u542b 60 \u5206\u949f\u5feb\u901f\u5165\u95e8\u6559\u7a0b\uff0c\u5f3a\u5316\u6559\u7a0b\uff0c\u8ba1\u7b97\u673a\u89c6\u89c9\uff0c\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff0c\u751f\u6210\u5bf9\u6297\u7f51\u7edc\uff0c\u5f3a\u5316\u5b66\u4e60\u3002\u6b22\u8fce Star\uff0cFork\uff01", "created": "2019-04-24 08:13:05", "language": "Python", "type": "User", "username": "fendouai", "stars": 1781, "forks": 615, "subscribers": 52, "open_issues": 5, "topics": ["pytorch", "pytorch-tutorial", "pytorch-cnn", "pytorch-nlp", "pytorch-gan"]}, {"id": 276901861, "repo_name": "pytorch-forecasting", "full_name": "jdb78/pytorch-forecasting", "description": "Time series forecasting with PyTorch", "created": "2020-07-03 13:05:24", "language": "Python", "type": "User", "username": "jdb78", "stars": 1762, "forks": 272, "subscribers": 31, "open_issues": 169, "topics": ["pytorch", "forecasting", "gpu", "uncertainty", "timeseries-forecasting", "pytorch-lightning", "deep-learning", "neural-networks", "timeseries", "machine-learning", "pandas", "python", "ai", "artifical-intelligense", "data-science", "temporal"]}, {"id": 206794657, "repo_name": "DeepCTR-Torch", "full_name": "shenweichen/DeepCTR-Torch", "description": "\u3010PyTorch\u3011Easy-to-use,Modular and Extendible package of deep-learning based CTR models.", "created": "2019-09-06 13:00:06", "language": "Python", "type": "User", "username": "shenweichen", "stars": 1762, "forks": 470, "subscribers": 40, "open_issues": 30, "topics": ["deepctr", "ctr-models", "deep-learning", "deepctr-pytorch", "deepfm", "fibinet", "xdeepfm"]}, {"id": 253188774, "repo_name": "nerf-pytorch", "full_name": "yenchenlin/nerf-pytorch", "description": "A PyTorch implementation of NeRF (Neural Radiance Fields) that reproduces the results.", "created": "2020-04-05 08:29:57", "language": "Python", "type": "User", "username": "yenchenlin", "stars": 1761, "forks": 339, "subscribers": 43, "open_issues": 14, "topics": []}, {"id": 83916714, "repo_name": "DeepLearningForNLPInPytorch", "full_name": "rguthrie3/DeepLearningForNLPInPytorch", "description": "An IPython Notebook tutorial on deep learning for natural language processing, including structure prediction.", "created": "2017-03-04 18:50:58", "language": "Jupyter Notebook", "type": "User", "username": "rguthrie3", "stars": 1758, "forks": 435, "subscribers": 98, "open_issues": 7, "topics": ["nlp", "pytorch", "deep-learning", "tutorial", "lstm", "neural-network"]}, {"id": 142041664, "repo_name": "GANimation", "full_name": "albertpumarola/GANimation", "description": "GANimation: Anatomically-aware Facial Animation from a Single Image (ECCV'18 Oral) [PyTorch]", "created": "2018-07-23 16:39:34", "language": "Python", "type": "User", "username": "albertpumarola", "stars": 1748, "forks": 396, "subscribers": 77, "open_issues": 43, "topics": ["face-manipulation", "facial-expressions", "deep-learning", "generative-adversarial-network", "pytorch", "ganimation", "eccv-2018", "gan"]}, {"id": 278810244, "repo_name": "mmaction2", "full_name": "open-mmlab/mmaction2", "description": "OpenMMLab's Next Generation Video Understanding Toolbox and Benchmark", "created": "2020-07-11 07:19:10", "language": "Python", "type": "Organization", "username": "open-mmlab", "stars": 1746, "forks": 558, "subscribers": 41, "open_issues": 49, "topics": ["action-recognition", "temporal-action-localization", "pytorch", "video-understanding", "tsn", "i3d", "slowfast", "ava", "spatial-temporal-action-detection", "benchmark", "tsm", "x3d", "non-local", "deep-learning", "openmmlab", "posec3d", "video-classification"]}, {"id": 191778243, "repo_name": "mmaction", "full_name": "open-mmlab/mmaction", "description": "An open-source toolbox for action understanding based on PyTorch", "created": "2019-06-13 14:26:23", "language": "Python", "type": "Organization", "username": "open-mmlab", "stars": 1745, "forks": 343, "subscribers": 44, "open_issues": 48, "topics": ["action-recognition", "action-detection", "video-understanding", "pytorch", "temporal-action-detection", "temporal-action-localization", "spatial-temporal-action-detection"]}, {"id": 241299322, "repo_name": "FaceMaskDetection", "full_name": "AIZOOTech/FaceMaskDetection", "description": "\u5f00\u6e90\u4eba\u8138\u53e3\u7f69\u68c0\u6d4b\u6a21\u578b\u548c\u6570\u636e Detect faces and determine whether people are wearing mask.", "created": "2020-02-18 07:32:04", "language": "Jupyter Notebook", "type": "User", "username": "AIZOOTech", "stars": 1744, "forks": 576, "subscribers": 56, "open_issues": 74, "topics": ["detection", "pytorch", "caffe"]}, {"id": 83503319, "repo_name": "torchsample", "full_name": "ncullen93/torchsample", "description": "High-Level Training, Data Augmentation, and Utilities for Pytorch", "created": "2017-03-01 02:42:12", "language": "Python", "type": "User", "username": "ncullen93", "stars": 1743, "forks": 295, "subscribers": 59, "open_issues": 57, "topics": ["pytorch", "deep-learning", "data-augmentation", "affine", "torch"]}, {"id": 227720789, "repo_name": "stylegan2-pytorch", "full_name": "rosinality/stylegan2-pytorch", "description": "Implementation of Analyzing and Improving the Image Quality of StyleGAN (StyleGAN 2) in PyTorch", "created": "2019-12-13 00:19:17", "language": "Python", "type": "User", "username": "rosinality", "stars": 1734, "forks": 463, "subscribers": 29, "open_issues": 159, "topics": ["stylegan2"]}, {"id": 120012467, "repo_name": "pytorch-mask-rcnn", "full_name": "multimodallearning/pytorch-mask-rcnn", "description": null, "created": "2018-02-02 17:47:18", "language": "Python", "type": "Organization", "username": "multimodallearning", "stars": 1733, "forks": 520, "subscribers": 36, "open_issues": 79, "topics": []}, {"id": 308172757, "repo_name": "nx", "full_name": "elixir-nx/nx", "description": "Multi-dimensional arrays (tensors) and numerical definitions for Elixir", "created": "2020-10-29 00:15:01", "language": "Elixir", "type": "Organization", "username": "elixir-nx", "stars": 1732, "forks": 100, "subscribers": 57, "open_issues": 25, "topics": ["gpu", "numerical", "elixir", "tensor", "xla", "pytorch", "jit"]}, {"id": 211822289, "repo_name": "tsai", "full_name": "timeseriesAI/tsai", "description": "Time series Timeseries Deep Learning Machine Learning Pytorch  fastai | State-of-the-art Deep Learning library  for Time Series and Sequences in Pytorch / fastai", "created": "2019-09-30 09:18:31", "language": "Jupyter Notebook", "type": "Organization", "username": "timeseriesAI", "stars": 1730, "forks": 255, "subscribers": 36, "open_issues": 19, "topics": ["time-series-classification", "deep-learning", "fastai", "pytorch", "timeseries", "time-series", "sequential", "time-series-analysis", "transformer", "cnn", "rnn", "state-of-the-art", "self-supervised", "classification", "regression", "forecasting", "inceptiontime", "rocket", "machine-learning", "python"]}, {"id": 137727195, "repo_name": "Image_Segmentation", "full_name": "LeeJunHyun/Image_Segmentation", "description": "Pytorch implementation of U-Net, R2U-Net, Attention U-Net, and Attention R2U-Net.", "created": "2018-06-18 08:27:27", "language": "Python", "type": "User", "username": "LeeJunHyun", "stars": 1729, "forks": 475, "subscribers": 24, "open_issues": 41, "topics": []}, {"id": 117372836, "repo_name": "cs230-code-examples", "full_name": "cs230-stanford/cs230-code-examples", "description": "Code examples in pyTorch and Tensorflow for CS230", "created": "2018-01-13 19:40:37", "language": "Python", "type": "Organization", "username": "cs230-stanford", "stars": 1722, "forks": 674, "subscribers": 61, "open_issues": 17, "topics": ["tensorflow", "pytorch", "computer-vision", "natural-language-processing"]}, {"id": 314197645, "repo_name": "zenml", "full_name": "zenml-io/zenml", "description": "ZenML \ud83d\ude4f: MLOps framework to create reproducible pipelines.", "created": "2020-11-19 09:25:46", "language": "Python", "type": "Organization", "username": "zenml-io", "stars": 1720, "forks": 116, "subscribers": 29, "open_issues": 15, "topics": ["mlops", "machine-learning", "data-science", "production-ready", "devops-tools", "zenml", "pipelines", "metadata-tracking", "deep-learning", "pytorch", "tensorflow", "ml", "ai", "automl"]}, {"id": 226315888, "repo_name": "torch-points3d", "full_name": "torch-points3d/torch-points3d", "description": "Pytorch framework for doing deep learning on point clouds.", "created": "2019-12-06 11:33:34", "language": "Python", "type": "Organization", "username": "torch-points3d", "stars": 1719, "forks": 282, "subscribers": 54, "open_issues": 105, "topics": ["pytorch", "deep-learning", "point-cloud", "pointnet", "minkowskiengine", "kpconv", "segmentation", "s3dis", "scannet"]}, {"id": 244534808, "repo_name": "benchmarking-gnns", "full_name": "graphdeeplearning/benchmarking-gnns", "description": "Repository for benchmarking graph neural networks", "created": "2020-03-03 03:42:50", "language": "Jupyter Notebook", "type": "Organization", "username": "graphdeeplearning", "stars": 1719, "forks": 317, "subscribers": 52, "open_issues": 2, "topics": ["graph-representation-learning", "graph-neural-networks", "benchmark-framework", "graph-deep-learning", "pytorch", "dgl", "deep-learning"]}, {"id": 390327676, "repo_name": "Image-Super-Resolution-via-Iterative-Refinement", "full_name": "Janspiry/Image-Super-Resolution-via-Iterative-Refinement", "description": "Unoffical implementation about Image Super-Resolution via Iterative Refinement by Pytorch", "created": "2021-07-28 11:32:06", "language": "Python", "type": "User", "username": "Janspiry", "stars": 1718, "forks": 215, "subscribers": 50, "open_issues": 1, "topics": ["pytorch", "diffusion-probabilistic", "super-resolution", "ddpm", "image-generation"]}, {"id": 374891081, "repo_name": "SimSwap", "full_name": "neuralchen/SimSwap", "description": "An arbitrary face-swapping framework on images and videos with one single trained model!", "created": "2021-06-08 05:25:16", "language": "Python", "type": "User", "username": "neuralchen", "stars": 1713, "forks": 335, "subscribers": 53, "open_issues": 128, "topics": ["face", "deepfakes", "faceswap", "gan", "swap", "deepfacelab", "image-manipulation", "video", "pytorch"]}, {"id": 196501110, "repo_name": "ElegantRL", "full_name": "AI4Finance-Foundation/ElegantRL", "description": "Scalable and Elastic Deep Reinforcement Learning Using PyTorch. Please star. \ud83d\udd25", "created": "2019-07-12 03:18:05", "language": "Python", "type": "Organization", "username": "AI4Finance-Foundation", "stars": 1711, "forks": 361, "subscribers": 36, "open_issues": 25, "topics": ["pytorch", "reinforcement-learning", "ppo", "sac", "td3", "dqn", "ddpg", "stable", "lightweight", "efficient", "model-free-rl", "drl-pytorch", "gae", "bipedalwalkerhardcore", "per", "multiple-gpu", "a2c"]}, {"id": 158235160, "repo_name": "gandissect", "full_name": "CSAILVision/gandissect", "description": "Pytorch-based tools for visualizing and understanding the neurons of a GAN.  https://gandissect.csail.mit.edu/", "created": "2018-11-19 14:16:08", "language": "Python", "type": "Organization", "username": "CSAILVision", "stars": 1706, "forks": 282, "subscribers": 77, "open_issues": 13, "topics": ["pytorch", "gan", "image-manipulation", "deep-learning", "interactive-visualizations", "generative-adversarial-network", "interpretable-ml"]}, {"id": 201314421, "repo_name": "learn2learn", "full_name": "learnables/learn2learn", "description": "A PyTorch Library for Meta-learning Research", "created": "2019-08-08 18:22:41", "language": "Python", "type": "Organization", "username": "learnables", "stars": 1705, "forks": 243, "subscribers": 32, "open_issues": 20, "topics": ["pytorch", "maml", "meta-learning", "learning2learn", "learn2learn", "metalearning", "few-shot", "meta-rl", "meta-descent", "meta-optimization"]}, {"id": 232901618, "repo_name": "reformer-pytorch", "full_name": "lucidrains/reformer-pytorch", "description": "Reformer, the efficient Transformer, in Pytorch", "created": "2020-01-09 20:42:37", "language": "Python", "type": "User", "username": "lucidrains", "stars": 1689, "forks": 225, "subscribers": 53, "open_issues": 12, "topics": ["artificial-intelligence", "transformers", "attention-mechanism", "machine-learning", "pytorch"]}, {"id": 108992863, "repo_name": "deepvoice3_pytorch", "full_name": "r9y9/deepvoice3_pytorch", "description": "PyTorch implementation of convolutional neural networks-based text-to-speech synthesis models", "created": "2017-10-31 12:31:44", "language": "Python", "type": "User", "username": "r9y9", "stars": 1684, "forks": 428, "subscribers": 82, "open_issues": 41, "topics": ["tts", "speech-synthesis", "end-to-end", "speech-processing", "machine-learning", "pytorch", "python", "multi-speaker"]}, {"id": 125524069, "repo_name": "WaveRNN", "full_name": "fatchord/WaveRNN", "description": "WaveRNN Vocoder + TTS", "created": "2018-03-16 14:03:52", "language": "Python", "type": "User", "username": "fatchord", "stars": 1684, "forks": 598, "subscribers": 82, "open_issues": 100, "topics": ["wavernn", "pytorch", "neural-vocoder", "speech-synthesis", "tts", "tacotron", "text-to-speech"]}, {"id": 230359479, "repo_name": "muzero-general", "full_name": "werner-duvaud/muzero-general", "description": "MuZero", "created": "2019-12-27 02:33:51", "language": "Python", "type": "User", "username": "werner-duvaud", "stars": 1676, "forks": 430, "subscribers": 73, "open_issues": 43, "topics": ["muzero", "reinforcement-learning", "alphazero", "pytorch", "python3", "self-learning", "monte-carlo-tree-search", "deep-learning", "deep-reinforcement-learning", "neural-network", "model-based-rl", "rl", "muzero-general", "tensorboard", "gym", "mcts", "alphago", "residual-network", "machine-learning"]}, {"id": 217471471, "repo_name": "few-shot-vid2vid", "full_name": "NVlabs/few-shot-vid2vid", "description": "Pytorch implementation for few-shot photorealistic video-to-video translation.", "created": "2019-10-25 07:00:49", "language": "Python", "type": "Organization", "username": "NVlabs", "stars": 1667, "forks": 269, "subscribers": 119, "open_issues": 23, "topics": []}, {"id": 225904037, "repo_name": "micronet", "full_name": "666DZY666/micronet", "description": "micronet, a model compression and deploy lib. compression: 1\u3001quantization: quantization-aware-training(QAT), High-Bit(>2b)(DoReFa/Quantization and Training of Neural Networks for Efficient Integer-Arithmetic-Only Inference)\u3001Low-Bit(\u22642b)/Ternary and Binary(TWN/BNN/XNOR-Net); post-training-quantization(PTQ), 8-bit(tensorrt); 2\u3001 pruning: normal\u3001regular and group convolutional channel pruning; 3\u3001 group convolution structure; 4\u3001batch-normalization fuse for quantization. deploy: tensorrt, fp32/fp16/int8(ptq-calibration)\u3001op-adapt(upsample)\u3001dynamic_shape", "created": "2019-12-04 15:56:29", "language": "Python", "type": "User", "username": "666DZY666", "stars": 1662, "forks": 424, "subscribers": 38, "open_issues": 87, "topics": ["quantization", "pruning", "dorefa", "twn", "bnn", "xnor-net", "pytorch", "model-compression", "group-convolution", "network-slimming", "neuromorphic-computing", "convolutional-networks", "network-in-network", "integer-arithmetic-only", "quantization-aware-training", "post-training-quantization", "tensorrt", "onnx", "tensorrt-int8-python", "batch-normalization-fuse"]}, {"id": 278003645, "repo_name": "mmpose", "full_name": "open-mmlab/mmpose", "description": "OpenMMLab Pose Estimation Toolbox and Benchmark.", "created": "2020-07-08 06:02:55", "language": "Python", "type": "Organization", "username": "open-mmlab", "stars": 1662, "forks": 398, "subscribers": 33, "open_issues": 51, "topics": ["pose-estimation", "human-pose", "pytorch", "hrnet", "mpii", "benchmark", "cpm", "hourglass", "higher-hrnet", "crowdpose", "ochuman", "freihand", "mspn", "rsn", "udp", "deeppose", "animal-pose-estimation", "mmpose", "hand-pose-estimation", "face-keypoint"]}, {"id": 135230102, "repo_name": "imbalanced-dataset-sampler", "full_name": "ufoym/imbalanced-dataset-sampler", "description": "A (PyTorch) imbalanced dataset sampler for oversampling low frequent classes and undersampling high frequent ones.", "created": "2018-05-29 02:15:17", "language": "Python", "type": "User", "username": "ufoym", "stars": 1658, "forks": 227, "subscribers": 33, "open_issues": 19, "topics": ["pytorch", "imbalanced-data", "image-classification", "data-sampling"]}, {"id": 253846879, "repo_name": "determined", "full_name": "determined-ai/determined", "description": "Determined: Deep Learning Training Platform", "created": "2020-04-07 16:12:29", "language": "Python", "type": "Organization", "username": "determined-ai", "stars": 1651, "forks": 205, "subscribers": 44, "open_issues": 69, "topics": ["deep-learning", "machine-learning", "ml-platform", "ml-infrastructure", "hyperparameter-optimization", "hyperparameter-search", "distributed-training", "pytorch", "tensorflow", "hyperparameter-tuning", "kubernetes", "data-science", "mlops"]}, {"id": 167279881, "repo_name": "PyTorchNLPBook", "full_name": "joosthub/PyTorchNLPBook", "description": "Code and data accompanying Natural Language Processing with PyTorch published by O'Reilly Media https://nlproc.info", "created": "2019-01-24 01:18:13", "language": "Jupyter Notebook", "type": "Organization", "username": "joosthub", "stars": 1645, "forks": 702, "subscribers": 54, "open_issues": 21, "topics": ["natural-language-processing", "nlp", "pytorch-nlp", "pytorch", "pytorch-tutorial", "deep-learning", "deep-neural-networks", "neural-networks", "neural-machine-translation"]}, {"id": 271579390, "repo_name": "RecBole", "full_name": "RUCAIBox/RecBole", "description": "A unified, comprehensive and efficient recommendation library", "created": "2020-06-11 15:18:11", "language": "Python", "type": "Organization", "username": "RUCAIBox", "stars": 1643, "forks": 297, "subscribers": 32, "open_issues": 34, "topics": ["recommender-systems", "collaborative-filtering", "knowledge-graph", "ctr-prediction", "deep-learning", "pytorch", "graph-neural-networks", "sequential-recommendation", "recommendations", "recommendation-system", "recommender"]}, {"id": 277899703, "repo_name": "fairscale", "full_name": "facebookresearch/fairscale", "description": "PyTorch extensions for high performance and large scale training.", "created": "2020-07-07 19:02:01", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 1641, "forks": 159, "subscribers": 35, "open_issues": 63, "topics": []}, {"id": 121013802, "repo_name": "pytorch-fid", "full_name": "mseitzer/pytorch-fid", "description": "Compute FID scores with PyTorch.", "created": "2018-02-10 12:33:06", "language": "Python", "type": "User", "username": "mseitzer", "stars": 1633, "forks": 345, "subscribers": 9, "open_issues": 13, "topics": ["pytorch", "gan", "generative-adversarial-network", "fid-score", "deep-learning", "frechet-distance", "inception-score", "fid"]}, {"id": 109277943, "repo_name": "capsule-networks", "full_name": "gram-ai/capsule-networks", "description": "A PyTorch implementation of the NIPS 2017 paper \"Dynamic Routing Between Capsules\".", "created": "2017-11-02 14:47:54", "language": "Python", "type": "Organization", "username": "gram-ai", "stars": 1632, "forks": 328, "subscribers": 54, "open_issues": 23, "topics": ["capsule-networks", "mnist", "pytorch", "machine-learning"]}, {"id": 194529303, "repo_name": "impersonator", "full_name": "svip-lab/impersonator", "description": "PyTorch implementation of our ICCV 2019 paper:  Liquid Warping GAN: A Unified Framework for Human Motion Imitation, Appearance Transfer and Novel View Synthesis", "created": "2019-06-30 15:05:34", "language": "Python", "type": "Organization", "username": "svip-lab", "stars": 1628, "forks": 305, "subscribers": 65, "open_issues": 34, "topics": ["pytorch", "pose", "gan"]}, {"id": 119845559, "repo_name": "MAML-Pytorch", "full_name": "dragen1860/MAML-Pytorch", "description": "Elegant PyTorch implementation of paper Model-Agnostic Meta-Learning (MAML)", "created": "2018-02-01 14:19:54", "language": "Python", "type": "User", "username": "dragen1860", "stars": 1604, "forks": 338, "subscribers": 21, "open_issues": 37, "topics": []}, {"id": 215773948, "repo_name": "tabnet", "full_name": "dreamquark-ai/tabnet", "description": "PyTorch implementation of TabNet paper : https://arxiv.org/pdf/1908.07442.pdf", "created": "2019-10-17 11:17:32", "language": "Python", "type": "Organization", "username": "dreamquark-ai", "stars": 1603, "forks": 327, "subscribers": 37, "open_issues": 40, "topics": ["pytorch", "deep-neural-networks", "machine-learning-library", "tabular-data", "research-paper", "pytorch-tabnet", "tabnet"]}, {"id": 80437367, "repo_name": "faster_rcnn_pytorch", "full_name": "longcw/faster_rcnn_pytorch", "description": "Faster RCNN with PyTorch", "created": "2017-01-30 16:06:12", "language": "Python", "type": "User", "username": "longcw", "stars": 1602, "forks": 461, "subscribers": 53, "open_issues": 73, "topics": ["pytorch", "detection", "faster-rcnn", "computer-vision"]}, {"id": 272017849, "repo_name": "PyTorch_YOLOv4", "full_name": "WongKinYiu/PyTorch_YOLOv4", "description": "PyTorch implementation of YOLOv4", "created": "2020-06-13 13:50:40", "language": "Python", "type": "User", "username": "WongKinYiu", "stars": 1600, "forks": 497, "subscribers": 30, "open_issues": 279, "topics": []}, {"id": 93135701, "repo_name": "pytorch-semantic-segmentation", "full_name": "zijundeng/pytorch-semantic-segmentation", "description": "PyTorch for Semantic Segmentation", "created": "2017-06-02 06:45:33", "language": "Python", "type": "User", "username": "zijundeng", "stars": 1598, "forks": 395, "subscribers": 39, "open_issues": 49, "topics": ["semantic-segmentation", "deep-learning", "fully-convolutional-networks", "pytorch"]}, {"id": 90321822, "repo_name": "audio", "full_name": "pytorch/audio", "description": "Data manipulation and transformation for audio signal processing, powered by PyTorch", "created": "2017-05-05 00:38:05", "language": "Python", "type": "Organization", "username": "pytorch", "stars": 1598, "forks": 390, "subscribers": 60, "open_issues": 159, "topics": ["audio", "python", "io", "speech", "machine-learning", "pytorch", "audio-processing"]}, {"id": 428967501, "repo_name": "koila", "full_name": "rentruewang/koila", "description": "Prevent PyTorch's `CUDA error: out of memory` in just 1 line of code.", "created": "2021-11-17 08:37:36", "language": "Python", "type": "User", "username": "rentruewang", "stars": 1589, "forks": 54, "subscribers": 10, "open_issues": 9, "topics": ["pytorch", "lazy-evaluation", "out-of-memory", "python", "machine-learning", "deep-learning", "memory-management", "gradient-accumulation", "neural-network"]}, {"id": 265716404, "repo_name": "PyContrast", "full_name": "HobbitLong/PyContrast", "description": "PyTorch implementation of Contrastive Learning methods", "created": "2020-05-21 00:32:53", "language": "Python", "type": "User", "username": "HobbitLong", "stars": 1582, "forks": 150, "subscribers": 45, "open_issues": 14, "topics": []}, {"id": 134010054, "repo_name": "hiddenlayer", "full_name": "waleedka/hiddenlayer", "description": "Neural network graphs and training metrics for PyTorch, Tensorflow, and Keras.", "created": "2018-05-18 22:34:51", "language": "Python", "type": "User", "username": "waleedka", "stars": 1578, "forks": 233, "subscribers": 47, "open_issues": 49, "topics": ["pytorch", "tensorflow", "deeplearning", "visualization", "keras", "tensorboard"]}, {"id": 252421215, "repo_name": "ganspace", "full_name": "harskish/ganspace", "description": "Discovering Interpretable GAN Controls [NeurIPS 2020]", "created": "2020-04-02 10:13:08", "language": "Jupyter Notebook", "type": "User", "username": "harskish", "stars": 1573, "forks": 203, "subscribers": 43, "open_issues": 17, "topics": ["generative-adversarial-network", "gan", "deep-learning", "interactive-visualizations", "image-generation", "pytorch"]}, {"id": 160432571, "repo_name": "pytorch-meta", "full_name": "tristandeleu/pytorch-meta", "description": "A collection of extensions and data-loaders for few-shot learning & meta-learning in PyTorch", "created": "2018-12-04 23:36:45", "language": "Python", "type": "User", "username": "tristandeleu", "stars": 1562, "forks": 203, "subscribers": 40, "open_issues": 42, "topics": ["pytorch", "meta-learning", "few-shot-learning"]}, {"id": 159791040, "repo_name": "Auto-PyTorch", "full_name": "automl/Auto-PyTorch", "description": "Automatic architecture search and hyperparameter optimization for PyTorch", "created": "2018-11-30 08:18:34", "language": "Python", "type": "Organization", "username": "automl", "stars": 1562, "forks": 190, "subscribers": 42, "open_issues": 58, "topics": []}, {"id": 205250704, "repo_name": "DialoGPT", "full_name": "microsoft/DialoGPT", "description": "Large-scale pretraining for dialogue", "created": "2019-08-29 21:07:46", "language": "Python", "type": "Organization", "username": "microsoft", "stars": 1561, "forks": 231, "subscribers": 49, "open_issues": 54, "topics": ["dialogue", "machine-learning", "pytorch", "transformer", "text-generation", "dialogpt", "gpt-2", "text-data", "data-processing"]}, {"id": 156293205, "repo_name": "xla", "full_name": "pytorch/xla", "description": "Enabling PyTorch on Google TPU", "created": "2018-11-05 22:42:04", "language": "C++", "type": "Organization", "username": "pytorch", "stars": 1555, "forks": 248, "subscribers": 45, "open_issues": 145, "topics": []}, {"id": 80733109, "repo_name": "raster-vision", "full_name": "azavea/raster-vision", "description": "An open source framework for deep learning on satellite and aerial imagery.", "created": "2017-02-02 14:31:54", "language": "Python", "type": "Organization", "username": "azavea", "stars": 1536, "forks": 319, "subscribers": 81, "open_issues": 110, "topics": ["deep-learning", "computer-vision", "remote-sensing", "geospatial", "object-detection", "semantic-segmentation", "classification", "machine-learning", "pytorch"]}, {"id": 206260766, "repo_name": "Awesome-pytorch-list-CNVersion", "full_name": "xavier-zy/Awesome-pytorch-list-CNVersion", "description": "Awesome-pytorch-list \u7ffb\u8bd1\u5de5\u4f5c\u8fdb\u884c\u4e2d......", "created": "2019-09-04 07:39:42", "language": "Jupyter Notebook", "type": "User", "username": "xavier-zy", "stars": 1535, "forks": 395, "subscribers": 63, "open_issues": 0, "topics": ["pytorch", "python", "machine-learning", "deep-learning", "tutorials", "papers", "pytorch-tutorials", "data-sicence", "nlp", "nlp-library", "cv", "computer-vision", "facebook", "probabilistic-programming", "utility-library", "neural-network", "pytorch-models", "awsome-pytorch-list", "cnversion"]}, {"id": 82214976, "repo_name": "pytorch-fcn", "full_name": "wkentaro/pytorch-fcn", "description": "PyTorch Implementation of Fully Convolutional Networks. (Training code to reproduce the original result is available.)", "created": "2017-02-16 18:55:08", "language": "Python", "type": "User", "username": "wkentaro", "stars": 1531, "forks": 454, "subscribers": 27, "open_issues": 19, "topics": ["pytorch", "computer-vision", "deep-learning", "semantic-segmentation", "convolutional-networks", "fcn", "fcn8s"]}, {"id": 324526009, "repo_name": "pytorch-GAT", "full_name": "gordicaleksa/pytorch-GAT", "description": "My implementation of the original GAT paper (Veli\u010dkovi\u0107 et al.). I've additionally included the playground.py file for visualizing the Cora dataset, GAT embeddings, an attention mechanism, and entropy histograms. I've supported both Cora (transductive) and PPI (inductive) examples!", "created": "2020-12-26 09:54:52", "language": "Jupyter Notebook", "type": "User", "username": "gordicaleksa", "stars": 1529, "forks": 187, "subscribers": 41, "open_issues": 10, "topics": ["gat", "graph-attention-networks", "attention-mechanism", "self-attention", "pytorch", "python", "attention", "pytorch-gat", "gat-tutorial", "deep-learning", "graph-attention-network", "pytorch-implementation", "jupyter"]}, {"id": 262288044, "repo_name": "SupContrast", "full_name": "HobbitLong/SupContrast", "description": "PyTorch implementation of \"Supervised Contrastive Learning\"  (and SimCLR incidentally)", "created": "2020-05-08 09:58:30", "language": "Python", "type": "User", "username": "HobbitLong", "stars": 1529, "forks": 288, "subscribers": 19, "open_issues": 59, "topics": []}, {"id": 203803065, "repo_name": "deep-learning-time-series", "full_name": "Alro10/deep-learning-time-series", "description": "List of papers, code and experiments using deep learning for time series forecasting", "created": "2019-08-22 13:39:58", "language": "Jupyter Notebook", "type": "User", "username": "Alro10", "stars": 1523, "forks": 365, "subscribers": 71, "open_issues": 5, "topics": ["time-series-forecasting", "lstm-neural-networks", "lstm", "deep-learning", "forecasting-models", "prediction", "python3", "pytorch", "tensorflow", "series-forecasting", "series-classification", "time-series", "time-series-prediction", "time-series-classification", "forecasting-competitions", "demand-forecasting", "recurrent-neural-networks", "series-analysis", "sales-forecasting", "deep-neural-networks"]}, {"id": 280799535, "repo_name": "YOLOv4-pytorch", "full_name": "argusswift/YOLOv4-pytorch", "description": "This is a pytorch repository of YOLOv4, attentive YOLOv4 and mobilenet YOLOv4 with PASCAL VOC and COCO", "created": "2020-07-19 05:36:46", "language": "Python", "type": "User", "username": "argusswift", "stars": 1515, "forks": 334, "subscribers": 47, "open_issues": 119, "topics": ["yolov4", "object-detection", "pytorch", "senet", "cbam", "mobilenetv2", "mobilenetv3", "attention"]}, {"id": 132186783, "repo_name": "talos", "full_name": "autonomio/talos", "description": "Hyperparameter Optimization for TensorFlow, Keras and PyTorch", "created": "2018-05-04 20:36:41", "language": "Python", "type": "Organization", "username": "autonomio", "stars": 1501, "forks": 255, "subscribers": 28, "open_issues": 30, "topics": ["deep-learning", "keras", "keras-tensorflow", "hyperparameter-optimization", "artificial-intelligence", "tensorflow"]}, {"id": 179401695, "repo_name": "MinkowskiEngine", "full_name": "NVIDIA/MinkowskiEngine", "description": "Minkowski Engine is an auto-diff neural network library for high-dimensional sparse tensors", "created": "2019-04-04 01:52:33", "language": "Python", "type": "Organization", "username": "NVIDIA", "stars": 1501, "forks": 213, "subscribers": 37, "open_issues": 92, "topics": ["neural-network", "computer-vision", "sparse-tensors", "convolutional-neural-networks", "semantic-segmentation", "auto-differentiation", "spatio-temporal-analysis", "space-time", "deep-learning", "3d-convolutional-network", "4d-convolutional-neural-network", "high-dimensional-data", "high-dimensional-inference", "trilateral-filter", "3d-vision", "sparse-convolution", "pytorch", "minkowski-engine", "cuda", "sparse-tensor-network"]}, {"id": 171052201, "repo_name": "tch-rs", "full_name": "LaurentMazare/tch-rs", "description": "Rust bindings for the C++ api of PyTorch.", "created": "2019-02-16 21:08:44", "language": "Rust", "type": "User", "username": "LaurentMazare", "stars": 1495, "forks": 126, "subscribers": 32, "open_issues": 77, "topics": ["pytorch", "rust", "machine-learning", "neural-network", "deep-learning"]}, {"id": 118165119, "repo_name": "poincare-embeddings", "full_name": "facebookresearch/poincare-embeddings", "description": "PyTorch implementation of the NIPS-17 paper \"Poincar\u00e9 Embeddings for Learning Hierarchical Representations\"", "created": "2018-01-19 18:53:04", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 1494, "forks": 205, "subscribers": 52, "open_issues": 26, "topics": []}, {"id": 150408999, "repo_name": "CRNN_Chinese_Characters_Rec", "full_name": "Sierkinhane/CRNN_Chinese_Characters_Rec", "description": "(CRNN) Chinese Characters Recognition.", "created": "2018-09-26 10:26:32", "language": "Python", "type": "User", "username": "Sierkinhane", "stars": 1486, "forks": 488, "subscribers": 36, "open_issues": 70, "topics": ["deep-learning", "ocr", "recognition", "pytorch"]}, {"id": 303705119, "repo_name": "lightly", "full_name": "lightly-ai/lightly", "description": "A python library for self-supervised learning on images.", "created": "2020-10-13 13:02:56", "language": "Python", "type": "Organization", "username": "lightly-ai", "stars": 1484, "forks": 105, "subscribers": 24, "open_issues": 70, "topics": ["deep-learning", "self-supervised-learning", "machine-learning", "computer-vision", "pytorch", "embeddings", "contrastive-learning", "active-learning"]}, {"id": 227367327, "repo_name": "PINTO_model_zoo", "full_name": "PINTO0309/PINTO_model_zoo", "description": "A repository that shares tuning results of trained models generated by TensorFlow / Keras. Post-training quantization (Weight Quantization, Integer Quantization, Full Integer Quantization, Float16 Quantization), Quantization-aware training. TensorFlow Lite. OpenVINO. CoreML. TensorFlow.js. TF-TRT. MediaPipe. ONNX. [.tflite,.h5,.pb,saved_model,tfjs,tftrt,mlmodel,.xml/.bin, .onnx]", "created": "2019-12-11 13:02:40", "language": "Python", "type": "User", "username": "PINTO0309", "stars": 1484, "forks": 255, "subscribers": 81, "open_issues": 1, "topics": ["tensorflow", "tensorflow-lite", "openvino", "edgetpu", "mediapipe", "coreml", "tensorflowjs", "tf-trt", "onnx", "pytorch", "tflite", "tfjs", "model-zoo", "models", "keras", "computer-vision", "caffe", "pretrained-models", "model", "tflite-models"]}, {"id": 185413598, "repo_name": "masr", "full_name": "nobody132/masr", "description": "\u4e2d\u6587\u8bed\u97f3\u8bc6\u522b; Mandarin Automatic Speech Recognition;", "created": "2019-05-07 14:00:43", "language": "Python", "type": "User", "username": "nobody132", "stars": 1474, "forks": 424, "subscribers": 57, "open_issues": 86, "topics": ["speech-recognition", "chinese-speech-recognition", "mandarin-chinese", "pytorch"]}, {"id": 197409619, "repo_name": "FARM", "full_name": "deepset-ai/FARM", "description": ":house_with_garden: Fast & easy transfer learning for NLP. Harvesting language models for the industry. Focus on Question Answering.", "created": "2019-07-17 14:51:12", "language": "Python", "type": "Organization", "username": "deepset-ai", "stars": 1472, "forks": 215, "subscribers": 54, "open_issues": 5, "topics": ["language-models", "bert", "nlp", "deep-learning", "transfer-learning", "pytorch", "nlp-library", "nlp-framework", "xlnet-pytorch", "ner", "question-answering", "pretrained-models", "roberta", "germanbert"]}, {"id": 132771879, "repo_name": "ABSA-PyTorch", "full_name": "songyouwei/ABSA-PyTorch", "description": "Aspect Based Sentiment Analysis, PyTorch Implementations.  \u57fa\u4e8e\u65b9\u9762\u7684\u60c5\u611f\u5206\u6790\uff0c\u4f7f\u7528PyTorch\u5b9e\u73b0\u3002", "created": "2018-05-09 14:49:33", "language": "Python", "type": "User", "username": "songyouwei", "stars": 1470, "forks": 454, "subscribers": 37, "open_issues": 76, "topics": ["sentiment-analysis", "aspect-based-sentiment-analysis", "bert", "attention", "natural-language-processing", "nlp", "sentiment-classification"]}, {"id": 80655163, "repo_name": "3DUnetCNN", "full_name": "ellisdg/3DUnetCNN", "description": "Pytorch 3D U-Net Convolution Neural Network (CNN) designed for medical image segmentation", "created": "2017-02-01 19:24:34", "language": "Python", "type": "User", "username": "ellisdg", "stars": 1470, "forks": 613, "subscribers": 54, "open_issues": 3, "topics": []}, {"id": 222452465, "repo_name": "DB", "full_name": "MhLiao/DB", "description": "A PyTorch implementation of \"Real-time Scene Text Detection with Differentiable Binarization\".", "created": "2019-11-18 13:12:21", "language": "Python", "type": "User", "username": "MhLiao", "stars": 1466, "forks": 371, "subscribers": 45, "open_issues": 140, "topics": ["scene-text-detection", "dbnet"]}, {"id": 82934344, "repo_name": "yolo2-pytorch", "full_name": "longcw/yolo2-pytorch", "description": "YOLOv2 in PyTorch", "created": "2017-02-23 14:19:09", "language": "Python", "type": "User", "username": "longcw", "stars": 1454, "forks": 407, "subscribers": 49, "open_issues": 86, "topics": ["pytorch", "yolo", "yolo2", "darknet", "detection"]}, {"id": 266480370, "repo_name": "yolov4-pytorch", "full_name": "bubbliiiing/yolov4-pytorch", "description": "\u8fd9\u662f\u4e00\u4e2aYoloV4-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002", "created": "2020-05-24 06:03:11", "language": "Python", "type": "User", "username": "bubbliiiing", "stars": 1453, "forks": 498, "subscribers": 12, "open_issues": 209, "topics": []}, {"id": 237385601, "repo_name": "Getting-Things-Done-with-Pytorch", "full_name": "curiousily/Getting-Things-Done-with-Pytorch", "description": "Jupyter Notebook tutorials on solving real-world problems with Machine Learning & Deep Learning using PyTorch. Topics: Face detection with Detectron 2, Time Series anomaly detection with LSTM Autoencoders, Object Detection with YOLO v5, Build your first Neural Network, Time Series forecasting for Coronavirus daily cases, Sentiment Analysis with BERT.", "created": "2020-01-31 08:02:53", "language": "Jupyter Notebook", "type": "User", "username": "curiousily", "stars": 1453, "forks": 436, "subscribers": 41, "open_issues": 16, "topics": ["pytorch", "deep-learning", "machine-learning", "computer-vision", "object-detection", "face-detection", "face-recognition", "time-series", "time-series-forecasting", "coronavirus", "tutorial", "lstm", "anomaly-detection", "time-series-anomaly-detection", "bert", "sentiment-analysis", "transformer", "nlp", "transfer-learning", "yolo"]}, {"id": 184425064, "repo_name": "fast-autoaugment", "full_name": "kakaobrain/fast-autoaugment", "description": "Official Implementation of 'Fast AutoAugment' in PyTorch.", "created": "2019-05-01 14:03:49", "language": "Python", "type": "Organization", "username": "kakaobrain", "stars": 1453, "forks": 192, "subscribers": 41, "open_issues": 26, "topics": ["deep-learning", "convolutional-neural-networks", "pytorch", "augmentation", "image-classification", "computer-vision", "distributed", "cnn", "automl", "automated-machine-learning"]}, {"id": 76036762, "repo_name": "GANotebooks", "full_name": "tjwei/GANotebooks", "description": "wgan, wgan2(improved, gp), infogan, and dcgan implementation in  lasagne, keras, pytorch", "created": "2016-12-09 13:15:33", "language": "Jupyter Notebook", "type": "User", "username": "tjwei", "stars": 1451, "forks": 373, "subscribers": 99, "open_issues": 11, "topics": ["wgan", "wgan-gp", "infogan", "lasagne", "keras", "pytorch", "tensorflow", "pix2pix", "dcgan", "dragan", "cyclegan"]}, {"id": 90824610, "repo_name": "pytorch-classification", "full_name": "bearpaw/pytorch-classification", "description": "Classification with PyTorch.", "created": "2017-05-10 05:33:36", "language": "Python", "type": "User", "username": "bearpaw", "stars": 1450, "forks": 525, "subscribers": 31, "open_issues": 30, "topics": ["classification", "cifar10", "cifar100", "imagenet", "pytorch", "resnet", "resnext", "wide-residual-networks", "wrn", "densenet", "preresnet"]}, {"id": 151912385, "repo_name": "attention-module", "full_name": "Jongchan/attention-module", "description": "Official PyTorch code for \"BAM: Bottleneck Attention Module (BMVC2018)\" and \"CBAM: Convolutional Block Attention Module (ECCV2018)\"", "created": "2018-10-07 06:25:26", "language": "Python", "type": "User", "username": "Jongchan", "stars": 1450, "forks": 345, "subscribers": 16, "open_issues": 36, "topics": []}, {"id": 186174301, "repo_name": "gen-efficientnet-pytorch", "full_name": "rwightman/gen-efficientnet-pytorch", "description": "Pretrained EfficientNet, EfficientNet-Lite, MixNet, MobileNetV3 / V2, MNASNet A1 and B1, FBNet, Single-Path NAS", "created": "2019-05-11 19:35:56", "language": "Python", "type": "User", "username": "rwightman", "stars": 1442, "forks": 201, "subscribers": 44, "open_issues": 2, "topics": ["mobilenetv3", "mnasnet", "fbnet", "pytorch", "pretrained-models", "onnx", "caffe2", "efficientnet"]}, {"id": 53344691, "repo_name": "pyannote-audio", "full_name": "pyannote/pyannote-audio", "description": "Neural building blocks for speaker diarization: speech activity detection, speaker change detection, overlapped speech detection, speaker embedding ", "created": "2016-03-07 17:26:15", "language": "Python", "type": "Organization", "username": "pyannote", "stars": 1442, "forks": 305, "subscribers": 44, "open_issues": 25, "topics": ["pytorch", "speech-processing", "speaker-diarization", "speech-activity-detection", "speaker-change-detection", "speaker-embedding", "voice-activity-detection", "pretrained-models", "overlapped-speech-detection", "speaker-recognition", "speaker-verification"]}, {"id": 180529915, "repo_name": "pytorch-loss", "full_name": "CoinCheung/pytorch-loss", "description": "label-smooth, amsoftmax, partial-fc, focal-loss, triplet-loss, lovasz-softmax. Maybe useful ", "created": "2019-04-10 07:48:03", "language": "Python", "type": "User", "username": "CoinCheung", "stars": 1430, "forks": 266, "subscribers": 20, "open_issues": 5, "topics": ["pytorch", "dice-loss", "triplet-loss", "amsoftmax", "cuda", "label-smoothing", "focal-loss", "mish", "ema", "lovasz-softmax", "partial-fc"]}, {"id": 166202080, "repo_name": "pytorch_GAN_zoo", "full_name": "facebookresearch/pytorch_GAN_zoo", "description": "A mix of GAN implementations including progressive growing", "created": "2019-01-17 09:52:30", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 1427, "forks": 238, "subscribers": 34, "open_issues": 32, "topics": []}, {"id": 81621587, "repo_name": "pytorch-generative-adversarial-networks", "full_name": "devnag/pytorch-generative-adversarial-networks", "description": "A very simple generative adversarial network (GAN) in PyTorch", "created": "2017-02-11 01:15:16", "language": "Python", "type": "User", "username": "devnag", "stars": 1425, "forks": 465, "subscribers": 51, "open_issues": 3, "topics": ["pytorch", "gan", "gans", "machine-learning", "deep-learning"]}, {"id": 280260739, "repo_name": "swav", "full_name": "facebookresearch/swav", "description": "PyTorch implementation of SwAV https//arxiv.org/abs/2006.09882", "created": "2020-07-16 21:17:58", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 1425, "forks": 207, "subscribers": 40, "open_issues": 22, "topics": []}, {"id": 225027908, "repo_name": "EfficientDet.Pytorch", "full_name": "toandaominh1997/EfficientDet.Pytorch", "description": "Implementation EfficientDet: Scalable and Efficient Object Detection in PyTorch", "created": "2019-11-30 14:57:27", "language": "Python", "type": "User", "username": "toandaominh1997", "stars": 1424, "forks": 314, "subscribers": 42, "open_issues": 114, "topics": ["object-detection", "computer-vision", "pytorch", "multibox", "efficientnet", "focalloss", "pascal-voc", "nms", "detection", "coco", "efficientdet-d0", "demo"]}, {"id": 151491863, "repo_name": "second.pytorch", "full_name": "traveller59/second.pytorch", "description": "SECOND for KITTI/NuScenes object detection", "created": "2018-10-03 23:05:52", "language": "Python", "type": "User", "username": "traveller59", "stars": 1417, "forks": 640, "subscribers": 45, "open_issues": 284, "topics": ["kitti", "object-detection", "voxelnet", "nuscenes"]}, {"id": 208358969, "repo_name": "ClassyVision", "full_name": "facebookresearch/ClassyVision", "description": "An end-to-end PyTorch framework for image and video classification", "created": "2019-09-13 22:54:44", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 1414, "forks": 249, "subscribers": 50, "open_issues": 53, "topics": []}, {"id": 173498120, "repo_name": "lightweight-human-pose-estimation.pytorch", "full_name": "Daniil-Osokin/lightweight-human-pose-estimation.pytorch", "description": "Fast and accurate human pose estimation in PyTorch. Contains implementation of \"Real-time 2D Multi-Person Pose Estimation on CPU: Lightweight OpenPose\" paper.", "created": "2019-03-02 20:57:11", "language": "Python", "type": "User", "username": "Daniil-Osokin", "stars": 1412, "forks": 366, "subscribers": 30, "open_issues": 2, "topics": ["human-pose-estimation", "deep-learning", "real-time", "openpose", "openvino", "coco-keypoints-detection", "mscoco-keypoint", "lightweight", "pytorch", "lightweight-openpose", "pose-estimation"]}, {"id": 113388795, "repo_name": "Non-local_pytorch", "full_name": "AlexHex7/Non-local_pytorch", "description": "Implementation of Non-local Block.", "created": "2017-12-07 01:49:30", "language": "Python", "type": "User", "username": "AlexHex7", "stars": 1408, "forks": 277, "subscribers": 19, "open_issues": 27, "topics": ["non-local", "pytorch", "non-local-block", "nonlocal", "nl-map", "automatic-mixed-precision-training", "amp"]}, {"id": 185401193, "repo_name": "transfer-learning-conv-ai", "full_name": "huggingface/transfer-learning-conv-ai", "description": "\ud83e\udd84 State-of-the-Art Conversational AI with Transfer Learning", "created": "2019-05-07 12:51:08", "language": "Python", "type": "Organization", "username": "huggingface", "stars": 1407, "forks": 368, "subscribers": 70, "open_issues": 56, "topics": ["nlp", "neural-networks", "chatbots", "deep-learning", "pytorch", "transfer-learning", "gpt", "gpt-2", "dialog"]}, {"id": 357011329, "repo_name": "yolor", "full_name": "WongKinYiu/yolor", "description": "implementation of paper - You Only Learn One Representation: Unified Network for Multiple Tasks (https://arxiv.org/abs/2105.04206)", "created": "2021-04-12 00:25:05", "language": "Python", "type": "User", "username": "WongKinYiu", "stars": 1407, "forks": 369, "subscribers": 31, "open_issues": 136, "topics": ["yolov4", "scaled-yolov4", "yolov4-csp", "darknet", "pytorch", "implicit", "explicit", "yolor", "yolo", "representation", "unified-network"]}, {"id": 88309501, "repo_name": "pointnet.pytorch", "full_name": "fxia22/pointnet.pytorch", "description": "pytorch implementation for \"PointNet: Deep Learning on Point Sets for 3D Classification and Segmentation\"  https://arxiv.org/abs/1612.00593", "created": "2017-04-14 23:05:17", "language": "Python", "type": "User", "username": "fxia22", "stars": 1405, "forks": 488, "subscribers": 25, "open_issues": 45, "topics": []}, {"id": 136846372, "repo_name": "garage", "full_name": "rlworkgroup/garage", "description": "A toolkit for reproducible reinforcement learning research.", "created": "2018-06-10 21:31:23", "language": "Python", "type": "Organization", "username": "rlworkgroup", "stars": 1405, "forks": 249, "subscribers": 54, "open_issues": 222, "topics": ["rl-algorithms", "reproducibility", "pytorch", "tensorflow"]}, {"id": 181388576, "repo_name": "NeuronBlocks", "full_name": "microsoft/NeuronBlocks", "description": "NLP DNN Toolkit - Building Your NLP DNN Models Like Playing Lego", "created": "2019-04-15 01:01:24", "language": "Python", "type": "Organization", "username": "microsoft", "stars": 1405, "forks": 194, "subscribers": 65, "open_issues": 7, "topics": ["question-answering", "deep-learning", "pytorch", "natural-language-processing", "text-classification", "artificial-intelligence", "dnn", "qna", "text-matching", "knowledge-distillation", "model-compression", "sequence-labeling"]}, {"id": 196937919, "repo_name": "Chinese-XLNet", "full_name": "ymcui/Chinese-XLNet", "description": "Pre-Trained Chinese XLNet\uff08\u4e2d\u6587XLNet\u9884\u8bad\u7ec3\u6a21\u578b\uff09", "created": "2019-07-15 06:30:37", "language": "Python", "type": "User", "username": "ymcui", "stars": 1403, "forks": 262, "subscribers": 31, "open_issues": 0, "topics": ["natural-language-processing", "xlnet", "tensorflow", "pytorch", "nlp"]}, {"id": 356085273, "repo_name": "Anime2Sketch", "full_name": "Mukosame/Anime2Sketch", "description": "A sketch extractor for anime/illustration.", "created": "2021-04-09 00:26:49", "language": "Python", "type": "User", "username": "Mukosame", "stars": 1403, "forks": 102, "subscribers": 21, "open_issues": 4, "topics": ["pytorch", "deep-learning", "gan", "anime", "sketch", "wacv", "gradio", "comic", "manga", "computer-vision", "generative-adversarial-network", "image-generation", "gans"]}, {"id": 228241233, "repo_name": "KAIR", "full_name": "cszn/KAIR", "description": "Image Restoration Toolbox (PyTorch). Training and testing codes for DPIR, USRNet, DnCNN, FFDNet, SRMD, DPSR, BSRGAN, SwinIR", "created": "2019-12-15 19:42:25", "language": "Python", "type": "User", "username": "cszn", "stars": 1400, "forks": 339, "subscribers": 38, "open_issues": 44, "topics": ["image-restoration", "denoising", "super-resolution", "sisr", "pytorch", "toolbox", "dncnn", "usrnet", "ffdnet", "srmd", "esrgan", "dpsr", "flops", "deep-learning", "swinir", "bsrgan"]}, {"id": 333857397, "repo_name": "lightning-flash", "full_name": "PyTorchLightning/lightning-flash", "description": "Your PyTorch AI Factory - Flash enables you to easily configure and run complex AI recipes for over 15 tasks across 7 data domains", "created": "2021-01-28 18:47:16", "language": "Python", "type": "Organization", "username": "PyTorchLightning", "stars": 1400, "forks": 151, "subscribers": 33, "open_issues": 42, "topics": ["pytorch-lightning", "deep-learning", "machine-learning", "pytorch", "tasks-flash", "classification", "tabular-data", "object-detection", "icevision", "open3d", "fiftyone", "torch-geometric", "pytorch-video"]}, {"id": 92970515, "repo_name": "efficient_densenet_pytorch", "full_name": "gpleiss/efficient_densenet_pytorch", "description": "A memory-efficient implementation of DenseNets", "created": "2017-05-31 17:19:25", "language": "Python", "type": "User", "username": "gpleiss", "stars": 1395, "forks": 322, "subscribers": 42, "open_issues": 10, "topics": ["densenet", "pytorch", "deep-learning"]}, {"id": 95684188, "repo_name": "pytorch-seq2seq", "full_name": "IBM/pytorch-seq2seq", "description": "An open source framework for seq2seq models in PyTorch.", "created": "2017-06-28 15:27:04", "language": "Python", "type": "Organization", "username": "IBM", "stars": 1383, "forks": 359, "subscribers": 58, "open_issues": 37, "topics": ["pytorch", "seq2seq", "deeplearning"]}, {"id": 173759577, "repo_name": "Pointnet_Pointnet2_pytorch", "full_name": "yanx27/Pointnet_Pointnet2_pytorch", "description": "PointNet and PointNet++ implemented by pytorch (pure python) and on ModelNet, ShapeNet and S3DIS.", "created": "2019-03-04 14:24:30", "language": "Python", "type": "User", "username": "yanx27", "stars": 1381, "forks": 425, "subscribers": 14, "open_issues": 53, "topics": ["pointnet", "pointnet2", "pointcloud", "segmentation", "s3dis", "modelnet", "shapenet", "pytorch", "classification", "visualization", "point-cloud"]}, {"id": 275276531, "repo_name": "pytorch_geometric_temporal", "full_name": "benedekrozemberczki/pytorch_geometric_temporal", "description": "PyTorch Geometric Temporal: Spatiotemporal Signal Processing with Neural Machine Learning Models (CIKM 2021)", "created": "2020-06-27 01:11:33", "language": "Python", "type": "User", "username": "benedekrozemberczki", "stars": 1378, "forks": 201, "subscribers": 38, "open_issues": 4, "topics": ["pytorch", "graph-neural-networks", "temporal-networks", "temporal-graphs", "gcn", "graph-convolutional-networks", "deep-learning", "network-science", "temporal-data", "node-embedding", "network-embedding", "graph-embedding", "spatial-data", "spatial-analysis", "spatio-temporal-data", "spatio-temporal-analysis", "gnn", "graph-convolution", "spatiotemporal"]}, {"id": 281076856, "repo_name": "mlreef", "full_name": "MLReef/mlreef", "description": "The collaboration workspace for Machine Learning", "created": "2020-07-20 09:45:29", "language": "Kotlin", "type": "Organization", "username": "MLReef", "stars": 1377, "forks": 319, "subscribers": 110, "open_issues": 0, "topics": ["mlops", "mlops-environment", "artificial-intelligence", "machine-learning", "machine-learning-algorithms", "deep-learning", "deeplearning", "models", "tensorflow", "pytorch", "data-science", "mxnet", "reproducibility"]}, {"id": 147058643, "repo_name": "machine-learning", "full_name": "teddylee777/machine-learning", "description": "\uba38\uc2e0\ub7ec\ub2dd \uc785\ubb38\uc790 \ud639\uc740 \uc2a4\ud130\ub514\ub97c \uc900\ube44\ud558\uc2dc\ub294 \ubd84\ub4e4\uc5d0\uac8c \ub3c4\uc6c0\uc774 \ub418\uace0\uc790 \ub9cc\ub4e0 repository\uc785\ub2c8\ub2e4. (This repository is intented for helping whom are interested in machine learning study)", "created": "2018-09-02 05:55:25", "language": "Jupyter Notebook", "type": "User", "username": "teddylee777", "stars": 1374, "forks": 518, "subscribers": 47, "open_issues": 1, "topics": ["machine-learning", "jupyter-notebook", "python", "python3", "lectures", "tensorflow-tutorials", "tensorflow", "pytorch", "pandas", "pandas-tutorial", "tensorflow2", "pytorch-tutorial", "tensorflow-examples", "deep-learning", "gan", "natural-language-processing", "neural-networks", "neural-network", "udacity", "machine-learning-study"]}, {"id": 137539238, "repo_name": "petastorm", "full_name": "uber/petastorm", "description": "Petastorm library enables single machine or distributed training and evaluation of deep learning models from datasets in Apache Parquet format. It supports ML frameworks such as Tensorflow, Pytorch, and PySpark and can be used from pure Python code.", "created": "2018-06-15 23:15:29", "language": "Python", "type": "Organization", "username": "uber", "stars": 1369, "forks": 237, "subscribers": 41, "open_issues": 141, "topics": ["tensorflow", "pytorch", "deep-learning", "machine-learning", "sysml", "pyspark", "pyarrow", "parquet", "parquet-files"]}, {"id": 178075572, "repo_name": "kserve", "full_name": "kserve/kserve", "description": "Serverless Inferencing on Kubernetes", "created": "2019-03-27 21:14:14", "language": "Jsonnet", "type": "Organization", "username": "kserve", "stars": 1369, "forks": 559, "subscribers": 47, "open_issues": 235, "topics": ["knative", "machine-learning", "model-interpretability", "model-serving", "istio", "kubeflow", "kubeflow-pipelines", "artificial-intelligence", "tensorflow", "pytorch", "sklearn", "xgboost", "kubernetes", "k8s", "service-mesh", "kserve"]}, {"id": 249562709, "repo_name": "SOLO", "full_name": "WXinlong/SOLO", "description": "SOLO and SOLOv2 for instance segmentation, ECCV 2020 & NeurIPS 2020.", "created": "2020-03-23 22:58:51", "language": "Python", "type": "User", "username": "WXinlong", "stars": 1367, "forks": 257, "subscribers": 36, "open_issues": 104, "topics": ["solo", "instance-segmentation", "object-detection", "pytorch", "solov2"]}, {"id": 141583609, "repo_name": "home", "full_name": "apachecn/home", "description": "ApacheCN  \u5f00\u6e90\u7ec4\u7ec7\uff1a\u516c\u544a\u3001\u4ecb\u7ecd\u3001\u6210\u5458\u3001\u6d3b\u52a8\u3001\u4ea4\u6d41\u65b9\u5f0f", "created": "2018-07-19 13:29:04", "language": "CSS", "type": "Organization", "username": "apachecn", "stars": 1367, "forks": 198, "subscribers": 93, "open_issues": 39, "topics": ["ml", "dl", "python", "pytorch", "solidity", "spark"]}, {"id": 76109394, "repo_name": "tnt", "full_name": "pytorch/tnt", "description": "Simple tools for logging and visualizing, loading and training", "created": "2016-12-10 11:49:58", "language": "Python", "type": "Organization", "username": "pytorch", "stars": 1364, "forks": 196, "subscribers": 45, "open_issues": 31, "topics": ["pytorch", "neural-network", "python", "machine-learning", "deep-learning", "visdom", "reinforcement-learning"]}, {"id": 119073677, "repo_name": "Synchronized-BatchNorm-PyTorch", "full_name": "vacancy/Synchronized-BatchNorm-PyTorch", "description": "Synchronized Batch Normalization implementation in PyTorch.", "created": "2018-01-26 16:13:54", "language": "Python", "type": "User", "username": "vacancy", "stars": 1362, "forks": 170, "subscribers": 21, "open_issues": 10, "topics": []}, {"id": 281299787, "repo_name": "contrastive-unpaired-translation", "full_name": "taesungp/contrastive-unpaired-translation", "description": "Contrastive unpaired image-to-image translation, faster and lighter training than cyclegan (ECCV 2020, in PyTorch)", "created": "2020-07-21 05:00:29", "language": "Python", "type": "User", "username": "taesungp", "stars": 1358, "forks": 273, "subscribers": 29, "open_issues": 60, "topics": ["pytorch", "computervision", "deeplearning", "cyclegan", "image-generation", "computer-vision", "computer-graphics", "image-manipulation", "gans", "generative-adversarial-network"]}, {"id": 137223715, "repo_name": "pytorch-openai-transformer-lm", "full_name": "huggingface/pytorch-openai-transformer-lm", "description": "\ud83d\udc25A PyTorch implementation of OpenAI's finetuned transformer language model with a script to import the weights pre-trained by OpenAI", "created": "2018-06-13 14:02:41", "language": "Python", "type": "Organization", "username": "huggingface", "stars": 1352, "forks": 268, "subscribers": 78, "open_issues": 24, "topics": ["neural-networks", "pytorch", "openai", "language-model", "transformer"]}, {"id": 98252973, "repo_name": "ngraph", "full_name": "NervanaSystems/ngraph", "description": "nGraph has moved to OpenVINO", "created": "2017-07-25 02:02:38", "language": "C++", "type": "Organization", "username": "NervanaSystems", "stars": 1352, "forks": 236, "subscribers": 132, "open_issues": 2, "topics": ["ngraph", "tensorflow", "mxnet", "deep-learning", "compiler", "performance", "onnx", "paddlepaddle", "neural-network", "deep-neural-networks", "pytorch", "caffe2"]}, {"id": 99848212, "repo_name": "pytorch-ssim", "full_name": "Po-Hsun-Su/pytorch-ssim", "description": "pytorch structural similarity (SSIM) loss", "created": "2017-08-09 20:04:28", "language": "Python", "type": "User", "username": "Po-Hsun-Su", "stars": 1351, "forks": 312, "subscribers": 22, "open_issues": 26, "topics": ["pytorch", "image-processing", "image-analysis"]}, {"id": 206856753, "repo_name": "higher", "full_name": "facebookresearch/higher", "description": "higher is a pytorch library allowing users to obtain higher order gradients over losses spanning training loops rather than individual training steps.", "created": "2019-09-06 18:58:36", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 1344, "forks": 96, "subscribers": 28, "open_issues": 53, "topics": []}, {"id": 111989231, "repo_name": "RFBNet", "full_name": "GOATmessi7/RFBNet", "description": "Receptive Field Block Net for Accurate and Fast Object Detection, ECCV 2018", "created": "2017-11-25 08:41:13", "language": "Python", "type": "User", "username": "GOATmessi7", "stars": 1340, "forks": 353, "subscribers": 47, "open_issues": 57, "topics": ["detection", "pytorch", "mobilenet", "rfbnet"]}, {"id": 168538768, "repo_name": "AutoDL-Projects", "full_name": "D-X-Y/AutoDL-Projects", "description": "Automated deep learning algorithms implemented in PyTorch.", "created": "2019-01-31 14:30:50", "language": "Python", "type": "User", "username": "D-X-Y", "stars": 1339, "forks": 263, "subscribers": 45, "open_issues": 5, "topics": ["nas", "neural-architecture-search", "automl", "pytorch", "autodl"]}, {"id": 165027131, "repo_name": "TorchSeg", "full_name": "ycszen/TorchSeg", "description": "Fast, modular reference implementation and easy training of Semantic Segmentation algorithms in PyTorch.", "created": "2019-01-10 09:06:41", "language": "Python", "type": "User", "username": "ycszen", "stars": 1337, "forks": 255, "subscribers": 50, "open_issues": 39, "topics": []}, {"id": 310815780, "repo_name": "ecco", "full_name": "jalammar/ecco", "description": "Explain, analyze, and visualize NLP language models. Ecco creates interactive visualizations directly in Jupyter notebooks explaining the behavior of Transformer-based language models (like GPT2, BERT, RoBERTA, T5, and T0).", "created": "2020-11-07 10:06:34", "language": "Jupyter Notebook", "type": "User", "username": "jalammar", "stars": 1334, "forks": 88, "subscribers": 18, "open_issues": 15, "topics": ["nlp", "visualization", "explorables", "natural-language-processing", "pytorch", "language-models"]}, {"id": 142935060, "repo_name": "InsightFace_Pytorch", "full_name": "TreB1eN/InsightFace_Pytorch", "description": "Pytorch0.4.1 codes for InsightFace", "created": "2018-07-30 22:38:04", "language": "Jupyter Notebook", "type": "User", "username": "TreB1eN", "stars": 1327, "forks": 373, "subscribers": 28, "open_issues": 127, "topics": []}, {"id": 152529085, "repo_name": "rethinking-network-pruning", "full_name": "Eric-mingjie/rethinking-network-pruning", "description": "Rethinking the Value of Network Pruning (Pytorch) (ICLR 2019)", "created": "2018-10-11 04:03:00", "language": "Python", "type": "User", "username": "Eric-mingjie", "stars": 1326, "forks": 290, "subscribers": 34, "open_issues": 21, "topics": ["convolutional-neural-networks", "network-pruning", "deep-learning", "pytorch"]}, {"id": 110639332, "repo_name": "BicycleGAN", "full_name": "junyanz/BicycleGAN", "description": "Toward Multimodal Image-to-Image Translation", "created": "2017-11-14 04:12:01", "language": "Python", "type": "User", "username": "junyanz", "stars": 1326, "forks": 245, "subscribers": 47, "open_issues": 15, "topics": ["pytorch", "pix2pix", "gans", "generative-adversarial-network", "deep-learning"]}, {"id": 137240967, "repo_name": "PWC-Net", "full_name": "NVlabs/PWC-Net", "description": "PWC-Net: CNNs for Optical Flow Using Pyramid, Warping, and Cost Volume, CVPR 2018 (Oral)", "created": "2018-06-13 16:17:35", "language": "Python", "type": "Organization", "username": "NVlabs", "stars": 1326, "forks": 317, "subscribers": 46, "open_issues": 54, "topics": ["deeplearning", "optical-flow", "computer-vision", "pytorch", "caffe", "cvpr2018", "pwc-net"]}, {"id": 124605846, "repo_name": "knowledge-distillation-pytorch", "full_name": "peterliht/knowledge-distillation-pytorch", "description": "A PyTorch implementation for exploring deep and shallow knowledge distillation (KD) experiments with flexibility", "created": "2018-03-09 23:58:31", "language": "Python", "type": "User", "username": "peterliht", "stars": 1323, "forks": 281, "subscribers": 20, "open_issues": 17, "topics": ["pytorch", "knowledge-distillation", "deep-neural-networks", "cifar10", "model-compression", "dark-knowledge", "computer-vision"]}, {"id": 91319759, "repo_name": "mean-teacher", "full_name": "CuriousAI/mean-teacher", "description": "A state-of-the-art semi-supervised method for image recognition", "created": "2017-05-15 09:29:00", "language": "Python", "type": "Organization", "username": "CuriousAI", "stars": 1319, "forks": 304, "subscribers": 60, "open_issues": 34, "topics": ["deep-learning", "semi-supervised-learning", "nips-2017", "tensorflow", "pytorch"]}, {"id": 77100991, "repo_name": "dlcv_for_beginners", "full_name": "frombeijingwithlove/dlcv_for_beginners", "description": "\u300a\u6df1\u5ea6\u5b66\u4e60\u4e0e\u8ba1\u7b97\u673a\u89c6\u89c9\u300b\u914d\u5957\u4ee3\u7801", "created": "2016-12-22 01:54:49", "language": "Python", "type": "User", "username": "frombeijingwithlove", "stars": 1319, "forks": 640, "subscribers": 92, "open_issues": 31, "topics": ["computer-vision", "book", "beginners", "example", "deep-learning", "caffe", "mxnet", "pytorch", "u-net", "model-fusion", "gan", "siamese", "adversarial", "unet", "classification", "regression", "segmentation", "detection", "generative"]}, {"id": 252383936, "repo_name": "EffectivePyTorch", "full_name": "vahidk/EffectivePyTorch", "description": "PyTorch tutorials and best practices.", "created": "2020-04-02 07:21:57", "language": null, "type": "User", "username": "vahidk", "stars": 1317, "forks": 141, "subscribers": 48, "open_issues": 0, "topics": ["pytorch", "neural-network", "deep-learning", "machine-learning", "ebook"]}, {"id": 135996045, "repo_name": "VideoSuperResolution", "full_name": "LoSealL/VideoSuperResolution", "description": "A collection of state-of-the-art video or single-image super-resolution architectures, reimplemented in tensorflow. ", "created": "2018-06-04 08:42:05", "language": "Python", "type": "User", "username": "LoSealL", "stars": 1317, "forks": 282, "subscribers": 51, "open_issues": 5, "topics": ["super-resolution", "tensorflow", "srcnn", "dncnn", "vdsr", "srgan", "rdn", "srmd", "dbpn", "edsr", "carn", "rcan", "vespcn", "vsr", "frvsr", "pytorch", "ntire2019"]}, {"id": 79242355, "repo_name": "attention-transfer", "full_name": "szagoruyko/attention-transfer", "description": "Improving Convolutional Networks via Attention Transfer (ICLR 2017)", "created": "2017-01-17 15:38:09", "language": "Jupyter Notebook", "type": "User", "username": "szagoruyko", "stars": 1312, "forks": 264, "subscribers": 50, "open_issues": 12, "topics": ["pytorch", "knowledge-distillation", "attention", "deep-learning"]}, {"id": 362674457, "repo_name": "computer-vision-in-action", "full_name": "Charmve/computer-vision-in-action", "description": "\u5b66\u4e60\u95ed\u73af\u300a\u8ba1\u7b97\u673a\u89c6\u89c9\u5b9e\u6218\u6f14\u7ec3\uff1a\u7b97\u6cd5\u4e0e\u5e94\u7528\u300b\u4e2d\u6587\u7535\u5b50\u4e66\u3001\u6e90\u7801\u3001\u8bfb\u8005\u4ea4\u6d41\u793e\u533a\uff08\u6301\u7eed\u66f4\u65b0\u4e2d ...\uff09 \ud83d\udcd8 \u5728\u7ebf\u7535\u5b50\u4e66 https://charmve.github.io/computer-vision-in-action/   \ud83d\udc47\u9879\u76ee\u4e3b\u9875", "created": "2021-04-29 03:08:48", "language": "Jupyter Notebook", "type": "User", "username": "Charmve", "stars": 1312, "forks": 182, "subscribers": 23, "open_issues": 50, "topics": ["tutorial", "charmve", "machine-learning", "computer-vision", "deep-learning", "deep-learning-tutorial", "books", "handbook", "computer-vision-algorithms", "in-action", "pytorch", "transformer", "ipynb", "jupyter-notebook", "colab-notebook", "notebook", "neural-network"]}, {"id": 337811507, "repo_name": "TransGAN", "full_name": "VITA-Group/TransGAN", "description": "[NeurIPS\u20182021] \"TransGAN: Two Pure Transformers Can Make One Strong GAN, and That Can Scale Up\", Yifan Jiang, Shiyu Chang, Zhangyang Wang", "created": "2021-02-10 18:11:54", "language": "Python", "type": "Organization", "username": "VITA-Group", "stars": 1310, "forks": 154, "subscribers": 32, "open_issues": 7, "topics": ["transformer", "transformer-encoder", "transformer-models", "gan", "pytorch"]}, {"id": 175288298, "repo_name": "dl-colab-notebooks", "full_name": "tugstugi/dl-colab-notebooks", "description": "Try out  deep learning models online on Google Colab", "created": "2019-03-12 20:05:49", "language": "Jupyter Notebook", "type": "User", "username": "tugstugi", "stars": 1308, "forks": 398, "subscribers": 65, "open_issues": 10, "topics": ["colab-notebook", "deep-learning", "deep-neural-networks", "cnn", "jupyter-notebook", "jupyter-notebooks", "pytorch", "tensorflow", "google-colab", "google-colaboratory"]}, {"id": 215969476, "repo_name": "asteroid", "full_name": "asteroid-team/asteroid", "description": "The PyTorch-based audio source separation toolkit for researchers", "created": "2019-10-18 07:48:15", "language": "Python", "type": "Organization", "username": "asteroid-team", "stars": 1306, "forks": 306, "subscribers": 50, "open_issues": 37, "topics": ["source-separation", "speech-separation", "audio-separation", "speech-enhancement", "deep-learning", "pytorch", "pretrained-models"]}, {"id": 263163293, "repo_name": "big_transfer", "full_name": "google-research/big_transfer", "description": "Official repository for the \"Big Transfer (BiT): General Visual Representation Learning\" paper.", "created": "2020-05-11 21:34:13", "language": "Python", "type": "Organization", "username": "google-research", "stars": 1305, "forks": 155, "subscribers": 46, "open_issues": 35, "topics": ["deep-learning", "convolutional-neural-networks", "imagenet", "tensorflow2", "jax", "pytorch", "transfer-learning"]}, {"id": 250391956, "repo_name": "efficientdet-pytorch", "full_name": "rwightman/efficientdet-pytorch", "description": "A PyTorch impl of EfficientDet faithful to the original Google impl w/ ported weights", "created": "2020-03-26 23:09:20", "language": "Python", "type": "User", "username": "rwightman", "stars": 1304, "forks": 243, "subscribers": 29, "open_issues": 10, "topics": ["efficientdet", "efficientnet", "object-detection", "semantic-segmentation", "pytorch"]}, {"id": 186289660, "repo_name": "PIFu", "full_name": "shunsukesaito/PIFu", "description": "This repository contains the code for the paper \"PIFu: Pixel-Aligned Implicit Function for High-Resolution Clothed Human Digitization\"", "created": "2019-05-12 18:24:48", "language": "Python", "type": "User", "username": "shunsukesaito", "stars": 1298, "forks": 274, "subscribers": 61, "open_issues": 30, "topics": ["pifu", "pytorch", "iccv2019", "fashion", "human", "3d-reconstruction", "arvr", "3d-printing", "geometry-processing", "computer-graphics"]}, {"id": 181334387, "repo_name": "pytorch-styleguide", "full_name": "IgorSusmelj/pytorch-styleguide", "description": "An unofficial styleguide and best practices summary for PyTorch", "created": "2019-04-14 16:05:25", "language": "Python", "type": "User", "username": "IgorSusmelj", "stars": 1296, "forks": 116, "subscribers": 42, "open_issues": 7, "topics": ["pytorch", "styleguide", "best-practices"]}, {"id": 224148738, "repo_name": "torchio", "full_name": "fepegar/torchio", "description": "TorchIO: medical imaging for deep learning.", "created": "2019-11-26 09:10:09", "language": "Python", "type": "User", "username": "fepegar", "stars": 1292, "forks": 170, "subscribers": 14, "open_issues": 31, "topics": ["pytorch", "medical-image-computing", "deep-learning", "data-augmentation", "medical-images", "machine-learning", "python", "medical-image-processing", "medical-image-analysis", "medical-imaging-datasets", "medical-imaging-with-deep-learning", "augmentation"]}, {"id": 137525604, "repo_name": "SuperPointPretrainedNetwork", "full_name": "magicleap/SuperPointPretrainedNetwork", "description": "PyTorch pre-trained model for real-time interest point detection, description, and sparse tracking (https://arxiv.org/abs/1712.07629)", "created": "2018-06-15 19:41:36", "language": "Python", "type": "Organization", "username": "magicleap", "stars": 1291, "forks": 292, "subscribers": 53, "open_issues": 11, "topics": []}, {"id": 90277084, "repo_name": "wgan-gp", "full_name": "caogang/wgan-gp", "description": "A pytorch implementation of Paper \"Improved Training of Wasserstein GANs\"", "created": "2017-05-04 15:07:18", "language": "Python", "type": "User", "username": "caogang", "stars": 1287, "forks": 328, "subscribers": 19, "open_issues": 31, "topics": ["wgan-gp", "pytorch"]}, {"id": 180380038, "repo_name": "EDVR", "full_name": "xinntao/EDVR", "description": "Winning Solution in NTIRE19 Challenges on Video Restoration and Enhancement (CVPR19 Workshops) - Video Restoration with Enhanced Deformable Convolutional Networks. EDVR has been merged into BasicSR and this repo is a mirror of BasicSR.", "created": "2019-04-09 14:03:10", "language": "Python", "type": "User", "username": "xinntao", "stars": 1286, "forks": 305, "subscribers": 55, "open_issues": 120, "topics": ["basicsr", "edvr", "pytorch"]}, {"id": 219796516, "repo_name": "pytorch-cpp", "full_name": "prabhuomkar/pytorch-cpp", "description": "C++ Implementation of PyTorch Tutorials for Everyone", "created": "2019-11-05 16:52:01", "language": "C++", "type": "User", "username": "prabhuomkar", "stars": 1284, "forks": 176, "subscribers": 54, "open_issues": 3, "topics": ["cplusplus", "artificial-intelligence", "machine-learning", "pytorch", "torch", "tensors", "neural-network", "autograd", "libtorch", "recurrent-neural-network", "tutorial", "generative-adversarial-network", "convolutional-neural-network", "language-model", "interactive-tutorials", "colab", "datasets", "scriptmodule-files"]}, {"id": 313407033, "repo_name": "stylized-neural-painting", "full_name": "jiupinjia/stylized-neural-painting", "description": "Official Pytorch implementation of the preprint paper \"Stylized Neural Painting\", in CVPR 2021.", "created": "2020-11-16 19:33:39", "language": "Python", "type": "User", "username": "jiupinjia", "stars": 1284, "forks": 217, "subscribers": 23, "open_issues": 23, "topics": ["style-transfer", "painting-translation", "stroke-parameters", "neural-rendering"]}, {"id": 241184407, "repo_name": "SimCLR", "full_name": "sthalles/SimCLR", "description": "PyTorch implementation of SimCLR: A Simple Framework for Contrastive Learning of Visual Representations", "created": "2020-02-17 18:58:35", "language": "Jupyter Notebook", "type": "User", "username": "sthalles", "stars": 1282, "forks": 280, "subscribers": 20, "open_issues": 16, "topics": ["machine-learning", "deep-learning", "representation-learning", "pytorch-implementation", "pytorch", "torchvision", "unsupervised-learning", "contrastive-loss", "simclr"]}, {"id": 329216613, "repo_name": "FaceX-Zoo", "full_name": "JDAI-CV/FaceX-Zoo", "description": "A PyTorch Toolbox for Face Recognition", "created": "2021-01-13 06:38:01", "language": "Python", "type": "Organization", "username": "JDAI-CV", "stars": 1280, "forks": 328, "subscribers": 39, "open_issues": 81, "topics": ["face-recognition", "masked-face-recognition", "face-sdk", "semi-siamese-training", "megaface", "lfw", "circleloss", "adam-softmax", "mv-softmax", "magface"]}, {"id": 211103666, "repo_name": "PyTorch-Networks", "full_name": "shanglianlm0525/PyTorch-Networks", "description": "Pytorch implementation of cnn network", "created": "2019-09-26 14:04:13", "language": "Python", "type": "User", "username": "shanglianlm0525", "stars": 1271, "forks": 409, "subscribers": 36, "open_issues": 23, "topics": []}, {"id": 232388106, "repo_name": "orbit", "full_name": "uber/orbit", "description": "A Python package for Bayesian forecasting with object-oriented design and probabilistic models under the hood.", "created": "2020-01-07 18:20:37", "language": "Python", "type": "Organization", "username": "uber", "stars": 1270, "forks": 86, "subscribers": 29, "open_issues": 59, "topics": ["python", "forecasting", "bayesian", "exponential-smoothing", "pyro", "stan", "pystan", "probabilistic-programming", "probabilistic", "forecast", "orbit", "time-series", "regression", "arima", "changepoint", "bayesian-methods", "bayesian-statistics", "machine-learning", "regression-models", "pytorch"]}, {"id": 246634306, "repo_name": "Torch-TensorRT", "full_name": "NVIDIA/Torch-TensorRT", "description": "PyTorch/TorchScript compiler for NVIDIA GPUs using TensorRT", "created": "2020-03-11 17:17:43", "language": "C++", "type": "Organization", "username": "NVIDIA", "stars": 1267, "forks": 150, "subscribers": 37, "open_issues": 111, "topics": ["tensorrt", "libtorch", "machine-learning", "pytorch", "deep-learning", "jetson", "nvidia", "cuda"]}, {"id": 222578525, "repo_name": "3d-ken-burns", "full_name": "sniklaus/3d-ken-burns", "description": "an implementation of 3D Ken Burns Effect from a Single Image using PyTorch", "created": "2019-11-19 01:12:34", "language": "Python", "type": "User", "username": "sniklaus", "stars": 1262, "forks": 185, "subscribers": 24, "open_issues": 9, "topics": ["pytorch", "python", "cuda", "deep-learning", "cupy"]}, {"id": 149640348, "repo_name": "torchgan", "full_name": "torchgan/torchgan", "description": "Research Framework for easy and efficient training of GANs based on Pytorch", "created": "2018-09-20 16:41:00", "language": "Python", "type": "Organization", "username": "torchgan", "stars": 1255, "forks": 155, "subscribers": 30, "open_issues": 19, "topics": ["machine-learning", "computer-vision", "generative-adversarial-networks", "python3", "pytorch", "neural-networks", "deep-learning", "generative-model", "python", "gans"]}, {"id": 203170986, "repo_name": "Det3D", "full_name": "poodarchu/Det3D", "description": "A general 3D object detection codebse.", "created": "2019-08-19 12:43:56", "language": "Python", "type": "User", "username": "poodarchu", "stars": 1252, "forks": 269, "subscribers": 42, "open_issues": 17, "topics": ["nuscenes", "3d-object-detection", "point-cloud", "object-detection", "kitti", "pytorch", "autonomous-driving", "deep-learning"]}, {"id": 99108990, "repo_name": "EdgeML", "full_name": "microsoft/EdgeML", "description": "This repository provides code for machine learning algorithms for edge devices developed at Microsoft Research India.", "created": "2017-08-02 11:27:52", "language": "C++", "type": "Organization", "username": "microsoft", "stars": 1251, "forks": 335, "subscribers": 88, "open_issues": 20, "topics": ["iot-device", "sensor", "edge-machine-learning", "resource-constrained-ml", "machine-learning-algorithms", "microsoft-research", "machine-learning", "tensorflow", "deep-learning", "edge-computing", "microsoft", "edge-devices", "classifier", "emi-rnn", "pytorch", "bonsai", "protonn", "fastgrnn", "cpp", "fastrnn"]}, {"id": 294685606, "repo_name": "silero-models", "full_name": "snakers4/silero-models", "description": "Silero Models: pre-trained speech-to-text, text-to-speech and text-enhancement models made embarrassingly simple", "created": "2020-09-11 12:10:23", "language": "Jupyter Notebook", "type": "User", "username": "snakers4", "stars": 1251, "forks": 107, "subscribers": 45, "open_issues": 4, "topics": ["speech-recognition", "speech-to-text", "stt", "asr", "pretrained-models", "english", "german", "spanish", "stt-benchmark", "pytorch", "colab", "onnx", "torch-hub", "text-to-speech", "tts-models", "speech", "speech-synthesis", "tts", "repunctuation", "capitalization"]}, {"id": 122314187, "repo_name": "LovaszSoftmax", "full_name": "bermanmaxim/LovaszSoftmax", "description": "Code for the Lov\u00e1sz-Softmax loss (CVPR 2018)", "created": "2018-02-21 09:11:59", "language": "Jupyter Notebook", "type": "User", "username": "bermanmaxim", "stars": 1250, "forks": 254, "subscribers": 34, "open_issues": 15, "topics": ["image-segmentation", "pytorch", "neural-networks", "loss-functions"]}, {"id": 250025410, "repo_name": "lightning-bolts", "full_name": "PyTorchLightning/lightning-bolts", "description": "Toolbox of models, callbacks, and datasets for AI/ML researchers.", "created": "2020-03-25 16:03:30", "language": "Python", "type": "Organization", "username": "PyTorchLightning", "stars": 1246, "forks": 252, "subscribers": 24, "open_issues": 49, "topics": ["pytorch", "ai", "machine-learning", "image-processing", "natural-language-processing", "supervised-learning", "gan"]}, {"id": 146321178, "repo_name": "hyperlearn", "full_name": "danielhanchen/hyperlearn", "description": "Waiting hours for a future prediction is unacceptable. Hyperlearn makes AI and ML algorithms 50% faster, use 90% less memory and doesn't require you to use new hardware! ML Algorithms like PCA, Linear Regression, NMF are all faster!", "created": "2018-08-27 16:00:47", "language": "Jupyter Notebook", "type": "User", "username": "danielhanchen", "stars": 1237, "forks": 112, "subscribers": 82, "open_issues": 16, "topics": ["machine-learning", "python", "statistics", "scikit-learn", "statsmodels", "pytorch", "deep-learning", "data-science", "data-analysis", "regression-models", "econometrics", "tensor", "neural-network", "gpu", "research", "optimization"]}, {"id": 105064915, "repo_name": "pytorch-qrnn", "full_name": "salesforce/pytorch-qrnn", "description": "PyTorch implementation of the Quasi-Recurrent Neural Network - up to 16 times faster than NVIDIA's cuDNN LSTM", "created": "2017-09-27 20:16:39", "language": "Python", "type": "Organization", "username": "salesforce", "stars": 1235, "forks": 193, "subscribers": 50, "open_issues": 23, "topics": []}, {"id": 181997302, "repo_name": "face-parsing.PyTorch", "full_name": "zllrunning/face-parsing.PyTorch", "description": "Using modified BiSeNet for face parsing in PyTorch", "created": "2019-04-18 01:51:21", "language": "Python", "type": "User", "username": "zllrunning", "stars": 1228, "forks": 298, "subscribers": 24, "open_issues": 24, "topics": ["face-parsing", "semantic-segmentation", "pytorch", "celeba-hq-dataset", "bisenet", "face-segmentation"]}, {"id": 133904817, "repo_name": "pytorch-ssd", "full_name": "qfgaohao/pytorch-ssd", "description": "MobileNetV1, MobileNetV2, VGG based SSD/SSD-lite implementation in Pytorch 1.0 / Pytorch 0.4. Out-of-box support for retraining on Open Images dataset. ONNX and Caffe2 support. Experiment Ideas like CoordConv.", "created": "2018-05-18 04:56:09", "language": "Python", "type": "User", "username": "qfgaohao", "stars": 1225, "forks": 471, "subscribers": 42, "open_issues": 98, "topics": ["ssd", "pytorch", "open-images", "object-detection"]}, {"id": 160727251, "repo_name": "SSD", "full_name": "lufficc/SSD", "description": "High quality, fast, modular reference implementation of SSD in PyTorch", "created": "2018-12-06 20:19:33", "language": "Python", "type": "User", "username": "lufficc", "stars": 1224, "forks": 348, "subscribers": 24, "open_issues": 29, "topics": ["ssd", "pytorch", "computer-vision", "deep-learning", "object-detection"]}, {"id": 280043130, "repo_name": "graph4nlp", "full_name": "graph4ai/graph4nlp", "description": "Graph4nlp is the library for the easy use of Graph Neural Networks for NLP. Welcome to visit our DLG4NLP website (https://dlg4nlp.github.io/index.html) for various learning resources! ", "created": "2020-07-16 03:28:48", "language": "Python", "type": "Organization", "username": "graph4ai", "stars": 1223, "forks": 152, "subscribers": 27, "open_issues": 15, "topics": ["nlp", "pytorch", "natural-language-processing", "deep-learning", "machine-learning", "graph-neural-networks"]}, {"id": 334412452, "repo_name": "sahi", "full_name": "obss/sahi", "description": "A lightweight vision library for performing large scale object detection/ instance segmentation.", "created": "2021-01-30 12:54:53", "language": "Python", "type": "Organization", "username": "obss", "stars": 1222, "forks": 160, "subscribers": 29, "open_issues": 12, "topics": ["object-detection", "instance-segmentation", "computer-vision", "small-object-detection", "large-image", "mmdetection", "pytorch", "pip", "conda", "python", "yolov5", "coco", "detectron2", "jupyter-notebook", "deep-learning", "machine-learning"]}, {"id": 195769741, "repo_name": "gnes", "full_name": "gnes-ai/gnes", "description": "GNES is Generic Neural Elastic Search, a cloud-native semantic search system based on deep neural network. ", "created": "2019-07-08 08:31:09", "language": "Python", "type": "Organization", "username": "gnes-ai", "stars": 1222, "forks": 215, "subscribers": 53, "open_issues": 16, "topics": ["gnes", "cloud-native", "nlp", "computer-vision", "deep-learning", "machine-learning", "docker-swarm", "semantic-search", "neural-network", "dnn", "database", "tensorflow", "pytorch", "python", "elasticsearch", "search-engine", "video-processing", "grpc", "distributed-systems", "microservices"]}, {"id": 163404737, "repo_name": "DenseDepth", "full_name": "ialhashim/DenseDepth", "description": "High Quality Monocular Depth Estimation via Transfer Learning", "created": "2018-12-28 11:50:52", "language": "Jupyter Notebook", "type": "User", "username": "ialhashim", "stars": 1221, "forks": 308, "subscribers": 33, "open_issues": 2, "topics": ["deep-learning", "deep-neural-networks", "python", "keras-tensorflow", "depth-estimation", "encoder-decoder-model", "transfer-learning", "pytorch"]}, {"id": 334181506, "repo_name": "involution", "full_name": "d-li14/involution", "description": "[CVPR 2021] Involution: Inverting the Inherence of Convolution for Visual Recognition, a brand new neural operator", "created": "2021-01-29 15:16:07", "language": "Python", "type": "User", "username": "d-li14", "stars": 1220, "forks": 162, "subscribers": 16, "open_issues": 18, "topics": ["involution", "operator", "pytorch", "image-classification", "object-detection", "instance-segmentation", "semantic-segmentation", "cvpr2021", "pre-trained-model"]}, {"id": 82512912, "repo_name": "open-reid", "full_name": "Cysu/open-reid", "description": "Open source person re-identification library in python", "created": "2017-02-20 03:30:29", "language": "Python", "type": "User", "username": "Cysu", "stars": 1219, "forks": 357, "subscribers": 42, "open_issues": 36, "topics": ["person-reidentification", "deep-learning", "metric-learning", "pytorch", "python"]}, {"id": 255253917, "repo_name": "yolo3-pytorch", "full_name": "bubbliiiing/yolo3-pytorch", "description": " \u8fd9\u662f\u4e00\u4e2ayolo3-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002", "created": "2020-04-13 06:55:52", "language": "Python", "type": "User", "username": "bubbliiiing", "stars": 1215, "forks": 441, "subscribers": 9, "open_issues": 80, "topics": []}, {"id": 185282401, "repo_name": "MeshCNN", "full_name": "ranahanocka/MeshCNN", "description": "Convolutional Neural Network for 3D meshes in PyTorch", "created": "2019-05-06 22:48:52", "language": "Python", "type": "User", "username": "ranahanocka", "stars": 1215, "forks": 246, "subscribers": 48, "open_issues": 76, "topics": ["pytorch", "geometric-deep-learning", "convolutional-neural-networks", "machine-learning", "mesh", "computer-graphics", "segmentation", "3d"]}, {"id": 191133946, "repo_name": "rainbow-is-all-you-need", "full_name": "Curt-Park/rainbow-is-all-you-need", "description": "Rainbow is all you need! A step-by-step tutorial from DQN to Rainbow", "created": "2019-06-10 09:06:10", "language": "Jupyter Notebook", "type": "User", "username": "Curt-Park", "stars": 1212, "forks": 261, "subscribers": 23, "open_issues": 3, "topics": ["pytorch", "reinforcement-learning", "dqn", "rainbow", "gym-environment", "colab-notebook", "nbviewer"]}, {"id": 174975949, "repo_name": "Bayesian-Neural-Networks", "full_name": "JavierAntoran/Bayesian-Neural-Networks", "description": "Pytorch implementations of Bayes By Backprop, MC Dropout, SGLD, the Local Reparametrization Trick, KF-Laplace, SG-HMC and more", "created": "2019-03-11 10:21:08", "language": "Jupyter Notebook", "type": "User", "username": "JavierAntoran", "stars": 1211, "forks": 231, "subscribers": 29, "open_issues": 4, "topics": ["deep-learning", "bayesian-inference", "pytorch", "reproducible-research", "bayesian-neural-networks", "bayes-by-backprop", "mc-dropout", "mcmc", "variational-inference", "kronecker-factored-approximation", "langevin-dynamics", "approximate-inference", "local-reparametrization-trick", "uncertainty", "uncertainty-neural-networks", "out-of-distribution-detection", "classification", "regression", "sgld", "hmc"]}, {"id": 136324281, "repo_name": "arcface-pytorch", "full_name": "ronghuaiyang/arcface-pytorch", "description": null, "created": "2018-06-06 12:17:06", "language": "Python", "type": "User", "username": "ronghuaiyang", "stars": 1210, "forks": 320, "subscribers": 19, "open_issues": 59, "topics": []}, {"id": 141004083, "repo_name": "Facial-Expression-Recognition.Pytorch", "full_name": "WuJie1010/Facial-Expression-Recognition.Pytorch", "description": "A CNN based pytorch implementation on facial expression recognition (FER2013 and CK+), achieving 73.112% (state-of-the-art) in FER2013 and 94.64% in CK+ dataset", "created": "2018-07-15 06:29:38", "language": "Python", "type": "User", "username": "WuJie1010", "stars": 1210, "forks": 468, "subscribers": 33, "open_issues": 28, "topics": ["facial-expression-recognition", "face-recognition", "fer2013", "ckan-extension"]}, {"id": 112430035, "repo_name": "deep-head-pose", "full_name": "natanielruiz/deep-head-pose", "description": ":fire::fire: Deep Learning Head Pose Estimation using PyTorch.", "created": "2017-11-29 05:16:12", "language": "Python", "type": "User", "username": "natanielruiz", "stars": 1209, "forks": 314, "subscribers": 26, "open_issues": 48, "topics": ["head-pose-estimation", "head-pose", "face-pose", "gaze-estimation", "gaze", "head", "deep-learning", "deep-neural-networks"]}, {"id": 143987419, "repo_name": "AdvBox", "full_name": "advboxes/AdvBox", "description": "Advbox is a toolbox to generate adversarial examples that fool neural networks in PaddlePaddle\u3001PyTorch\u3001Caffe2\u3001MxNet\u3001Keras\u3001TensorFlow and Advbox can benchmark the robustness of machine learning models.  Advbox give a command line tool to generate adversarial examples with Zero-Coding.", "created": "2018-08-08 08:55:41", "language": "Jupyter Notebook", "type": "Organization", "username": "advboxes", "stars": 1208, "forks": 249, "subscribers": 57, "open_issues": 13, "topics": ["adversarial-examples", "paddlepaddle", "machine-learning", "security", "deep-learning", "adversarial-example", "onnx", "graphpipe", "fgsm", "adversarial-attacks", "deepfool"]}, {"id": 118324594, "repo_name": "pytorch-mobilenet-v2", "full_name": "tonylins/pytorch-mobilenet-v2", "description": "A PyTorch implementation of MobileNet V2 architecture and pretrained model.", "created": "2018-01-21 10:24:49", "language": "Python", "type": "User", "username": "tonylins", "stars": 1205, "forks": 311, "subscribers": 26, "open_issues": 11, "topics": []}, {"id": 175851515, "repo_name": "pytorch-toolbelt", "full_name": "BloodAxe/pytorch-toolbelt", "description": "PyTorch extensions for fast R&D prototyping and Kaggle farming", "created": "2019-03-15 16:02:49", "language": "Python", "type": "User", "username": "BloodAxe", "stars": 1204, "forks": 91, "subscribers": 25, "open_issues": 5, "topics": ["pytorch", "kaggle", "image-classification", "image-segmentation", "deep-learning", "segmentation", "python", "image-processing", "machine-learning", "focal-loss", "jaccard-loss", "tta", "test-time-augmentation", "augmentation", "object-detection", "pipeline"]}, {"id": 159222834, "repo_name": "CCNet", "full_name": "speedinghzl/CCNet", "description": "CCNet: Criss-Cross Attention for Semantic Segmentation (TPAMI 2020 & ICCV 2019).", "created": "2018-11-26 19:39:02", "language": "Python", "type": "User", "username": "speedinghzl", "stars": 1202, "forks": 252, "subscribers": 29, "open_issues": 55, "topics": ["cityscape", "semantic-segmentation", "self-attention", "pytorch", "scene-parsing", "segmentation"]}, {"id": 170256148, "repo_name": "BERT-NER-Pytorch", "full_name": "lonePatient/BERT-NER-Pytorch", "description": "Chinese NER(Named Entity Recognition) using BERT(Softmax, CRF, Span)", "created": "2019-02-12 05:12:07", "language": "Python", "type": "User", "username": "lonePatient", "stars": 1200, "forks": 291, "subscribers": 8, "open_issues": 43, "topics": ["chinese", "nlp", "ner", "bert", "softmax", "crf", "span", "pytorch", "albert", "focal-loss", "adversarial-training", "labelsmoothing"]}, {"id": 412005579, "repo_name": "OpenPrompt", "full_name": "thunlp/OpenPrompt", "description": "An Open-Source Framework for Prompt-Learning.", "created": "2021-09-30 09:38:45", "language": "Python", "type": "Organization", "username": "thunlp", "stars": 1196, "forks": 124, "subscribers": 19, "open_issues": 23, "topics": ["nlp", "pre-trained-language-models", "ai", "nlp-machine-learning", "natural-language-processing", "natural-language-understanding", "deep-learning", "pre-trained-model", "nlp-library", "pytorch", "transformer", "prompt", "prompt-toolkit", "prompts", "prompt-based-tuning", "prompt-learning"]}, {"id": 86431077, "repo_name": "pytorch_Realtime_Multi-Person_Pose_Estimation", "full_name": "tensorboy/pytorch_Realtime_Multi-Person_Pose_Estimation", "description": null, "created": "2017-03-28 07:53:58", "language": "Python", "type": "User", "username": "tensorboy", "stars": 1195, "forks": 395, "subscribers": 38, "open_issues": 57, "topics": []}, {"id": 272785290, "repo_name": "byol-pytorch", "full_name": "lucidrains/byol-pytorch", "description": "Usable Implementation of \"Bootstrap Your Own Latent\" self-supervised learning, from Deepmind, in Pytorch", "created": "2020-06-16 18:38:32", "language": "Python", "type": "User", "username": "lucidrains", "stars": 1194, "forks": 169, "subscribers": 24, "open_issues": 30, "topics": ["artificial-intelligence", "deep-learning", "self-supervised-learning"]}, {"id": 71603727, "repo_name": "tensorly", "full_name": "tensorly/tensorly", "description": "TensorLy: Tensor Learning in Python.", "created": "2016-10-21 23:14:52", "language": "Python", "type": "Organization", "username": "tensorly", "stars": 1192, "forks": 233, "subscribers": 38, "open_issues": 58, "topics": ["machine-learning", "tensor", "decomposition", "tensor-algebra", "tensorly", "tensor-learning", "python", "tensor-methods", "pytorch", "mxnet", "jax", "tensorflow", "cupy", "numpy", "tensor-decomposition", "tensor-factorization", "tensor-regression", "regression"]}, {"id": 114429659, "repo_name": "Deep-Learning", "full_name": "Jack-Cherish/Deep-Learning", "description": ":computer:\u6df1\u5ea6\u5b66\u4e60\u5b9e\u6218\uff1a\u624b\u5199\u6570\u5b57\u8bc6\u522b\u3001Discuz\u9a8c\u8bc1\u7801\u8bc6\u522b\u3001\u5783\u573e\u5206\u7c7b\u3001\u8bed\u4e49\u5206\u5272", "created": "2017-12-16 03:12:19", "language": "Python", "type": "User", "username": "Jack-Cherish", "stars": 1191, "forks": 730, "subscribers": 25, "open_issues": 2, "topics": ["deep-learning", "pytorch", "tensorflow", "python", "python3"]}, {"id": 83440490, "repo_name": "animeGAN", "full_name": "jayleicn/animeGAN", "description": "A simple PyTorch Implementation of Generative Adversarial Networks, focusing on anime face drawing.", "created": "2017-02-28 14:15:55", "language": "Jupyter Notebook", "type": "User", "username": "jayleicn", "stars": 1185, "forks": 196, "subscribers": 45, "open_issues": 6, "topics": ["pytorch", "generative-adversarial-network", "dataset"]}, {"id": 281722510, "repo_name": "Smart_Construction", "full_name": "PeterH0323/Smart_Construction", "description": "Head Person Helmet Detection on Construction Sites\uff0c\u57fa\u4e8e\u76ee\u6807\u68c0\u6d4b\u5de5\u5730\u5b89\u5168\u5e3d\u548c\u7981\u5165\u5371\u9669\u533a\u57df\u8bc6\u522b\u7cfb\u7edf\uff0c\ud83d\ude80\ud83d\ude06\u9644 YOLOv5 \u8bad\u7ec3\u81ea\u5df1\u7684\u6570\u636e\u96c6\u8d85\u8be6\u7ec6\u6559\u7a0b\ud83d\ude80\ud83d\ude062021.3\u65b0\u589e\u53ef\u89c6\u5316\u754c\u9762\u2757\u2757", "created": "2020-07-22 16:01:05", "language": "Python", "type": "User", "username": "PeterH0323", "stars": 1183, "forks": 323, "subscribers": 22, "open_issues": 10, "topics": ["yolov5", "helmet", "pytorch", "python", "detection", "object-detection"]}, {"id": 186247418, "repo_name": "mobilenetv3", "full_name": "xiaolai-sqlai/mobilenetv3", "description": "mobilenetv3 with pytorch\uff0cprovide pre-train model", "created": "2019-05-12 11:40:54", "language": "Python", "type": "User", "username": "xiaolai-sqlai", "stars": 1181, "forks": 277, "subscribers": 21, "open_issues": 35, "topics": []}, {"id": 129936360, "repo_name": "pennylane", "full_name": "PennyLaneAI/pennylane", "description": "PennyLane is a cross-platform Python library for differentiable programming of quantum computers.  Train a quantum computer the same way as a neural network.", "created": "2018-04-17 16:45:42", "language": "Python", "type": "Organization", "username": "PennyLaneAI", "stars": 1176, "forks": 352, "subscribers": 55, "open_issues": 170, "topics": ["quantum", "machine-learning", "deep-learning", "neural-network", "optimization", "quantum-computing", "quantum-machine-learning", "automatic-differentiation", "tensorflow", "pytorch", "autograd", "qiskit", "cirq", "strawberryfields", "differentiable-computing", "quantum-chemistry", "qml", "unitaryhack", "hacktoberfest"]}, {"id": 154848329, "repo_name": "torchstat", "full_name": "Swall0w/torchstat", "description": "Model analyzer in PyTorch", "created": "2018-10-26 14:36:14", "language": "Python", "type": "User", "username": "Swall0w", "stars": 1172, "forks": 121, "subscribers": 14, "open_issues": 31, "topics": ["pytorch", "python"]}, {"id": 124682643, "repo_name": "livelossplot", "full_name": "stared/livelossplot", "description": "Live training loss plot in Jupyter Notebook for Keras, PyTorch and others", "created": "2018-03-10 17:51:43", "language": "Python", "type": "User", "username": "stared", "stars": 1163, "forks": 141, "subscribers": 26, "open_issues": 4, "topics": ["jupyter-notebook", "keras", "keras-visualization", "deep-learning", "pytorch"]}, {"id": 61916488, "repo_name": "HyperGAN", "full_name": "HyperGAN/HyperGAN", "description": "Composable GAN framework with api and user interface", "created": "2016-06-24 22:49:56", "language": "Python", "type": "Organization", "username": "HyperGAN", "stars": 1160, "forks": 170, "subscribers": 40, "open_issues": 20, "topics": ["gan", "unsupervised-learning", "generative-adversarial-network", "artificial-intelligence", "machine-learning", "machine-learning-api", "python", "online-learning", "computer-vision", "pytorch", "sponsors", "hypergan"]}, {"id": 140527071, "repo_name": "Deep-Tutorials-for-PyTorch", "full_name": "sgrvinod/Deep-Tutorials-for-PyTorch", "description": "In-depth tutorials for implementing deep learning models on your own with PyTorch.", "created": "2018-07-11 05:43:46", "language": null, "type": "User", "username": "sgrvinod", "stars": 1155, "forks": 196, "subscribers": 82, "open_issues": 1, "topics": ["pytorch", "pytorch-tutorial", "pytorch-tutorials", "learning-pytorch", "deep-learning-tutorial", "neural-network-tutorials"]}, {"id": 194320424, "repo_name": "DG-Net", "full_name": "NVlabs/DG-Net", "description": "Joint Discriminative and Generative Learning for Person Re-identification. CVPR'19 (Oral)", "created": "2019-06-28 18:53:05", "language": "Python", "type": "Organization", "username": "NVlabs", "stars": 1153, "forks": 216, "subscribers": 28, "open_issues": 27, "topics": ["re-identification", "person-reidentification", "person-reid", "image-retrieval", "image-search", "open-reid", "pytorch", "apex", "market-1501", "dukemtmc-reid", "msmt17", "cuhk-np", "dg-net"]}, {"id": 318258852, "repo_name": "traingenerator", "full_name": "jrieke/traingenerator", "description": "\ud83e\uddd9 A web app to generate template code for machine learning", "created": "2020-12-03 16:47:16", "language": "Python", "type": "User", "username": "jrieke", "stars": 1153, "forks": 165, "subscribers": 37, "open_issues": 13, "topics": ["machine-learning", "deep-learning", "template", "website", "webapp", "streamlit", "pytorch", "scikit-learn", "sklearn", "tensorflow", "pytorch-ignite", "machine-learning-tutorials", "pytorch-lightning"]}, {"id": 81545744, "repo_name": "ImageCaptioning.pytorch", "full_name": "ruotianluo/ImageCaptioning.pytorch", "description": "I decide to sync up this repo and self-critical.pytorch. (The old master is in old master branch for archive)", "created": "2017-02-10 08:49:20", "language": "Python", "type": "User", "username": "ruotianluo", "stars": 1151, "forks": 355, "subscribers": 25, "open_issues": 62, "topics": []}, {"id": 161504268, "repo_name": "Deformable-Convolution-V2-PyTorch", "full_name": "chengdazhi/Deformable-Convolution-V2-PyTorch", "description": "Deformable ConvNets V2 (DCNv2) in PyTorch", "created": "2018-12-12 15:02:45", "language": "Cuda", "type": "User", "username": "chengdazhi", "stars": 1148, "forks": 195, "subscribers": 22, "open_issues": 58, "topics": []}, {"id": 291787503, "repo_name": "Transformers-Tutorials", "full_name": "NielsRogge/Transformers-Tutorials", "description": "This repository contains demos I made with the Transformers library by HuggingFace.", "created": "2020-08-31 18:00:58", "language": "Jupyter Notebook", "type": "User", "username": "NielsRogge", "stars": 1142, "forks": 182, "subscribers": 32, "open_issues": 39, "topics": ["transformers", "pytorch", "bert", "vision-transformer", "layoutlm", "gpt-2"]}, {"id": 109594699, "repo_name": "fastai_deeplearn_part1", "full_name": "reshamas/fastai_deeplearn_part1", "description": "Notes for Fastai Deep Learning Course", "created": "2017-11-05 16:10:16", "language": "HTML", "type": "User", "username": "reshamas", "stars": 1138, "forks": 321, "subscribers": 73, "open_issues": 6, "topics": ["deep-learning", "python3", "pytorch", "image-recognition", "python"]}, {"id": 174109604, "repo_name": "ML-GCN", "full_name": "Megvii-Nanjing/ML-GCN", "description": "PyTorch implementation of Multi-Label Image Recognition with Graph Convolutional Networks, CVPR 2019.", "created": "2019-03-06 09:03:17", "language": "Python", "type": "Organization", "username": "Megvii-Nanjing", "stars": 1137, "forks": 313, "subscribers": 29, "open_issues": 1, "topics": []}, {"id": 157027341, "repo_name": "redner", "full_name": "BachiLi/redner", "description": "Differentiable rendering without approximation.", "created": "2018-11-10 22:32:27", "language": "NASL", "type": "User", "username": "BachiLi", "stars": 1134, "forks": 111, "subscribers": 42, "open_issues": 43, "topics": ["rendering", "monte-carlo-ray-tracing", "computer-vision", "computer-graphics", "differentiable-rendering", "pytorch", "tensorflow"]}, {"id": 155632472, "repo_name": "hmtl", "full_name": "huggingface/hmtl", "description": "\ud83c\udf0aHMTL: Hierarchical Multi-Task Learning - A State-of-the-Art neural network model for several NLP tasks based on PyTorch and AllenNLP", "created": "2018-10-31 22:43:50", "language": "Python", "type": "Organization", "username": "huggingface", "stars": 1133, "forks": 137, "subscribers": 76, "open_issues": 25, "topics": ["natural-language-processing", "multi-task-learning", "nlp", "pytorch"]}, {"id": 312042527, "repo_name": "lightweight-gan", "full_name": "lucidrains/lightweight-gan", "description": "Implementation of 'lightweight' GAN, proposed in ICLR 2021, in Pytorch. High resolution image generations that can be trained within a day or two", "created": "2020-11-11 17:31:33", "language": "Python", "type": "User", "username": "lucidrains", "stars": 1133, "forks": 162, "subscribers": 30, "open_issues": 52, "topics": ["artificial-intelligence", "deep-learning", "generative-adversarial-network"]}, {"id": 266319758, "repo_name": "Ultra-Fast-Lane-Detection", "full_name": "cfzd/Ultra-Fast-Lane-Detection", "description": "Ultra Fast Structure-aware Deep Lane Detection (ECCV 2020)", "created": "2020-05-23 11:11:34", "language": "Python", "type": "User", "username": "cfzd", "stars": 1126, "forks": 368, "subscribers": 26, "open_issues": 29, "topics": ["lane-detection", "autonomous-driving", "lane-detector", "lane-finding", "road-detection", "autonomous-vehicles", "cnn", "pytorch"]}, {"id": 131194654, "repo_name": "cnnimageretrieval-pytorch", "full_name": "filipradenovic/cnnimageretrieval-pytorch", "description": "CNN Image Retrieval in PyTorch: Training and evaluating CNNs for Image Retrieval in PyTorch", "created": "2018-04-26 18:19:44", "language": "Python", "type": "User", "username": "filipradenovic", "stars": 1120, "forks": 280, "subscribers": 35, "open_issues": 31, "topics": ["image-retrieval", "convolutional-neural-networks", "cnn", "python", "pytorch"]}, {"id": 168210197, "repo_name": "CapsGNN", "full_name": "benedekrozemberczki/CapsGNN", "description": "A PyTorch implementation of \"Capsule Graph Neural Network\" (ICLR 2019).", "created": "2019-01-29 18:57:25", "language": "Python", "type": "User", "username": "benedekrozemberczki", "stars": 1118, "forks": 189, "subscribers": 28, "open_issues": 4, "topics": ["capsgnn", "capsule-network", "capsule-neural-networks", "convolution", "pytorch", "research", "tensorflow", "machine-learning", "deep-learning", "gnn", "deepwalk", "node2vec", "graph-attention-networks", "graph-attention-model", "graph-classification", "sklearn", "struc2vec", "graph-convolution", "graph-neural-network"]}, {"id": 182829578, "repo_name": "hub", "full_name": "pytorch/hub", "description": "Submission to https://pytorch.org/hub/", "created": "2019-04-22 16:51:53", "language": "Python", "type": "Organization", "username": "pytorch", "stars": 1115, "forks": 183, "subscribers": 204, "open_issues": 31, "topics": []}, {"id": 278415292, "repo_name": "mmclassification", "full_name": "open-mmlab/mmclassification", "description": "OpenMMLab Image Classification Toolbox and Benchmark", "created": "2020-07-09 16:25:04", "language": "Python", "type": "Organization", "username": "open-mmlab", "stars": 1108, "forks": 398, "subscribers": 25, "open_issues": 63, "topics": ["image-classification", "resnet", "resnext", "mobilenet", "shufflenet", "senet", "regnet", "imagenet", "pytorch", "deep-learning", "swin-transformer"]}, {"id": 370209029, "repo_name": "backgroundremover", "full_name": "nadermx/backgroundremover", "description": "BackgroundRemover lets you Remove Background from images and video with a simple command line interface", "created": "2021-05-24 02:49:23", "language": "Python", "type": "User", "username": "nadermx", "stars": 1105, "forks": 113, "subscribers": 12, "open_issues": 14, "topics": ["background-remover", "backgroundremover", "removebackground", "remove-background", "remove-background-image", "remove-background-video", "background-removal", "python", "video", "pytorch", "video-editing", "photo-editing"]}, {"id": 257236246, "repo_name": "TurboTransformers", "full_name": "Tencent/TurboTransformers", "description": "a fast and user-friendly runtime for transformer inference (Bert, Albert, GPT2, Decoders, etc) on CPU and GPU.", "created": "2020-04-20 09:44:23", "language": "C++", "type": "Organization", "username": "Tencent", "stars": 1104, "forks": 150, "subscribers": 39, "open_issues": 41, "topics": ["nlp", "transformer", "bert", "decoder", "gpu", "machine-translation", "inference", "huggingface-transformers", "pytorch", "albert", "roberta", "gpt2"]}, {"id": 279501606, "repo_name": "CV-pretrained-model", "full_name": "balavenkatesh3322/CV-pretrained-model", "description": "A collection of computer vision pre-trained models.", "created": "2020-07-14 06:27:20", "language": null, "type": "User", "username": "balavenkatesh3322", "stars": 1104, "forks": 180, "subscribers": 34, "open_issues": 0, "topics": ["computer-vision", "tensorflow", "keras", "pytorch", "mxnet", "models", "model", "pretrained-models", "pretrained", "data-science", "deep-learning", "neural-network", "awesome-list", "object-detection", "image-classification", "image", "video-analysis", "model-selection", "python3"]}, {"id": 195854064, "repo_name": "DeepNude_NoWatermark_withModel", "full_name": "zhengyima/DeepNude_NoWatermark_withModel", "description": "DeepNude source code\uff0cwithout watermark\uff0cwith demo and model download link\uff0cone command to run offline\uff0cGAN/Pytorch/pix2pix/pic2pic", "created": "2019-07-08 17:02:26", "language": "Python", "type": "User", "username": "zhengyima", "stars": 1101, "forks": 716, "subscribers": 69, "open_issues": 12, "topics": ["python3", "pix2pix", "image-to-image", "gan", "pytorch", "opencv", "deepnude"]}, {"id": 134929325, "repo_name": "PSENet", "full_name": "whai362/PSENet", "description": "Official Pytorch implementations of PSENet.", "created": "2018-05-26 04:32:15", "language": "Python", "type": "User", "username": "whai362", "stars": 1097, "forks": 338, "subscribers": 55, "open_issues": 94, "topics": ["icdar2015", "total-text", "ctw1500", "psenet"]}, {"id": 272430903, "repo_name": "fast-transformers", "full_name": "idiap/fast-transformers", "description": "Pytorch library for fast transformer implementations", "created": "2020-06-15 12:19:51", "language": "Python", "type": "Organization", "username": "idiap", "stars": 1094, "forks": 120, "subscribers": 28, "open_issues": 25, "topics": []}, {"id": 415969774, "repo_name": "deepchecks", "full_name": "deepchecks/deepchecks", "description": "Test Suites for Validating ML Models & Data. Deepchecks is a Python package for comprehensively validating your machine learning models and data with minimal effort.", "created": "2021-10-11 14:48:38", "language": "Python", "type": "Organization", "username": "deepchecks", "stars": 1093, "forks": 70, "subscribers": 9, "open_issues": 99, "topics": ["machine-learning", "ml", "model-validation", "data-validation", "mlops", "data-science", "python", "jupyter-notebook", "model-monitoring", "data-drift", "html-report", "deep-learning", "pytorch", "pandas-dataframe"]}, {"id": 249324898, "repo_name": "Chinese-ELECTRA", "full_name": "ymcui/Chinese-ELECTRA", "description": "Pre-trained Chinese ELECTRA\uff08\u4e2d\u6587ELECTRA\u9884\u8bad\u7ec3\u6a21\u578b\uff09", "created": "2020-03-23 03:15:15", "language": "Python", "type": "User", "username": "ymcui", "stars": 1084, "forks": 140, "subscribers": 25, "open_issues": 0, "topics": ["nlp", "bert", "electra", "pre-trained-model", "chinese", "chinese-electra", "language-model", "pytorch", "tensorflow"]}, {"id": 157178182, "repo_name": "pytorch-openpose", "full_name": "Hzzone/pytorch-openpose", "description": "pytorch implementation of openpose including Hand and Body Pose Estimation.", "created": "2018-11-12 08:11:22", "language": "Jupyter Notebook", "type": "User", "username": "Hzzone", "stars": 1083, "forks": 256, "subscribers": 20, "open_issues": 55, "topics": ["openpose", "pytorch", "pose-estimation"]}, {"id": 199068120, "repo_name": "spacy-transformers", "full_name": "explosion/spacy-transformers", "description": "\ud83d\udef8 Use pretrained transformers like BERT, XLNet and GPT-2 in spaCy", "created": "2019-07-26 19:12:34", "language": "Python", "type": "Organization", "username": "explosion", "stars": 1079, "forks": 138, "subscribers": 27, "open_issues": 0, "topics": ["spacy", "spacy-pipeline", "spacy-extension", "nlp", "natural-language-processing", "natural-language-understanding", "pytorch", "bert", "google", "pytorch-model", "openai", "language-model", "machine-learning", "huggingface", "transfer-learning", "xlnet", "gpt-2"]}, {"id": 173990533, "repo_name": "DeepMosaics", "full_name": "HypoX64/DeepMosaics", "description": "Automatically remove the mosaics in images and videos, or add mosaics to them.", "created": "2019-03-05 17:25:47", "language": "Python", "type": "User", "username": "HypoX64", "stars": 1077, "forks": 285, "subscribers": 37, "open_issues": 66, "topics": ["pytorch", "deep-learning", "computer-vision", "mosaic", "video-inpainting"]}, {"id": 139143588, "repo_name": "ChineseNER", "full_name": "buppt/ChineseNER", "description": "\u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\uff0c\u5b9e\u4f53\u62bd\u53d6\uff0ctensorflow\uff0cpytorch\uff0cBiLSTM+CRF", "created": "2018-06-29 11:53:57", "language": "Python", "type": "User", "username": "buppt", "stars": 1070, "forks": 371, "subscribers": 18, "open_issues": 24, "topics": ["ner", "named-entity-recognition", "chinese", "bilstm-crf", "tensorflow", "pytorch"]}, {"id": 139609621, "repo_name": "RCAN", "full_name": "yulunzhang/RCAN", "description": "PyTorch code for our ECCV 2018 paper \"Image Super-Resolution Using Very Deep Residual Channel Attention Networks\" ", "created": "2018-07-03 16:22:54", "language": "Python", "type": "User", "username": "yulunzhang", "stars": 1070, "forks": 306, "subscribers": 19, "open_issues": 66, "topics": []}, {"id": 229164671, "repo_name": "pytorch-distributed", "full_name": "tczhangzhi/pytorch-distributed", "description": "A quickstart and benchmark for pytorch distributed training.", "created": "2019-12-20 01:06:50", "language": "Python", "type": "User", "username": "tczhangzhi", "stars": 1067, "forks": 224, "subscribers": 17, "open_issues": 10, "topics": []}, {"id": 226441159, "repo_name": "opacus", "full_name": "pytorch/opacus", "description": "Training PyTorch models with differential privacy", "created": "2019-12-07 01:58:09", "language": "Jupyter Notebook", "type": "Organization", "username": "pytorch", "stars": 1066, "forks": 180, "subscribers": 40, "open_issues": 25, "topics": ["differential-privacy", "privacy-preserving-machine-learning", "deep-learning", "machine-learning", "neural-network"]}, {"id": 242953089, "repo_name": "TextBrewer", "full_name": "airaria/TextBrewer", "description": "A PyTorch-based knowledge distillation toolkit for natural language processing", "created": "2020-02-25 08:53:29", "language": "Python", "type": "User", "username": "airaria", "stars": 1064, "forks": 181, "subscribers": 23, "open_issues": 0, "topics": ["bert", "pytorch", "nlp", "knowledge", "distillation"]}, {"id": 111272712, "repo_name": "DFace", "full_name": "kuaikuaikim/DFace", "description": "Deep learning face detection and recognition, implemented by pytorch. (pytorch\u5b9e\u73b0\u7684\u4eba\u8138\u68c0\u6d4b\u548c\u4eba\u8138\u8bc6\u522b)", "created": "2017-11-19 07:07:45", "language": "Python", "type": "User", "username": "kuaikuaikim", "stars": 1064, "forks": 333, "subscribers": 63, "open_issues": 28, "topics": ["facedetection", "facerecognition", "deeplearning", "pytorch", "mtcnn", "mtcnn-pytorch"]}, {"id": 125822629, "repo_name": "PSMNet", "full_name": "JiaRenChang/PSMNet", "description": "Pyramid Stereo Matching Network (CVPR2018)", "created": "2018-03-19 08:06:18", "language": "Python", "type": "User", "username": "JiaRenChang", "stars": 1063, "forks": 363, "subscribers": 34, "open_issues": 151, "topics": ["psmnet", "stereo-matching", "stereo-vision", "pytorch"]}, {"id": 71386735, "repo_name": "lambda-packs", "full_name": "ryfeus/lambda-packs", "description": "Precompiled packages for AWS Lambda", "created": "2016-10-19 18:22:39", "language": "Python", "type": "User", "username": "ryfeus", "stars": 1058, "forks": 228, "subscribers": 46, "open_issues": 11, "topics": ["aws-lambda", "phantomjs", "serverless", "aws", "tensorflow", "keras", "numpy", "pandas", "tesseract", "sklearn", "skimage", "wrk", "opencv", "pillow", "selenium", "python", "lightgbm", "spacy", "hdf", "pytorch"]}, {"id": 99374614, "repo_name": "ConvLSTM_pytorch", "full_name": "ndrplz/ConvLSTM_pytorch", "description": "Implementation of Convolutional LSTM in PyTorch.", "created": "2017-08-04 19:41:36", "language": "Python", "type": "User", "username": "ndrplz", "stars": 1055, "forks": 337, "subscribers": 14, "open_issues": 15, "topics": []}, {"id": 246275460, "repo_name": "unsup3d", "full_name": "elliottwu/unsup3d", "description": "(CVPR'20 Oral) Unsupervised Learning of Probably Symmetric Deformable 3D Objects from Images in the Wild", "created": "2020-03-10 10:48:57", "language": "Python", "type": "User", "username": "elliottwu", "stars": 1055, "forks": 175, "subscribers": 31, "open_issues": 17, "topics": ["3d-objects", "3d", "3d-reconstuction", "unsupervised", "unsupervised-learning", "cvpr", "cvpr-2020", "cvpr2020", "pytorch"]}, {"id": 160464729, "repo_name": "DCNv2", "full_name": "CharlesShang/DCNv2", "description": "Deformable Convolutional Networks v2 with Pytorch", "created": "2018-12-05 05:16:57", "language": "C++", "type": "User", "username": "CharlesShang", "stars": 1052, "forks": 328, "subscribers": 20, "open_issues": 92, "topics": ["pytorch", "deformable-convolutional-networks", "cnn"]}, {"id": 281519510, "repo_name": "FedML", "full_name": "FedML-AI/FedML", "description": "A Research-oriented Federated Learning Library. Supporting distributed computing, mobile/IoT on-device training, and standalone simulation. Best Paper Award at NeurIPS 2020 Federated Learning workshop. Join our Slack Community:(https://join.slack.com/t/fedml/shared_invite/zt-havwx1ee-a1xfOUrATNfc9DFqU~r34w)", "created": "2020-07-21 22:41:25", "language": "Python", "type": "Organization", "username": "FedML-AI", "stars": 1052, "forks": 327, "subscribers": 37, "open_issues": 80, "topics": ["machine-learning", "federated-learning", "pytorch", "distributed-computing"]}, {"id": 100465490, "repo_name": "PyTorchText", "full_name": "chenyuntc/PyTorchText", "description": "1st Place Solution for Zhihu Machine Learning Challenge . Implementation of various text-classification models.(\u77e5\u4e4e\u770b\u5c71\u676f\u7b2c\u4e00\u540d\u89e3\u51b3\u65b9\u6848)", "created": "2017-08-16 08:18:06", "language": "Python", "type": "User", "username": "chenyuntc", "stars": 1051, "forks": 368, "subscribers": 47, "open_issues": 6, "topics": ["pytorch", "nlp", "textcnn", "textrnn", "fasttext", "textrcnn", "lstm"]}, {"id": 93721432, "repo_name": "sockeye", "full_name": "awslabs/sockeye", "description": "Sequence-to-sequence framework with a focus on Neural Machine Translation based on PyTorch", "created": "2017-06-08 07:44:30", "language": "Python", "type": "Organization", "username": "awslabs", "stars": 1049, "forks": 308, "subscribers": 49, "open_issues": 11, "topics": ["deep-learning", "deep-neural-networks", "machine-learning", "machine-translation", "neural-machine-translation", "encoder-decoder", "attention-mechanism", "sequence-to-sequence", "sequence-to-sequence-models", "sockeye", "attention-is-all-you-need", "attention-model", "seq2seq", "translation", "transformer-architecture", "transformer", "transformer-network", "pytorch"]}, {"id": 422998569, "repo_name": "ru-dalle", "full_name": "sberbank-ai/ru-dalle", "description": "Generate images from texts. In Russian", "created": "2021-10-30 21:55:52", "language": "Jupyter Notebook", "type": "Organization", "username": "sberbank-ai", "stars": 1049, "forks": 129, "subscribers": 22, "open_issues": 36, "topics": ["image-generation", "text-to-image", "python", "pytorch", "dalle", "openai", "russian", "russian-language", "transformer"]}, {"id": 176593386, "repo_name": "PyTorch-Course", "full_name": "ZeweiChu/PyTorch-Course", "description": "JULYEDU PyTorch Course", "created": "2019-03-19 20:30:06", "language": "Jupyter Notebook", "type": "User", "username": "ZeweiChu", "stars": 1042, "forks": 541, "subscribers": 24, "open_issues": 2, "topics": []}, {"id": 122516859, "repo_name": "TD3", "full_name": "sfujim/TD3", "description": "Author's PyTorch implementation of TD3 for OpenAI gym tasks", "created": "2018-02-22 18:15:37", "language": "Python", "type": "User", "username": "sfujim", "stars": 1041, "forks": 317, "subscribers": 18, "open_issues": 2, "topics": []}, {"id": 65569867, "repo_name": "DnCNN", "full_name": "cszn/DnCNN", "description": "Beyond a Gaussian Denoiser: Residual Learning of Deep CNN for Image Denoising (TIP, 2017)", "created": "2016-08-12 17:02:43", "language": "MATLAB", "type": "User", "username": "cszn", "stars": 1039, "forks": 487, "subscribers": 53, "open_issues": 34, "topics": ["image-denoising", "residual-learning", "super-resolution", "jpeg-deblocking", "matconvnet", "pytorch", "keras-tensorflow"]}, {"id": 309640876, "repo_name": "ViT-pytorch", "full_name": "jeonsworld/ViT-pytorch", "description": "Pytorch reimplementation of the Vision Transformer (An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale)", "created": "2020-11-03 09:50:50", "language": "Jupyter Notebook", "type": "User", "username": "jeonsworld", "stars": 1037, "forks": 223, "subscribers": 14, "open_issues": 20, "topics": []}, {"id": 147709096, "repo_name": "semseg", "full_name": "hszhao/semseg", "description": "Semantic Segmentation in Pytorch", "created": "2018-09-06 17:26:36", "language": "Python", "type": "User", "username": "hszhao", "stars": 1036, "forks": 212, "subscribers": 22, "open_issues": 42, "topics": []}, {"id": 149826542, "repo_name": "pytorch-3dunet", "full_name": "wolny/pytorch-3dunet", "description": "3D U-Net model for volumetric semantic segmentation written in pytorch", "created": "2018-09-21 22:53:31", "language": "Jupyter Notebook", "type": "User", "username": "wolny", "stars": 1035, "forks": 347, "subscribers": 32, "open_issues": 0, "topics": ["semantic-segmentation", "unet", "unet-pytorch", "3d-unet", "groupnorm", "pytorch-3dunet", "pytorch", "dice-coefficient", "volumetric-data", "3d-segmentation", "residual-unet"]}, {"id": 105591065, "repo_name": "SLM-Lab", "full_name": "kengz/SLM-Lab", "description": "Modular Deep Reinforcement Learning framework in PyTorch. Companion library of the book \"Foundations of Deep Reinforcement Learning\".", "created": "2017-10-02 22:20:22", "language": "Python", "type": "User", "username": "kengz", "stars": 1025, "forks": 208, "subscribers": 48, "open_issues": 6, "topics": ["pytorch", "reinforcement-learning", "deep-reinforcement-learning", "benchmark", "policy-gradient", "dqn", "ppo", "sac", "a2c", "a3c"]}, {"id": 157845016, "repo_name": "labml", "full_name": "labmlai/labml", "description": "\ud83d\udd0e Monitor deep learning model training and hardware usage from your mobile phone \ud83d\udcf1", "created": "2018-11-16 09:34:48", "language": "Jupyter Notebook", "type": "Organization", "username": "labmlai", "stars": 1022, "forks": 75, "subscribers": 28, "open_issues": 15, "topics": ["machine-learning", "deep-learning", "pytorch", "experiment", "analytics", "visualization", "tensorboard", "mobile", "keras", "tensorflow", "tensorflow2", "keras-tensorflow", "pytorch-lightning", "fastai"]}, {"id": 204547575, "repo_name": "pytorch-struct", "full_name": "harvardnlp/pytorch-struct", "description": "Fast, general, and tested differentiable structured prediction in PyTorch", "created": "2019-08-26 19:34:30", "language": "Jupyter Notebook", "type": "Organization", "username": "harvardnlp", "stars": 1021, "forks": 84, "subscribers": 32, "open_issues": 30, "topics": []}, {"id": 120948040, "repo_name": "bindsnet", "full_name": "BindsNET/bindsnet", "description": "Simulation of spiking neural networks (SNNs) using PyTorch.", "created": "2018-02-09 19:42:37", "language": "Python", "type": "Organization", "username": "BindsNET", "stars": 1021, "forks": 277, "subscribers": 43, "open_issues": 14, "topics": ["spiking-neural-networks", "gpu-computing", "pytorch", "machine-learning", "snn", "reinforcement-learning", "stdp", "dynamic", "neurons", "simulation", "synapse"]}, {"id": 115461780, "repo_name": "Pointnet2_PyTorch", "full_name": "erikwijmans/Pointnet2_PyTorch", "description": "PyTorch implementation of Pointnet2/Pointnet++", "created": "2017-12-26 23:20:11", "language": "Python", "type": "User", "username": "erikwijmans", "stars": 1020, "forks": 267, "subscribers": 17, "open_issues": 57, "topics": ["pointnet2", "pytorch", "point-cloud", "pytorch-lightning", "hydra"]}, {"id": 176315637, "repo_name": "cogdl", "full_name": "THUDM/cogdl", "description": "CogDL: An Extensive Toolkit for Deep Learning on Graphs", "created": "2019-03-18 15:29:35", "language": "Python", "type": "Organization", "username": "THUDM", "stars": 1018, "forks": 250, "subscribers": 34, "open_issues": 19, "topics": ["graph-neural-networks", "pytorch", "graph-embedding", "node-classification", "graph-classification", "link-prediction", "leaderboard", "gnn-model"]}, {"id": 113705900, "repo_name": "pytorch_image_classification", "full_name": "hysts/pytorch_image_classification", "description": "PyTorch implementation of image classification models for CIFAR-10/CIFAR-100/MNIST/FashionMNIST/Kuzushiji-MNIST/ImageNet", "created": "2017-12-09 22:32:57", "language": "Python", "type": "User", "username": "hysts", "stars": 1017, "forks": 258, "subscribers": 28, "open_issues": 1, "topics": ["pytorch", "computer-vision", "cifar10", "fashion-mnist", "imagenet"]}, {"id": 85299452, "repo_name": "DiscoGAN-pytorch", "full_name": "carpedm20/DiscoGAN-pytorch", "description": "PyTorch implementation of \"Learning to Discover Cross-Domain Relations with Generative Adversarial Networks\"", "created": "2017-03-17 10:26:12", "language": "Jupyter Notebook", "type": "User", "username": "carpedm20", "stars": 1017, "forks": 224, "subscribers": 40, "open_issues": 11, "topics": ["gan", "generative-model", "unsupervised-learning", "pytorch"]}, {"id": 90028126, "repo_name": "pytorch-pose", "full_name": "bearpaw/pytorch-pose", "description": "A PyTorch toolkit for 2D Human Pose Estimation.", "created": "2017-05-02 11:53:52", "language": "Python", "type": "User", "username": "bearpaw", "stars": 1016, "forks": 240, "subscribers": 28, "open_issues": 29, "topics": ["pose", "human-pose-estimation", "pytorch", "mpii-dataset", "mscoco-keypoint", "hourglass-network", "pose-estimation"]}, {"id": 310027001, "repo_name": "lightning-hydra-template", "full_name": "ashleve/lightning-hydra-template", "description": "PyTorch Lightning + Hydra. A very user-friendly template for rapid, scalable and reproducible ML experimentation with best practices.  \u26a1\ud83d\udd25\u26a1", "created": "2020-11-04 14:30:09", "language": "Python", "type": "User", "username": "ashleve", "stars": 1015, "forks": 155, "subscribers": 18, "open_issues": 21, "topics": ["pytorch-lightning", "weights-and-biases", "wandb", "project-structure", "config", "deep-learning", "hydra", "template", "training-pipeline", "pytorch", "research", "experiments", "reproducibility", "experiment-tracking", "best-practices", "neptune", "mlflow", "tensorboard", "comet", "mlops"]}, {"id": 142215493, "repo_name": "grokking-pytorch", "full_name": "Kaixhin/grokking-pytorch", "description": "The Hitchiker's Guide to PyTorch", "created": "2018-07-24 21:38:11", "language": null, "type": "User", "username": "Kaixhin", "stars": 1013, "forks": 63, "subscribers": 30, "open_issues": 0, "topics": ["deep-learning"]}, {"id": 272484725, "repo_name": "data-efficient-gans", "full_name": "mit-han-lab/data-efficient-gans", "description": "[NeurIPS 2020] Differentiable Augmentation for Data-Efficient GAN Training", "created": "2020-06-15 16:07:24", "language": "Python", "type": "Organization", "username": "mit-han-lab", "stars": 1012, "forks": 148, "subscribers": 19, "open_issues": 19, "topics": ["gans", "pytorch", "tensorflow", "data-efficient", "generative-adversarial-network", "image-generation", "neurips-2020"]}, {"id": 250229724, "repo_name": "graph-learn", "full_name": "alibaba/graph-learn", "description": "An Industrial Graph Neural Network Framework", "created": "2020-03-26 10:39:32", "language": "C++", "type": "Organization", "username": "alibaba", "stars": 1011, "forks": 205, "subscribers": 47, "open_issues": 21, "topics": ["gnn", "aligraph", "graphlearn", "tensorflow", "pytorch", "graph", "graph-neural-networks", "gnn-framework"]}, {"id": 159734547, "repo_name": "advertorch", "full_name": "BorealisAI/advertorch", "description": "A Toolbox for Adversarial Robustness Research", "created": "2018-11-29 22:17:33", "language": "Jupyter Notebook", "type": "Organization", "username": "BorealisAI", "stars": 1011, "forks": 173, "subscribers": 31, "open_issues": 20, "topics": ["pytorch", "adversarial-examples", "adversarial-example", "adversarial-perturbations", "adversarial-attacks", "adversarial-machine-learning", "adversarial-learning", "robustness", "toolbox", "security", "machine-learning", "benchmarking"]}, {"id": 200645982, "repo_name": "service-streamer", "full_name": "ShannonAI/service-streamer", "description": "Boosting your Web Services of Deep Learning Applications. ", "created": "2019-08-05 11:52:27", "language": "Python", "type": "Organization", "username": "ShannonAI", "stars": 1008, "forks": 159, "subscribers": 26, "open_issues": 28, "topics": ["deep-learning", "web", "pytorch", "model-deployment", "tensorflow", "bert"]}, {"id": 257589081, "repo_name": "PyRetri", "full_name": "PyRetri/PyRetri", "description": "Open source deep learning based unsupervised image retrieval toolbox built on PyTorch\ud83d\udd25", "created": "2020-04-21 12:30:23", "language": "Python", "type": "Organization", "username": "PyRetri", "stars": 1004, "forks": 166, "subscribers": 22, "open_issues": 18, "topics": ["deep-learning", "image-retrieval", "pytorch", "toolbox"]}, {"id": 310478206, "repo_name": "gradslam", "full_name": "gradslam/gradslam", "description": "gradslam is an open source differentiable dense SLAM library for PyTorch", "created": "2020-11-06 03:09:31", "language": "Python", "type": "Organization", "username": "gradslam", "stars": 1004, "forks": 120, "subscribers": 47, "open_issues": 22, "topics": ["slam", "deep-learning", "machine-learning", "robotics", "3d-reconstruction"]}, {"id": 172325096, "repo_name": "BERT-NER", "full_name": "kamalkraj/BERT-NER", "description": "Pytorch-Named-Entity-Recognition-with-BERT", "created": "2019-02-24 10:40:46", "language": "Python", "type": "User", "username": "kamalkraj", "stars": 1001, "forks": 253, "subscribers": 23, "open_issues": 33, "topics": ["bert", "named-entity-recognition", "pytorch", "conll-2003", "cpp11", "bert-ner", "inference", "curl", "postman", "pretrained-models"]}, {"id": 115770399, "repo_name": "TernausNet", "full_name": "ternaus/TernausNet", "description": "UNet model with VGG11 encoder pre-trained on Kaggle Carvana dataset", "created": "2017-12-30 03:13:50", "language": "Python", "type": "User", "username": "ternaus", "stars": 990, "forks": 248, "subscribers": 29, "open_issues": 8, "topics": ["pytorch", "image-segmentation"]}, {"id": 196891428, "repo_name": "pytorch-segmentation", "full_name": "yassouali/pytorch-segmentation", "description": ":art: Semantic segmentation models, datasets and losses implemented in PyTorch.", "created": "2019-07-14 23:00:30", "language": "Python", "type": "User", "username": "yassouali", "stars": 989, "forks": 268, "subscribers": 21, "open_issues": 1, "topics": ["semantic-segmentation", "computer-vision", "deep-learning"]}, {"id": 312152973, "repo_name": "MLOps", "full_name": "GokuMohandas/MLOps", "description": "A project-based course on the foundations of MLOps with a focus on intuition and application.", "created": "2020-11-12 03:05:00", "language": "Jupyter Notebook", "type": "User", "username": "GokuMohandas", "stars": 989, "forks": 165, "subscribers": 31, "open_issues": 2, "topics": ["machine-learning", "applied-ml", "deep-learning", "pytorch", "mlops"]}, {"id": 100707121, "repo_name": "pytorch-retinanet", "full_name": "kuangliu/pytorch-retinanet", "description": "RetinaNet in PyTorch", "created": "2017-08-18 11:48:50", "language": "Python", "type": "User", "username": "kuangliu", "stars": 983, "forks": 251, "subscribers": 34, "open_issues": 51, "topics": []}, {"id": 142577747, "repo_name": "PyTorch-BayesianCNN", "full_name": "kumar-shridhar/PyTorch-BayesianCNN", "description": "Bayesian Convolutional Neural Network with Variational Inference based on Bayes by Backprop in PyTorch. ", "created": "2018-07-27 13:00:45", "language": "Python", "type": "User", "username": "kumar-shridhar", "stars": 981, "forks": 257, "subscribers": 30, "open_issues": 11, "topics": ["convolutional-neural-networks", "bayesian-network", "bayesian-convnets", "bayes-by-backprop", "pytorch", "python", "pytorch-cnn", "bayesian-neural-networks", "bayesian-deep-learning", "bayesian-inference", "bayesian-statistics", "image-recognition", "aleatoric-uncertainties", "bayes", "bayesian-networks", "variational-inference", "variational-bayes"]}, {"id": 166743301, "repo_name": "openseg.pytorch", "full_name": "openseg-group/openseg.pytorch", "description": "The official Pytorch implementation of OCNet series and SegFix.", "created": "2019-01-21 03:34:59", "language": "Python", "type": "Organization", "username": "openseg-group", "stars": 981, "forks": 112, "subscribers": 42, "open_issues": 18, "topics": []}, {"id": 186653419, "repo_name": "Unet-Segmentation-Pytorch-Nest-of-Unets", "full_name": "bigmb/Unet-Segmentation-Pytorch-Nest-of-Unets", "description": "Implementation of different kinds of Unet Models for Image Segmentation - Unet , RCNN-Unet, Attention Unet, RCNN-Attention Unet, Nested Unet", "created": "2019-05-14 15:45:56", "language": "Python", "type": "User", "username": "bigmb", "stars": 981, "forks": 267, "subscribers": 17, "open_issues": 1, "topics": ["unet", "pytorch", "imagesegmentation", "segmentation", "tensorvision", "torchvision", "torch", "python3"]}, {"id": 68511643, "repo_name": "MachineLearning", "full_name": "carefree0910/MachineLearning", "description": "Machine learning algorithms implemented by pure numpy", "created": "2016-09-18 09:37:01", "language": "Jupyter Notebook", "type": "User", "username": "carefree0910", "stars": 980, "forks": 709, "subscribers": 63, "open_issues": 6, "topics": ["numpy", "machine-learning", "deep-learning", "visualization", "tensorflow", "pytorch"]}, {"id": 439414271, "repo_name": "JoJoGAN", "full_name": "mchong6/JoJoGAN", "description": "Official PyTorch repo for JoJoGAN: One Shot Face Stylization", "created": "2021-12-17 17:40:39", "language": "Jupyter Notebook", "type": "User", "username": "mchong6", "stars": 979, "forks": 146, "subscribers": 21, "open_issues": 1, "topics": ["image-translation", "gans", "anime"]}, {"id": 243530669, "repo_name": "hivemind", "full_name": "learning-at-home/hivemind", "description": "Decentralized deep learning in PyTorch. Built to train models on thousands of volunteers across the world.", "created": "2020-02-27 13:50:19", "language": "Python", "type": "Organization", "username": "learning-at-home", "stars": 979, "forks": 59, "subscribers": 47, "open_issues": 44, "topics": ["deep-learning", "pytorch", "volunteer-computing", "mixture-of-experts", "distributed-training", "distributed-systems", "asynchronous-programming", "asyncio", "dht", "hivemind", "neural-networks", "machine-learning"]}, {"id": 323777821, "repo_name": "yolact_edge", "full_name": "haotian-liu/yolact_edge", "description": "The first competitive instance segmentation approach that runs on small edge devices at real-time speeds.", "created": "2020-12-23 02:02:43", "language": "Python", "type": "User", "username": "haotian-liu", "stars": 977, "forks": 210, "subscribers": 31, "open_issues": 34, "topics": ["realtime", "real-time", "instance-segmentation", "yolactedge", "pytorch", "edge-devices"]}, {"id": 99926712, "repo_name": "tsn-pytorch", "full_name": "yjxiong/tsn-pytorch", "description": "Temporal Segment Networks (TSN) in PyTorch ", "created": "2017-08-10 13:34:46", "language": "Python", "type": "User", "username": "yjxiong", "stars": 976, "forks": 307, "subscribers": 26, "open_issues": 41, "topics": ["action-recognition", "deep-learning", "video-understanding", "pytorch", "temporal-segment-networks"]}, {"id": 358678977, "repo_name": "tiny-cuda-nn", "full_name": "NVlabs/tiny-cuda-nn", "description": "Lightning fast C++/CUDA neural network framework", "created": "2021-04-16 17:53:10", "language": "C++", "type": "Organization", "username": "NVlabs", "stars": 976, "forks": 71, "subscribers": 28, "open_issues": 4, "topics": ["neural-network", "deep-learning", "gpu", "cuda", "mlp", "nerf", "rendering", "real-time", "pytorch"]}, {"id": 154843614, "repo_name": "training_extensions", "full_name": "openvinotoolkit/training_extensions", "description": "Trainable models and NN optimization tools", "created": "2018-10-26 14:02:29", "language": "Python", "type": "Organization", "username": "openvinotoolkit", "stars": 975, "forks": 377, "subscribers": 52, "open_issues": 28, "topics": ["openvino", "computer-vision", "deep-learning", "tensorflow", "pytorch", "neural-networks-compression", "detection", "ssd", "segmentation", "text-detection", "text-recognition", "face-recognition", "super-resolution", "quantization", "sparsity"]}, {"id": 143090423, "repo_name": "DeepKE", "full_name": "zjunlp/DeepKE", "description": "An Open Toolkit for Knowledge Base Population\uff08DeepKE\u662f\u4e00\u4e2a\u652f\u6301\u4f4e\u8d44\u6e90\u3001\u957f\u7bc7\u7ae0\u7684\u5f00\u6e90\u77e5\u8bc6\u62bd\u53d6\u5de5\u5177\uff0c\u5177\u5907\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u3001\u5173\u7cfb\u62bd\u53d6\u548c\u5c5e\u6027\u62bd\u53d6\u7b49\u529f\u80fd\uff09", "created": "2018-08-01 01:54:52", "language": "Python", "type": "Organization", "username": "zjunlp", "stars": 974, "forks": 287, "subscribers": 33, "open_issues": 0, "topics": ["knowledge-graph", "relation-extraction", "chinese", "named-entity-recognition", "attribute-extraction", "low-resource", "document-level", "information-extraction", "pytorch", "deepke", "ner", "nlp", "few-shot", "prompt"]}, {"id": 113597005, "repo_name": "End-to-end-ASR-Pytorch", "full_name": "Alexander-H-Liu/End-to-end-ASR-Pytorch", "description": "This is an open source project (formerly named Listen, Attend and Spell - PyTorch Implementation) for end-to-end ASR implemented with Pytorch, the well known deep learning toolkit.", "created": "2017-12-08 16:52:28", "language": "Python", "type": "User", "username": "Alexander-H-Liu", "stars": 971, "forks": 287, "subscribers": 33, "open_issues": 32, "topics": []}, {"id": 103007434, "repo_name": "sepconv-slomo", "full_name": "sniklaus/sepconv-slomo", "description": "an implementation of Video Frame Interpolation via Adaptive Separable Convolution using PyTorch", "created": "2017-09-10 05:58:15", "language": "Python", "type": "User", "username": "sniklaus", "stars": 969, "forks": 175, "subscribers": 43, "open_issues": 2, "topics": ["pytorch", "python", "cuda", "deep-learning", "cupy"]}, {"id": 81783074, "repo_name": "pytorch-a3c", "full_name": "ikostrikov/pytorch-a3c", "description": "PyTorch implementation of Asynchronous Advantage Actor Critic (A3C) from \"Asynchronous Methods for Deep Reinforcement Learning\".", "created": "2017-02-13 03:57:55", "language": "Python", "type": "User", "username": "ikostrikov", "stars": 968, "forks": 249, "subscribers": 44, "open_issues": 20, "topics": ["python", "reinforcement-learning", "pytorch", "deep-learning", "actor-critic", "a3c", "pytorch-a3c", "asynchronous-methods", "deep-reinforcement-learning", "asynch", "asynchronous-advantage-actor-critic"]}, {"id": 218188149, "repo_name": "ParallelWaveGAN", "full_name": "kan-bayashi/ParallelWaveGAN", "description": "Unofficial Parallel WaveGAN (+ MelGAN & Multi-band MelGAN & HiFi-GAN & StyleMelGAN) with Pytorch", "created": "2019-10-29 02:32:35", "language": "Jupyter Notebook", "type": "User", "username": "kan-bayashi", "stars": 963, "forks": 246, "subscribers": 48, "open_issues": 16, "topics": ["speech-synthesis", "neural-vocoder", "text-to-speech", "pytorch", "wavenet", "parallel-wavenet", "realtime", "tts", "melgan", "vocoder", "hifigan", "style-melgan"]}, {"id": 104302861, "repo_name": "video-classification-3d-cnn-pytorch", "full_name": "kenshohara/video-classification-3d-cnn-pytorch", "description": "Video classification tools using 3D ResNet", "created": "2017-09-21 04:48:33", "language": "Python", "type": "User", "username": "kenshohara", "stars": 962, "forks": 256, "subscribers": 17, "open_issues": 38, "topics": ["video-classification", "computer-vision", "computer-vision-tools", "pytorch", "python", "action-recognition", "deep-learning"]}, {"id": 317440833, "repo_name": "alphafold2", "full_name": "lucidrains/alphafold2", "description": "To eventually become an unofficial Pytorch implementation / replication of Alphafold2, as details of the architecture get released", "created": "2020-12-01 06:01:44", "language": "Python", "type": "User", "username": "lucidrains", "stars": 962, "forks": 163, "subscribers": 59, "open_issues": 18, "topics": ["artificial-intelligence", "deep-learning", "protein-folding", "attention-mechanism"]}, {"id": 189136525, "repo_name": "CutMix-PyTorch", "full_name": "clovaai/CutMix-PyTorch", "description": "Official Pytorch implementation of CutMix regularizer", "created": "2019-05-29 02:32:07", "language": "Python", "type": "Organization", "username": "clovaai", "stars": 960, "forks": 151, "subscribers": 15, "open_issues": 5, "topics": ["cutmix", "augmentation", "regularization", "transfer-learning", "iccv2019"]}, {"id": 138282365, "repo_name": "Mask-RCNN", "full_name": "wannabeOG/Mask-RCNN", "description": "A PyTorch implementation of the architecture of Mask RCNN", "created": "2018-06-22 09:19:05", "language": "Python", "type": "User", "username": "wannabeOG", "stars": 959, "forks": 179, "subscribers": 21, "open_issues": 16, "topics": []}, {"id": 65744394, "repo_name": "variational-autoencoder", "full_name": "altosaar/variational-autoencoder", "description": "Variational autoencoder implemented in tensorflow and pytorch (including inverse autoregressive flow) ", "created": "2016-08-15 15:48:05", "language": "Python", "type": "User", "username": "altosaar", "stars": 950, "forks": 238, "subscribers": 31, "open_issues": 1, "topics": ["vae", "machine-learning", "tensorflow", "variational-autoencoder", "variational-inference", "probabilistic-graphical-models", "deep", "learning", "deep-learning", "deep-neural-networks", "pytorch", "unsupervised-learning", "autoregressive-neural-networks"]}, {"id": 252486500, "repo_name": "AutoDL", "full_name": "DeepWisdom/AutoDL", "description": "Automated Deep Learning without ANY human intervention. 1'st Solution for AutoDL challenge@NeurIPS. ", "created": "2020-04-02 14:59:04", "language": "Python", "type": "Organization", "username": "DeepWisdom", "stars": 947, "forks": 191, "subscribers": 30, "open_issues": 20, "topics": ["autodl", "automl", "nas", "feature-engineering", "model-selection", "full-automl", "artificial-intelligence", "lightgbm", "resnet", "pytorch", "tensorflow", "python", "autodl-challenge", "ai", "deeplearning", "data-science", "machine-learning", "big-data", "multi-label", "automated-machine-learning"]}, {"id": 191072466, "repo_name": "vq-vae-2-pytorch", "full_name": "rosinality/vq-vae-2-pytorch", "description": "Implementation of Generating Diverse High-Fidelity Images with VQ-VAE-2 in PyTorch", "created": "2019-06-10 00:59:16", "language": "Python", "type": "User", "username": "rosinality", "stars": 946, "forks": 214, "subscribers": 18, "open_issues": 40, "topics": ["vq-vae-2", "vq-vae"]}, {"id": 376006790, "repo_name": "GANsNRoses", "full_name": "mchong6/GANsNRoses", "description": "Official PyTorch repo for GAN's N' Roses. Diverse im2im and vid2vid selfie to anime translation.", "created": "2021-06-11 11:44:38", "language": "Jupyter Notebook", "type": "User", "username": "mchong6", "stars": 946, "forks": 140, "subscribers": 23, "open_issues": 11, "topics": []}, {"id": 245032939, "repo_name": "gan-compression", "full_name": "mit-han-lab/gan-compression", "description": "[CVPR 2020] GAN Compression: Efficient Architectures for Interactive Conditional GANs", "created": "2020-03-05 00:27:13", "language": "Python", "type": "Organization", "username": "mit-han-lab", "stars": 946, "forks": 133, "subscribers": 31, "open_issues": 6, "topics": ["compression", "gans", "conditional-gans", "pix2pix", "cyclegan", "gaugan", "pytorch", "image-to-image-translation"]}, {"id": 168097556, "repo_name": "style-based-gan-pytorch", "full_name": "rosinality/style-based-gan-pytorch", "description": "Implementation A Style-Based Generator Architecture for Generative Adversarial Networks in PyTorch", "created": "2019-01-29 05:51:52", "language": "Python", "type": "User", "username": "rosinality", "stars": 938, "forks": 218, "subscribers": 20, "open_issues": 69, "topics": []}, {"id": 277667727, "repo_name": "torchsde", "full_name": "google-research/torchsde", "description": "Differentiable SDE solvers with GPU support and efficient sensitivity analysis. ", "created": "2020-07-06 23:13:11", "language": "Python", "type": "Organization", "username": "google-research", "stars": 937, "forks": 101, "subscribers": 30, "open_issues": 7, "topics": ["deep-learning", "deep-neural-networks", "pytorch", "dynamical-systems", "differential-equations", "stochastic-processes", "stochastic-differential-equations", "stochastic-volatility-models", "neural-differential-equations"]}, {"id": 137543252, "repo_name": "neural_renderer", "full_name": "daniilidis-group/neural_renderer", "description": "A PyTorch port of the Neural 3D Mesh Renderer", "created": "2018-06-16 00:51:47", "language": "Python", "type": "Organization", "username": "daniilidis-group", "stars": 932, "forks": 189, "subscribers": 27, "open_issues": 58, "topics": []}, {"id": 127135121, "repo_name": "LearningToCompare_FSL", "full_name": "floodsung/LearningToCompare_FSL", "description": "PyTorch code for CVPR 2018 paper: Learning to Compare: Relation Network for Few-Shot Learning (Few-Shot Learning part)", "created": "2018-03-28 12:14:14", "language": "Python", "type": "User", "username": "floodsung", "stars": 926, "forks": 257, "subscribers": 30, "open_issues": 31, "topics": ["few-shot-learning", "meta-learning"]}, {"id": 370434931, "repo_name": "image-to-latex", "full_name": "kingyiusuen/image-to-latex", "description": "Convert images of LaTex math equations into LaTex code.", "created": "2021-05-24 17:34:09", "language": "Python", "type": "User", "username": "kingyiusuen", "stars": 925, "forks": 157, "subscribers": 8, "open_issues": 8, "topics": ["pytorch", "deep-learning", "transformer", "encoder-decoder", "streamlit-webapp", "latex", "end-to-end-machine-learning", "computer-vision"]}, {"id": 78485664, "repo_name": "Deep-Learning-Experiments", "full_name": "roatienza/Deep-Learning-Experiments", "description": "Videos, notes and experiments to understand deep learning", "created": "2017-01-10 01:31:13", "language": "Jupyter Notebook", "type": "User", "username": "roatienza", "stars": 924, "forks": 712, "subscribers": 84, "open_issues": 10, "topics": ["deep-learning", "deep-learning-tutorial", "artificial-intelligence", "pytorch", "vision", "speech", "nlp"]}, {"id": 81585787, "repo_name": "cnn-text-classification-pytorch", "full_name": "Shawn1993/cnn-text-classification-pytorch", "description": "CNNs for Sentence Classification in PyTorch", "created": "2017-02-10 16:49:39", "language": "Python", "type": "User", "username": "Shawn1993", "stars": 919, "forks": 272, "subscribers": 15, "open_issues": 6, "topics": ["cnn-model", "pytorch"]}, {"id": 247876759, "repo_name": "SReC", "full_name": "caoscott/SReC", "description": "PyTorch Implementation of \"Lossless Image Compression through Super-Resolution\"", "created": "2020-03-17 04:09:46", "language": "Python", "type": "User", "username": "caoscott", "stars": 918, "forks": 81, "subscribers": 22, "open_issues": 8, "topics": ["lossless", "compression", "neural-network", "pytorch"]}, {"id": 198412763, "repo_name": "MedicalZooPytorch", "full_name": "black0017/MedicalZooPytorch", "description": "A pytorch-based deep learning framework for multi-modal 2D/3D medical image segmentation", "created": "2019-07-23 11:00:46", "language": "Python", "type": "User", "username": "black0017", "stars": 915, "forks": 199, "subscribers": 33, "open_issues": 13, "topics": ["segmentation", "deep-learning", "pytorch", "medical-imaging", "medical-image-processing", "medical-image-segmentation", "3d-convolutional-network", "brats2019", "brats2018", "densenet", "resnet", "iseg-challenge", "iseg", "mrbrains18", "unet", "unet-image-segmentation", "segmentation-models"]}, {"id": 152700563, "repo_name": "Codes-for-Lane-Detection", "full_name": "cardwing/Codes-for-Lane-Detection", "description": "Learning Lightweight Lane Detection CNNs by Self Attention Distillation (ICCV 2019)", "created": "2018-10-12 05:53:41", "language": "Lua", "type": "User", "username": "cardwing", "stars": 915, "forks": 327, "subscribers": 35, "open_issues": 102, "topics": ["lane-detection", "deep-learning", "lua", "tensorflow", "cnn", "pytorch"]}, {"id": 176912542, "repo_name": "pytorch-pretrained-BigGAN", "full_name": "huggingface/pytorch-pretrained-BigGAN", "description": "\ud83e\udd8bA PyTorch implementation of BigGAN with pretrained weights and conversion scripts.", "created": "2019-03-21 09:28:47", "language": "Python", "type": "Organization", "username": "huggingface", "stars": 914, "forks": 154, "subscribers": 25, "open_issues": 13, "topics": ["neural-network", "gan", "pytorch", "biggan", "computer-vision", "artificial-intelligence", "generative-adversarial-network"]}, {"id": 109167781, "repo_name": "deeplab-pytorch", "full_name": "kazuto1011/deeplab-pytorch", "description": "PyTorch implementation of DeepLab v2 on COCO-Stuff / PASCAL VOC", "created": "2017-11-01 18:27:51", "language": "Python", "type": "User", "username": "kazuto1011", "stars": 911, "forks": 247, "subscribers": 12, "open_issues": 4, "topics": ["pytorch", "deeplab", "semantic-segmentation", "cocostuff", "coco", "voc"]}, {"id": 155469554, "repo_name": "few-shot", "full_name": "oscarknagg/few-shot", "description": "Repository for few-shot learning machine learning projects", "created": "2018-10-30 23:24:51", "language": "Python", "type": "User", "username": "oscarknagg", "stars": 909, "forks": 200, "subscribers": 13, "open_issues": 29, "topics": ["machine-learning", "pytorch", "few-shot-learning", "research", "meta-learning", "maml", "omniglot", "miniimagenet"]}, {"id": 202580388, "repo_name": "flow-forecast", "full_name": "AIStream-Peelout/flow-forecast", "description": "Deep learning PyTorch library for time series forecasting, classification, and anomaly detection (originally for flood forecasting).", "created": "2019-08-15 17:02:09", "language": "Python", "type": "Organization", "username": "AIStream-Peelout", "stars": 908, "forks": 153, "subscribers": 20, "open_issues": 85, "topics": ["deep-learning", "pytorch", "time-series-forecasting", "time-series", "transfer-learning", "deep-neural-networks", "transformer", "forecasting", "lstm", "time-series-regression", "state-of-the-art-models", "anomaly-detection", "time-series-analysis", "hacktoberfest"]}, {"id": 114475042, "repo_name": "pytorch_scatter", "full_name": "rusty1s/pytorch_scatter", "description": "PyTorch Extension Library of Optimized Scatter Operations", "created": "2017-12-16 16:34:23", "language": "Python", "type": "User", "username": "rusty1s", "stars": 906, "forks": 103, "subscribers": 12, "open_issues": 22, "topics": ["pytorch", "scatter", "segment", "gather"]}, {"id": 307189275, "repo_name": "sam", "full_name": "davda54/sam", "description": "SAM: Sharpness-Aware Minimization (PyTorch)", "created": "2020-10-25 20:46:29", "language": "Python", "type": "User", "username": "davda54", "stars": 904, "forks": 113, "subscribers": 12, "open_issues": 1, "topics": ["optimizer", "pytorch", "sam", "sharpness-aware"]}, {"id": 140480705, "repo_name": "SincNet", "full_name": "mravanelli/SincNet", "description": "SincNet is a neural architecture for efficiently processing raw audio samples.", "created": "2018-07-10 19:54:09", "language": "Python", "type": "User", "username": "mravanelli", "stars": 903, "forks": 223, "subscribers": 29, "open_issues": 27, "topics": ["deep-learning", "audio", "waveform", "filtering", "cnn", "convolutional-neural-networks", "speaker-recognition", "speaker-verification", "speaker-identification", "speech-recognition", "asr", "audio-processing", "speech-processing", "digital-signal-processing", "signal-processing", "neural-networks", "artificial-intelligence", "timit", "pytorch", "python"]}, {"id": 217456198, "repo_name": "mmfashion", "full_name": "open-mmlab/mmfashion", "description": "Open-source toolbox for visual fashion analysis based on PyTorch", "created": "2019-10-25 05:15:34", "language": "Python", "type": "Organization", "username": "open-mmlab", "stars": 897, "forks": 216, "subscribers": 43, "open_issues": 70, "topics": ["visual-fashion-analysis", "fashion-ai", "attribute-prediction", "clothes-retrieval", "landmark-detection", "deep-learning"]}, {"id": 255096636, "repo_name": "nerf_pl", "full_name": "kwea123/nerf_pl", "description": "NeRF (Neural Radiance Fields) and NeRF in the Wild using pytorch-lightning", "created": "2020-04-12 14:12:06", "language": "Jupyter Notebook", "type": "User", "username": "kwea123", "stars": 894, "forks": 178, "subscribers": 38, "open_issues": 17, "topics": ["nerf", "neural-radiance-fields", "view-synthesis", "pytorch", "pytorch-lightning", "mesh", "3d-reconstruction", "volume-rendering", "mixed-reality", "unity3d", "colab", "ray-tracing", "nerf-in-the-wild", "nerf-w"]}, {"id": 159607436, "repo_name": "BiSeNet", "full_name": "CoinCheung/BiSeNet", "description": "Add bisenetv2.  My implementation of BiSeNet", "created": "2018-11-29 04:27:51", "language": "Python", "type": "User", "username": "CoinCheung", "stars": 892, "forks": 216, "subscribers": 13, "open_issues": 32, "topics": ["bisenet", "cityscapes", "pytorch", "bisenetv2", "cocostuff", "tensorrt", "ncnn", "openvino", "triton-inference-server"]}, {"id": 186150409, "repo_name": "bert-extractive-summarizer", "full_name": "dmmiller612/bert-extractive-summarizer", "description": "Easy to use extractive text summarization with BERT", "created": "2019-05-11 15:33:44", "language": "Python", "type": "User", "username": "dmmiller612", "stars": 891, "forks": 241, "subscribers": 21, "open_issues": 31, "topics": ["bert", "extractive-summarization", "pytorch", "coreference"]}, {"id": 127359395, "repo_name": "Efficient-PyTorch", "full_name": "Lyken17/Efficient-PyTorch", "description": "My best practice of training large dataset using PyTorch.", "created": "2018-03-29 23:57:33", "language": "Python", "type": "User", "username": "Lyken17", "stars": 888, "forks": 132, "subscribers": 26, "open_issues": 7, "topics": []}, {"id": 167240425, "repo_name": "neuropod", "full_name": "uber/neuropod", "description": "A uniform interface to run deep learning models from multiple frameworks", "created": "2019-01-23 19:22:22", "language": "C++", "type": "Organization", "username": "uber", "stars": 888, "forks": 71, "subscribers": 28, "open_issues": 46, "topics": ["tensorflow", "pytorch", "keras", "deep-learning", "deeplearning", "machine-learning", "machinelearning", "inference", "incubation"]}, {"id": 164412075, "repo_name": "Anime-InPainting", "full_name": "youyuge34/Anime-InPainting", "description": "An application tool of edge-connect, which can do anime inpainting and drawing.   \u52a8\u6f2b\u4eba\u7269\u56fe\u7247\u81ea\u52a8\u4fee\u590d\uff0c\u53bb\u9a6c\u8d5b\u514b\uff0c\u586b\u8865\uff0c\u53bb\u7455\u75b5", "created": "2019-01-07 09:53:36", "language": "Python", "type": "User", "username": "youyuge34", "stars": 885, "forks": 131, "subscribers": 21, "open_issues": 14, "topics": ["deep-learning", "neural-network", "gan", "generative-adversarial-network", "inpainting", "mosaic", "cv", "opencv", "python", "pytorch", "computer-vision", "anime"]}, {"id": 148112976, "repo_name": "pytorch-EverybodyDanceNow", "full_name": "nyoki-mtl/pytorch-EverybodyDanceNow", "description": "Implementation of Everybody Dance Now by pytorch", "created": "2018-09-10 07:01:07", "language": "Jupyter Notebook", "type": "User", "username": "nyoki-mtl", "stars": 883, "forks": 202, "subscribers": 47, "open_issues": 12, "topics": ["pytorch", "everybody-dance-now"]}, {"id": 170843468, "repo_name": "Knowledge-Distillation-Zoo", "full_name": "AberHu/Knowledge-Distillation-Zoo", "description": "Pytorch implementation of various Knowledge Distillation (KD) methods.", "created": "2019-02-15 10:04:31", "language": "Python", "type": "User", "username": "AberHu", "stars": 882, "forks": 189, "subscribers": 19, "open_issues": 9, "topics": ["kd-methods", "knowledge-transfer", "knowledge-distillation", "kd", "teacher-student", "model-compression", "distillation"]}, {"id": 169674091, "repo_name": "deepxde", "full_name": "lululxvi/deepxde", "description": "A library for scientific machine learning and physics-informed learning", "created": "2019-02-08 02:19:14", "language": "Python", "type": "User", "username": "lululxvi", "stars": 882, "forks": 318, "subscribers": 41, "open_issues": 95, "topics": ["scientific-computing", "tesnorflow", "neural-network", "pde-solver", "machine-learning", "differential-equations", "deep-learning", "scientific-machine-learning", "pinn", "multi-fidelity-data", "pde", "ide", "numerical-solver", "geometry", "fractional-diffusion", "operator", "pytorch", "physics-informed-learning", "jax", "deeponet"]}, {"id": 160007582, "repo_name": "espresso", "full_name": "freewym/espresso", "description": "Espresso: A Fast End-to-End Neural Speech Recognition Toolkit", "created": "2018-12-02 02:48:48", "language": "Python", "type": "User", "username": "freewym", "stars": 881, "forks": 118, "subscribers": 41, "open_issues": 4, "topics": ["python", "pytorch", "fairseq", "kaldi", "end-to-end", "speech-recognition", "asr"]}, {"id": 171952729, "repo_name": "openpifpaf", "full_name": "openpifpaf/openpifpaf", "description": "Official implementation of \"OpenPifPaf: Composite Fields for Semantic Keypoint Detection and Spatio-Temporal Association\" in PyTorch.", "created": "2019-02-21 22:07:00", "language": "Python", "type": "Organization", "username": "openpifpaf", "stars": 878, "forks": 193, "subscribers": 33, "open_issues": 11, "topics": ["human-pose-estimation", "keypoint-estimation", "pose-estimation", "computer-vision", "composite-fields", "deep-learning"]}, {"id": 87221861, "repo_name": "pytorch-deform-conv", "full_name": "oeway/pytorch-deform-conv", "description": "PyTorch implementation of Deformable Convolution", "created": "2017-04-04 18:32:54", "language": "Python", "type": "User", "username": "oeway", "stars": 876, "forks": 146, "subscribers": 20, "open_issues": 15, "topics": ["deep-learning", "deep-learning-algorithms"]}, {"id": 361648380, "repo_name": "yolov5-face", "full_name": "deepcam-cn/yolov5-face", "description": "YOLO5Face: Why Reinventing a Face Detector (https://arxiv.org/abs/2105.12931)", "created": "2021-04-26 06:55:59", "language": "Python", "type": "Organization", "username": "deepcam-cn", "stars": 876, "forks": 232, "subscribers": 26, "open_issues": 48, "topics": ["yolov5", "tensorrt", "retinaface", "scrfd", "tinaface", "yolo", "pytorch", "arcface", "shufflenet", "blazeface"]}, {"id": 186806035, "repo_name": "learnable-triangulation-pytorch", "full_name": "karfly/learnable-triangulation-pytorch", "description": "This repository is an official PyTorch implementation of the paper \"Learnable Triangulation of Human Pose\" (ICCV 2019, oral). Proposed method archives state-of-the-art results in multi-view 3D human pose estimation!", "created": "2019-05-15 10:41:48", "language": "Python", "type": "User", "username": "karfly", "stars": 874, "forks": 157, "subscribers": 50, "open_issues": 26, "topics": []}, {"id": 270670394, "repo_name": "CDial-GPT", "full_name": "thu-coai/CDial-GPT", "description": " A Large-scale Chinese Short-Text Conversation Dataset and Chinese pre-training dialog models ", "created": "2020-06-08 13:01:49", "language": "Python", "type": "Organization", "username": "thu-coai", "stars": 874, "forks": 165, "subscribers": 23, "open_issues": 27, "topics": ["dialogue", "pytorch", "gpt", "gpt-2", "lccc", "text-generation"]}, {"id": 135610132, "repo_name": "DeepRL-Tutorials", "full_name": "qfettes/DeepRL-Tutorials", "description": "Contains high quality implementations of Deep Reinforcement Learning algorithms written in PyTorch", "created": "2018-05-31 16:37:34", "language": "Jupyter Notebook", "type": "User", "username": "qfettes", "stars": 870, "forks": 284, "subscribers": 30, "open_issues": 2, "topics": ["python3", "pytorch", "reinforcement-learning", "deep-reinforcement-learning", "deep-q-network", "double-dqn", "multi-step-learning", "dueling-dqn", "noisy-networks", "prioritized-experience-replay", "deeprl-tutorials", "categorical-dqn", "rainbow", "quantile-regression", "deep-recurrent-q-network", "actor-critic", "advantage-actor-critic", "a2c", "gae", "ppo"]}, {"id": 148335407, "repo_name": "CBAM.PyTorch", "full_name": "luuuyi/CBAM.PyTorch", "description": "Non-official implement of Paper\uff1aCBAM: Convolutional Block Attention Module", "created": "2018-09-11 15:02:39", "language": "Python", "type": "User", "username": "luuuyi", "stars": 869, "forks": 240, "subscribers": 11, "open_issues": 7, "topics": []}, {"id": 155637781, "repo_name": "conv-emotion", "full_name": "declare-lab/conv-emotion", "description": "This repo contains implementation of different architectures for emotion recognition in conversations.", "created": "2018-10-31 23:54:41", "language": "Python", "type": "Organization", "username": "declare-lab", "stars": 869, "forks": 259, "subscribers": 35, "open_issues": 7, "topics": ["dialogue-systems", "conversational-agents", "conversational-ai", "emotion-recognition", "emotion-analysis", "sentiment-analysis", "pretrained-models", "natural-language-processing", "natural-language-understanding", "memory-network", "lstm", "pytorch", "emotion-recognition-in-conversation"]}, {"id": 277005144, "repo_name": "Complex-YOLOv4-Pytorch", "full_name": "maudzung/Complex-YOLOv4-Pytorch", "description": "The PyTorch Implementation based on YOLOv4 of the paper: \"Complex-YOLO: Real-time 3D Object Detection on Point Clouds\"", "created": "2020-07-03 23:39:23", "language": "Python", "type": "User", "username": "maudzung", "stars": 868, "forks": 182, "subscribers": 27, "open_issues": 26, "topics": ["yolov4", "object-detection", "real-time", "multiprocessing", "data-parallel-computing", "lidar", "lidar-point-cloud", "complex-yolo", "3d-object-detection", "mish", "mosaic", "rotated-boxes", "giou", "rotated-boxes-iou"]}, {"id": 227360230, "repo_name": "SimpleCVReproduction", "full_name": "pprp/SimpleCVReproduction", "description": ":punch: Reproduce simple cv project including attention module, classification, object detection, segmentation, keypoint detection, tracking :smile:  etc.", "created": "2019-12-11 12:25:06", "language": "Python", "type": "User", "username": "pprp", "stars": 868, "forks": 262, "subscribers": 22, "open_issues": 3, "topics": ["computer-vision", "paper-reproduction", "demo", "cv", "pytorch", "classification", "object-detection", "face-detection", "landmark", "attention"]}, {"id": 229664075, "repo_name": "PyTorchTricks", "full_name": "lartpang/PyTorchTricks", "description": "Some tricks of pytorch... :star:", "created": "2019-12-23 02:45:29", "language": null, "type": "User", "username": "lartpang", "stars": 865, "forks": 99, "subscribers": 31, "open_issues": 0, "topics": ["pytorch", "pytorch-trick", "pytorch-tutorial", "tricks"]}, {"id": 142955360, "repo_name": "pytorch-video-recognition", "full_name": "jfzhang95/pytorch-video-recognition", "description": "PyTorch implemented C3D, R3D, R2Plus1D models for video activity recognition.", "created": "2018-07-31 03:06:07", "language": "Python", "type": "User", "username": "jfzhang95", "stars": 863, "forks": 217, "subscribers": 19, "open_issues": 40, "topics": ["c3d", "r2plus1d", "r3d", "video-activity-recognition"]}, {"id": 314308124, "repo_name": "svoice", "full_name": "facebookresearch/svoice", "description": "We provide a PyTorch implementation of the paper Voice Separation with an Unknown Number of Multiple Speakers In which, we present a new method for separating a mixed audio sequence, in which multiple voices speak simultaneously. The new method employs gated neural networks that are trained to separate the voices at multiple processing steps, while maintaining the speaker in each output channel fixed. A different model is trained for every number of possible speakers, and the model with the largest number of speakers is employed to select the actual number of speakers in a given sample. Our method greatly outperforms the current state of the art, which, as we show, is not competitive for more than two speakers. ", "created": "2020-11-19 16:37:28", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 863, "forks": 128, "subscribers": 24, "open_issues": 7, "topics": []}, {"id": 117049638, "repo_name": "fpn.pytorch", "full_name": "jwyang/fpn.pytorch", "description": "Pytorch implementation of Feature Pyramid Network (FPN) for Object Detection", "created": "2018-01-11 04:22:53", "language": "Python", "type": "User", "username": "jwyang", "stars": 862, "forks": 212, "subscribers": 19, "open_issues": 49, "topics": []}, {"id": 199716757, "repo_name": "deep_gcns_torch", "full_name": "lightaime/deep_gcns_torch", "description": "Pytorch Repo for DeepGCNs (ICCV'2019 Oral, TPAMI'2021), DeeperGCN (arXiv'2020) and GNN1000(ICML'2021): https://www.deepgcns.org", "created": "2019-07-30 19:44:00", "language": "Python", "type": "User", "username": "lightaime", "stars": 860, "forks": 124, "subscribers": 16, "open_issues": 4, "topics": ["graph-neural-networks", "geometric-deep-learning", "3d-point-clouds", "deep-gcns", "data-mining", "pytorch", "computer-vision", "bioinformatics", "cheminformatics", "social-network", "science-research"]}, {"id": 163538431, "repo_name": "early-stopping-pytorch", "full_name": "Bjarten/early-stopping-pytorch", "description": "Early stopping for PyTorch ", "created": "2018-12-29 20:15:51", "language": "Jupyter Notebook", "type": "User", "username": "Bjarten", "stars": 857, "forks": 234, "subscribers": 13, "open_issues": 3, "topics": ["pytorch", "early-stopping", "early", "stopping", "pytorch-tutorial", "python", "mnist", "regularization", "tutorial"]}, {"id": 111507998, "repo_name": "Deep-Learning-Project-Template", "full_name": "L1aoXingyu/Deep-Learning-Project-Template", "description": "A best practice for deep learning project template architecture.", "created": "2017-11-21 06:19:11", "language": "Python", "type": "User", "username": "L1aoXingyu", "stars": 856, "forks": 222, "subscribers": 15, "open_issues": 4, "topics": ["pytorch", "pytorch-tutorial", "keras", "chainer", "deep-learning"]}, {"id": 242959055, "repo_name": "AdderNet", "full_name": "huawei-noah/AdderNet", "description": "Code for paper \" AdderNet: Do We Really Need Multiplications in Deep Learning?\"", "created": "2020-02-25 09:22:03", "language": "Python", "type": "Organization", "username": "huawei-noah", "stars": 852, "forks": 164, "subscribers": 25, "open_issues": 19, "topics": ["pytorch", "imagenet", "convolutional-neural-networks", "cvpr2020", "efficient-inference"]}, {"id": 376096061, "repo_name": "SegFormer", "full_name": "NVlabs/SegFormer", "description": "Official PyTorch implementation of SegFormer", "created": "2021-06-11 17:22:07", "language": "Python", "type": "Organization", "username": "NVlabs", "stars": 850, "forks": 115, "subscribers": 21, "open_issues": 28, "topics": ["semantic-segmentation", "transformer", "ade20k", "cityscapes"]}, {"id": 352404951, "repo_name": "torchtyping", "full_name": "patrick-kidger/torchtyping", "description": "Type annotations and dynamic checking for a tensor's shape, dtype, names, etc.", "created": "2021-03-28 18:19:06", "language": "Python", "type": "User", "username": "patrick-kidger", "stars": 850, "forks": 21, "subscribers": 12, "open_issues": 10, "topics": ["tensors", "named-tensors", "shape", "pytorch", "typing", "python-typing"]}, {"id": 204037017, "repo_name": "deep-learning-project-template", "full_name": "PyTorchLightning/deep-learning-project-template", "description": "Pytorch Lightning code guideline for conferences", "created": "2019-08-23 16:50:05", "language": "Python", "type": "Organization", "username": "PyTorchLightning", "stars": 849, "forks": 194, "subscribers": 13, "open_issues": 11, "topics": []}, {"id": 195163550, "repo_name": "Res2Net-PretrainedModels", "full_name": "Res2Net/Res2Net-PretrainedModels", "description": "(ImageNet pretrained models) The official pytorch implemention of the TPAMI paper \"Res2Net: A New Multi-scale Backbone Architecture\"", "created": "2019-07-04 03:35:43", "language": "Python", "type": "Organization", "username": "Res2Net", "stars": 848, "forks": 178, "subscribers": 26, "open_issues": 16, "topics": ["res2net", "backbone", "pytorch", "multi-scale", "jittor"]}, {"id": 224086560, "repo_name": "MixNMatch", "full_name": "Yuheng-Li/MixNMatch", "description": "Pytorch implementation of MixNMatch", "created": "2019-11-26 02:40:22", "language": "Python", "type": "User", "username": "Yuheng-Li", "stars": 843, "forks": 156, "subscribers": 60, "open_issues": 9, "topics": ["gans", "pytorch", "disentangled-representations", "fine-grained", "image-generation", "image-manipulation", "deep-learning"]}, {"id": 126281209, "repo_name": "RNN-Time-series-Anomaly-Detection", "full_name": "chickenbestlover/RNN-Time-series-Anomaly-Detection", "description": "RNN based Time-series Anomaly detector model implemented in Pytorch.", "created": "2018-03-22 04:50:59", "language": "Python", "type": "User", "username": "chickenbestlover", "stars": 840, "forks": 255, "subscribers": 39, "open_issues": 27, "topics": ["rnn", "neural-network", "anomaly-detection", "time-series", "prediction", "forecast"]}, {"id": 320628155, "repo_name": "LaTeX-OCR", "full_name": "lukas-blecher/LaTeX-OCR", "description": "pix2tex: Using a ViT to convert images of equations into LaTeX code.", "created": "2020-12-11 16:35:13", "language": "Python", "type": "User", "username": "lukas-blecher", "stars": 840, "forks": 134, "subscribers": 22, "open_issues": 11, "topics": ["machine-learning", "transformer", "im2latex", "deep-learning", "image2text", "latex", "dataset", "pytorch", "im2markup", "ocr", "latex-ocr", "vit", "math-ocr", "vision-transformer", "image-processing", "python"]}, {"id": 247821912, "repo_name": "torchinfo", "full_name": "TylerYep/torchinfo", "description": "View model summaries in PyTorch!", "created": "2020-03-16 21:41:29", "language": "Python", "type": "User", "username": "TylerYep", "stars": 839, "forks": 54, "subscribers": 10, "open_issues": 7, "topics": ["pytorch", "torchsummary", "torch", "keras", "visualization", "torchvision", "torch-summary", "torchinfo", "python"]}, {"id": 322048570, "repo_name": "liif", "full_name": "yinboc/liif", "description": "Learning Continuous Image Representation with Local Implicit Image Function, in CVPR 2021 (Oral)", "created": "2020-12-16 17:04:04", "language": "Python", "type": "User", "username": "yinboc", "stars": 839, "forks": 96, "subscribers": 20, "open_issues": 16, "topics": ["machine-learning", "super-resolution", "pytorch", "implicit-neural-representation"]}, {"id": 109552139, "repo_name": "prototypical-networks", "full_name": "jakesnell/prototypical-networks", "description": "Code for the NeurIPS 2017 Paper \"Prototypical Networks for Few-shot Learning\"", "created": "2017-11-05 04:38:19", "language": "Python", "type": "User", "username": "jakesnell", "stars": 839, "forks": 216, "subscribers": 13, "open_issues": 20, "topics": ["few-shot", "deep-learning", "metric-learning", "nips-2017", "omniglot", "pytorch"]}, {"id": 98644396, "repo_name": "cnn-lstm-bilstm-deepcnn-clstm-in-pytorch", "full_name": "bamtercelboo/cnn-lstm-bilstm-deepcnn-clstm-in-pytorch", "description": "In PyTorch Learing Neural Networks Likes CNN(Convolutional Neural Networks for Sentence Classification (Y.Kim, EMNLP 2014) \u3001LSTM\u3001BiLSTM\u3001DeepCNN \u3001CLSTM\u3001CNN and LSTM", "created": "2017-07-28 11:45:58", "language": "Python", "type": "User", "username": "bamtercelboo", "stars": 838, "forks": 289, "subscribers": 19, "open_issues": 0, "topics": ["cnn-model", "cnn-bilstm", "lstm-model", "gru", "model-bilstm", "highway-cnn", "pytorch", "torchtext"]}, {"id": 315439501, "repo_name": "Transformer-Explainability", "full_name": "hila-chefer/Transformer-Explainability", "description": "[CVPR 2021] Official PyTorch implementation for Transformer Interpretability Beyond Attention Visualization, a novel method to visualize classifications by Transformer based networks.", "created": "2020-11-23 21:00:00", "language": "Jupyter Notebook", "type": "User", "username": "hila-chefer", "stars": 838, "forks": 102, "subscribers": 16, "open_issues": 2, "topics": ["deep-learning", "vision-transformer", "bert-model", "bert", "explainability", "transformer-interpretability", "perturbation", "attention-visualization", "visualize-classifications", "vit", "attention-matrix", "cvpr2021"]}, {"id": 107566737, "repo_name": "SfmLearner-Pytorch", "full_name": "ClementPinard/SfmLearner-Pytorch", "description": "Pytorch version of SfmLearner from Tinghui Zhou et al.", "created": "2017-10-19 15:45:23", "language": "Python", "type": "User", "username": "ClementPinard", "stars": 837, "forks": 193, "subscribers": 24, "open_issues": 8, "topics": ["pytorch", "kitti", "disparity", "depth", "unsupervised"]}, {"id": 189264557, "repo_name": "Super-mario-bros-A3C-pytorch", "full_name": "uvipen/Super-mario-bros-A3C-pytorch", "description": "Asynchronous Advantage Actor-Critic (A3C) algorithm for Super Mario Bros", "created": "2019-05-29 16:50:54", "language": "Python", "type": "User", "username": "uvipen", "stars": 836, "forks": 198, "subscribers": 35, "open_issues": 12, "topics": ["reinforcement-learning", "a3c", "pytorch", "gym", "python", "deep-learning", "super-mario-bros", "mario", "ai"]}, {"id": 124732076, "repo_name": "landmark-detection", "full_name": "D-X-Y/landmark-detection", "description": "Four landmark detection algorithms, implemented in PyTorch.", "created": "2018-03-11 07:04:12", "language": "Python", "type": "User", "username": "D-X-Y", "stars": 836, "forks": 170, "subscribers": 33, "open_issues": 12, "topics": ["facial-landmarks", "pytorch", "style-transfer", "landmark-detection", "keypoint-detection"]}, {"id": 105265298, "repo_name": "torchMoji", "full_name": "huggingface/torchMoji", "description": "\ud83d\ude07A pyTorch implementation of the DeepMoji model: state-of-the-art deep learning model for analyzing sentiment, emotion, sarcasm etc", "created": "2017-09-29 11:32:57", "language": "Python", "type": "Organization", "username": "huggingface", "stars": 836, "forks": 162, "subscribers": 37, "open_issues": 19, "topics": ["machine-learning", "deep-learning", "natural-language-processing", "pytorch", "python"]}, {"id": 126139168, "repo_name": "swa", "full_name": "timgaripov/swa", "description": "Stochastic Weight Averaging in PyTorch", "created": "2018-03-21 07:23:27", "language": "Python", "type": "User", "username": "timgaripov", "stars": 835, "forks": 119, "subscribers": 19, "open_issues": 4, "topics": []}, {"id": 90339318, "repo_name": "self-critical.pytorch", "full_name": "ruotianluo/self-critical.pytorch", "description": "Unofficial pytorch implementation for Self-critical Sequence Training for Image Captioning. and others.", "created": "2017-05-05 05:15:04", "language": "Python", "type": "User", "username": "ruotianluo", "stars": 834, "forks": 272, "subscribers": 22, "open_issues": 71, "topics": ["image-captioning"]}, {"id": 89291462, "repo_name": "PyTorch-Multi-Style-Transfer", "full_name": "zhanghang1989/PyTorch-Multi-Style-Transfer", "description": "Neural Style and MSG-Net", "created": "2017-04-24 22:07:15", "language": "Jupyter Notebook", "type": "User", "username": "zhanghang1989", "stars": 831, "forks": 199, "subscribers": 8, "open_issues": 26, "topics": ["style-transfer", "deep-neural-networks", "real-time"]}, {"id": 76285725, "repo_name": "machine-learning-curriculum", "full_name": "off99555/machine-learning-curriculum", "description": ":computer: Learn to make machines learn so that you don't have to struggle to program them; The ultimate list", "created": "2016-12-12 18:53:46", "language": null, "type": "User", "username": "off99555", "stars": 831, "forks": 224, "subscribers": 70, "open_issues": 0, "topics": ["machine-learning", "python", "course", "deep-learning", "curriculum", "guide", "reinforcement-learning", "convolutional-neural-networks", "tensorflow", "mxnet", "pytorch", "chainer", "recurrent-neural-networks", "neural-network"]}, {"id": 168574613, "repo_name": "QuickDraw", "full_name": "uvipen/QuickDraw", "description": " Implementation of Quickdraw - an online game developed by Google ", "created": "2019-01-31 18:28:10", "language": "Python", "type": "User", "username": "uvipen", "stars": 831, "forks": 167, "subscribers": 37, "open_issues": 6, "topics": ["python", "python3", "pytorch", "opencv", "cv2", "opencv-python", "computer-vision", "neural-network", "neural-networks", "cnn", "image-classification", "quickdraw", "quickdraw-dataset", "deep-learning", "deep-neural-networks", "deeplearning"]}, {"id": 139403239, "repo_name": "Switchable-Normalization", "full_name": "switchablenorms/Switchable-Normalization", "description": "Code for Switchable Normalization from \"Differentiable Learning-to-Normalize via Switchable Normalization\", https://arxiv.org/abs/1806.10779", "created": "2018-07-02 06:55:54", "language": "HTML", "type": "User", "username": "switchablenorms", "stars": 830, "forks": 134, "subscribers": 26, "open_issues": 12, "topics": ["normalization", "deeplearning", "convolutional-neural-networks", "imagenet", "pytorch"]}, {"id": 196635946, "repo_name": "reloading", "full_name": "julvo/reloading", "description": "Change Python code while it's running without losing state", "created": "2019-07-12 19:39:49", "language": "Python", "type": "User", "username": "julvo", "stars": 829, "forks": 23, "subscribers": 5, "open_issues": 2, "topics": ["python", "pytorch", "utility", "interactive", "deep-learning"]}, {"id": 106852380, "repo_name": "probtorch", "full_name": "probtorch/probtorch", "description": "Probabilistic Torch is library for deep generative models that extends PyTorch", "created": "2017-10-13 17:11:32", "language": "Python", "type": "Organization", "username": "probtorch", "stars": 827, "forks": 65, "subscribers": 35, "open_issues": 13, "topics": []}, {"id": 150479999, "repo_name": "continual-learning", "full_name": "GMvandeVen/continual-learning", "description": "PyTorch implementation of various methods for continual learning (XdG, EWC, online EWC, SI, LwF, GR, GR+distill, RtF, ER, A-GEM, iCaRL).", "created": "2018-09-26 19:32:16", "language": "Python", "type": "User", "username": "GMvandeVen", "stars": 824, "forks": 213, "subscribers": 26, "open_issues": 3, "topics": ["deep-learning", "artificial-neural-networks", "continual-learning", "lifelong-learning", "incremental-learning", "replay", "distillation", "generative-models", "variational-autoencoder", "elastic-weight-consolidation", "replay-through-feedback", "icarl", "gradient-episodic-memory"]}, {"id": 103311717, "repo_name": "LM-LSTM-CRF", "full_name": "LiyuanLucasLiu/LM-LSTM-CRF", "description": "Empower Sequence Labeling with Task-Aware Language Model", "created": "2017-09-12 19:24:49", "language": "Python", "type": "User", "username": "LiyuanLucasLiu", "stars": 822, "forks": 207, "subscribers": 42, "open_issues": 18, "topics": ["ner", "language-model", "crf", "sequence-labeling", "pytorch"]}, {"id": 256789849, "repo_name": "ML-foundations", "full_name": "jonkrohn/ML-foundations", "description": "Machine Learning Foundations: Linear Algebra, Calculus, Statistics & Computer Science", "created": "2020-04-18 15:38:51", "language": "Jupyter Notebook", "type": "User", "username": "jonkrohn", "stars": 822, "forks": 484, "subscribers": 66, "open_issues": 0, "topics": ["machine-learning", "data-science", "python", "mathematics", "linear-algebra", "calculus", "probability", "statistics", "computer-science", "data-structures", "numpy", "pytorch", "tensorflow", "jupyter-notebook"]}, {"id": 320591199, "repo_name": "sparseml", "full_name": "neuralmagic/sparseml", "description": "Libraries for applying sparsification recipes to neural networks with a few lines of code, enabling faster and smaller models", "created": "2020-12-11 14:07:30", "language": "Python", "type": "Organization", "username": "neuralmagic", "stars": 817, "forks": 64, "subscribers": 27, "open_issues": 23, "topics": ["pytorch", "keras", "model-sparsification", "sparsification-recipes", "tensorflow", "smaller-models", "deep-learning-library", "deep-learning-algorithms", "deep-learning-models", "automl", "pruning-algorithms", "sparsity", "sparsification", "recipe-driven-approaches", "pruning", "computer-vision-algorithms", "object-detection", "image-classification", "nlp", "onnx"]}, {"id": 97671787, "repo_name": "Facial-Similarity-with-Siamese-Networks-in-Pytorch", "full_name": "harveyslash/Facial-Similarity-with-Siamese-Networks-in-Pytorch", "description": "Implementing Siamese networks with a contrastive loss for similarity learning", "created": "2017-07-19 04:10:30", "language": "Jupyter Notebook", "type": "User", "username": "harveyslash", "stars": 815, "forks": 254, "subscribers": 22, "open_issues": 11, "topics": ["pytorch-tutorial", "deep-learning", "neural-network", "siamese-network", "pytorch", "face-recognition"]}, {"id": 298459151, "repo_name": "genforce", "full_name": "genforce/genforce", "description": "An efficient PyTorch library for deep generative modeling.", "created": "2020-09-25 03:36:47", "language": "Python", "type": "Organization", "username": "genforce", "stars": 813, "forks": 63, "subscribers": 28, "open_issues": 10, "topics": ["model-zoo", "stylegan", "efficient-pytorch-library"]}, {"id": 210357243, "repo_name": "KoBERT", "full_name": "SKTBrain/KoBERT", "description": "Korean BERT pre-trained cased (KoBERT)", "created": "2019-09-23 13:05:33", "language": "Jupyter Notebook", "type": "Organization", "username": "SKTBrain", "stars": 812, "forks": 225, "subscribers": 33, "open_issues": 0, "topics": ["korean-nlp", "language-model", "bert", "nlp", "pytorch", "transformers"]}, {"id": 161322880, "repo_name": "GeneticAlgorithmPython", "full_name": "ahmedfgad/GeneticAlgorithmPython", "description": "Source code of PyGAD, a Python 3 library for building the genetic algorithm and training machine learning algorithms (Keras & PyTorch).", "created": "2018-12-11 11:19:33", "language": "Python", "type": "User", "username": "ahmedfgad", "stars": 811, "forks": 308, "subscribers": 23, "open_issues": 25, "topics": ["python", "genetic-algorithm", "optimization", "numpy", "pygad", "pygad-documentation", "neural-networks", "machine-learning", "deep-learning", "evolutionary-algorithms"]}, {"id": 201761561, "repo_name": "DataLoaders_DALI", "full_name": "tanglang96/DataLoaders_DALI", "description": "PyTorch DataLoaders implemented with DALI for accelerating image preprocessing", "created": "2019-08-11 12:24:53", "language": "Python", "type": "User", "username": "tanglang96", "stars": 806, "forks": 121, "subscribers": 19, "open_issues": 16, "topics": []}, {"id": 196448316, "repo_name": "GSCNN", "full_name": "nv-tlabs/GSCNN", "description": "Gated-Shape CNN for Semantic Segmentation (ICCV 2019)", "created": "2019-07-11 18:43:07", "language": "Python", "type": "Organization", "username": "nv-tlabs", "stars": 806, "forks": 183, "subscribers": 35, "open_issues": 51, "topics": ["semantic-segmentation", "deep-learning", "iccv2019", "computer-vision", "pytorch", "nv-tlabs", "semantic-boundaries"]}, {"id": 291732001, "repo_name": "denoiser", "full_name": "facebookresearch/denoiser", "description": "Real Time Speech Enhancement in the Waveform Domain (Interspeech 2020)We provide a PyTorch implementation of the paper Real Time Speech Enhancement in the Waveform Domain. In which, we present a causal speech enhancement model working on the raw waveform that runs in real-time on a laptop CPU. The proposed model is based on an encoder-decoder architecture with skip-connections. It is optimized on both time and frequency domains, using multiple loss functions. Empirical evidence shows that it is capable of removing various kinds of background noise including stationary and non-stationary noises, as well as room reverb. Additionally, we suggest a set of data augmentation techniques applied directly on the raw waveform which further improve model performance and its generalization abilities.", "created": "2020-08-31 14:06:29", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 805, "forks": 189, "subscribers": 26, "open_issues": 38, "topics": []}, {"id": 95215079, "repo_name": "pytorch-pruning", "full_name": "jacobgil/pytorch-pruning", "description": "PyTorch Implementation of [1611.06440] Pruning Convolutional Neural Networks for Resource Efficient Inference", "created": "2017-06-23 11:43:52", "language": "Python", "type": "User", "username": "jacobgil", "stars": 804, "forks": 196, "subscribers": 22, "open_issues": 30, "topics": ["deep-learning", "pruning", "pytorch"]}, {"id": 145058057, "repo_name": "OCNet.pytorch", "full_name": "openseg-group/OCNet.pytorch", "description": "Please choose the openseg.pytorch project for the updated code that achieve SOTA on 6 benchmarks!", "created": "2018-08-17 01:45:38", "language": "Python", "type": "Organization", "username": "openseg-group", "stars": 804, "forks": 131, "subscribers": 25, "open_issues": 31, "topics": []}, {"id": 174869895, "repo_name": "curve-gcn", "full_name": "fidler-lab/curve-gcn", "description": "Official PyTorch code for Curve-GCN (CVPR 2019)", "created": "2019-03-10 19:21:55", "language": null, "type": "Organization", "username": "fidler-lab", "stars": 803, "forks": 135, "subscribers": 39, "open_issues": 9, "topics": []}, {"id": 177093758, "repo_name": "voicefilter", "full_name": "mindslab-ai/voicefilter", "description": "Unofficial PyTorch implementation of Google AI's VoiceFilter system", "created": "2019-03-22 07:37:59", "language": "Python", "type": "Organization", "username": "mindslab-ai", "stars": 801, "forks": 190, "subscribers": 31, "open_issues": 11, "topics": ["source-separation", "audio-separation", "speech-separation", "pytorch", "voicefilter"]}, {"id": 172680412, "repo_name": "DPSR", "full_name": "cszn/DPSR", "description": "Deep Plug-and-Play Super-Resolution for Arbitrary Blur Kernels (CVPR, 2019) (PyTorch)", "created": "2019-02-26 09:31:03", "language": "Python", "type": "User", "username": "cszn", "stars": 801, "forks": 205, "subscribers": 26, "open_issues": 13, "topics": ["super-resolution", "blurry-images", "srresnet", "plug-and-play", "pytorch-implmention"]}, {"id": 109540907, "repo_name": "SRGAN", "full_name": "leftthomas/SRGAN", "description": "A PyTorch implementation of SRGAN based on CVPR 2017 paper \"Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network\"", "created": "2017-11-05 00:40:07", "language": "Python", "type": "User", "username": "leftthomas", "stars": 800, "forks": 286, "subscribers": 16, "open_issues": 4, "topics": ["pytorch", "srgan", "super-resolution"]}, {"id": 125049228, "repo_name": "DEXTR-PyTorch", "full_name": "scaelles/DEXTR-PyTorch", "description": "Deep Extreme Cut http://www.vision.ee.ethz.ch/~cvlsegmentation/dextr", "created": "2018-03-13 12:37:49", "language": "Python", "type": "User", "username": "scaelles", "stars": 799, "forks": 151, "subscribers": 30, "open_issues": 2, "topics": []}, {"id": 312542251, "repo_name": "tez", "full_name": "abhishekkrthakur/tez", "description": "Tez is a super-simple and lightweight Trainer for PyTorch. It also comes with many utils that you can use to tackle over 90% of deep learning projects in PyTorch.", "created": "2020-11-13 10:19:22", "language": "Python", "type": "User", "username": "abhishekkrthakur", "stars": 798, "forks": 118, "subscribers": 12, "open_issues": 21, "topics": ["tez", "pytorch", "deep-learning", "deep-neural-networks", "neural-networks"]}, {"id": 263868388, "repo_name": "PytorchOCR", "full_name": "WenmuZhou/PytorchOCR", "description": "\u57fa\u4e8ePytorch\u7684OCR\u5de5\u5177\u5e93\uff0c\u652f\u6301\u5e38\u7528\u7684\u6587\u5b57\u68c0\u6d4b\u548c\u8bc6\u522b\u7b97\u6cd5", "created": "2020-05-14 09:14:43", "language": "C++", "type": "User", "username": "WenmuZhou", "stars": 797, "forks": 207, "subscribers": 22, "open_issues": 54, "topics": []}, {"id": 256963384, "repo_name": "pytorch_classification", "full_name": "lxztju/pytorch_classification", "description": "\u5229\u7528pytorch\u5b9e\u73b0\u56fe\u50cf\u5206\u7c7b\u7684\u4e00\u4e2a\u5b8c\u6574\u7684\u4ee3\u7801\uff0c\u8bad\u7ec3\uff0c\u9884\u6d4b\uff0cTTA\uff0c\u6a21\u578b\u878d\u5408\uff0c\u6a21\u578b\u90e8\u7f72\uff0ccnn\u63d0\u53d6\u7279\u5f81\uff0csvm\u6216\u8005\u968f\u673a\u68ee\u6797\u7b49\u8fdb\u884c\u5206\u7c7b\uff0c\u6a21\u578b\u84b8\u998f\uff0c\u4e00\u4e2a\u5b8c\u6574\u7684\u4ee3\u7801", "created": "2020-04-19 09:43:18", "language": "Jupyter Notebook", "type": "User", "username": "lxztju", "stars": 796, "forks": 236, "subscribers": 6, "open_issues": 32, "topics": ["pytorch", "image-classification", "deployment", "svm", "knn", "cnn", "label-smoothing", "densenet", "resnext", "resnet", "flask", "random-forest", "knowledge-distillation"]}, {"id": 175702160, "repo_name": "retinanet-examples", "full_name": "NVIDIA/retinanet-examples", "description": "Fast and accurate object detection with end-to-end GPU optimization", "created": "2019-03-14 21:26:20", "language": "Python", "type": "Organization", "username": "NVIDIA", "stars": 796, "forks": 254, "subscribers": 43, "open_issues": 16, "topics": ["deep-learning", "object-detection", "python", "neural-network", "retinanet", "pytorch", "tensorrt"]}, {"id": 123486600, "repo_name": "Windows-Machine-Learning", "full_name": "microsoft/Windows-Machine-Learning", "description": "Samples and Tools for Windows ML.", "created": "2018-03-01 20:07:47", "language": "C++", "type": "Organization", "username": "microsoft", "stars": 796, "forks": 370, "subscribers": 68, "open_issues": 23, "topics": ["machine-learning", "ai", "ml", "deep-learning", "neural-network", "onnx", "windows", "keras", "tensorflow", "coreml", "scikit-learn", "caffe2", "pytorch", "winmltools"]}, {"id": 274629316, "repo_name": "pfrl", "full_name": "pfnet/pfrl", "description": "PFRL: a PyTorch-based deep reinforcement learning library", "created": "2020-06-24 09:31:50", "language": "Python", "type": "Organization", "username": "pfnet", "stars": 795, "forks": 113, "subscribers": 97, "open_issues": 30, "topics": []}, {"id": 64574867, "repo_name": "jetson-reinforcement", "full_name": "dusty-nv/jetson-reinforcement", "description": "Deep reinforcement learning GPU libraries for NVIDIA Jetson TX1/TX2 with PyTorch, OpenAI Gym, and Gazebo robotics simulator.", "created": "2016-07-31 03:21:12", "language": "C++", "type": "User", "username": "dusty-nv", "stars": 792, "forks": 225, "subscribers": 61, "open_issues": 30, "topics": []}, {"id": 187154796, "repo_name": "PytorchInsight", "full_name": "implus/PytorchInsight", "description": "a pytorch lib with state-of-the-art architectures, pretrained models and real-time updated results", "created": "2019-05-17 05:53:26", "language": "Python", "type": "User", "username": "implus", "stars": 789, "forks": 127, "subscribers": 25, "open_issues": 19, "topics": ["pytorch", "classification", "detection", "state-of-the-art", "pretrained-models", "sknet", "senet", "gcnet", "cbam", "bam", "sge", "cnn", "cnn-tricks", "tricks", "shufflenetv2", "training-shufflenetv2", "convolutional-networks", "weight-decay", "attention-models", "weight-normalization-family"]}, {"id": 93711918, "repo_name": "relational-networks", "full_name": "kimhc6028/relational-networks", "description": "Pytorch implementation of \"A simple neural network module for relational reasoning\" (Relational Networks)", "created": "2017-06-08 05:48:41", "language": "Python", "type": "User", "username": "kimhc6028", "stars": 788, "forks": 159, "subscribers": 25, "open_issues": 8, "topics": ["relational-networks", "pytorch", "deep-learning"]}, {"id": 88792576, "repo_name": "pytorch-wavenet", "full_name": "vincentherrmann/pytorch-wavenet", "description": "An implementation of WaveNet with fast generation", "created": "2017-04-19 21:29:22", "language": "Jupyter Notebook", "type": "User", "username": "vincentherrmann", "stars": 787, "forks": 192, "subscribers": 28, "open_issues": 29, "topics": []}, {"id": 300789100, "repo_name": "performer-pytorch", "full_name": "lucidrains/performer-pytorch", "description": "An implementation of Performer, a linear attention-based transformer, in Pytorch", "created": "2020-10-03 03:41:36", "language": "Python", "type": "User", "username": "lucidrains", "stars": 786, "forks": 111, "subscribers": 15, "open_issues": 32, "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "attention", "transformers"]}, {"id": 167496468, "repo_name": "lightNLP", "full_name": "smilelight/lightNLP", "description": "\u57fa\u4e8ePytorch\u548ctorchtext\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u3002", "created": "2019-01-25 06:25:47", "language": "Python", "type": "User", "username": "smilelight", "stars": 785, "forks": 219, "subscribers": 30, "open_issues": 6, "topics": ["nlp", "pytorch", "torchtext", "srl", "deep-learning", "cws", "pos", "relation-extraction", "dependency-parsing", "sentence-similarity", "text-classification", "python", "chinese", "language-model", "nature-language-process", "word2vec", "skip-gram", "cbow", "negative-sampling", "hierarchical-softmax"]}, {"id": 267293885, "repo_name": "NLPer-Arsenal", "full_name": "TingFree/NLPer-Arsenal", "description": "\u6536\u5f55NLP\u7ade\u8d5b\u7b56\u7565\u5b9e\u73b0\u3001\u5404\u4efb\u52a1baseline\u3001\u76f8\u5173\u7ade\u8d5b\u7ecf\u9a8c\u8d34\uff08\u5f53\u524d\u8d5b\u4e8b\u3001\u5f80\u671f\u8d5b\u4e8b\u3001\u8bad\u7ec3\u8d5b\uff09\u3001NLP\u4f1a\u8bae\u65f6\u95f4\u3001\u5e38\u7528\u81ea\u5a92\u4f53\u3001GPU\u63a8\u8350\u7b49\uff0c\u6301\u7eed\u66f4\u65b0\u4e2d", "created": "2020-05-27 10:51:10", "language": "Python", "type": "User", "username": "TingFree", "stars": 784, "forks": 100, "subscribers": 27, "open_issues": 1, "topics": ["nlp-competition", "gpu", "nlp-conference", "nlp-media", "pytorch", "nlp", "baselines"]}, {"id": 127072854, "repo_name": "pytorch-captcha-recognition", "full_name": "dee1024/pytorch-captcha-recognition", "description": "\u57fa\u4e8eCNN\u8bad\u7ec3\u7684\u4e00\u5957 \"\u7aef\u5230\u7aef\" \u7684\u9a8c\u8bc1\u7801\u8bc6\u522b\u6a21\u578b\uff0c\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60+\u8bad\u7ec3\u6570\u636e+\u5927\u91cf\u8ba1\u7b97\u529b\uff0c\u7eaf\u6570\u5b57\u8bc6\u522b\u7387\u9ad8\u8fbe 99.99%\uff0c\u6570\u5b57+\u5b57\u6bcd\u8bc6\u522b\u7387 96%", "created": "2018-03-28 02:34:50", "language": "Python", "type": "User", "username": "dee1024", "stars": 781, "forks": 255, "subscribers": 29, "open_issues": 32, "topics": []}, {"id": 246974265, "repo_name": "bert_seq2seq", "full_name": "920232796/bert_seq2seq", "description": "pytorch\u5b9e\u73b0 Bert \u505aseq2seq\u4efb\u52a1\uff0c\u4f7f\u7528unilm\u65b9\u6848,\u73b0\u5728\u4e5f\u53ef\u4ee5\u505a\u81ea\u52a8\u6458\u8981\uff0c\u6587\u672c\u5206\u7c7b\uff0c\u60c5\u611f\u5206\u6790\uff0cNER\uff0c\u8bcd\u6027\u6807\u6ce8\u7b49\u4efb\u52a1,\u652f\u6301t5\u6a21\u578b\uff0c\u652f\u6301GPT2\u8fdb\u884c\u6587\u7ae0\u7eed\u5199\u3002", "created": "2020-03-13 02:43:18", "language": "Python", "type": "User", "username": "920232796", "stars": 780, "forks": 142, "subscribers": 9, "open_issues": 37, "topics": ["bert", "seq2seq", "ner", "crf", "text-classification", "unilm", "pytorch", "roberta", "autotitle", "gpt2", "t5-model"]}, {"id": 111018128, "repo_name": "pytorch2keras", "full_name": "gmalivenko/pytorch2keras", "description": "PyTorch to Keras model convertor", "created": "2017-11-16 20:21:43", "language": "Python", "type": "User", "username": "gmalivenko", "stars": 779, "forks": 132, "subscribers": 15, "open_issues": 57, "topics": ["pytorch", "keras-model-convertor", "keras", "tensorflow", "onnx", "keras-models", "tensorflow-models", "resnet", "densenet", "machinelearning", "keras-tensorflow", "keras-neural-networks", "pytorch-models", "tensorflowjs", "deep-learning", "deep-learning-models", "models-converter", "darts", "converter", "imagenet"]}, {"id": 107763164, "repo_name": "pytorch-widedeep", "full_name": "jrzaurin/pytorch-widedeep", "description": "A flexible package for multimodal-deep-learning to combine tabular data with text and images using Wide and Deep models in Pytorch", "created": "2017-10-21 08:11:44", "language": "Python", "type": "User", "username": "jrzaurin", "stars": 778, "forks": 138, "subscribers": 21, "open_issues": 5, "topics": ["pytorch", "tabular-data", "text", "images", "multimodal-deep-learning", "pytorch-tabular-data", "pytorch-nlp", "pytorch-cv", "pytorch-transformers", "deep-learning", "model-hub", "python"]}, {"id": 182017442, "repo_name": "adversarial-attacks-pytorch", "full_name": "Harry24k/adversarial-attacks-pytorch", "description": "PyTorch implementation of adversarial attacks.", "created": "2019-04-18 04:43:39", "language": "Python", "type": "User", "username": "Harry24k", "stars": 778, "forks": 189, "subscribers": 10, "open_issues": 4, "topics": ["deep-learning", "pytorch", "adversarial-attacks"]}, {"id": 104693744, "repo_name": "tps_stn_pytorch", "full_name": "WarBean/tps_stn_pytorch", "description": "PyTorch implementation of Spatial Transformer Network (STN) with Thin Plate Spline (TPS)", "created": "2017-09-25 02:20:06", "language": "Python", "type": "User", "username": "WarBean", "stars": 778, "forks": 153, "subscribers": 27, "open_issues": 11, "topics": ["spatial-transformer-network", "thin-plate-splines", "pytorch"]}, {"id": 107290819, "repo_name": "PyTorch-RL", "full_name": "Khrylx/PyTorch-RL", "description": "PyTorch implementation of Deep Reinforcement Learning: Policy Gradient methods (TRPO, PPO, A2C) and Generative Adversarial Imitation Learning (GAIL). Fast Fisher vector product TRPO.", "created": "2017-10-17 15:50:29", "language": "Python", "type": "User", "username": "Khrylx", "stars": 776, "forks": 161, "subscribers": 28, "open_issues": 10, "topics": ["reinforcement-learning", "policy-gradient", "pytorch-rl", "proximal-policy-optimization", "trpo", "ppo", "pytorch", "a2c", "generative-adversarial-network", "fisher-vectors", "deep-reinforcement-learning"]}, {"id": 394517440, "repo_name": "torchdrug", "full_name": "DeepGraphLearning/torchdrug", "description": "A powerful and flexible machine learning platform for drug discovery", "created": "2021-08-10 03:51:24", "language": "Python", "type": "Organization", "username": "DeepGraphLearning", "stars": 776, "forks": 92, "subscribers": 16, "open_issues": 28, "topics": ["pytorch", "deep-learning", "graph-neural-networks", "drug-discovery"]}, {"id": 154900564, "repo_name": "fastMRI", "full_name": "facebookresearch/fastMRI", "description": "A large-scale dataset of both raw MRI measurements and clinical MRI images.", "created": "2018-10-26 22:21:23", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 776, "forks": 267, "subscribers": 42, "open_issues": 10, "topics": ["fastmri", "mri", "deep-learning", "mri-reconstruction", "convolutional-neural-networks", "fastmri-dataset", "fastmri-challenge", "pytorch", "medical-imaging"]}, {"id": 76141877, "repo_name": "crayon", "full_name": "torrvision/crayon", "description": "A language-agnostic interface to TensorBoard", "created": "2016-12-10 22:47:02", "language": "Python", "type": "Organization", "username": "torrvision", "stars": 775, "forks": 58, "subscribers": 30, "open_issues": 17, "topics": ["crayon", "tensorboard", "tensorflow", "pytorch", "torch7", "deep-learning", "data-visualization", "docker"]}, {"id": 229478818, "repo_name": "pytorchTutorial", "full_name": "python-engineer/pytorchTutorial", "description": "PyTorch Tutorials from my YouTube channel", "created": "2019-12-21 20:20:25", "language": "Python", "type": "User", "username": "python-engineer", "stars": 774, "forks": 596, "subscribers": 16, "open_issues": 5, "topics": []}, {"id": 317248195, "repo_name": "AutoGL", "full_name": "THUMNLab/AutoGL", "description": "An autoML framework & toolkit for machine learning on graphs.", "created": "2020-11-30 14:26:22", "language": "Python", "type": "Organization", "username": "THUMNLab", "stars": 773, "forks": 81, "subscribers": 28, "open_issues": 4, "topics": ["graph-neural-networks", "automl", "pytorch", "pytorch-geometric", "hyper-parameter-optimization", "machine-learning", "deep-learning"]}, {"id": 111978012, "repo_name": "pytorch-crf", "full_name": "kmkurn/pytorch-crf", "description": "(Linear-chain) Conditional random field in PyTorch.", "created": "2017-11-25 05:03:44", "language": "Python", "type": "User", "username": "kmkurn", "stars": 772, "forks": 139, "subscribers": 9, "open_issues": 7, "topics": ["pytorch", "neural-networks", "conditional-random-fields"]}, {"id": 87801329, "repo_name": "pytorch-rl", "full_name": "jingweiz/pytorch-rl", "description": "Deep Reinforcement Learning with pytorch & visdom", "created": "2017-04-10 11:05:53", "language": "Python", "type": "User", "username": "jingweiz", "stars": 772, "forks": 137, "subscribers": 28, "open_issues": 6, "topics": ["dqn", "a3c", "pytorch", "visdom", "deep-reinforcement-learning", "reinforcement-learning", "deep-learning", "actor-critic", "acer", "trpo", "pytorch-a3c"]}, {"id": 33331247, "repo_name": "china-dictatorship", "full_name": "cirosantilli/china-dictatorship", "description": "Anti Chinese government information. \u53cd\u4e2d\u5171\u6d88\u606f\u5e93\u3002\u4f4f\u5728\u4e2d\u56fd\u771f\u540d\u7528\u6237\u7684\u7f51\u53cb\u8bf7\u522b\u7ed9\u661f\u661f\uff0c\u4e0d\u7136\u4f60\u8981\u88ab\u8b66\u5bdf\u8bf7\u559d\u8336\u3002\u5e38\u89c1\u95ee\u7b54\u96c6\uff0c\u65b0\u95fb\u96c6\u548c\u996d\u5e97\u548c\u97f3\u4e50\u5efa\u8bae\u3002\u5350\u4e60\u4e07\u5c81\u5350\u3002\u51a0\u72b6\u75c5\u6bd2\u5ba1\u67e5\u90dd\u6d77\u4e1c\u65b0\u7586\u6539\u9020\u4e2d\u5fc3\u516d\u56db\u4e8b\u4ef6\u6cd5\u8f6e\u529f 996.ICU709\u5927\u6293\u6355\u5df4\u62ff\u9a6c\u6587\u4ef6\u9093\u5bb6\u8d35\u4f4e\u7aef\u4eba\u53e3\u897f\u85cf\u9a9a\u4e71\u3002Friends who live in China and have real name on account, please don't star this repo, or else the police might pay you a visit.  Home to the mega-FAQ, news compilation, restaurant and music recommendations.Heil Xi \u5350. \u5927\u9646\u4fee\u5baa\u9999\u6e2f\u6076\u6cd5\u53f0\u6e7e\u6b66\u7edf\u671d\u9c9c\u6bc1\u7ea6\u7f8e\u4e2d\u51b7\u6218\u7b49\u90fd\u662f\u738b\u6caa\u5b81\u611a\u5f04\u4e60\u601d\u60f3\u6781\u5de6\u547d\u8fd0\u5171\u540c\u4f53\u7684\u5927\u7b56\u5212\u4e2d\u5171\u7a83\u56fd\u8fd9\u534a\u4e2a\u591a\u4e16\u7eaa\u6240\u72af\u4e0b\u7684\u6ed4\u5929\u7f6a\u6076\uff0c\u524d\u671f\u662f\u6bdb\u6cfd\u4e1c\u7b56\u5212\u7684\uff0c\u4e2d\u671f6.4\u524d\u540e\u662f\u9093\u5c0f\u5e73\u7b56\u5212\u7684\uff0c\u9ec4\u725b\u6570\u636e\u5206\u6790\u540e\u671f\u662f\u6bdb\u7684\u6781\u5de6\u8ffd\u968f\u8005\u4e09\u671d\u7f6a\u6076\u5143\u51f6\u738b\u6caa\u5b81\u7b56\u5212\u7684\u3002\u738b\u6caa\u5b81\u9ad8\u5c0f\u8086\u4e1a\u56e0\u6587\u9769\u653f\u6cbb\u548c\u60c5\u62a5\u9700\u8981\u4fdd\u9001\u201c\u5b66\u9662\u5916\u8bed\u73ed\u201c\u7ea2\u8272\u4ed5\u9014\u7ffb\u8eab\uff0c\u6240\u4ee5\u738b\u7684\u672c\u8d28\u662f\u6781\u5de6\u7684\u3002\u4ed6\u662f\u5728\u4e0a\u6d77\u5e95\u5c42\u5f04\u5802\u957f\u5927\u7684\uff0c\u56e0\u5176\u672c\u6027\u4e5f\u4fc3\u6210\u5176\u762a\u4e09\u4e0b\u4e09\u6ee5\u4e2a\u6027\uff0c\u6240\u4ee5\u4e5f\u90fd\u8bf4\u4ed6\u6709\u6613\u4e3b\u201c\u53d8\u8272\u9f99\u201d\u54c8\u5df4\u72d7\u201c\u7684\u5929\u6027\u3002\u5927\u9646\u50cf\u738b\u6caa\u5b81\u8fd9\u6837\u5b66\u9a6c\u5217\u653f\u6cbb\u6240\u8c13\"\u6cd5\u5b66\"\u4e13\u4e1a\u7684\u4eba\uff0c\u5728\u9664\u671d\u9c9c\u53e4\u5df4\u6240\u6709\u56fd\u5bb6\u7279\u522b\u662f\u5728\u6587\u660e\u53d1\u8fbe\u56fd\u5bb6\u662f\u65e0\u6cd5\u627e\u5230\u4e13\u4e1a\u5bf9\u53e3\u5de5\u4f5c\u5fc5\u5b9a\u5931\u4e1a\uff0c\u552f\u72ec\u5728\u5927\u9646\u5374\u662f\u91cd\u7528\u7684\u7d27\u7f3a\u201c\u4eba\u624d\u201d\uff0c6.4\u540e\u4e2d\u5171\u4fe1\u4ef0\u5927\u5371\u673a\u66f4\u662f\u6700\u91cd\u7528\u7684\u6551\u515a\u201c\u4eba\u624d\u201d\u3002\u8fd9\u4e5f\u5c31\u662f\u50cf\u738b\u6caa\u5b81\u6b64\u7c7b\u5de5\u519c\u5175\u5047\u201c\u5927\u5b66\u751f\u201d\u5e73\u6b65\u9752\u4e91\u7684\u539f\u56e0\uff0c\u4ed6\u4eec\u6700\u719f\u6089\u6bdb\u6cfd\u4e1c\u5386\u6b21\u8fd0\u52a8\u7684\u5bab\u5ead\u5185\u6597\u7ecf\u9a8c\u624b\u6bb5\u548c\u6b8b\u9177\u7684\u9636\u7ea7\u6597\u4e89\u7b49\u66b4\u529b\u6050\u6016\u7684\u201c\u653f\u6cbb\u5b66\u201d\u3002\u738b\u6caa\u5b81\u80fd\u5e73\u6b65\u9752\u4e91\u9760\u4ed6\u8fd9\u9a6c\u6bdb\u4f2a\u201c\u653f\u6cbb\u5b66\u201d\u8d44\u672c\u548c\u5934\u8854\uff0c\u4e0d\u662f\u4ec0\u4e48\u771f\u624d\u5b9e\u5b66\uff0c\u80fd\u5e72\u5b9e\u4e8b\u6709\u70b9\u771f\u624d\u5b9e\u5b66\u7684\u6216\u8bb8\u5728\u4ed6\u624b\u4e0b\u7684\u8c0b\u58eb\u53ca\u79d8\u4e66\u73ed\u5b50\u4e2d\u53ef\u4ee5\u627e\u5230\u3002\u738b\u6caa\u5b81\u7684\u201c\u771f\u624d\u5b9e\u5b66\u201d\u53ea\u4e0d\u8fc7\u662f\u4e00\u4e2a\u53ea\u8bfb\u56db\u5e74\u5c0f\u5b66\u7684\u4eba\uff0c\u5927\u534a\u8f88\u5b50\u5728\u793e\u4f1a\u4e0a\u78e8\u70bc\u7279\u522b\u662f\u5728\u4e2d\u5171\u5b98\u573a\u6eda\u6253\u70bc\u51fa\u7684\u7684\u624b\u6bb5\u548c\u7ecf\u9a8c\u800c\u5df2\uff0c\u4ed6\u548c\u4e60\u8fd1\u5e73\u7b49\u4fdd\u9001\u7684\u5de5\u519c\u5175\u5047\u201c\u5927\u5b66\u751f\u201d\u90fd\u4e00\u6837\uff0c\u65e0\u6cd5\u4ece\u4e8b\u539f\u201c\u4e13\u4e1a\u201d\u90fd\u51ed\u7ea2\u8d44\u672c\u800c\u4ece\u653f\u3002\u516d\u56db\u5b66\u8fd0\u671f\u95f4\u5404\u754c\u4e00\u8fb9\u5012\u652f\u6301\u5b66\u751f\uff0c\u738b\u6caa\u5b81\u4e00\u5ea6\u53bb\u6cd5\u56fd\u8eb2\u907f\u548c\u7b79\u8c0b\uff0c\u4ed6\u8fd8\u52a0\u5165\u4e86\u53cd\u5b66\u8fd0\u7b7e\u540d\uff0c\u6210\u4e3a\u6781\u5c11\u6709\u7684\u53cd\u5b66\u8fd0\u8005\u4ed5\u9014\u7a81\u663e\uff0c\u5728\u516d\u56db\u548c\u82cf\u8054\u57ae\u53f0\u540e\u4e2d\u5171\u610f\u8bc6\u5f62\u6001\u5371\u673a\uff0c\u6c5f\u6cfd\u6c11\u4e0a\u53f0\u770b\u4e0a\u552f\u4e00\u80fd\u5e94\u6025\u7684\u738b\u6caa\u5b81\u805a\u8c0b\u58eb\u6ce1\u5236\u7684\"\u7a33\u5b9a\u7edf\u4e00\u9886\u5bfc\"\u548c\u4e4b\u540e\u7684\"\u65b0\u6743\u5a01\"\u8c2c\u8bba\u3002\u5de6\u8f6c\u88ab\u9093\u5c0f\u5e73\u5357\u5de1\u963b\u6b62\u540e\uff0c\u738b\u7b56\u5212\u987a\u9093\u7ecf\u6d4e\u6539\u9769\u5374\u5c06\u653f\u6cbb\u6539\u9769\u9010\u6b65\u5168\u9762\u7ec8\u6b62\u548c\u5012\u9000\uff0c\u6ce1\u5236\u201c\u4e09\u4e2a\u4ee3\u8868\u201d\u4e3a\u6781\u5de6\u8f6c\u5efa\u7acb\u5e9e\u5927\u7262\u56fa\u7684\u7ea2\u8272\u65e2\u5f97\u5229\u76ca\u96c6\u56e2\u3002\u56e0\u6b64\u516d\u56db\u540e\u5404\u91cd\u5927\u51b3\u7b56\u548c\u5371\u673a\u96be\u9898\u90fd\u6446\u5728\u4e2d\u5171\u4e2d\u592e\u653f\u7b56\u7814\u7a76\u5ba4\u738b\u6caa\u5b81\u684c\u9762\u4e0a\uff0c\u4f7f\u738b\u6caa\u5b81\u6210\u4e86\u6b64\u540e\u4e2d\u5171\u4e09\u671d\u90fd\u65e0\u6cd5\u6446\u8131\u7684\u5e55\u540e\u6700\u6709\u51b3\u7b56\u6027\u5b9e\u6743\u7684\u4eba\uff0c\u4e2d\u5171\u4e2d\u592e\u653f\u7b56\u7814\u7a76\u5ba4\u662f\u738b\u4e3a\u5176\u91ce\u5fc3\u5de8\u8d44\u7ecf\u8425\u51e0\u5341\u5e74\uff0c\u805a\u4f17\u8c0b\u58eb\u7684\u95f4\u8c0d\u60c5\u62a5\u6c47\u603b\u7814\u7a76\u7684\u7279\u52a1\u673a\u5173\u548c\u7b56\u5212\u5236\u5b9a\u51b3\u7b56\u91cd\u8981\u673a\u6784\u4e0e\u57fa\u5730\uff0c\u738b\u6caa\u5b81\u672c\u4eba\u548c\u51b3\u5b9a\u5176\u4ed5\u9014\u5173\u952e\u7684\u9996\u4efb\u5cb3\u7236\u53ca\u5bb6\u5c5e\u5c31\u6709\u60c5\u62a5\u5de5\u4f5c\u80cc\u666f\u3002\u4e2d\u592e\u653f\u7814\u5ba4\u91cd\u8981\u5230\u738b\u6caa\u5b81\u5165\u5e38\u540e\u4e3a\u4e86\u6b7b\u6293\u8fd9\u4e2d\u5171\u60c5\u62a5\u4e0e\u51b3\u7b56\u5927\u6743\uff0c\u5b81\u53ef\u653e\u5f03\u56fd\u5bb6\u526f\u4e3b\u5e2d\u548c\u4e2d\u592e\u515a\u6821\u6821\u957f\u3002\u540e\u518d\u52a0\u4e2a\u9664\u4e60\u5916\u552f\u4ed6\u62c5\u4efb\u7684\u4e2d\u5171\u51e0\u6838\u5fc3\u9886\u5bfc\u5c0f\u7ec4\u4e4b\u4e00\u7684\u201c\u4e0d\u5fd8\u521d\u5fc3\u7262\u8bb0\u4f7f\u547d\u201d\u4e3b\u9898\u6559\u80b2\u5de5\u4f5c\u5c0f\u7ec4\u7ec4\u957f\u3002\u6b64\u540e\u4ed6\u628a\u6301\u7684\u8206\u8bba\u5fc5\u5c06\u4ee5\u5ba3\u4f20\u201c\u4e0d\u5fd8\u521d\u5fc3\u7262\u8bb0\u4f7f\u547d\u201d\u4e3a\u4e3b\uff0c\u6253\u9020\u4f17\u6240\u5468\u77e5\u7684\u6240\u8c13\u201c\u4e60\u601d\u60f3\u201d\u5176\u5b9e\u662f\u201d\u738b\u601d\u60f3\u201c\u3002\u738b\u81ea\u4ece\u4e3b\u5bfc\u4e2d\u592e\u653f\u7814\u5ba4\u5f00\u59cb\u51b3\u7b56\u540e\uff0c\u7b56\u5212\u4e2d\u6b62\u9093\u5c0f\u5e73\u7684\u4e0e\u7f8e\u59a5\u534f\u8def\u7ebf\u56de\u5f52\u6bdb\u6781\u5de6\u7684\u53cd\u7f8e\u8def\u7ebf\u3002\u5e2e\u52a9\u524d\u5357\u65af\u62c9\u592b\u63d0\u4f9b\u60c5\u62a5\u6253\u843d\u7f8e\u673a\u653e\u4e2d\u4f7f\u9986\u5f15\u53d1\u70b8\u4f7f\u9986\u4e8b\u4ef6\uff0c\u4ee5\u6b64\u6380\u8d77\u516d\u56db\u540e\u552f\u4e00\u7684\u5168\u56fd\u5927\u89c4\u6a21\u6e38\u884c\u5e76\u501f\u6b64\u53cd\u7f8e\u800c\u8d77\u5bb6\u3002\u540e\u53c8\u5e2e\u6c5f\u6cfd\u6c11\u63d0\u4f9b\u6cd5\u8f6e\u529f\u4f1a\u662f\u8d85\u8fc7\u4e2d\u5171\u7ec4\u7ec7\u7684\u60c5\u62a5\uff0c\u7b56\u5212\u51b3\u7b56\u9547\u538b\u8feb\u5bb3\u5f00\u59cb\u5e76\u6ca1\u6709\u628a\u77db\u5934\u6307\u5411\u6c5f\u7684\u6cd5\u8f6e\u529f\u7fa4\u4f53\uff0c\u7b56\u5212\u51b3\u5b9a\u963b\u6b62\u515a\u5185\u5916\u8fd1\u4e09\u5341\u5e74\u6765\u5e73\u53cd\u516d\u56db\u7684\u547c\u58f0\u3002\u81f4\u8fdc\u9ed1\u76ae\u4e66\u9a6c\u62c9\u677e\u7a0b\u5e8f\u5458\u6613\u652f\u4ed8\u82f1\u8bed\u53f0\u8bcd\u6587\u5b57\u5339\u914d\u7f8e\u56e2\u70b9\u8bc4\u5404\u4e1a\u52a1\u7ebf\u63d0\u4f9b\u77e5\u8bc6\u5e93\u56e2\u961f\u5171\u4eab\u963f\u91cc\u4e91\u9ad8\u7cbeExcel\u8bc6\u522b\u5fb7\u8baf \u00b7\u5409\u7279\u80e1\u5e03\u8584\u7199\u6765\u9ed1\u79d1\u6280\u4e60\u8fd1\u5e73\u8bb2\u8bdd\u6a21\u62df\u5668\u4e60\u8fd1\u5e73\u97f3\u6e90\u9ed1\u9a6c\u7a0b\u5e8f\u5458MySQL\u6570\u636e\u5e93\u7389\u7c73\u6742\u8349\u6570\u636e\u96c6\u9500\u552e\u7cfb\u7edf\u5f00\u53d1\u75ab\u60c5\u671f\u95f4\u7f51\u6c11\u60c5\u7eea\u8bc6\u522b\u6bd4\u8d5b996icu996 icu\u5b66\u4e60\u5f3a\u56fd\u9884\u6d4b\u7ed3\u679c\u5bfc\u51fa\u8d56\u4f1f\u6797\u523a\u6740\u5c0f\u8bf4\u5bb6\u8d2d\u7269\u5546\u573a\u82f1\u8bed\u8bcd\u6c47\u91cf\u5c0f\u7a0b\u5e8f\u8054\u7ea7\u9009\u62e9\u5668Bitcoin\u533a\u5757\u94fe \u6280\u672f\u9762\u8bd5\u5fc5\u5907\u57fa\u7840\u77e5\u8bc6 Leetcode \u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf \u8ba1\u7b97\u673a\u7f51\u7edc \u7cfb\u7edf\u8bbe\u8ba1 Java\u5b66\u4e60 \u9762\u8bd5\u6307\u5357 \u4e00\u4efd\u6db5\u76d6\u5927\u90e8\u5206 Java \u7a0b\u5e8f\u5458\u6240\u9700\u8981\u638c\u63e1\u7684\u6838\u5fc3\u77e5\u8bc6 \u51c6\u5907 Java \u9762\u8bd5 \u9996\u9009 JavaGuide Python 1 \u5929\u4ece\u65b0\u624b\u5230\u5927\u5e08\u5237\u7b97\u6cd5\u5168\u9760\u5957\u8def \u8ba4\u51c6 labuladong \u5c31\u591f\u4e86 \u514d\u8d39\u7684\u8ba1\u7b97\u673a\u7f16\u7a0b\u7c7b\u4e2d\u6587\u4e66\u7c4d \u6b22\u8fce\u6295\u7a3f\u7528\u52a8\u753b\u7684\u5f62\u5f0f\u5448\u73b0\u89e3LeetCode\u9898\u76ee\u7684\u601d\u8def \u4e92\u8054\u7f51 Java \u5de5\u7a0b\u5e08\u8fdb\u9636\u77e5\u8bc6\u5b8c\u5168\u626b\u76f2 \u6db5\u76d6\u9ad8\u5e76\u53d1 \u5206\u5e03\u5f0f \u9ad8\u53ef\u7528 \u5fae\u670d\u52a1 \u6d77\u91cf\u6570\u636e\u5904\u7406\u7b49\u9886\u57df\u77e5\u8bc6\u540e\u7aef\u67b6\u6784\u5e08\u6280\u672f\u56fe\u8c31mall\u9879\u76ee\u662f\u4e00\u5957\u7535\u5546\u7cfb\u7edf \u5305\u62ec\u524d\u53f0\u5546\u57ce\u7cfb\u7edf\u53ca\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf \u57fa\u4e8eSpringBoot MyBatis\u5b9e\u73b0 \u91c7\u7528Docker\u5bb9\u5668\u5316\u90e8\u7f72 \u524d\u53f0\u5546\u57ce\u7cfb\u7edf\u5305\u542b\u9996\u9875\u95e8\u6237 \u5546\u54c1\u63a8\u8350 \u5546\u54c1\u641c\u7d22 \u5546\u54c1\u5c55\u793a \u8d2d\u7269\u8f66 \u8ba2\u5355\u6d41\u7a0b \u4f1a\u5458\u4e2d\u5fc3 \u5ba2\u6237\u670d\u52a1 \u5e2e\u52a9\u4e2d\u5fc3\u7b49\u6a21\u5757 \u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u5305\u542b\u5546\u54c1\u7ba1\u7406 \u8ba2\u5355\u7ba1\u7406 \u4f1a\u5458\u7ba1\u7406 \u4fc3\u9500\u7ba1\u7406 \u8fd0\u8425\u7ba1\u7406 \u5185\u5bb9\u7ba1\u7406 \u7edf\u8ba1\u62a5\u8868 \u8d22\u52a1\u7ba1\u7406 \u6743\u9650\u7ba1\u7406 \u8bbe\u7f6e\u7b49\u6a21\u5757 \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u5f00\u53d1\u8d44\u6e90\u6c47\u603b \u6700\u5168\u4e2d\u534e\u53e4\u8bd7\u8bcd\u6570\u636e\u5e93 \u5510\u5b8b\u4e24\u671d\u8fd1\u4e00\u4e07\u56db\u5343\u53e4\u8bd7\u4eba \u63a5\u8fd15 5\u4e07\u9996\u5510\u8bd7\u52a026\u4e07\u5b8b\u8bd7 \u4e24\u5b8b\u65f6\u671f1564\u4f4d\u8bcd\u4eba 21 5 \u9996\u8bcd uni app \u662f\u4f7f\u7528 Vue \u8bed\u6cd5\u5f00\u53d1\u5c0f\u7a0b\u5e8f H5 App\u7684\u7edf\u4e00\u6846\u67b62 21\u5e74\u6700\u65b0\u603b\u7ed3 \u963f\u91cc \u817e\u8baf \u767e\u5ea6 \u7f8e\u56e2 \u5934\u6761\u7b49\u6280\u672f\u9762\u8bd5\u9898\u76ee \u4ee5\u53ca\u7b54\u6848 \u4e13\u5bb6\u51fa\u9898\u4eba\u5206\u6790\u6c47\u603b \u79d1\u5b66\u4e0a\u7f51 \u81ea\u7531\u4e0a\u7f51 \u7ffb\u5899 \u8f6f\u4ef6 \u65b9\u6cd5 \u4e00\u952e\u7ffb\u5899\u6d4f\u89c8\u5668 \u514d\u8d39\u8d26\u53f7 \u8282\u70b9\u5206\u4eab vps\u4e00\u952e\u642d\u5efa\u811a\u672c \u6559\u7a0bAiLearning \u673a\u5668\u5b66\u4e60 MachineLearning ML \u6df1\u5ea6\u5b66\u4e60 DeepLearning DL \u81ea\u7136\u8bed\u8a00\u5904\u7406 NLP123 6\u667a\u80fd\u5237\u7968 \u8ba2\u7968\u5f00\u653e\u5f0f\u8de8\u7aef\u8de8\u6846\u67b6\u89e3\u51b3\u65b9\u6848 \u652f\u6301\u4f7f\u7528 React Vue Nerv \u7b49\u6846\u67b6\u6765\u5f00\u53d1\u5fae\u4fe1 \u4eac\u4e1c \u767e\u5ea6 \u652f\u4ed8\u5b9d \u5b57\u8282\u8df3\u52a8 QQ \u5c0f\u7a0b\u5e8f H5 React Native \u7b49\u5e94\u7528 taro zone \u6398\u91d1\u7ffb\u8bd1\u8ba1\u5212 \u53ef\u80fd\u662f\u4e16\u754c\u6700\u5927\u6700\u597d\u7684\u82f1\u8bd1\u4e2d\u6280\u672f\u793e\u533a \u6700\u61c2\u8bfb\u8005\u548c\u8bd1\u8005\u7684\u7ffb\u8bd1\u5e73\u53f0  no evil \u7a0b\u5e8f\u5458\u627e\u5de5\u4f5c\u9ed1\u540d\u5355 \u6362\u5de5\u4f5c\u548c\u5f53\u6280\u672f\u5408\u4f19\u4eba\u9700\u8c28\u614e\u554a \u66f4\u65b0\u6709\u8d5e \u7b97\u6cd5\u9762\u8bd5 \u7b97\u6cd5\u77e5\u8bc6 \u9488\u5bf9\u5c0f\u767d\u7684\u7b97\u6cd5\u8bad\u7ec3 \u8fd8\u5305\u62ec 1 \u963f\u91cc \u5b57\u8282 \u6ef4\u6ef4 \u767e\u7bc7\u5927\u5382\u9762\u7ecf\u6c47\u603b 2 \u5343\u672c\u5f00\u6e90\u7535\u5b50\u4e66 3 \u767e\u5f20\u601d\u7ef4\u5bfc\u56fe \u53f3\u4fa7\u6765\u4e2a star \u5427 English version supported 955 \u4e0d\u52a0\u73ed\u7684\u516c\u53f8\u540d\u5355 \u5de5\u4f5c 955 work\u2013life balance \u5de5\u4f5c\u4e0e\u751f\u6d3b\u7684\u5e73\u8861 \u8bca\u65ad\u5229\u5668Arthas The Way to Go \u4e2d\u6587\u8bd1\u672c \u4e2d\u6587\u6b63\u5f0f\u540d Go \u5165\u95e8\u6307\u5357  Java\u9762\u8bd5 Java\u5b66\u4e60\u6307\u5357 \u4e00\u4efd\u6db5\u76d6\u5927\u90e8\u5206Java\u7a0b\u5e8f\u5458\u6240\u9700\u8981\u638c\u63e1\u7684\u6838\u5fc3\u77e5\u8bc6 \u6559\u7a0b \u6280\u672f\u6808\u793a\u4f8b\u4ee3\u7801 \u5feb\u901f\u7b80\u5355\u4e0a\u624b\u6559\u7a0b 2 17\u5e74\u4e70\u623f\u7ecf\u5386\u603b\u7ed3\u51fa\u6765\u7684\u4e70\u623f\u8d2d\u623f\u77e5\u8bc6\u5206\u4eab\u7ed9\u5927\u5bb6 \u5e0c\u671b\u5bf9\u5927\u5bb6\u6709\u6240\u5e2e\u52a9 \u4e70\u623f\u4e0d\u6613 \u4e14\u4e70\u4e14\u73cd\u60dchttp\u4e0b\u8f7d\u5de5\u5177 \u57fa\u4e8ehttp\u4ee3\u7406 \u652f\u6301\u591a\u8fde\u63a5\u5206\u5757\u4e0b\u8f7d \u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60 \u9762\u5411\u4e2d\u6587\u8bfb\u8005 \u80fd\u8fd0\u884c \u53ef\u8ba8\u8bba \u4e2d\u82f1\u6587\u7248\u88ab\u5168\u7403175\u6240\u5927\u5b66\u91c7\u7528\u6559\u5b66 \u963f\u91cc\u4e91\u8ba1\u7b97\u5e73\u53f0\u56e2\u961f\u51fa\u54c1 \u4e3a\u76d1\u63a7\u800c\u751f\u7684\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u7a0b\u5e8f\u5458\u7b80\u5386\u6a21\u677f\u7cfb\u5217 \u5305\u62ecPHP\u7a0b\u5e8f\u5458\u7b80\u5386\u6a21\u677f iOS\u7a0b\u5e8f\u5458\u7b80\u5386\u6a21\u677f Android\u7a0b\u5e8f\u5458\u7b80\u5386\u6a21\u677f Web\u524d\u7aef\u7a0b\u5e8f\u5458\u7b80\u5386\u6a21\u677f Java\u7a0b\u5e8f\u5458\u7b80\u5386\u6a21\u677f C C \u7a0b\u5e8f\u5458\u7b80\u5386\u6a21\u677f NodeJS\u7a0b\u5e8f\u5458\u7b80\u5386\u6a21\u677f \u67b6\u6784\u5e08\u7b80\u5386\u6a21\u677f\u4ee5\u53ca\u901a\u7528\u7a0b\u5e8f\u5458\u7b80\u5386\u6a21\u677f\u91c7\u7528\u81ea\u8eab\u6a21\u5757\u89c4\u8303\u7f16\u5199\u7684\u524d\u7aef UI \u6846\u67b6 \u9075\u5faa\u539f\u751f HTML CSS JS \u7684\u4e66\u5199\u5f62\u5f0f \u6781\u4f4e\u95e8\u69db \u62ff\u6765\u5373\u7528 \u8d35\u6821\u8bfe\u7a0b\u8d44\u6599\u6c11\u95f4\u6574\u7406 \u4f01\u4e1a\u7ea7\u4f4e\u4ee3\u7801\u5e73\u53f0 \u524d\u540e\u7aef\u5206\u79bb\u67b6\u6784\u5f3a\u5927\u7684\u4ee3\u7801\u751f\u6210\u5668\u8ba9\u524d\u540e\u7aef\u4ee3\u7801\u4e00\u952e\u751f\u6210 \u65e0\u9700\u5199\u4efb\u4f55\u4ee3\u7801 \u5f15\u9886\u65b0\u7684\u5f00\u53d1\u6a21\u5f0fOnlineCoding \u4ee3\u7801\u751f\u6210 \u624b\u5de5MERGE \u5e2e\u52a9Java\u9879\u76ee\u89e3\u51b37 %\u91cd\u590d\u5de5\u4f5c \u8ba9\u5f00\u53d1\u66f4\u5173\u6ce8\u4e1a\u52a1 \u65e2\u80fd\u5feb\u901f\u63d0\u9ad8\u6548\u7387 \u5e2e\u52a9\u516c\u53f8\u8282\u7701\u6210\u672c \u540c\u65f6\u53c8\u4e0d\u5931\u7075\u6d3b\u6027 \u6211\u662f\u4f9d\u626c \u6728\u6613\u6768 \u516c\u4f17\u53f7 \u9ad8\u7ea7\u524d\u7aef\u8fdb\u9636 \u4f5c\u8005 \u6bcf\u5929\u641e\u5b9a\u4e00\u9053\u524d\u7aef\u5927\u5382\u9762\u8bd5\u9898 \u795d\u5927\u5bb6\u5929\u5929\u8fdb\u6b65 \u4e00\u5e74\u540e\u4f1a\u770b\u5230\u4e0d\u4e00\u6837\u7684\u81ea\u5df1 \u51b4\u7fbd\u5199\u535a\u5ba2\u7684\u5730\u65b9 \u9884\u8ba1\u5199\u56db\u4e2a\u7cfb\u5217 JavaScript\u6df1\u5165\u7cfb\u5217 JavaScript\u4e13\u9898\u7cfb\u5217 ES6\u7cfb\u5217 React\u7cfb\u5217 \u4e2d\u6587\u5206\u8bcd \u8bcd\u6027\u6807\u6ce8 \u547d\u540d\u5b9e\u4f53\u8bc6\u522b \u4f9d\u5b58\u53e5\u6cd5\u5206\u6790 \u8bed\u4e49\u4f9d\u5b58\u5206\u6790 \u65b0\u8bcd\u53d1\u73b0 \u5173\u952e\u8bcd\u77ed\u8bed\u63d0\u53d6 \u81ea\u52a8\u6458\u8981 \u6587\u672c\u5206\u7c7b\u805a\u7c7b \u62fc\u97f3\u7b80\u7e41\u8f6c\u6362 \u81ea\u7136\u8bed\u8a00\u5904\u7406flutter \u5f00\u53d1\u8005\u5e2e\u52a9 APP \u5305\u542b flutter \u5e38\u7528 14 \u7ec4\u4ef6\u7684demo \u6f14\u793a\u4e0e\u4e2d\u6587\u6587\u6863 \u4e0b\u62c9\u5237\u65b0 \u4e0a\u62c9\u52a0\u8f7d \u4e8c\u7ea7\u5237\u65b0 \u6dd8\u5b9d\u4e8c\u697c\u667a\u80fd\u4e0b\u62c9\u5237\u65b0\u6846\u67b6 \u652f\u6301\u8d8a\u754c\u56de\u5f39 \u8d8a\u754c\u62d6\u52a8 \u5177\u6709\u6781\u5f3a\u7684\u6269\u5c55\u6027 \u96c6\u6210\u4e86\u51e0\u5341\u79cd\u70ab\u9177\u7684Header\u548c Footer \u8be5\u9879\u76ee\u5df2\u6210\u529f\u96c6\u6210 actuator \u76d1\u63a7 admin \u53ef\u89c6\u5316\u76d1\u63a7 logback \u65e5\u5fd7 aopLog \u901a\u8fc7AOP\u8bb0\u5f55web\u8bf7\u6c42\u65e5\u5fd7 \u7edf\u4e00\u5f02\u5e38\u5904\u7406 json\u7ea7\u522b\u548c\u9875\u9762\u7ea7\u522b freemarker \u6a21\u677f\u5f15\u64ce thymeleaf \u6a21\u677f\u5f15\u64ce Beetl \u6a21\u677f\u5f15\u64ce Enjoy \u6a21\u677f\u5f15\u64ce JdbcTemplate \u901a\u7528JDBC\u64cd\u4f5c\u6570\u636e\u5e93 JPA \u5f3a\u5927\u7684ORM\u6846\u67b6 mybatis \u5f3a\u5927\u7684ORM\u6846\u67b6 \u901a\u7528Mapper \u5feb\u901f\u64cd\u4f5cMybatis PageHelper \u901a\u7528\u7684Mybatis\u5206\u9875\u63d2\u4ef6 mybatis plus \u5feb\u901f\u64cd\u4f5cMybatis BeetlSQL \u5f3a\u5927\u7684ORM\u6846\u67b6 u Python\u8d44\u6e90\u5927\u5168\u4e2d\u6587\u7248 \u5305\u62ec Web\u6846\u67b6 \u7f51\u7edc\u722c\u866b \u6a21\u677f\u5f15\u64ce \u6570\u636e\u5e93 \u6570\u636e\u53ef\u89c6\u5316 \u56fe\u7247\u5904\u7406\u7b49 \u7531 \u5f00\u6e90\u524d\u54e8 \u548c Python\u5f00\u53d1\u8005 \u5fae\u4fe1\u516c\u53f7\u56e2\u961f\u7ef4\u62a4\u66f4\u65b0 \u5434\u6069\u8fbe\u8001\u5e08\u7684\u673a\u5668\u5b66\u4e60\u8bfe\u7a0b\u4e2a\u4eba\u7b14\u8bb0To Be Top Javaer Java\u5de5\u7a0b\u5e08\u6210\u795e\u4e4b\u8def\u5faa\u5e8f\u6e10\u8fdb \u5b66\u4e60\u535a\u5ba2Spring\u7cfb\u5217\u6e90\u7801 mrbird cc\u8c22\u8c22\u53ef\u80fd\u662f\u8ba9\u4f60\u53d7\u76ca\u532a\u6d45\u7684\u82f1\u8bed\u8fdb\u9636\u6307\u5357\u955c\u50cf\u7f51\u6613\u4e91\u97f3\u4e50 Node js API service\u5feb\u901f \u7b80\u5355\u907f\u514dOOM\u7684java\u5904\u7406Excel\u5de5\u5177\u57fa\u4e8e Vue js \u7684\u5c0f\u7a0b\u5e8f\u5f00\u53d1\u6846\u67b6 \u4ece\u5e95\u5c42\u652f\u6301 Vue js \u8bed\u6cd5\u548c\u6784\u5efa\u5de5\u5177\u4f53\u7cfb \u4e2d\u6587\u7248 Apple \u5b98\u65b9 Swift \u6559\u7a0b\u672c\u9879\u76ee\u66fe\u51b2\u5230\u5168\u7403\u7b2c\u4e00 \u5e72\u8d27\u96c6\u9526\u89c1\u672c\u9875\u9762\u6700\u5e95\u90e8 \u53e6\u5b8c\u6574\u7cbe\u81f4\u7684\u7eb8\u8d28\u7248 \u7f16\u7a0b\u4e4b\u6cd5 \u9762\u8bd5\u548c\u7b97\u6cd5\u5fc3\u5f97 \u5df2\u5728\u4eac\u4e1c \u5f53\u5f53\u4e0a\u9500\u552e\u597d\u8036 \u662f\u5973\u88c5Security Guide for Developers \u5b9e\u7528\u6027\u5f00\u53d1\u4eba\u5458\u5b89\u5168\u987b\u77e5 \u963f\u91cc\u5df4\u5df4 MySQL binlog \u589e\u91cf\u8ba2\u9605 \u6d88\u8d39\u7ec4\u4ef6  ECMAScript 6\u5165\u95e8 \u662f\u4e00\u672c\u5f00\u6e90\u7684 JavaScript \u8bed\u8a00\u6559\u7a0b \u5168\u9762\u4ecb\u7ecd ECMAScript 6 \u65b0\u589e\u7684\u8bed\u6cd5\u7279\u6027  C C \u6280\u672f\u9762\u8bd5\u57fa\u7840\u77e5\u8bc6\u603b\u7ed3 \u5305\u62ec\u8bed\u8a00 \u7a0b\u5e8f\u5e93 \u6570\u636e\u7ed3\u6784 \u7b97\u6cd5 \u7cfb\u7edf \u7f51\u7edc \u94fe\u63a5\u88c5\u8f7d\u5e93\u7b49\u77e5\u8bc6\u53ca\u9762\u8bd5\u7ecf\u9a8c \u62db\u8058 \u5185\u63a8\u7b49\u4fe1\u606f \u4e00\u6b3e\u4f18\u79c0\u7684\u5f00\u6e90\u535a\u5ba2\u53d1\u5e03\u5e94\u7528  Solutions to LeetCode by Go 1 % test coverage runtime beats 1 % LeetCode \u9898\u89e3\u5206\u5e03\u5f0f\u4efb\u52a1\u8c03\u5ea6\u5e73\u53f0XXL JOB  \u8c37\u7c92 Chrome\u63d2\u4ef6\u82f1\u96c4\u699c \u4e3a\u4f18\u79c0\u7684Chrome\u63d2\u4ef6\u5199\u4e00\u672c\u4e2d\u6587\u8bf4\u660e\u4e66 \u8ba9Chrome\u63d2\u4ef6\u82f1\u96c4\u4eec\u9020\u798f\u4eba\u7c7b\u516c\u4f17\u53f7 \u52a01 \u540c\u6b65\u66f4\u65b0\u4e92\u8054\u7f51\u516c\u53f8\u6280\u672f\u67b6\u6784 \u5fae\u4fe1 \u6dd8\u5b9d \u5fae\u535a \u817e\u8baf \u963f\u91cc \u7f8e\u56e2\u70b9\u8bc4 \u767e\u5ea6 Google Facebook Amazon eBay\u7684\u67b6\u6784 \u6b22\u8fcePR\u8865\u5145IntelliJ IDEA \u7b80\u4f53\u4e2d\u6587\u4e13\u9898\u6559\u7a0b\u7a0b\u5e8f\u5458\u6280\u80fd\u56fe\u8c31\u524d\u7aef\u9762\u8bd5\u6bcf\u65e5 3 1 \u4ee5\u9762\u8bd5\u9898\u6765\u9a71\u52a8\u5b66\u4e60 \u63d0\u5021\u6bcf\u65e5\u5b66\u4e60\u4e0e\u601d\u8003 \u6bcf\u5929\u8fdb\u6b65\u4e00\u70b9 \u6bcf\u5929\u65e9\u4e0a5\u70b9\u7eaf\u624b\u5de5\u53d1\u5e03\u9762\u8bd5\u9898 \u6b7b\u78d5\u81ea\u5df1 \u6109\u60a6\u5927\u5bb6 4 \u9053\u524d\u7aef\u9762\u8bd5\u9898\u5168\u9762\u8986\u76d6\u5c0f\u7a0b\u5e8f \u8f6f\u6280\u80fd \u534e\u4e3a\u9e3f\u8499\u64cd\u4f5c\u7cfb\u7edf \u4e92\u8054\u7f51\u9996\u4efd\u7a0b\u5e8f\u5458\u8003\u516c\u6307\u5357 \u75313\u4f4d\u5df2\u7ecf\u8fdb\u5165\u4f53\u5236\u5185\u7684\u524d\u5927\u5382\u7a0b\u5e8f\u5458\u8054\u5408\u732e\u4e0a Mac\u5fae\u4fe1\u529f\u80fd\u62d3\u5c55 \u5fae\u4fe1\u63d2\u4ef6 \u5fae\u4fe1\u5c0f\u52a9\u624b A plugin for Mac WeChat  \u673a\u5668\u5b66\u4e60 \u897f\u74dc\u4e66 \u516c\u5f0f\u63a8\u5bfc\u89e3\u6790 \u5728\u7ebf\u9605\u8bfb\u5730\u5740\u4e00\u6b3e\u8f7b\u91cf\u7ea7 \u9ad8\u6027\u80fd \u529f\u80fd\u5f3a\u5927\u7684\u5185\u7f51\u7a7f\u900f\u4ee3\u7406\u670d\u52a1\u5668 \u652f\u6301tcp udp socks5 http\u7b49\u51e0\u4e4e\u6240\u6709\u6d41\u91cf\u8f6c\u53d1 \u53ef\u7528\u6765\u8bbf\u95ee\u5185\u7f51\u7f51\u7ad9 \u672c\u5730\u652f\u4ed8\u63a5\u53e3\u8c03\u8bd5 ssh\u8bbf\u95ee \u8fdc\u7a0b\u684c\u9762 \u5185\u7f51dns\u89e3\u6790 \u5185\u7f51socks5\u4ee3\u7406\u7b49\u7b49 \u5e76\u5e26\u6709\u529f\u80fd\u5f3a\u5927\u7684web\u7ba1\u7406\u7aef\u4e00\u6b3e\u9762\u5411\u6cdb\u524d\u7aef\u4ea7\u54c1\u7814\u53d1\u5168\u751f\u547d\u5468\u671f\u7684\u6548\u7387\u5e73\u53f0 \u6587\u8a00\u6587\u7de8\u7a0b\u8a9e\u8a00\u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb\u8bfe\u7a0b\u653b\u7565\u9762\u5411\u4e91\u539f\u751f\u5fae\u670d\u52a1\u7684\u9ad8\u53ef\u7528\u6d41\u63a7\u9632\u62a4\u7ec4\u4ef6  On Java 8 \u4e2d\u6587\u7248 \u672c\u6587\u539f\u6587\u7531\u77e5\u540d Hacker Eric S Raymond \u6240\u64b0\u5beb \u6559\u4f60\u5982\u4f55\u6b63\u78ba\u7684\u63d0\u51fa\u6280\u8853\u554f\u984c\u4e26\u7372\u5f97\u4f60\u6eff\u610f\u7684\u7b54\u6848 React Native\u6307\u5357\u6c47\u96c6\u4e86\u5404\u7c7breact native\u5b66\u4e60\u8d44\u6e90 \u5f00\u6e90App\u548c\u7ec4\u4ef61 Days Of ML Code\u4e2d\u6587\u7248\u5343\u53e4\u524d\u7aef\u56fe\u6587\u6559\u7a0b \u8d85\u8be6\u7ec6\u7684\u524d\u7aef\u5165\u95e8\u5230\u8fdb\u9636\u5b66\u4e60\u7b14\u8bb0 \u4ece\u96f6\u5f00\u59cb\u5b66\u524d\u7aef \u505a\u4e00\u540d\u7cbe\u81f4\u4f18\u96c5\u7684\u524d\u7aef\u5de5\u7a0b\u5e08 \u516c\u4f17\u53f7 \u5343\u53e4\u58f9\u53f7 \u4f5c\u8005 \u57fa\u4e8e React \u7684\u6e10\u8fdb\u5f0f\u7814\u53d1\u6846\u67b6 ice work\u89c6\u9891\u64ad\u653e\u5668\u652f\u6301\u5f39\u5e55 \u5916\u6302\u5b57\u5e55 \u652f\u6301\u6ee4\u955c \u6c34\u5370 gif\u622a\u56fe \u7247\u5934\u5e7f\u544a \u4e2d\u95f4\u5e7f\u544a \u591a\u4e2a\u540c\u65f6\u64ad\u653e \u652f\u6301\u57fa\u672c\u7684\u62d6\u52a8 \u58f0\u97f3 \u4eae\u5ea6\u8c03\u8282 \u652f\u6301\u8fb9\u64ad\u8fb9\u7f13\u5b58 \u652f\u6301\u89c6\u9891\u81ea\u5e26rotation\u7684\u65cb\u8f6c 9 27 \u4e4b\u7c7b \u91cd\u529b\u65cb\u8f6c\u4e0e\u624b\u52a8\u65cb\u8f6c\u7684\u540c\u6b65\u652f\u6301 \u652f\u6301\u5217\u8868\u64ad\u653e \u5217\u8868\u5168\u5c4f\u52a8\u753b \u89c6\u9891\u52a0\u8f7d\u901f\u5ea6 \u5217\u8868\u5c0f\u7a97\u53e3\u652f\u6301\u62d6\u52a8 \u52a8\u753b\u6548\u679c \u8c03\u6574\u6bd4\u4f8b \u591a\u5206\u8fa8\u7387\u5207\u6362 \u652f\u6301\u5207\u6362\u64ad\u653e\u5668 \u8fdb\u5ea6\u6761\u5c0f\u7a97\u53e3\u9884\u89c8 \u5217\u8868\u5207\u6362\u8be6\u60c5\u9875\u9762\u65e0\u7f1d\u64ad\u653e rtsp concat mpeg JumpServer \u662f\u5168\u7403\u9996\u6b3e\u5f00\u6e90\u7684\u5821\u5792\u673a \u662f\u7b26\u5408 4A \u7684\u4e13\u4e1a\u8fd0\u7ef4\u5b89\u5168\u5ba1\u8ba1\u7cfb\u7edf Linux\u547d\u4ee4\u5927\u5168\u641c\u7d22\u5de5\u5177 \u5185\u5bb9\u5305\u542bLinux\u547d\u4ee4\u624b\u518c \u8be6\u89e3 \u5b66\u4e60 \u641c\u96c6 git io linux book Node js \u5305\u6559\u4e0d\u5305\u4f1a by alsotang\u53c8\u4e00\u4e2a\u5c0f\u5546\u57ce litemall Spring Boot\u540e\u7aef Vue\u7ba1\u7406\u5458\u524d\u7aef \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u7528\u6237\u524d\u7aef Vue\u7528\u6237\u79fb\u52a8\u7aef\u5fae\u4fe1 \u8df3\u4e00\u8df3 Python \u8f85\u52a9Java\u8d44\u6e90\u5927\u5168\u4e2d\u6587\u7248 \u5305\u62ec\u5f00\u53d1\u5e93 \u5f00\u53d1\u5de5\u5177 \u7f51\u7ad9 \u535a\u5ba2 \u5fae\u4fe1 \u5fae\u535a\u7b49 \u7531\u4f2f\u4e50\u5728\u7ebf\u6301\u7eed\u66f4\u65b0  python\u6a21\u62df\u767b\u9646\u4e00\u4e9b\u5927\u578b\u7f51\u7ad9 \u8fd8\u6709\u4e00\u4e9b\u7b80\u5355\u7684\u722c\u866b \u5e0c\u671b\u5bf9\u4f60\u4eec\u6709\u6240\u5e2e\u52a9 \ufe0f \u5982\u679c\u559c\u6b22\u8bb0\u5f97\u7ed9\u4e2astar\u54e6 C \u90a3\u4e9b\u4e8b \u7f51\u7edc\u722c\u866b\u5b9e\u6218 \u6dd8\u5b9d \u4eac\u4e1c \u7f51\u6613\u4e91 B\u7ad9 123 6 \u6296\u97f3 \u7b14\u8da3\u9601 \u6f2b\u753b\u5c0f\u8bf4\u4e0b\u8f7d \u97f3\u4e50\u7535\u5f71\u4e0b\u8f7d\u7b49deeplearning ai \u5434\u6069\u8fbe\u8001\u5e08\u7684\u6df1\u5ea6\u5b66\u4e60\u8bfe\u7a0b\u7b14\u8bb0\u53ca\u8d44\u6e90 Spring Boot\u57fa\u7840\u6559\u7a0b Spring Boot 2 x\u7248\u672c\u8fde\u8f7d\u4e2d \u5e2e\u52a9 Android App \u8fdb\u884c\u7ec4\u4ef6\u5316\u6539\u9020\u7684\u8def\u7531\u6846\u67b6 \u6700\u63a5\u8fd1\u539f\u751fAPP\u4f53\u9a8c\u7684\u9ad8\u6027\u80fd\u6846\u67b6\u57fa\u4e8eVue3 Element Plus \u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u89e3\u51b3\u65b9\u6848\u7a0b\u5e8f\u5458\u5982\u4f55\u4f18\u96c5\u7684\u6323\u96f6\u82b1\u94b1 2 \u7248 \u5347\u7ea7\u4e3a\u5c0f\u4e66\u4e86 \u4eceJava\u57fa\u7840 JavaWeb\u57fa\u7840\u5230\u5e38\u7528\u7684\u6846\u67b6\u518d\u5230\u9762\u8bd5\u9898\u90fd\u6709\u5b8c\u6574\u7684\u6559\u7a0b \u51e0\u4e4e\u6db5\u76d6\u4e86Java\u540e\u7aef\u5fc5\u5907\u7684\u77e5\u8bc6\u70b9spring boot \u5b9e\u8df5\u5b66\u4e60\u6848\u4f8b \u662f spring boot \u521d\u5b66\u8005\u53ca\u6838\u5fc3\u6280\u672f\u5de9\u56fa\u7684\u6700\u4f73\u5b9e\u8df5 \u53e6\u5916\u5199\u535a\u5ba2 \u7528 OpenWrite \u6700\u597d\u7528\u7684 V2Ray \u4e00\u952e\u5b89\u88c5\u811a\u672c \u7ba1\u7406\u811a\u672c\u4e2d\u56fd\u7a0b\u5e8f\u5458\u5bb9\u6613\u53d1\u97f3\u9519\u8bef\u7684\u5355\u8bcd \u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5 \u7684\u4ee3\u7801\u5b9e\u73b0\u5173\u4e8ePython\u7684\u9762\u8bd5\u9898\u672c\u9879\u76ee\u5c06 \u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60 Dive into Deep Learning \u539f\u4e66\u4e2d\u7684MXNet\u5b9e\u73b0\u6539\u4e3aPyTorch\u5b9e\u73b0 \u63d0\u9ad8 Android UI \u5f00\u53d1\u6548\u7387\u7684 UI \u5e93\u524d\u7aef\u7cbe\u8bfb\u5468\u520a \u5e2e\u4f60\u7406\u89e3\u6700\u524d\u6cbf \u5b9e\u7528\u7684\u6280\u672f  \u7684\u5947\u6280\u6deb\u5de7\u65f6\u95f4\u9009\u62e9\u5668 \u7701\u5e02\u533a\u4e09\u7ea7\u8054\u52a8 Python\u722c\u866b\u4ee3\u7406IP\u6c60 proxy pool LeetCode \u5237\u9898\u653b\u7565 2 \u9053\u7ecf\u5178\u9898\u76ee\u5237\u9898\u987a\u5e8f \u51716 w\u5b57\u7684\u8be6\u7ec6\u56fe\u89e3 \u89c6\u9891\u96be\u70b9\u5256\u6790 5 \u4f59\u5f20\u601d\u7ef4\u5bfc\u56fe \u4ece\u6b64\u7b97\u6cd5\u5b66\u4e60\u4e0d\u518d\u8ff7\u832b \u6765\u770b\u770b \u4f60\u4f1a\u53d1\u73b0\u76f8\u89c1\u6068\u665a \u4e00\u4e2a\u57fa\u4e8e electron \u7684\u97f3\u4e50\u8f6f\u4ef6Flutter \u8d85\u5b8c\u6574\u7684\u5f00\u6e90\u9879\u76ee \u529f\u80fd\u4e30\u5bcc \u9002\u5408\u5b66\u4e60\u548c\u65e5\u5e38\u4f7f\u7528 GSYGithubApp\u7cfb\u5217\u7684\u4f18\u52bf \u6211\u4eec\u76ee\u524d\u5df2\u7ecf\u62e5\u6709\u56db\u4e2a\u7248\u672c \u529f\u80fd\u9f50\u5168 \u9879\u76ee\u6846\u67b6\u5185\u6280\u672f\u6d89\u53ca\u9762\u5e7f \u5b8c\u6210\u5ea6\u9ad8 \u6301\u7eed\u7ef4\u62a4 \u914d\u5957\u6587\u7ae0 \u9002\u5408\u5168\u9762\u5b66\u4e60 \u5bf9\u6bd4\u53c2\u8003 \u8de8\u5e73\u53f0\u7684\u5f00\u6e90Github\u5ba2\u6237\u7aefApp \u66f4\u597d\u7684\u4f53\u9a8c \u66f4\u4e30\u5bcc\u7684\u529f\u80fd \u65e8\u5728\u66f4\u597d\u7684\u65e5\u5e38\u7ba1\u7406\u548c\u7ef4\u62a4\u4e2a\u4ebaGithub \u63d0\u4f9b\u66f4\u597d\u66f4\u65b9\u4fbf\u7684\u9a7e\u8f66\u4f53\u9a8c\u03a3 \u540c\u6b3eWeex\u7248\u672c\u540c\u6b3eReact Native\u7248\u672c https g \u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u663e\u793a\u5f53\u524d\u7f51\u901f CPU\u53ca\u5185\u5b58\u5229\u7528\u7387\u7684\u684c\u9762\u60ac\u6d6e\u7a97\u8f6f\u4ef6 \u5e76\u652f\u6301\u4efb\u52a1\u680f\u663e\u793a \u652f\u6301\u66f4\u6362\u76ae\u80a4 \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u5f3a\u52a0\u5bc6\u65e0\u7279\u5f81\u7684\u4ee3\u7406\u8f6f\u4ef6 \u96f6\u914d\u7f6e V2rayU \u57fa\u4e8ev2ray\u6838\u5fc3\u7684mac\u7248\u5ba2\u6237\u7aef \u7528\u4e8e\u79d1\u5b66\u4e0a\u7f51 \u4f7f\u7528swift\u7f16\u5199 \u652f\u6301vmess shadowsocks socks5\u7b49\u670d\u52a1\u534f\u8bae \u652f\u6301\u8ba2\u9605 \u652f\u6301\u4e8c\u7ef4\u7801 \u526a\u8d34\u677f\u5bfc\u5165 \u624b\u52a8\u914d\u7f6e \u4e8c\u7ef4\u7801\u5206\u4eab\u7b49\u7b97\u6cd5\u6a21\u677f \u6700\u79d1\u5b66\u7684\u5237\u9898\u65b9\u5f0f \u6700\u5feb\u901f\u7684\u5237\u9898\u8def\u5f84 \u4f60\u503c\u5f97\u62e5\u6709 \u7ecf\u5178\u7f16\u7a0b\u4e66\u7c4d\u5927\u5168 \u6db5\u76d6 \u8ba1\u7b97\u673a\u7cfb\u7edf\u4e0e\u7f51\u7edc \u7cfb\u7edf\u67b6\u6784 \u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784 \u524d\u7aef\u5f00\u53d1 \u540e\u7aef\u5f00\u53d1 \u79fb\u52a8\u5f00\u53d1 \u6570\u636e\u5e93 \u6d4b\u8bd5 \u9879\u76ee\u4e0e\u56e2\u961f \u7a0b\u5e8f\u5458\u804c\u4e1a\u4fee\u70bc \u6c42\u804c\u9762\u8bd5\u7b49wangEditor \u8f7b\u91cf\u7ea7web\u5bcc\u6587\u672c\u6846\u524d\u7aef\u8de8\u6846\u67b6\u8de8\u5e73\u53f0\u6846\u67b6 \u6bcf\u4e2a JavaScript \u5de5\u7a0b\u5e08\u90fd\u5e94\u61c2\u768433\u4e2a\u6982\u5ff5 leonardomso\u4e00\u4e2a\u53ef\u4ee5\u89c2\u770b\u56fd\u5185\u4e3b\u6d41\u89c6\u9891\u5e73\u53f0\u6240\u6709\u89c6\u9891\u7684\u5ba2\u6237\u7aefAndroid\u5f00\u53d1\u4eba\u5458\u4e0d\u5f97\u4e0d\u6536\u96c6\u7684\u5de5\u5177\u7c7b\u96c6\u5408 \u652f\u4ed8\u5b9d\u652f\u4ed8 \u5fae\u4fe1\u652f\u4ed8 \u7edf\u4e00\u4e0b\u5355 \u5fae\u4fe1\u5206\u4eab Zip4j\u538b\u7f29 \u652f\u6301\u5206\u5377\u538b\u7f29\u4e0e\u52a0\u5bc6 \u4e00\u952e\u96c6\u6210UCrop\u9009\u62e9\u5706\u5f62\u5934\u50cf \u4e00\u952e\u96c6\u6210\u4e8c\u7ef4\u7801\u548c\u6761\u5f62\u7801\u7684\u626b\u63cf\u4e0e\u751f\u6210 \u5e38\u7528Dialog WebView\u7684\u5c01\u88c5\u53ef\u64ad\u653e\u89c6\u9891 \u4eff\u6597\u9c7c\u6ed1\u52a8\u9a8c\u8bc1\u7801 Toast\u5c01\u88c5 \u9707\u52a8 GPS Location\u5b9a\u4f4d \u56fe\u7247\u7f29\u653e Exif \u56fe\u7247\u6dfb\u52a0\u5730\u7406\u4f4d\u7f6e\u4fe1\u606f \u7ecf\u7eac\u5ea6 \u86db\u7f51\u7b49\u7ea7 \u989c\u8272\u9009\u62e9\u5668 ArcGis VTPK \u7f16\u8bd1\u8fd0\u884c\u4e00\u4e0b\u8bf4\u4e0d\u5b9a\u4f1a\u627e\u5230\u60ca\u559c 123 6 \u8d2d\u7968\u52a9\u624b \u652f\u6301\u96c6\u7fa4 \u591a\u8d26\u53f7 \u591a\u4efb\u52a1\u8d2d\u7968\u4ee5\u53ca Web \u9875\u9762\u7ba1\u7406  \u7f16\u7a0b\u968f\u60f3 \u6536\u85cf\u7684\u7535\u5b50\u4e66\u6e05\u5355 \u591a\u4e2a\u5b66\u79d1 \u542b\u4e0b\u8f7d\u94fe\u63a5  Banner 2 \u6765\u4e86 Android\u5e7f\u544a\u56fe\u7247\u8f6e\u64ad\u63a7\u4ef6 \u5185\u90e8\u57fa\u4e8eViewPager2\u5b9e\u73b0 Indicator\u548cUI\u90fd\u53ef\u4ee5\u81ea\u5b9a\u4e49  \u96f6\u4ee3\u7801 \u70ed\u66f4\u65b0 \u81ea\u52a8\u5316 ORM \u5e93 \u540e\u7aef\u63a5\u53e3\u548c\u6587\u6863\u96f6\u4ee3\u7801 \u524d\u7aef \u5ba2\u6237\u7aef \u5b9a\u5236\u8fd4\u56de JSON \u7684\u6570\u636e\u548c\u7ed3\u6784 Linux Windows macOS \u8de8\u5e73\u53f0 V2Ray \u5ba2\u6237\u7aef \u652f\u6301\u4f7f\u7528 C Qt \u5f00\u53d1 \u53ef\u62d3\u5c55\u63d2\u4ef6\u5f0f\u8bbe\u8ba1 walle \u74e6\u529b Devops\u5f00\u6e90\u9879\u76ee\u4ee3\u7801\u90e8\u7f72\u5e73\u53f0\u57fa\u4e8e node js Mongodb \u6784\u5efa\u7684\u540e\u53f0\u7cfb\u7edf js \u6e90\u7801\u89e3\u6790\u4e00\u4e2a\u6db5\u76d6\u516d\u4e2a\u4e13\u680f\u5206\u5e03\u5f0f\u6d88\u606f\u961f\u5217 \u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u4ed3\u5e93 \u5e0c\u671b\u80d6\u53cb\u5c0f\u624b\u4e00\u6296 \u53f3\u4e0a\u89d2\u6765\u4e2a Star \u611f\u6069 1 24\u57fa\u4e8e vue element ui \u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u78c1\u529b\u94fe\u63a5\u805a\u5408\u641c\u7d22\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u884c\u653f\u533a\u5212 \u7701\u7ea7 \u7701\u4efd\u76f4\u8f96\u5e02\u81ea\u6cbb\u533a \u5730\u7ea7 \u57ce\u5e02 \u53bf\u7ea7 \u533a\u53bf \u4e61\u7ea7 \u4e61\u9547\u8857\u9053 \u6751\u7ea7 \u6751\u59d4\u4f1a\u5c45\u59d4\u4f1a \u4e2d\u56fd\u7701\u5e02\u533a\u9547\u6751\u4e8c\u7ea7\u4e09\u7ea7\u56db\u7ea7\u4e94\u7ea7\u8054\u52a8\u5730\u5740\u6570\u636e iOS\u5f00\u53d1\u5e38\u7528\u4e09\u65b9\u5e93 \u63d2\u4ef6 \u77e5\u540d\u535a\u5ba2\u7b49\u7b49LeetCode\u9898\u89e3 151\u9053\u9898\u5b8c\u6574\u7248\uff0f\u4e2d\u6587\u6587\u6848\u6392\u7248\u6307\u5317\u6700\u826f\u5fc3\u7684 Python \u6559\u7a0b \u4e1a\u5185\u4e3a\u6570\u4e0d\u591a\u81f4\u529b\u4e8e\u6781\u81f4\u4f53\u9a8c\u7684\u8d85\u5f3a\u5168\u81ea\u7814\u8de8\u5e73\u53f0 windows android iOS \u6d41\u5a92\u4f53\u5185\u6838 \u901a\u8fc7\u6a21\u5757\u5316\u81ea\u7531\u7ec4\u5408 \u652f\u6301\u5b9e\u65f6RTMP\u63a8\u6d41 RTSP\u63a8\u6d41 RTMP\u64ad\u653e\u5668 RTSP\u64ad\u653e\u5668 \u5f55\u50cf \u591a\u8def\u6d41\u5a92\u4f53\u8f6c\u53d1 \u97f3\u89c6\u9891\u5bfc\u64ad \u52a8\u6001\u89c6\u9891\u5408\u6210 \u97f3\u9891\u6df7\u97f3 \u76f4\u64ad\u4e92\u52a8 \u5185\u7f6e\u8f7b\u91cf\u7ea7RTSP\u670d\u52a1\u7b49 \u6bd4\u5feb\u66f4\u5feb \u4e1a\u754c\u771f\u6b63\u9760\u8c31\u7684\u8d85\u4f4e\u5ef6\u8fdf\u76f4\u64adSDK 1\u79d2\u5185 \u4f4e\u5ef6\u8fdf\u6a21\u5f0f\u4e0b2 4 ms  \u4e00\u4e2a PHP \u5fae\u4fe1 SDK \ufe0f \u8de8\u5e73\u53f0\u684c\u9762\u7aef\u89c6\u9891\u8d44\u6e90\u64ad\u653e\u5668 \u7b80\u6d01\u65e0\u5e7f\u544a \u514d\u8d39\u9ad8\u989c\u503c \u540e\u53f0\u7ba1\u7406\u4e3b\u7ebf\u7248\u672c\u57fa\u4e8e\u4e09\u8005\u5e76\u884c\u5f00\u53d1\u7ef4\u62a4 \u540c\u65f6\u652f\u6301\u7535\u8111 \u624b\u673a \u5e73\u677f \u5207\u6362\u5206\u652f\u67e5\u770b\u4e0d\u540c\u7684vue\u7248\u672c element plus\u7248\u672c\u5df2\u53d1\u5e03 vue3 vue3 vue vue3 x vue js \u7a0b\u5e8f\u65e0\u56fd\u754c \u4f46\u7a0b\u5e8f\u5458\u6709\u56fd\u754c \u4e2d\u56fd\u56fd\u5bb6\u5c0a\u4e25\u4e0d\u5bb9\u6311\u8845 \u5982\u679c\u60a8\u5728\u7279\u6b8a\u65f6\u671f \u6b64\u9879\u76ee\u662f\u673a\u5668\u5b66\u4e60 Machine Learning \u6df1\u5ea6\u5b66\u4e60 Deep Learning NLP\u9762\u8bd5\u4e2d\u5e38\u8003\u5230\u7684\u77e5\u8bc6\u70b9\u548c\u4ee3\u7801\u5b9e\u73b0 \u4e5f\u662f\u4f5c\u4e3a\u4e00\u4e2a\u7b97\u6cd5\u5de5\u7a0b\u5e08\u5fc5\u4f1a\u7684\u7406\u8bba\u57fa\u7840\u77e5\u8bc6 \u591c\u8bfb \u901a\u8fc7 bilibili \u5728\u7ebf\u76f4\u64ad\u7684\u65b9\u5f0f\u5206\u4eab Go \u76f8\u5173\u7684\u6280\u672f\u8bdd\u9898 \u6bcf\u5929\u5927\u5bb6\u5728\u5fae\u4fe1 telegram Slack \u4e0a\u53ca\u65f6\u6c9f\u901a\u4ea4\u6d41\u7f16\u7a0b\u6280\u672f\u8bdd\u9898 GitHubDaily \u5206\u4eab\u5185\u5bb9\u5b9a\u671f\u6574\u7406\u4e0e\u5206\u7c7b \u6b22\u8fce\u63a8\u8350 \u81ea\u8350\u9879\u76ee \u8ba9\u66f4\u591a\u4eba\u77e5\u9053\u4f60\u7684\u9879\u76ee  \u652f\u6301\u591a\u5bb6\u4e91\u5b58\u50a8\u7684\u4e91\u76d8\u7cfb\u7edf\u673a\u5668\u5b66\u4e60\u76f8\u5173\u6559\u7a0bDataX\u662f\u963f\u91cc\u4e91DataWorks\u6570\u636e\u96c6\u6210\u7684\u5f00\u6e90\u7248\u672c  \u8fd9\u91cc\u662f\u5199\u535a\u5ba2\u7684\u5730\u65b9 Halfrost Field \u51b0\u971c\u4e4b\u5730mall\u5b66\u4e60\u6559\u7a0b \u67b6\u6784 \u4e1a\u52a1 \u6280\u672f\u8981\u70b9\u5168\u65b9\u4f4d\u89e3\u6790 mall\u9879\u76ee 4 k star \u662f\u4e00\u5957\u7535\u5546\u7cfb\u7edf \u4f7f\u7528\u73b0\u9636\u6bb5\u4e3b\u6d41\u6280\u672f\u5b9e\u73b0 \u6db5\u76d6\u4e86\u7b49\u6280\u672f \u91c7\u7528Docker\u5bb9\u5668\u5316\u90e8\u7f72  chick \u662f\u4f7f\u7528 Node js \u548c MongoDB \u5f00\u53d1\u7684\u793e\u533a\u7cfb\u7edf\u4e00\u4e2a\u975e\u5e38\u9002\u5408IT\u56e2\u961f\u7684\u5728\u7ebfAPI\u6587\u6863 \u6280\u672f\u6587\u6863\u5de5\u5177\u6c47\u603b\u5404\u5927\u4e92\u8054\u7f51\u516c\u53f8\u5bb9\u6613\u8003\u5bdf\u7684\u9ad8\u9891leetcode\u9898 1 Chinese Word Vectors \u4e0a\u767e\u79cd\u9884\u8bad\u7ec3\u4e2d\u6587\u8bcd\u5411\u91cf Android\u5f00\u6e90\u5f39\u5e55\u5f15\u64ce \u70c8\u7130\u5f39\u5e55\u4f7f \uff5e\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6PyTorch \u5165\u95e8\u4e0e\u5b9e\u6218 \u7f51\u6613\u4e91\u97f3\u4e50\u547d\u4ee4\u884c\u7248\u672c \u5bf9\u5f00\u53d1\u4eba\u5458\u6709\u7528\u7684\u5b9a\u5f8b \u7406\u8bba \u539f\u5219\u548c\u6a21\u5f0fTeachYourselfCS \u7684\u4e2d\u6587\u7ffb\u8bd1\u9ad8\u989c\u503c\u7684\u7b2c\u4e09\u65b9\u7f51\u6613\u4e91\u64ad\u653e\u5668 \u652f\u6301 Windows macOS Linux spring cloud vue oAuth2 \u5168\u5bb6\u6876\u5b9e\u6218 \u524d\u540e\u7aef\u5206\u79bb\u6a21\u62df\u5546\u57ce \u5b8c\u6574\u7684\u8d2d\u7269\u6d41\u7a0b \u540e\u7aef\u8fd0\u8425\u5e73\u53f0 \u53ef\u4ee5\u5b9e\u73b0\u5feb\u901f\u642d\u5efa\u4f01\u4e1a\u7ea7\u5fae\u670d\u52a1\u9879\u76ee \u652f\u6301\u5fae\u4fe1\u767b\u5f55\u7b49\u4e09\u65b9\u767b\u5f55  Chinese sticker pack More joy \u8868\u60c5\u5305\u7684\u535a\u7269\u9986 Github\u6700\u6709\u6bd2\u7684\u4ed3\u5e93 \u4e2d\u56fd\u8868\u60c5\u5305\u5927\u96c6\u5408 \u805a\u6b22\u4e50 Lantern\u5b98\u65b9\u7248\u672c\u4e0b\u8f7d \u84dd\u706f \u7ffb\u5899 \u4ee3\u7406 \u79d1\u5b66\u4e0a\u7f51 \u5916\u7f51 \u52a0\u901f\u5668 \u68af\u5b50 \u8def\u7531\u4e00\u6b3e\u5165\u95e8\u7ea7\u7684\u4eba\u8138 \u89c6\u9891 \u6587\u5b57\u68c0\u6d4b\u4ee5\u53ca\u8bc6\u522b\u7684\u9879\u76ee vue2 vue router vuex \u5165\u95e8\u9879\u76eePanDownload\u7684\u4e2a\u4eba\u7ef4\u62a4\u7248\u672c \u4e00\u4e2a\u57fa\u4e8eSpring Boot MyBatis\u7684\u79cd\u5b50\u9879\u76ee \u7528\u4e8e\u5feb\u901f\u6784\u5efa\u4e2d\u5c0f\u578bAPI RESTful API\u9879\u76ee iOS interview questions iOS\u9762\u8bd5\u9898\u96c6\u9526 \u9644\u7b54\u6848 \u5b66\u4e60qq\u7fa4\u6216 Telegram \u7fa4\u4ea4\u6d41\u4e3a\u4e92\u8054\u7f51IT\u4eba\u6253\u9020\u7684\u4e2d\u6587\u7248awesome go\u5f3a\u5927 \u53ef\u5b9a\u5236 \u6613\u6269\u5c55\u7684 ViewPager \u6307\u793a\u5668\u6846\u67b6 \u662f\u7684\u6700\u4f73\u66ff\u4ee3\u54c1 \u652f\u6301\u89d2\u6807 \u66f4\u652f\u6301\u5728\u975eViewPager\u573a\u666f\u4e0b\u4f7f\u7528 \u4f7f\u7528hide show \u5207\u6362Fragment\u6216\u4f7f\u7528se Kubernetes\u4e2d\u6587\u6307\u5357 \u4e91\u539f\u751f\u5e94\u7528\u67b6\u6784\u5b9e\u8df5\u624b\u518cFor macOS \u767e\u5ea6\u7f51\u76d8 \u7834\u89e3SVIP \u4e0b\u8f7d\u901f\u5ea6\u9650\u5236 \u67b6\u6784\u5e08\u6280\u672f\u56fe\u8c31 \u52a9\u4f60\u65e9\u65e5\u6210\u4e3a\u67b6\u6784\u5e08mall admin web\u662f\u4e00\u4e2a\u7535\u5546\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u7684\u524d\u7aef\u9879\u76ee \u57fa\u4e8eVue Element\u5b9e\u73b0 \u4e3b\u8981\u5305\u62ec\u5546\u54c1\u7ba1\u7406 \u8ba2\u5355\u7ba1\u7406 \u4f1a\u5458\u7ba1\u7406 \u4fc3\u9500\u7ba1\u7406 \u8fd0\u8425\u7ba1\u7406 \u5185\u5bb9\u7ba1\u7406 \u7edf\u8ba1\u62a5\u8868 \u8d22\u52a1\u7ba1\u7406 \u6743\u9650\u7ba1\u7406 \u8bbe\u7f6e\u7b49\u529f\u80fd \u7f51\u6613\u4e91\u97f3\u4e50\u7b2c\u4e09\u65b9 \u7f16\u7a0b\u968f\u60f3 \u6574\u7406\u7684 \u592a\u5b50\u515a\u5173\u7cfb\u7f51\u7edc \u4e13\u95e8\u63ed\u9732\u8d75\u56fd\u7684\u6743\u8d35\u57fa\u4e8egin vue\u642d\u5efa\u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u6846\u67b6 \u96c6\u6210jwt\u9274\u6743 \u6743\u9650\u7ba1\u7406 \u52a8\u6001\u8def\u7531 \u5206\u9875\u5c01\u88c5 \u591a\u70b9\u767b\u5f55\u62e6\u622a \u8d44\u6e90\u6743\u9650 \u4e0a\u4f20\u4e0b\u8f7d \u4ee3\u7801\u751f\u6210\u5668 \u8868\u5355\u751f\u6210\u5668 \u901a\u7528\u5de5\u4f5c\u6d41\u7b49\u57fa\u7840\u529f\u80fd \u4e94\u5206\u949f\u4e00\u5957CURD\u524d\u540e\u7aef\u4ee3\u7801 \u76eeVUE3\u7248\u672c\u6b63\u5728\u91cd\u6784 \u6b22\u8fceissue\u548cpr 27\u5929\u6210\u4e3aJava\u5927\u795e\u4e00\u4e2a\u57fa\u4e8e\u6d4f\u89c8\u5668\u7aef JS \u5b9e\u73b0\u7684\u5728\u7ebf\u4ee3\u7406\u7f16\u7a0b\u7535\u5b50\u4e66 \u7535\u5b50\u4e66 \u7f16\u7a0b\u4e66\u7c4d \u5305\u62ec\u4eba\u5de5\u667a\u80fd \u5927\u6570\u636e\u7c7b \u5e76\u53d1\u7f16\u7a0b \u6570\u636e\u5e93\u7c7b \u6570\u636e\u6316\u6398 \u65b0\u9762\u8bd5\u9898 \u67b6\u6784\u8bbe\u8ba1 \u7b97\u6cd5\u7cfb\u5217 \u8ba1\u7b97\u673a\u7c7b \u8bbe\u8ba1\u6a21\u5f0f \u8f6f\u4ef6\u6d4b\u8bd5 \u91cd\u6784\u4f18\u5316 \u7b49\u66f4\u591a\u5206\u7c7bADB Usage Complete ADB \u7528\u6cd5\u5927\u5168\u4e8c\u7ef4\u7801\u751f\u6210\u5668 \u652f\u6301 gif \u52a8\u6001\u56fe\u7247\u4e8c\u7ef4\u7801 Vim \u4ece\u5165\u95e8\u5230\u7cbe\u901a\u963f\u5e03\u91cf\u5316\u4ea4\u6613\u7cfb\u7edf \u80a1\u7968 \u671f\u6743 \u671f\u8d27 \u6bd4\u7279\u5e01 \u673a\u5668\u5b66\u4e60 \u57fa\u4e8epython\u7684\u5f00\u6e90\u91cf\u5316\u4ea4\u6613 \u91cf\u5316\u6295\u8d44\u67b6\u6784\u4e00\u4e2a\u7b80\u6d01\u4f18\u96c5\u7684hexo\u4e3b\u9898 Wiki of OI ICPC for everyone \u67d0\u5927\u578b\u6e38\u620f\u7ebf\u4e0a\u653b\u7565 \u5185\u542b\u70ab\u9177\u7b97\u672f\u9b54\u6cd5 Google \u5f00\u6e90\u9879\u76ee\u98ce\u683c\u6307\u5357 \u4e2d\u6587\u7248  Git AWS Google \u955c\u50cf SS SSR VMESS\u8282\u70b9\u884c\u4e1a\u7814\u7a76\u62a5\u544a\u7684\u77e5\u8bc6\u50a8\u5907\u5e93 cim cross IM \u9002\u7528\u4e8e\u5f00\u53d1\u8005\u7684\u5206\u5e03\u5f0f\u5373\u65f6\u901a\u8baf\u7cfb\u7edf\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u5f00\u6e90\u9879\u76ee\u5e93\u6c47\u603b\u6bcf\u5929\u66f4\u65b0 \u5168\u7f51\u70ed\u95e8 BT Tracker \u5217\u8868 \u5929\u7528Go\u52a8\u624b\u5199 \u4ece\u96f6\u5b9e\u73b0\u7cfb\u5217\u5f3a\u5927\u7684\u54d4\u54e9\u54d4\u54e9\u589e\u5f3a\u811a\u672c \u4e0b\u8f7d\u89c6\u9891 \u97f3\u4e50 \u5c01\u9762 \u5f39\u5e55 \u7b80\u5316\u76f4\u64ad\u95f4 \u8bc4\u8bba\u533a \u9996\u9875 \u81ea\u5b9a\u4e49\u9876\u680f \u5220\u9664\u5e7f\u544a \u591c\u95f4\u6a21\u5f0f \u89e6\u5c4f\u8bbe\u5907\u652f\u6301Evil Huawei \u534e\u4e3a\u4f5c\u8fc7\u7684\u6076Android\u4e0a\u4e00\u4e2a\u4f18\u96c5 \u4e07\u80fd\u81ea\u5b9a\u4e49UI \u4effiOS \u652f\u6301\u5782\u76f4 \u6c34\u5e73\u65b9\u5411\u5207\u6362 \u652f\u6301\u5468\u89c6\u56fe \u81ea\u5b9a\u4e49\u5468\u8d77\u59cb \u6027\u80fd\u9ad8\u6548\u7684\u65e5\u5386\u63a7\u4ef6 \u652f\u6301\u70ed\u63d2\u62d4\u5b9e\u73b0\u7684UI\u5b9a\u5236 \u652f\u6301\u6807\u8bb0 \u81ea\u5b9a\u4e49\u989c\u8272 \u519c\u5386 \u81ea\u5b9a\u4e49\u6708\u89c6\u56fe\u5404\u79cd\u663e\u793a\u6a21\u5f0f\u7b49 Canvas\u7ed8\u5236 \u901f\u5ea6\u5feb \u5360\u7528\u5185\u5b58\u4f4e \u4f60\u771f\u7684\u60f3\u4e0d\u5230\u65e5\u5386\u5c45\u7136\u8fd8\u53ef\u4ee5\u5982\u6b64\u4f18\u96c5\u5df2\u4e0d\u518d\u7ef4\u62a4\u79d1\u5b66\u4e0a\u7f51\u63d2\u4ef6\u7684\u79bb\u7ebf\u5b89\u88c5\u5305\u50a8\u5b58\u5728\u8fd9\u91ccThinkPHP Framework \u5341\u5e74\u5320\u5fc3\u7684\u9ad8\u6027\u80fdPHP\u6846\u67b6 Java \u7a0b\u5e8f\u5458\u773c\u4e2d\u7684 Linux \u4e00\u4e2a\u652f\u6301\u591a\u9009 \u9009\u539f\u56fe\u548c\u89c6\u9891\u7684\u56fe\u7247\u9009\u62e9\u5668 \u540c\u65f6\u6709\u9884\u89c8 \u88c1\u526a\u529f\u80fd \u652f\u6301hsweb ha\u028as w\u025bb \u662f\u4e00\u4e2a\u57fa\u4e8espring boot 2 x\u5f00\u53d1 \u9996\u4e2a\u4f7f\u7528\u5168\u54cd\u5e94\u5f0f\u7f16\u7a0b\u7684\u4f01\u4e1a\u7ea7\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u57fa\u7840\u9879\u76ee \u5b66\u4e60\u5f3a\u56fd \u61d2\u4eba\u5237\u5206\u5de5\u5177 \u81ea\u52a8\u5b66\u4e60wxParse \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u5bcc\u6587\u672c\u89e3\u6790\u81ea\u5b9a\u4e49\u7ec4\u4ef6 \u652f\u6301HTML\u53camarkdown\u89e3\u6790 newbee mall \u9879\u76ee \u65b0\u8702\u5546\u57ce \u662f\u4e00\u5957\u7535\u5546\u7cfb\u7edf \u5305\u62ec newbee mall \u5546\u57ce\u7cfb\u7edf\u53ca newbee mall admin \u5546\u57ce\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf \u57fa\u4e8e Spring Boot 2 X \u53ca\u76f8\u5173\u6280\u672f\u6808\u5f00\u53d1 \u524d\u53f0\u5546\u57ce\u7cfb\u7edf\u5305\u542b\u9996\u9875\u95e8\u6237 \u5546\u54c1\u5206\u7c7b \u65b0\u54c1\u4e0a\u7ebf \u9996\u9875\u8f6e\u64ad \u5546\u54c1\u63a8\u8350 \u5546\u54c1\u641c\u7d22 \u5546\u54c1\u5c55\u793a \u8d2d\u7269\u8f66 \u8ba2\u5355\u7ed3\u7b97 \u8ba2\u5355\u6d41\u7a0b \u4e2a\u4eba\u8ba2\u5355\u7ba1\u7406 \u4f1a\u5458\u4e2d\u5fc3 \u5e2e\u52a9\u4e2d\u5fc3\u7b49\u6a21\u5757 \u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u5305\u542b\u6570\u636e\u9762\u677f \u8f6e\u64ad\u56fe\u7ba1\u7406 \u5546\u54c1\u7ba1\u7406 \u8ba2\u5355\u7ba1\u7406 \u4f1a\u5458\u7ba1\u7406 \u5206\u7c7b\u7ba1\u7406 \u8bbe\u7f6e\u7b49\u6a21\u5757  \u6700\u5168\u7684\u524d\u7aef\u8d44\u6e90\u6c47\u603b\u4ed3\u5e93 \u5305\u62ec\u524d\u7aef\u5b66\u4e60 \u5f00\u53d1\u8d44\u6e90 \u6c42\u804c\u9762\u8bd5\u7b49 \u4e2d\u6587\u7ffb\u8bd1\u624b\u5199\u5b9e\u73b0\u674e\u822a \u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5 \u4e66\u4e2d\u5168\u90e8\u7b97\u6cd5 Python \u6296\u97f3\u673a\u5668\u4eba \u8bba\u5982\u4f55\u5728\u6296\u97f3\u4e0a\u627e\u5230\u6f02\u4eae\u5c0f\u59d0\u59d0\uff1f  \ufe0fA static blog writing client \u4e00\u4e2a\u9759\u6001\u535a\u5ba2\u5199\u4f5c\u5ba2\u6237\u7aef \u8d85\u7ea7\u901f\u67e5\u8868 \u7f16\u7a0b\u8bed\u8a00 \u6846\u67b6\u548c\u5f00\u53d1\u5de5\u5177\u7684\u901f\u67e5\u8868 \u5355\u4e2a\u6587\u4ef6\u5305\u542b\u4e00\u5207\u4f60\u9700\u8981\u77e5\u9053\u7684\u4e1c\u897f \u8fc1\u79fb\u5b66\u4e60\u524d\u7aef\u4f4e\u4ee3\u7801\u6846\u67b6 \u901a\u8fc7 JSON \u914d\u7f6e\u5c31\u80fd\u751f\u6210\u5404\u79cd\u9875\u9762 \u6280\u672f\u9762\u8bd5\u6700\u540e\u53cd\u95ee\u9762\u8bd5\u5b98\u7684\u8bddMachine Learning Yearning \u4e2d\u6587\u7248 \u673a\u5668\u5b66\u4e60\u8bad\u7ec3\u79d8\u7c4d Andrew Ng \u8457\u8d8a\u6765\u8d8a\u591a\u7684\u7f51\u7ad9\u5177\u6709\u53cd\u722c\u866b\u7279\u6027 \u6709\u7684\u7528\u56fe\u7247\u9690\u85cf\u5173\u952e\u6570\u636e \u6709\u7684\u4f7f\u7528\u53cd\u4eba\u7c7b\u7684\u9a8c\u8bc1\u7801 \u5efa\u7acb\u53cd\u53cd\u722c\u866b\u7684\u4ee3\u7801\u4ed3\u5e93 \u901a\u8fc7\u4e0e\u4e0d\u540c\u7279\u6027\u7684\u7f51\u7ad9\u505a\u6597\u4e89 \u65e0\u6076\u610f \u63d0\u9ad8\u6280\u672f \u6b22\u8fce\u63d0\u4ea4\u96be\u4ee5\u91c7\u96c6\u7684\u7f51\u7ad9 \u56e0\u5de5\u4f5c\u539f\u56e0 \u9879\u76ee\u6682\u505c \u672c\u9879\u76ee\u6536\u85cf\u8fd9\u4e9b\u5e74\u6765\u770b\u8fc7\u6216\u8005\u542c\u8fc7\u7684\u4e00\u4e9b\u4e0d\u9519\u7684\u5e38\u7528\u7684\u4e0a\u5343\u672c\u4e66\u7c4d \u6ca1\u51c6\u4f60\u60f3\u627e\u7684\u4e66\u5c31\u5728\u8fd9\u91cc\u5462 \u5305\u542b\u4e86\u4e92\u8054\u7f51\u884c\u4e1a\u5927\u591a\u6570\u4e66\u7c4d\u548c\u9762\u8bd5\u7ecf\u9a8c\u9898\u76ee\u7b49\u7b49 \u6709\u4eba\u5de5\u667a\u80fd\u7cfb\u5217 \u5e38\u7528\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6TensorFlow pytorch keras NLP \u673a\u5668\u5b66\u4e60 \u6df1\u5ea6\u5b66\u4e60\u7b49\u7b49 \u5927\u6570\u636e\u7cfb\u5217 Spark Hadoop Scala kafka\u7b49 \u7a0b\u5e8f\u5458\u5fc5\u4fee\u7cfb\u5217 C C java \u6570\u636e\u7ed3\u6784 linux \u8bbe\u8ba1\u6a21\u5f0f \u6570\u636e\u5e93\u7b49\u7b49  \u4eba\u4eba\u5f71\u89c6bot \u5b8c\u5168\u5bf9\u63a5\u4eba\u4eba\u5f71\u89c6\u5168\u90e8\u65e0\u5220\u51cf\u8d44\u6e90Spring Cloud\u57fa\u7840\u6559\u7a0b \u6301\u7eed\u8fde\u8f7d\u66f4\u65b0\u4e2d\u4e00\u4e2a\u7528\u4e8e\u5728 macOS \u4e0a\u5e73\u6ed1\u4f60\u7684\u9f20\u6807\u6eda\u52a8\u6548\u679c\u6216\u5355\u72ec\u8bbe\u7f6e\u6eda\u52a8\u65b9\u5411\u7684\u5c0f\u5de5\u5177 \u8ba9\u4f60\u7684\u6eda\u8f6e\u723d\u5982\u89e6\u63a7\u677f\u963f\u91cc\u5988\u5988\u524d\u7aef\u56e2\u961f\u51fa\u54c1\u7684\u5f00\u6e90\u63a5\u53e3\u7ba1\u7406\u5de5\u5177RAP\u7b2c\u4e8c\u4ee3\u8d85\u8f7b\u91cf\u7ea7\u4e2d\u6587ocr \u652f\u6301\u7ad6\u6392\u6587\u5b57\u8bc6\u522b \u652f\u6301ncnn mnn tnn\u63a8\u7406\u603b\u6a21\u578b\u4ec54 7M \u5fae\u4fe1\u5168\u5e73\u53f0 SDK Senparc Weixin for C \u652f\u6301 NET Framework \u53ca NET Core NET 6 \u5df2\u652f\u6301\u5fae\u4fe1\u516c\u4f17\u53f7 \u5c0f\u7a0b\u5e8f \u5c0f\u6e38\u620f \u4f01\u4e1a\u53f7 \u4f01\u4e1a\u5fae\u4fe1 \u5f00\u653e\u5e73\u53f0 \u5fae\u4fe1\u652f\u4ed8 JSSDK \u5fae\u4fe1\u5468\u8fb9\u7b49\u5168\u5e73\u53f0 WeChat SDK for C \u4e2d\u6587\u72ec\u7acb\u535a\u5ba2\u5217\u8868\u9ad8\u6548\u7387 QQ \u673a\u5668\u4eba\u652f\u6301\u5e93\u652f\u6301\u5b9a\u5236\u4efb\u4f55\u64ad\u653e\u5668SDK\u548c\u63a7\u5236\u5c42 OpenPower\u5de5\u4f5c\u7ec4\u6536\u96c6\u6c47\u603b\u7684\u533b\u9662\u5f00\u653e\u6570\u636eXray \u57fa\u4e8e Nginx \u7684 VLESS XTLS \u4e00\u952e\u5b89\u88c5\u811a\u672c FlutterDemo\u5408\u96c6 \u4eca\u5929\u4f60fu\u4e86\u5417\u83ab\u70e6Python \u4e2d\u6587AI\u6559\u5b66\u4e2d\u56fd\u7279\u8272 TabBar \u4e00\u884c\u4ee3\u7801\u5b9e\u73b0 Lottie \u52a8\u753bTabBar \u652f\u6301\u4e2d\u95f4\u5e26 \u53f7\u7684TabBar\u6837\u5f0f \u81ea\u5e26\u7ea2\u70b9\u89d2\u6807 \u652f\u6301\u52a8\u6001\u5237\u65b0 Flutter\u8c46\u74e3\u5ba2\u6237\u7aef Awesome Flutter Project \u5168\u7f51\u67001 %\u8fd8\u539f\u8c46\u74e3\u5ba2\u6237\u7aef \u9996\u9875 \u4e66\u5f71\u97f3 \u5c0f\u7ec4 \u5e02\u96c6\u53ca\u4e2a\u4eba\u4e2d\u5fc3 \u4e00\u4e2a\u4e0d\u62c9 img xuvip top douyademo mp4 \u57fa\u4e8eSpringCloud2 1\u7684\u5fae\u670d\u52a1\u5f00\u53d1\u811a\u624b\u67b6 \u6574\u5408\u4e86\u7b49 \u670d\u52a1\u6cbb\u7406\u65b9\u9762\u5f15\u5165\u7b49 \u8ba9\u9879\u76ee\u5f00\u53d1\u5feb\u901f\u8fdb\u5165\u4e1a\u52a1\u5f00\u53d1 \u800c\u4e0d\u9700\u8fc7\u591a\u65f6\u95f4\u82b1\u8d39\u5728\u67b6\u6784\u642d\u5efa\u4e0a \u6301\u7eed\u66f4\u65b0\u4e2d\u57fa\u4e8e Vue2 \u548c ECharts \u5c01\u88c5\u7684\u56fe\u8868\u7ec4\u4ef6 SSR \u53bb\u5e7f\u544aACL\u89c4\u5219 SS\u5b8c\u6574GFWList\u89c4\u5219 Clash\u89c4\u5219\u788e\u7247 Telegram\u9891\u9053\u8ba2\u9605\u5730\u5740\u548c\u6211\u4e00\u6b65\u6b65\u90e8\u7f72 kubernetes \u96c6\u7fa4\u641c\u96c6 \u6574\u7406 \u7ef4\u62a4\u5b9e\u7528\u89c4\u5219 \u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u76f8\u5173\u8d44\u6599\u57fa\u4e8eSOA\u67b6\u6784\u7684\u5206\u5e03\u5f0f\u7535\u5546\u8d2d\u7269\u5546\u57ce \u524d\u540e\u7aef\u5206\u79bb \u524d\u53f0\u5546\u57ce \u5168\u5bb6\u6876 \u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u7b49What happens when \u7684\u4e2d\u6587\u7ffb\u8bd1 \u539f\u4ed3\u5e93QMUI iOS \u81f4\u529b\u4e8e\u63d0\u9ad8\u9879\u76ee UI \u5f00\u53d1\u6548\u7387\u7684\u89e3\u51b3\u65b9\u6848\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u9632\u75ab\u4fe1\u606f\u6536\u96c6\u5e73\u53f0\u544a\u522b\u67af\u71e5 \u81f4\u529b\u4e8e\u6253\u9020 Python \u5b9e\u7528\u5c0f\u4f8b\u5b50\u5728\u7ebf\u5236\u4f5c sorry \u4e3a\u6240\u6b32\u4e3a \u7684gifNodejs\u5b66\u4e60\u7b14\u8bb0\u4ee5\u53ca\u7ecf\u9a8c\u603b\u7ed3 \u516c\u4f17\u53f7 \u7a0b\u5e8f\u733f\u5c0f\u5361 \u674e\u5b8f\u6bc5 \u673a\u5668\u5b66\u4e60 \u7b14\u8bb0 \u5728\u7ebf\u9605\u8bfb\u5730\u5740 Vue js \u6e90\u7801\u5206\u6790V\u90e8\u843d Vue SpringBoot\u5b9e\u73b0\u7684\u591a\u7528\u6237\u535a\u5ba2\u7ba1\u7406\u5e73\u53f0 Android Signature V2 Scheme\u7b7e\u540d\u4e0b\u7684\u65b0\u4e00\u4ee3\u6e20\u9053\u5305\u6253\u5305\u795e\u5668Autoscroll Banner \u65e0\u9650\u5faa\u73af\u56fe\u7247 \u6587\u5b57\u8f6e\u64ad\u5668 \u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u5b9e\u73b0 LeetCode \u5251\u6307 Offer \u7b2c 2 \u7248 \u7a0b\u5e8f\u5458\u9762\u8bd5\u91d1\u5178 \u7b2c 6 \u7248 \u9898\u89e3\u4e00\u5957\u9ad8\u8d28\u91cf\u7684\u5fae\u4fe1\u5c0f\u7a0b\u5e8f UI \u7ec4\u4ef6\u5e93\u98de\u6868 \u5b98\u65b9\u6a21\u578b\u5e93 \u5305\u542b\u591a\u79cd\u5b66\u672f\u524d\u6cbf\u548c\u5de5\u4e1a\u573a\u666f\u9a8c\u8bc1\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b \u4e2d\u6587 Python \u7b14\u8bb0\u4e13\u95e8\u4e3a\u521a\u5f00\u59cb\u5237\u9898\u7684\u540c\u5b66\u51c6\u5907\u7684\u7b97\u6cd5\u57fa\u5730 \u6ca1\u6709\u6700\u7ec6\u53ea\u6709\u66f4\u7ec6 \u7acb\u5fd7\u7528\u52a8\u753b\u5c06\u6666\u6da9\u96be\u61c2\u7684\u7b97\u6cd5\u8bf4\u7684\u901a\u4fd7\u6613\u61c2 \u7248\u5165\u95e8\u5b9e\u4f8b\u4ee3\u7801 \u5b9e\u6218\u6559\u7a0b \u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u4e14\u4f4e\u635f\u8017\u7684 goroutine \u6c60 CVPR 2 21 \u8bba\u6587\u548c\u5f00\u6e90\u9879\u76ee\u5408\u96c6\u6709 \u6709  Python\u8fdb\u9636 Intermediate Python \u4e2d\u6587\u7248 \u673a\u5668\u4eba\u89c6\u89c9 \u79fb\u52a8\u673a\u5668\u4eba VS SLAM ORB SLAM2 \u6df1\u5ea6\u5b66\u4e60\u76ee\u6807\u68c0\u6d4b yolov3 \u884c\u4e3a\u68c0\u6d4b opencv PCL \u673a\u5668\u5b66\u4e60 \u65e0\u4eba\u9a7e\u9a76\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u89e3\u51b3\u65b9\u6848\u521b\u5efa\u5728\u7ebf\u8bfe\u7a0b \u5b66\u672f\u7b80\u5386\u6216\u521d\u521b\u7f51\u7ad9  Chrome\u63d2\u4ef6\u5f00\u53d1\u5168\u653b\u7565 \u914d\u5957\u5b8c\u6574Demo \u6b22\u8fceclone\u4f53\u9a8cQUANTAXIS \u652f\u6301\u4efb\u52a1\u8c03\u5ea6 \u5206\u5e03\u5f0f\u90e8\u7f72\u7684 \u80a1\u7968 \u671f\u8d27 \u671f\u6743 \u6e2f\u80a1 \u865a\u62df\u8d27\u5e01 \u6570\u636e \u56de\u6d4b \u6a21\u62df \u4ea4\u6613 \u53ef\u89c6\u5316 \u591a\u8d26\u6237 \u7eaf\u672c\u5730\u91cf\u5316\u89e3\u51b3\u65b9\u6848\u5fae\u4fe1\u8c03\u8bd5 \u5404\u79cdWebView\u6837\u5f0f\u8c03\u8bd5 \u624b\u673a\u6d4f\u89c8\u5668\u7684\u9875\u9762\u771f\u673a\u8c03\u8bd5 \u4fbf\u6377\u7684\u8fdc\u7a0b\u8c03\u8bd5\u624b\u673a\u9875\u9762 \u6293\u5305\u5de5\u5177 \u652f\u6301 HTTPS \u65e0\u9700USB\u8fde\u63a5\u8bbe\u5907 rich text \u5bcc\u6587\u672c\u7f16\u8f91\u5668 \u6c49\u5b57\u62fc\u97f3 h\u00e0n z\u00ec p\u012bn y\u012bn\u9762\u5411\u5f00\u53d1\u4eba\u5458\u68b3\u7406\u7684\u4ee3\u7801\u5b89\u5168\u6307\u5357\u4ee5\u64b8\u4ee3\u7801\u7684\u5f62\u5f0f\u5b66\u4e60Python\u63d0\u4f9b\u540c\u82b1\u987a\u5ba2\u6237\u7aef \u56fd\u91d1 \u534e\u6cf0\u5ba2\u6237\u7aef \u96ea\u7403\u7684\u57fa\u91d1 \u80a1\u7968\u81ea\u52a8\u7a0b\u5e8f\u5316\u4ea4\u6613\u4ee5\u53ca\u81ea\u52a8\u6253\u65b0 \u652f\u6301\u8ddf\u8e2a joinquant ricequant \u6a21\u62df\u4ea4\u6613 \u548c \u5b9e\u76d8\u96ea\u7403\u7ec4\u5408 \u91cf\u5316\u4ea4\u6613\u7ec4\u4ef6\u641c\u72d0\u89c6\u9891 sohu tv Redis\u79c1\u6709\u4e91\u5e73\u53f0spring boot\u6253\u9020\u6587\u4ef6\u6587\u6863\u5728\u7ebf\u9884\u89c8\u9879\u76ee\u8ba1\u7b97\u673a\u57fa\u7840 \u8ba1\u7b97\u673a\u7f51\u7edc \u64cd\u4f5c\u7cfb\u7edf \u6570\u636e\u5e93 Git \u9762\u8bd5\u95ee\u9898\u5168\u9762\u603b\u7ed3 \u5305\u542b\u8be6\u7ec6\u7684follow up question\u4ee5\u53ca\u7b54\u6848 \u5168\u90e8\u91c7\u7528 \u95ee\u9898 \u8ffd\u95ee \u7b54\u6848 \u7684\u5f62\u5f0f \u5373\u62ff\u5373\u7528 \u76f4\u51fb\u4e92\u8054\u7f51\u5927\u5382\u9762\u8bd5 \u53ef\u7528\u4e8e\u6a21\u62df\u9762\u8bd5 \u9762\u8bd5\u524d\u590d\u4e60 \u77ed\u671f\u5185\u5feb\u901f\u5907\u6218\u9762\u8bd5 \u9996\u6b3e\u5fae\u4fe1 macOS \u5ba2\u6237\u7aef\u64a4\u56de\u62e6\u622a\u4e0e\u591a\u5f00windows kernel exploits Windows\u5e73\u53f0\u63d0\u6743\u6f0f\u6d1e\u96c6\u5408\u6743\u9650\u7ba1\u7406\u7cfb\u7edf \u9884\u89c8\u5730\u5740 47 1 4 7 138 loginpkuseg\u591a\u9886\u57df\u4e2d\u6587\u5206\u8bcd\u5de5\u5177\u4e00\u6b3e\u5b8c\u5584\u7684\u5b89\u5168\u8bc4\u4f30\u5de5\u5177 \u652f\u6301\u5e38\u89c1 web \u5b89\u5168\u95ee\u9898\u626b\u63cf\u548c\u81ea\u5b9a\u4e49 poc \u4f7f\u7528\u4e4b\u524d\u52a1\u5fc5\u5148\u9605\u8bfb\u6587\u6863\u96f6\u53cd\u5c04\u5168\u52a8\u6001Android\u63d2\u4ef6\u6846\u67b6Python\u5165\u95e8\u7f51\u7edc\u722c\u866b\u4e4b\u7cbe\u534e\u7248\u5206\u5e03\u5f0f\u914d\u7f6e\u7ba1\u7406\u5e73\u53f0 \u4e2d\u6587 iOS Mac \u5f00\u53d1\u535a\u5ba2\u5217\u8868\u5468\u5fd7\u534e \u673a\u5668\u5b66\u4e60 \u53c8\u79f0\u897f\u74dc\u4e66\u662f\u4e00\u672c\u8f83\u4e3a\u5168\u9762\u7684\u4e66\u7c4d \u4e66\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u673a\u5668\u5b66\u4e60\u9886\u57df\u4e0d\u540c\u7c7b\u578b\u7684\u7b97\u6cd5 \u4f8b\u5982 \u76d1\u7763\u5b66\u4e60 \u65e0\u76d1\u7763\u5b66\u4e60 \u534a\u76d1\u7763\u5b66\u4e60 \u5f3a\u5316\u5b66\u4e60 \u96c6\u6210\u964d\u7ef4 \u7279\u5f81\u9009\u62e9\u7b49 \u8bb0\u5f55\u4e86\u672c\u4eba\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u7684\u7406\u89e3\u601d\u8def\u4e0e\u6269\u5c55\u77e5\u8bc6\u70b9 \u5e0c\u671b\u5bf9\u65b0\u4eba\u9605\u8bfb\u897f\u74dc\u4e66\u6709\u6240\u5e2e\u52a9  \u56fd\u5185\u9996\u4e2aSpring Cloud\u5fae\u670d\u52a1\u5316RBAC\u7684\u7ba1\u7406\u5e73\u53f0 \u6838\u5fc3\u91c7\u7528\u524d\u7aef\u91c7\u7528d2 admin\u4e2d\u53f0\u6846\u67b6 \u8bb0\u5f97\u4e0a\u8fb9\u70b9\u4e2astar \u5173\u6ce8\u66f4\u65b0Apache ECharts incubating \u7684\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u7248\u672cC \u8d44\u6e90\u5927\u5168\u4e2d\u6587\u7248 \u6807\u51c6\u5e93 Web\u5e94\u7528\u6846\u67b6 \u4eba\u5de5\u667a\u80fd \u6570\u636e\u5e93 \u56fe\u7247\u5904\u7406 \u673a\u5668\u5b66\u4e60 \u65e5\u5fd7 \u4ee3\u7801\u5206\u6790\u7b49 \u7531 \u5f00\u6e90\u524d\u54e8 \u548c CPP\u5f00\u53d1\u8005 \u5fae\u4fe1\u516c\u53f7\u56e2\u961f\u7ef4\u62a4\u66f4\u65b0 stackoverflow\u4e0aJava\u76f8\u5173\u56de\u7b54\u6574\u7406\u7ffb\u8bd1 \u57fa\u4e8eGoogle Flutter\u7684WanAndroid\u5ba2\u6237\u7aef \u652f\u6301Android\u548ciOS \u5305\u62ecBLoC RxDart \u56fd\u9645\u5316 \u4e3b\u9898\u8272 \u542f\u52a8\u9875 \u5f15\u5bfc\u9875  \u672c\u4ee3\u7801\u5e93\u662f\u4f5c\u8005\u5c0f\u5085\u54e5\u591a\u5e74\u4ece\u4e8b\u4e00\u7ebf\u4e92\u8054\u7f51 Java \u5f00\u53d1\u7684\u5b66\u4e60\u5386\u7a0b\u6280\u672f\u6c47\u603b \u65e8\u5728\u4e3a\u5927\u5bb6\u63d0\u4f9b\u4e00\u4e2a\u6e05\u6670\u8be6\u7ec6\u7684\u5b66\u4e60\u6559\u7a0b \u4fa7\u91cd\u70b9\u66f4\u503e\u5411\u7f16\u5199Java\u6838\u5fc3\u5185\u5bb9 \u5982\u679c\u672c\u4ed3\u5e93\u80fd\u4e3a\u60a8\u63d0\u4f9b\u5e2e\u52a9 \u8bf7\u7ed9\u4e88\u652f\u6301 \u5173\u6ce8 \u70b9\u8d5e \u5206\u4eab C \u8d44\u6e90\u5927\u5168\u4e2d\u6587\u7248 \u5305\u62ec\u4e86 \u6784\u5efa\u7cfb\u7edf \u7f16\u8bd1\u5668 \u6570\u636e\u5e93 \u52a0\u5bc6 \u521d\u4e2d\u9ad8\u7684\u6559\u7a0b \u6307\u5357 \u4e66\u7c4d \u5e93\u7b49  NET m3u8 downloader \u5f00\u6e90\u7684\u547d\u4ee4\u884cm3u8 HLS dash\u4e0b\u8f7d\u5668 \u652f\u6301\u666e\u901aAES 128 CBC\u89e3\u5bc6 \u591a\u7ebf\u7a0b \u81ea\u5b9a\u4e49\u8bf7\u6c42\u5934\u7b49 \u652f\u6301\u7b80\u4f53\u4e2d\u6587 \u7e41\u4f53\u4e2d\u6587\u548c\u82f1\u6587 English Supported \u56fd\u5185\u4f4e\u4ee3\u7801\u5e73\u53f0\u4ece\u4e1a\u8005\u4ea4\u6d41tcc transaction\u662fTCC\u578b\u4e8b\u52a1java\u5b9e\u73b0\u8bbe\u8ba1\u6a21\u5f0f Golang\u5b9e\u73b0 \u7814\u78e8\u8bbe\u8ba1\u6a21\u5f0f \u8bfb\u4e66\u7b14\u8bb0Vue\u6570\u636e\u53ef\u89c6\u5316\u7ec4\u4ef6\u5e93 \u7c7b\u4f3c\u963f\u91ccDataV \u5927\u5c4f\u6570\u636e\u5c55\u793a \u63d0\u4f9bSVG\u7684\u8fb9\u6846\u53ca\u88c5\u9970 \u56fe\u8868 \u6c34\u4f4d\u56fe \u98de\u7ebf\u56fe\u7b49\u7ec4\u4ef6 \u7b80\u5355\u6613\u7528 \u957f\u671f\u66f4\u65b0 React\u7248\u5df2\u53d1\u5e03 \u81ea\u5df1\u52a8\u624b\u505a\u804a\u5929\u673a\u5668\u4eba\u6559\u7a0b RecyclerView\u4fa7\u6ed1\u83dc\u5355 Item\u62d6\u62fd \u6ed1\u52a8\u5220\u9664Item \u81ea\u52a8\u52a0\u8f7d\u66f4\u591a HeaderView FooterView Item\u5206\u7ec4\u9ecf\u8d34 \u817e\u8baf\u7269\u8054\u7f51\u7ec8\u7aef\u64cd\u4f5c\u7cfb\u7edf\u4e00\u4e2a\u5c0f\u5de7 \u8f7b\u91cf\u7684\u6d4f\u89c8\u5668\u5185\u6838 \u7528\u6765\u53d6\u4ee3wke\u548clibcef\u5305\u542b\u7f8e\u989c\u7b494 \u4f59\u79cd\u5b9e\u65f6\u6ee4\u955c\u76f8\u673a \u53ef\u62cd\u7167 \u5f55\u50cf \u56fe\u7247\u4fee\u6539springboot \u6846\u67b6\u4e0e\u5176\u5b83\u7ec4\u4ef6\u7ed3\u5408\u5982\u7b49\u7528\u6df1\u5ea6\u5b66\u4e60\u5bf9\u5bf9\u8054  \u6280\u672f\u9762\u8bd5\u5fc5\u5907\u57fa\u7840\u77e5\u8bc6 Leetcode \u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf \u8ba1\u7b97\u673a\u7f51\u7edc \u7cfb\u7edf\u8bbe\u8ba1 Java\u5b66\u4e60 \u9762\u8bd5\u6307\u5357 \u4e00\u4efd\u6db5\u76d6\u5927\u90e8\u5206 Java \u7a0b\u5e8f\u5458\u6240\u9700\u8981\u638c\u63e1\u7684\u6838\u5fc3\u77e5\u8bc6 \u51c6\u5907 Java \u9762\u8bd5 \u9996\u9009 JavaGuide \u7528\u52a8\u753b\u7684\u5f62\u5f0f\u5448\u73b0\u89e3LeetCode\u9898\u76ee\u7684\u601d\u8def \u4e92\u8054\u7f51 Java \u5de5\u7a0b\u5e08\u8fdb\u9636\u77e5\u8bc6\u5b8c\u5168\u626b\u76f2 \u6db5\u76d6\u9ad8\u5e76\u53d1 \u5206\u5e03\u5f0f \u9ad8\u53ef\u7528 \u5fae\u670d\u52a1 \u6d77\u91cf\u6570\u636e\u5904\u7406\u7b49\u9886\u57df\u77e5\u8bc6mall\u9879\u76ee\u662f\u4e00\u5957\u7535\u5546\u7cfb\u7edf \u5305\u62ec\u524d\u53f0\u5546\u57ce\u7cfb\u7edf\u53ca\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf \u57fa\u4e8eSpringBoot MyBatis\u5b9e\u73b0 \u91c7\u7528Docker\u5bb9\u5668\u5316\u90e8\u7f72 \u524d\u53f0\u5546\u57ce\u7cfb\u7edf\u5305\u542b\u9996\u9875\u95e8\u6237 \u5546\u54c1\u63a8\u8350 \u5546\u54c1\u641c\u7d22 \u5546\u54c1\u5c55\u793a \u8d2d\u7269\u8f66 \u8ba2\u5355\u6d41\u7a0b \u4f1a\u5458\u4e2d\u5fc3 \u5ba2\u6237\u670d\u52a1 \u5e2e\u52a9\u4e2d\u5fc3\u7b49\u6a21\u5757 \u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u5305\u542b\u5546\u54c1\u7ba1\u7406 \u8ba2\u5355\u7ba1\u7406 \u4f1a\u5458\u7ba1\u7406 \u4fc3\u9500\u7ba1\u7406 \u8fd0\u8425\u7ba1\u7406 \u5185\u5bb9\u7ba1\u7406 \u7edf\u8ba1\u62a5\u8868 \u8d22\u52a1\u7ba1\u7406 \u6743\u9650\u7ba1\u7406 \u8bbe\u7f6e\u7b49\u6a21\u5757  GitHub\u4e2d\u6587\u6392\u884c\u699c \u5e2e\u52a9\u4f60\u53d1\u73b0\u9ad8\u5206\u4f18\u79c0\u4e2d\u6587\u9879\u76ee \u66f4\u9ad8\u6548\u5730\u5438\u6536\u56fd\u4eba\u7684\u4f18\u79c0\u7ecf\u9a8c\u6210\u679c \u699c\u5355\u6bcf\u5468\u66f4\u65b0\u4e00\u6b21 \u656c\u8bf7\u5173\u6ce8  \u7b97\u6cd5\u9762\u8bd5 \u7b97\u6cd5\u77e5\u8bc6 \u9488\u5bf9\u5c0f\u767d\u7684\u7b97\u6cd5\u8bad\u7ec3 \u8fd8\u5305\u62ec 1 \u963f\u91cc \u5b57\u8282 \u6ef4\u6ef4 \u767e\u7bc7\u5927\u5382\u9762\u7ecf\u6c47\u603b 2 \u5343\u672c\u5f00\u6e90\u7535\u5b50\u4e66 3 \u767e\u5f20\u601d\u7ef4\u5bfc\u56fe \u53f3\u4fa7\u6765\u4e2a star \u5427 English version supported \u8bca\u65ad\u5229\u5668Arthas\u6559\u7a0b \u6280\u672f\u6808\u793a\u4f8b\u4ee3\u7801 \u5feb\u901f\u7b80\u5355\u4e0a\u624b\u6559\u7a0b http\u4e0b\u8f7d\u5de5\u5177 \u57fa\u4e8ehttp\u4ee3\u7406 \u652f\u6301\u591a\u8fde\u63a5\u5206\u5757\u4e0b\u8f7d\u963f\u91cc\u4e91\u8ba1\u7b97\u5e73\u53f0\u56e2\u961f\u51fa\u54c1 \u4e3a\u76d1\u63a7\u800c\u751f\u7684\u6570\u636e\u5e93\u8fde\u63a5\u6c60 \u4f01\u4e1a\u7ea7\u4f4e\u4ee3\u7801\u5e73\u53f0 \u524d\u540e\u7aef\u5206\u79bb\u67b6\u6784\u5f3a\u5927\u7684\u4ee3\u7801\u751f\u6210\u5668\u8ba9\u524d\u540e\u7aef\u4ee3\u7801\u4e00\u952e\u751f\u6210 \u65e0\u9700\u5199\u4efb\u4f55\u4ee3\u7801 \u5f15\u9886\u65b0\u7684\u5f00\u53d1\u6a21\u5f0fOnlineCoding \u4ee3\u7801\u751f\u6210 \u624b\u5de5MERGE \u5e2e\u52a9Java\u9879\u76ee\u89e3\u51b37 %\u91cd\u590d\u5de5\u4f5c \u8ba9\u5f00\u53d1\u66f4\u5173\u6ce8\u4e1a\u52a1 \u65e2\u80fd\u5feb\u901f\u63d0\u9ad8\u6548\u7387 \u5e2e\u52a9\u516c\u53f8\u8282\u7701\u6210\u672c \u540c\u65f6\u53c8\u4e0d\u5931\u7075\u6d3b\u6027  \u4e0b\u62c9\u5237\u65b0 \u4e0a\u62c9\u52a0\u8f7d \u4e8c\u7ea7\u5237\u65b0 \u6dd8\u5b9d\u4e8c\u697c\u667a\u80fd\u4e0b\u62c9\u5237\u65b0\u6846\u67b6 \u652f\u6301\u8d8a\u754c\u56de\u5f39 \u8d8a\u754c\u62d6\u52a8 \u5177\u6709\u6781\u5f3a\u7684\u6269\u5c55\u6027 \u96c6\u6210\u4e86\u51e0\u5341\u79cd\u70ab\u9177\u7684Header\u548c Footer \u8be5\u9879\u76ee\u5df2\u6210\u529f\u96c6\u6210 actuator \u76d1\u63a7 admin \u53ef\u89c6\u5316\u76d1\u63a7 logback \u65e5\u5fd7 aopLog \u901a\u8fc7AOP\u8bb0\u5f55web\u8bf7\u6c42\u65e5\u5fd7 \u7edf\u4e00\u5f02\u5e38\u5904\u7406 json\u7ea7\u522b\u548c\u9875\u9762\u7ea7\u522b freemarker \u6a21\u677f\u5f15\u64ce thymeleaf \u6a21\u677f\u5f15\u64ce Beetl \u6a21\u677f\u5f15\u64ce Enjoy \u6a21\u677f\u5f15\u64ce JdbcTemplate \u901a\u7528JDBC\u64cd\u4f5c\u6570\u636e\u5e93 JPA \u5f3a\u5927\u7684ORM\u6846\u67b6 mybatis \u5f3a\u5927\u7684ORM\u6846\u67b6 \u901a\u7528Mapper \u5feb\u901f\u64cd\u4f5cMybatis PageHelper \u901a\u7528\u7684Mybatis\u5206\u9875\u63d2\u4ef6 mybatis plus \u5feb\u901f\u64cd\u4f5cMybatis BeetlSQL \u5f3a\u5927\u7684ORM\u6846\u67b6 u \u5fae\u4eba\u4e8b\u662f\u4e00\u4e2a\u524d\u540e\u7aef\u5206\u79bb\u7684\u4eba\u529b\u8d44\u6e90\u7ba1\u7406\u7cfb\u7edf \u9879\u76ee\u91c7\u7528SpringBoot Vue\u5f00\u53d1  \u79d2\u6740\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5b9e\u73b0 \u4e92\u8054\u7f51\u5de5\u7a0b\u5e08\u8fdb\u9636\u4e0e\u5206\u6790 To Be Top Javaer Java\u5de5\u7a0b\u5e08\u6210\u795e\u4e4b\u8def\u5faa\u5e8f\u6e10\u8fdb \u5b66\u4e60\u535a\u5ba2Spring\u7cfb\u5217\u6e90\u7801 mrbird cc\u5feb\u901f \u7b80\u5355\u907f\u514dOOM\u7684java\u5904\u7406Excel\u5de5\u5177\u963f\u91cc\u5df4\u5df4 MySQL binlog \u589e\u91cf\u8ba2\u9605 \u6d88\u8d39\u7ec4\u4ef6  \u4e00\u6b3e\u4f18\u79c0\u7684\u5f00\u6e90\u535a\u5ba2\u53d1\u5e03\u5e94\u7528 \u5206\u5e03\u5f0f\u4efb\u52a1\u8c03\u5ea6\u5e73\u53f0XXL JOB \u4e00\u6b3e\u9762\u5411\u6cdb\u524d\u7aef\u4ea7\u54c1\u7814\u53d1\u5168\u751f\u547d\u5468\u671f\u7684\u6548\u7387\u5e73\u53f0 \u9762\u5411\u4e91\u539f\u751f\u5fae\u670d\u52a1\u7684\u9ad8\u53ef\u7528\u6d41\u63a7\u9632\u62a4\u7ec4\u4ef6 \u89c6\u9891\u64ad\u653e\u5668\u652f\u6301\u5f39\u5e55 \u5916\u6302\u5b57\u5e55 \u652f\u6301\u6ee4\u955c \u6c34\u5370 gif\u622a\u56fe \u7247\u5934\u5e7f\u544a \u4e2d\u95f4\u5e7f\u544a \u591a\u4e2a\u540c\u65f6\u64ad\u653e \u652f\u6301\u57fa\u672c\u7684\u62d6\u52a8 \u58f0\u97f3 \u4eae\u5ea6\u8c03\u8282 \u652f\u6301\u8fb9\u64ad\u8fb9\u7f13\u5b58 \u652f\u6301\u89c6\u9891\u81ea\u5e26rotation\u7684\u65cb\u8f6c 9 27 \u4e4b\u7c7b \u91cd\u529b\u65cb\u8f6c\u4e0e\u624b\u52a8\u65cb\u8f6c\u7684\u540c\u6b65\u652f\u6301 \u652f\u6301\u5217\u8868\u64ad\u653e \u5217\u8868\u5168\u5c4f\u52a8\u753b \u89c6\u9891\u52a0\u8f7d\u901f\u5ea6 \u5217\u8868\u5c0f\u7a97\u53e3\u652f\u6301\u62d6\u52a8 \u52a8\u753b\u6548\u679c \u8c03\u6574\u6bd4\u4f8b \u591a\u5206\u8fa8\u7387\u5207\u6362 \u652f\u6301\u5207\u6362\u64ad\u653e\u5668 \u8fdb\u5ea6\u6761\u5c0f\u7a97\u53e3\u9884\u89c8 \u5217\u8868\u5207\u6362\u8be6\u60c5\u9875\u9762\u65e0\u7f1d\u64ad\u653e rtsp concat mpeg \u53c8\u4e00\u4e2a\u5c0f\u5546\u57ce litemall Spring Boot\u540e\u7aef Vue\u7ba1\u7406\u5458\u524d\u7aef \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u7528\u6237\u524d\u7aef Vue\u7528\u6237\u79fb\u52a8\u7aef\u57fa\u4e8eSpring SpringMVC Mybatis\u5206\u5e03\u5f0f\u654f\u6377\u5f00\u53d1\u7cfb\u7edf\u67b6\u6784 \u63d0\u4f9b\u6574\u5957\u516c\u5171\u5fae\u670d\u52a1\u670d\u52a1\u6a21\u5757 \u96c6\u4e2d\u6743\u9650\u7ba1\u7406 \u5355\u70b9\u767b\u5f55 \u5185\u5bb9\u7ba1\u7406 \u652f\u4ed8\u4e2d\u5fc3 \u7528\u6237\u7ba1\u7406 \u652f\u6301\u7b2c\u4e09\u65b9\u767b\u5f55 \u5fae\u4fe1\u5e73\u53f0 \u5b58\u50a8\u7cfb\u7edf \u914d\u7f6e\u4e2d\u5fc3 \u65e5\u5fd7\u5206\u6790 \u4efb\u52a1\u548c\u901a\u77e5\u7b49 \u652f\u6301\u670d\u52a1\u6cbb\u7406 \u76d1\u63a7\u548c\u8ffd\u8e2a \u52aa\u529b\u4e3a\u4e2d\u5c0f\u578b\u4f01\u4e1a\u6253\u9020\u5168\u65b9\u4f4dJ2EE\u4f01\u4e1a\u7ea7\u5f00\u53d1\u89e3\u51b3\u65b9\u6848 \u9879\u76ee\u57fa\u4e8e\u7684\u524d\u540e\u7aef\u5206\u79bb\u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf \u9879\u76ee\u91c7\u7528\u5206\u6a21\u5757\u5f00\u53d1\u65b9\u5f0f \u6743\u9650\u63a7\u5236\u91c7\u7528 RBAC \u652f\u6301\u6570\u636e\u5b57\u5178\u4e0e\u6570\u636e\u6743\u9650\u7ba1\u7406 \u652f\u6301\u4e00\u952e\u751f\u6210\u524d\u540e\u7aef\u4ee3\u7801 \u652f\u6301\u52a8\u6001\u8def\u7531 \u53f2\u4e0a\u6700\u7b80\u5355\u7684Spring Cloud\u6559\u7a0b\u6e90\u7801 CAT \u4f5c\u4e3a\u670d\u52a1\u7aef\u9879\u76ee\u57fa\u7840\u7ec4\u4ef6 \u63d0\u4f9b\u4e86 Java C C Node js Python Go \u7b49\u591a\u8bed\u8a00\u5ba2\u6237\u7aef \u5df2\u7ecf\u5728\u7f8e\u56e2\u70b9\u8bc4\u7684\u57fa\u7840\u67b6\u6784\u4e2d\u95f4\u4ef6\u6846\u67b6 MVC\u6846\u67b6 RPC\u6846\u67b6 \u6570\u636e\u5e93\u6846\u67b6 \u7f13\u5b58\u6846\u67b6\u7b49 \u6d88\u606f\u961f\u5217 \u914d\u7f6e\u7cfb\u7edf\u7b49 \u6df1\u5ea6\u96c6\u6210 \u4e3a\u7f8e\u56e2\u70b9\u8bc4\u5404\u4e1a\u52a1\u7ebf\u63d0\u4f9b\u7cfb\u7edf\u4e30\u5bcc\u7684\u6027\u80fd\u6307\u6807 \u5065\u5eb7\u72b6\u51b5 \u5b9e\u65f6\u544a\u8b66\u7b49 spring boot \u5b9e\u8df5\u5b66\u4e60\u6848\u4f8b \u662f spring boot \u521d\u5b66\u8005\u53ca\u6838\u5fc3\u6280\u672f\u5de9\u56fa\u7684\u6700\u4f73\u5b9e\u8df5 \u53e6\u5916\u5199\u535a\u5ba2 \u7528 OpenWrite Spring Boot\u57fa\u7840\u6559\u7a0b Spring Boot 2 x\u7248\u672c\u8fde\u8f7d\u4e2d \u5e2e\u52a9 Android App \u8fdb\u884c\u7ec4\u4ef6\u5316\u6539\u9020\u7684\u8def\u7531\u6846\u67b6 \u63d0\u9ad8 Android UI \u5f00\u53d1\u6548\u7387\u7684 UI \u5e93\u65f6\u95f4\u9009\u62e9\u5668 \u7701\u5e02\u533a\u4e09\u7ea7\u8054\u52a8 Luban \u9c81\u73ed\u53ef\u80fd\u662f\u6700\u63a5\u8fd1\u5fae\u4fe1\u670b\u53cb\u5708\u7684\u56fe\u7247\u538b\u7f29\u7b97\u6cd5 Gitee \u6700\u6709\u4ef7\u503c\u5f00\u6e90\u9879\u76ee \u5c0f\u800c\u5168\u800c\u7f8e\u7684\u7b2c\u4e09\u65b9\u767b\u5f55\u5f00\u6e90\u7ec4\u4ef6 \u76ee\u524d\u5df2\u652f\u6301Github Gitee \u5fae\u535a \u9489\u9489 \u767e\u5ea6 Coding \u817e\u8baf\u4e91\u5f00\u53d1\u8005\u5e73\u53f0 OSChina \u652f\u4ed8\u5b9d QQ \u5fae\u4fe1 \u6dd8\u5b9d Google Facebook \u6296\u97f3 \u9886\u82f1 \u5c0f\u7c73 \u5fae\u8f6f \u4eca\u65e5\u5934\u6761\u4eba\u4eba \u534e\u4e3a \u4f01\u4e1a\u5fae\u4fe1 \u9177\u5bb6\u4e50 Gitlab \u7f8e\u56e2 \u997f\u4e86\u4e48 \u63a8\u7279 \u98de\u4e66 \u4eac\u4e1c \u963f\u91cc\u4e91 \u559c\u9a6c\u62c9\u96c5 Amazon Slack\u548c Line \u7b49\u7b2c\u4e09\u65b9\u5e73\u53f0\u7684\u6388\u6743\u767b\u5f55 Login so easy \u4eca\u65e5\u5934\u6761\u5c4f\u5e55\u9002\u914d\u65b9\u6848\u7ec8\u6781\u7248 \u4e00\u4e2a\u6781\u4f4e\u6210\u672c\u7684 Android \u5c4f\u5e55\u9002\u914d\u65b9\u6848  Banner 2 \u6765\u4e86 Android\u5e7f\u544a\u56fe\u7247\u8f6e\u64ad\u63a7\u4ef6 \u5185\u90e8\u57fa\u4e8eViewPager2\u5b9e\u73b0 Indicator\u548cUI\u90fd\u53ef\u4ee5\u81ea\u5b9a\u4e49  \u96f6\u4ee3\u7801 \u70ed\u66f4\u65b0 \u81ea\u52a8\u5316 ORM \u5e93 \u540e\u7aef\u63a5\u53e3\u548c\u6587\u6863\u96f6\u4ee3\u7801 \u524d\u7aef \u5ba2\u6237\u7aef \u5b9a\u5236\u8fd4\u56de JSON \u7684\u6570\u636e\u548c\u7ed3\u6784\u4e00\u4e2a\u6db5\u76d6\u516d\u4e2a\u4e13\u680f\u5206\u5e03\u5f0f\u6d88\u606f\u961f\u5217 \u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u4ed3\u5e93 \u5e0c\u671b\u80d6\u53cb\u5c0f\u624b\u4e00\u6296 \u53f3\u4e0a\u89d2\u6765\u4e2a Star \u611f\u6069 1 24Mybatis\u901a\u7528\u5206\u9875\u63d2\u4ef6OkGo 3 \u9707\u64bc\u6765\u88ad \u8be5\u5e93\u662f\u57fa\u4e8e \u534f\u8bae \u5c01\u88c5\u4e86 OkHttp \u7684\u7f51\u7edc\u8bf7\u6c42\u6846\u67b6 \u6bd4 Retrofit \u66f4\u7b80\u5355\u6613\u7528 \u652f\u6301 RxJava RxJava2 \u652f\u6301\u81ea\u5b9a\u4e49\u7f13\u5b58 \u652f\u6301\u6279\u91cf\u65ad\u70b9\u4e0b\u8f7d\u7ba1\u7406\u548c\u6279\u91cf\u4e0a\u4f20\u7ba1\u7406\u529f\u80fd\u542b Flink \u5165\u95e8 \u6982\u5ff5 \u539f\u7406 \u5b9e\u6218 \u6027\u80fd\u8c03\u4f18 \u6e90\u7801\u89e3\u6790\u7b49\u5185\u5bb9 \u6d89\u53ca\u7b49\u5185\u5bb9\u7684\u5b66\u4e60\u6848\u4f8b \u8fd8\u6709 Flink \u843d\u5730\u5e94\u7528\u7684\u5927\u578b\u9879\u76ee\u6848\u4f8b PVUV \u65e5\u5fd7\u5b58\u50a8 \u767e\u4ebf\u6570\u636e\u5b9e\u65f6\u53bb\u91cd \u76d1\u63a7\u544a\u8b66 \u5206\u4eab \u6b22\u8fce\u5927\u5bb6\u652f\u6301\u6211\u7684\u4e13\u680f \u5927\u6570\u636e\u5b9e\u65f6\u8ba1\u7b97\u5f15\u64ce Flink \u5b9e\u6218\u4e0e\u6027\u80fd\u4f18\u5316 \u5b89\u5353\u5e73\u53f0\u4e0a\u7684JavaScript\u81ea\u52a8\u5316\u5de5\u5177  \ufe0f\u4e00\u4e2a\u6574\u5408\u4e86\u5927\u91cf\u4e3b\u6d41\u5f00\u6e90\u9879\u76ee\u9ad8\u5ea6\u53ef\u914d\u7f6e\u5316\u7684 Android MVP \u5feb\u901f\u96c6\u6210\u6846\u67b6 Spring\u6e90\u7801\u9605\u8bfb\u5927\u6570\u636e\u5165\u95e8\u6307\u5357 android 4 4\u4ee5\u4e0a\u6c89\u6d78\u5f0f\u72b6\u6001\u680f\u548c\u6c89\u6d78\u5f0f\u5bfc\u822a\u680f\u7ba1\u7406 \u9002\u914d\u6a2a\u7ad6\u5c4f\u5207\u6362 \u5218\u6d77\u5c4f \u8f6f\u952e\u76d8\u5f39\u51fa\u7b49\u95ee\u9898 \u53ef\u4ee5\u4fee\u6539\u72b6\u6001\u680f\u5b57\u4f53\u989c\u8272\u548c\u5bfc\u822a\u680f\u56fe\u6807\u989c\u8272 \u4ee5\u53ca\u4e0d\u53ef\u4fee\u6539\u5b57\u4f53\u989c\u8272\u624b\u673a\u7684\u9002\u914d \u9002\u7528\u4e8e\u4e00\u53e5\u4ee3\u7801\u8f7b\u677e\u5b9e\u73b0 \u4ee5\u53ca\u5bf9bar\u7684\u5176\u4ed6\u8bbe\u7f6e \u8be6\u89c1README \u7b80\u4e66\u8bf7\u53c2\u8003 www jianshu com p 2a884e211a62\u4e1a\u5185\u4e3a\u6570\u4e0d\u591a\u81f4\u529b\u4e8e\u6781\u81f4\u4f53\u9a8c\u7684\u8d85\u5f3a\u5168\u81ea\u7814\u8de8\u5e73\u53f0 windows android iOS \u6d41\u5a92\u4f53\u5185\u6838 \u901a\u8fc7\u6a21\u5757\u5316\u81ea\u7531\u7ec4\u5408 \u652f\u6301\u5b9e\u65f6RTMP\u63a8\u6d41 RTSP\u63a8\u6d41 RTMP\u64ad\u653e\u5668 RTSP\u64ad\u653e\u5668 \u5f55\u50cf \u591a\u8def\u6d41\u5a92\u4f53\u8f6c\u53d1 \u97f3\u89c6\u9891\u5bfc\u64ad \u52a8\u6001\u89c6\u9891\u5408\u6210 \u97f3\u9891\u6df7\u97f3 \u76f4\u64ad\u4e92\u52a8 \u5185\u7f6e\u8f7b\u91cf\u7ea7RTSP\u670d\u52a1\u7b49 \u6bd4\u5feb\u66f4\u5feb \u4e1a\u754c\u771f\u6b63\u9760\u8c31\u7684\u8d85\u4f4e\u5ef6\u8fdf\u76f4\u64adSDK 1\u79d2\u5185 \u4f4e\u5ef6\u8fdf\u6a21\u5f0f\u4e0b2 4 ms DataX\u662f\u963f\u91cc\u4e91DataWorks\u6570\u636e\u96c6\u6210\u7684\u5f00\u6e90\u7248\u672c mall\u5b66\u4e60\u6559\u7a0b \u67b6\u6784 \u4e1a\u52a1 \u6280\u672f\u8981\u70b9\u5168\u65b9\u4f4d\u89e3\u6790 mall\u9879\u76ee 4 k star \u662f\u4e00\u5957\u7535\u5546\u7cfb\u7edf \u4f7f\u7528\u73b0\u9636\u6bb5\u4e3b\u6d41\u6280\u672f\u5b9e\u73b0 \u6db5\u76d6\u4e86\u7b49\u6280\u672f \u91c7\u7528Docker\u5bb9\u5668\u5316\u90e8\u7f72 Android\u5f00\u6e90\u5f39\u5e55\u5f15\u64ce \u70c8\u7130\u5f39\u5e55\u4f7f \uff5espring cloud vue oAuth2 \u5168\u5bb6\u6876\u5b9e\u6218 \u524d\u540e\u7aef\u5206\u79bb\u6a21\u62df\u5546\u57ce \u5b8c\u6574\u7684\u8d2d\u7269\u6d41\u7a0b \u540e\u7aef\u8fd0\u8425\u5e73\u53f0 \u53ef\u4ee5\u5b9e\u73b0\u5feb\u901f\u642d\u5efa\u4f01\u4e1a\u7ea7\u5fae\u670d\u52a1\u9879\u76ee \u652f\u6301\u5fae\u4fe1\u767b\u5f55\u7b49\u4e09\u65b9\u767b\u5f55  \u4e00\u4e2a\u57fa\u4e8eSpring Boot MyBatis\u7684\u79cd\u5b50\u9879\u76ee \u7528\u4e8e\u5feb\u901f\u6784\u5efa\u4e2d\u5c0f\u578bAPI RESTful API\u9879\u76ee \u5f3a\u5927 \u53ef\u5b9a\u5236 \u6613\u6269\u5c55\u7684 ViewPager \u6307\u793a\u5668\u6846\u67b6 \u662f\u7684\u6700\u4f73\u66ff\u4ee3\u54c1 \u652f\u6301\u89d2\u6807 \u66f4\u652f\u6301\u5728\u975eViewPager\u573a\u666f\u4e0b\u4f7f\u7528 \u4f7f\u7528hide show \u5207\u6362Fragment\u6216\u4f7f\u7528se 27\u5929\u6210\u4e3aJava\u5927\u795e\u5b89\u5353\u5b66\u4e60\u7b14\u8bb0 cim cross IM \u9002\u7528\u4e8e\u5f00\u53d1\u8005\u7684\u5206\u5e03\u5f0f\u5373\u65f6\u901a\u8baf\u7cfb\u7edfAndroid\u4e0a\u4e00\u4e2a\u4f18\u96c5 \u4e07\u80fd\u81ea\u5b9a\u4e49UI \u4effiOS \u652f\u6301\u5782\u76f4 \u6c34\u5e73\u65b9\u5411\u5207\u6362 \u652f\u6301\u5468\u89c6\u56fe \u81ea\u5b9a\u4e49\u5468\u8d77\u59cb \u6027\u80fd\u9ad8\u6548\u7684\u65e5\u5386\u63a7\u4ef6 \u652f\u6301\u70ed\u63d2\u62d4\u5b9e\u73b0\u7684UI\u5b9a\u5236 \u652f\u6301\u6807\u8bb0 \u81ea\u5b9a\u4e49\u989c\u8272 \u519c\u5386 \u81ea\u5b9a\u4e49\u6708\u89c6\u56fe\u5404\u79cd\u663e\u793a\u6a21\u5f0f\u7b49 Canvas\u7ed8\u5236 \u901f\u5ea6\u5feb \u5360\u7528\u5185\u5b58\u4f4e \u4f60\u771f\u7684\u60f3\u4e0d\u5230\u65e5\u5386\u5c45\u7136\u8fd8\u53ef\u4ee5\u5982\u6b64\u4f18\u96c5hsweb ha\u028as w\u025bb \u662f\u4e00\u4e2a\u57fa\u4e8espring boot 2 x\u5f00\u53d1 \u9996\u4e2a\u4f7f\u7528\u5168\u54cd\u5e94\u5f0f\u7f16\u7a0b\u7684\u4f01\u4e1a\u7ea7\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u57fa\u7840\u9879\u76ee  newbee mall \u9879\u76ee \u65b0\u8702\u5546\u57ce \u662f\u4e00\u5957\u7535\u5546\u7cfb\u7edf \u5305\u62ec newbee mall \u5546\u57ce\u7cfb\u7edf\u53ca newbee mall admin \u5546\u57ce\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf \u57fa\u4e8e Spring Boot 2 X \u53ca\u76f8\u5173\u6280\u672f\u6808\u5f00\u53d1 \u524d\u53f0\u5546\u57ce\u7cfb\u7edf\u5305\u542b\u9996\u9875\u95e8\u6237 \u5546\u54c1\u5206\u7c7b \u65b0\u54c1\u4e0a\u7ebf \u9996\u9875\u8f6e\u64ad \u5546\u54c1\u63a8\u8350 \u5546\u54c1\u641c\u7d22 \u5546\u54c1\u5c55\u793a \u8d2d\u7269\u8f66 \u8ba2\u5355\u7ed3\u7b97 \u8ba2\u5355\u6d41\u7a0b \u4e2a\u4eba\u8ba2\u5355\u7ba1\u7406 \u4f1a\u5458\u4e2d\u5fc3 \u5e2e\u52a9\u4e2d\u5fc3\u7b49\u6a21\u5757 \u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u5305\u542b\u6570\u636e\u9762\u677f \u8f6e\u64ad\u56fe\u7ba1\u7406 \u5546\u54c1\u7ba1\u7406 \u8ba2\u5355\u7ba1\u7406 \u4f1a\u5458\u7ba1\u7406 \u5206\u7c7b\u7ba1\u7406 \u8bbe\u7f6e\u7b49\u6a21\u5757 mall swarm\u662f\u4e00\u5957\u5fae\u670d\u52a1\u5546\u57ce\u7cfb\u7edf \u91c7\u7528\u4e86\u7b49\u6838\u5fc3\u6280\u672f \u540c\u65f6\u63d0\u4f9b\u4e86\u57fa\u4e8eVue\u7684\u7ba1\u7406\u540e\u53f0\u65b9\u4fbf\u5feb\u901f\u642d\u5efa\u7cfb\u7edf mall swarm\u5728\u7535\u5546\u4e1a\u52a1\u7684\u57fa\u7840\u96c6\u6210\u4e86\u6ce8\u518c\u4e2d\u5fc3 \u914d\u7f6e\u4e2d\u5fc3 \u76d1\u63a7\u4e2d\u5fc3 \u7f51\u5173\u7b49\u7cfb\u7edf\u529f\u80fd \u6587\u6863\u9f50\u5168 \u9644\u5e26\u5168\u5957Spring Cloud\u6559\u7a0b \u9605\u8bfb\u662f\u4e00\u6b3e\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6765\u6e90\u9605\u8bfb\u7f51\u7edc\u5185\u5bb9\u7684\u5de5\u5177 \u4e3a\u5e7f\u5927\u7f51\u7edc\u6587\u5b66\u7231\u597d\u8005\u63d0\u4f9b\u4e00\u79cd\u65b9\u4fbf \u5feb\u6377\u8212\u9002\u7684\u8bd5\u8bfb\u4f53\u9a8c Spring Cloud\u57fa\u7840\u6559\u7a0b \u6301\u7eed\u8fde\u8f7d\u66f4\u65b0\u4e2d\u963f\u91cc\u5df4\u5df4\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u540c\u6b65\u7cfb\u7edf \u89e3\u51b3\u4e2d\u7f8e\u5f02\u5730\u673a\u623f  \u57fa\u4e8e\u8c37\u6b4c\u6700\u65b0AAC\u67b6\u6784 MVVM\u8bbe\u8ba1\u6a21\u5f0f\u7684\u4e00\u5957\u5feb\u901f\u5f00\u53d1\u5e93 \u6574\u5408OkRxJava Retrofit Glide\u7b49\u4e3b\u6d41\u6a21\u5757 \u6ee1\u8db3\u65e5\u5e38\u5f00\u53d1\u9700\u6c42 \u4f7f\u7528\u8be5\u6846\u67b6\u53ef\u4ee5\u5feb\u901f\u5f00\u53d1\u4e00\u4e2a\u9ad8\u8d28\u91cf \u6613\u7ef4\u62a4\u7684Android\u5e94\u7528 \u57fa\u4e8eSpringCloud2 1\u7684\u5fae\u670d\u52a1\u5f00\u53d1\u811a\u624b\u67b6 \u6574\u5408\u4e86\u7b49 \u670d\u52a1\u6cbb\u7406\u65b9\u9762\u5f15\u5165\u7b49 \u8ba9\u9879\u76ee\u5f00\u53d1\u5feb\u901f\u8fdb\u5165\u4e1a\u52a1\u5f00\u53d1 \u800c\u4e0d\u9700\u8fc7\u591a\u65f6\u95f4\u82b1\u8d39\u5728\u67b6\u6784\u642d\u5efa\u4e0a \u6301\u7eed\u66f4\u65b0\u4e2d\u57fa\u4e8eSOA\u67b6\u6784\u7684\u5206\u5e03\u5f0f\u7535\u5546\u8d2d\u7269\u5546\u57ce \u524d\u540e\u7aef\u5206\u79bb \u524d\u53f0\u5546\u57ce \u5168\u5bb6\u6876 \u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u7b49\u662f \u96be\u5f97\u4e00\u89c1 \u7684 Jetpack MVVM \u6700\u4f73\u5b9e\u8df5 \u5728 \u4ee5\u7b80\u9a6d\u7e41 \u7684\u4ee3\u7801\u4e2d \u5bf9 \u89c6\u56fe\u63a7\u5236\u5668 \u4e43\u81f3 \u6807\u51c6\u5316\u5f00\u53d1\u6a21\u5f0f \u5f62\u6210\u6b63\u786e \u6df1\u5165\u7684\u7406\u89e3 V\u90e8\u843d Vue SpringBoot\u5b9e\u73b0\u7684\u591a\u7528\u6237\u535a\u5ba2\u7ba1\u7406\u5e73\u53f0 Android Signature V2 Scheme\u7b7e\u540d\u4e0b\u7684\u65b0\u4e00\u4ee3\u6e20\u9053\u5305\u6253\u5305\u795e\u5668\u5373\u65f6\u901a\u8baf IM \u7cfb\u7edf\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u5b9e\u73b0 LeetCode \u5251\u6307 Offer \u7b2c 2 \u7248 \u7a0b\u5e8f\u5458\u9762\u8bd5\u91d1\u5178 \u7b2c 6 \u7248 \u9898\u89e3\u4e13\u95e8\u4e3a\u521a\u5f00\u59cb\u5237\u9898\u7684\u540c\u5b66\u51c6\u5907\u7684\u7b97\u6cd5\u57fa\u5730 \u6ca1\u6709\u6700\u7ec6\u53ea\u6709\u66f4\u7ec6 \u7acb\u5fd7\u7528\u52a8\u753b\u5c06\u6666\u6da9\u96be\u61c2\u7684\u7b97\u6cd5\u8bf4\u7684\u901a\u4fd7\u6613\u61c2 ansj\u5206\u8bcd ict\u7684\u771f\u6b63java\u5b9e\u73b0 \u5206\u8bcd\u6548\u679c\u901f\u5ea6\u90fd\u8d85\u8fc7\u5f00\u6e90\u7248\u7684ict \u4e2d\u6587\u5206\u8bcd \u4eba\u540d\u8bc6\u522b \u8bcd\u6027\u6807\u6ce8 \u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178 book \u4efb\u9605 \u7f51\u7edc\u5c0f\u8bf4\u9605\u8bfb\u5668 3D\u7ffb\u9875\u6548\u679c txt pdf epub\u4e66\u7c4d\u9605\u8bfb Wifi\u4f20\u4e66 LeetCode\u5237\u9898\u8bb0\u5f55\u4e0e\u9762\u8bd5\u6574\u7406mybatis generator\u754c\u9762\u5de5\u5177 \u8ba9\u4f60\u751f\u6210\u4ee3\u7801\u66f4\u7b80\u5355\u66f4\u5feb\u6377Spring Cloud \u5b66\u4e60\u6848\u4f8b \u670d\u52a1\u53d1\u73b0 \u670d\u52a1\u6cbb\u7406 \u94fe\u8def\u8ffd\u8e2a \u670d\u52a1\u76d1\u63a7\u7b49 XPopup2 \u7248\u672c\u91cd\u78c5\u6765\u88ad 2\u500d\u4ee5\u4e0a\u6027\u80fd\u63d0\u5347 \u5e26\u6765\u53ef\u89c2\u7684\u52a8\u753b\u6027\u80fd\u4f18\u5316\u548c\u4ea4\u4e92\u7ec6\u8282\u7684\u63d0\u5347 \u529f\u80fd\u5f3a\u5927 \u4ea4\u4e92\u4f18\u96c5 \u52a8\u753b\u4e1d\u6ed1\u7684\u901a\u7528\u5f39\u7a97 \u53ef\u4ee5\u66ff\u4ee3\u7b49\u7ec4\u4ef6 \u81ea\u5e26\u5341\u51e0\u79cd\u6548\u679c\u826f\u597d\u7684\u52a8\u753b \u652f\u6301\u5b8c\u5168\u7684UI\u548c\u52a8\u753b\u81ea\u5b9a\u4e49\u641c\u72d0\u89c6\u9891 sohu tv Redis\u79c1\u6709\u4e91\u5e73\u53f0spring boot\u6253\u9020\u6587\u4ef6\u6587\u6863\u5728\u7ebf\u9884\u89c8\u9879\u76ee\u6743\u9650\u7ba1\u7406\u7cfb\u7edf \u9884\u89c8\u5730\u5740 47 1 4 7 138 login\u96f6\u53cd\u5c04\u5168\u52a8\u6001Android\u63d2\u4ef6\u6846\u67b6\u5206\u5e03\u5f0f\u914d\u7f6e\u7ba1\u7406\u5e73\u53f0 \u901a\u7528 IM \u804a\u5929 UI \u7ec4\u4ef6 \u5df2\u7ecf\u540c\u65f6\u652f\u6301 Android iOS RN \u624b\u628a\u624b\u6559\u4f60\u6574\u5408\u6700\u4f18\u96c5SSM\u6846\u67b6 SpringMVC Spring MyBatis\u6362\u80a4\u6846\u67b6 \u6781\u4f4e\u7684\u5b66\u4e60\u6210\u672c \u6781\u597d\u7684\u7528\u6237\u4f53\u9a8c \u4e00\u884c \u4ee3\u7801\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6362\u80a4 \u4f60\u503c\u5f97\u62e5\u6709  JVM \u5e95\u5c42\u539f\u7406\u6700\u5168\u77e5\u8bc6\u603b\u7ed3 \u56fd\u5185\u9996\u4e2aSpring Cloud\u5fae\u670d\u52a1\u5316RBAC\u7684\u7ba1\u7406\u5e73\u53f0 \u6838\u5fc3\u91c7\u7528\u524d\u7aef\u91c7\u7528d2 admin\u4e2d\u53f0\u6846\u67b6 \u8bb0\u5f97\u4e0a\u8fb9\u70b9\u4e2astar \u5173\u6ce8\u66f4\u65b0tcc transaction\u662fTCC\u578b\u4e8b\u52a1java\u5b9e\u73b0 RecyclerView\u4fa7\u6ed1\u83dc\u5355 Item\u62d6\u62fd \u6ed1\u52a8\u5220\u9664Item \u81ea\u52a8\u52a0\u8f7d\u66f4\u591a HeaderView FooterView Item\u5206\u7ec4\u9ecf\u8d34 \u5305\u542b\u7f8e\u989c\u7b494 \u4f59\u79cd\u5b9e\u65f6\u6ee4\u955c\u76f8\u673a \u53ef\u62cd\u7167 \u5f55\u50cf \u56fe\u7247\u4fee\u6539springboot \u6846\u67b6\u4e0e\u5176\u5b83\u7ec4\u4ef6\u7ed3\u5408\u5982\u7b49\u5b89\u5353\u9009\u62e9\u5668\u7c7b\u5e93 \u5305\u62ec\u65e5\u671f\u53ca\u65f6\u95f4\u9009\u62e9\u5668 \u53ef\u7528\u4e8e\u51fa\u751f\u65e5\u671f \u8425\u4e1a\u65f6\u95f4\u7b49 \u5355\u9879\u9009\u62e9\u5668 \u53ef\u7528\u4e8e\u6027\u522b \u6c11\u65cf \u804c\u4e1a \u5b66\u5386 \u661f\u5ea7\u7b49 \u4e8c\u4e09\u7ea7\u8054\u52a8\u9009\u62e9\u5668 \u53ef\u7528\u4e8e\u8f66\u724c\u53f7 \u57fa\u91d1\u5b9a\u6295\u65e5\u671f\u7b49 \u57ce\u5e02\u5730\u5740\u9009\u62e9\u5668 \u5206\u7701\u7ea7 \u5730\u5e02\u7ea7\u53ca\u533a\u53bf\u7ea7 \u6570\u5b57\u9009\u62e9\u5668 \u53ef\u7528\u4e8e\u5e74\u9f84 \u8eab\u9ad8 \u4f53\u91cd \u6e29\u5ea6\u7b49 \u65e5\u5386\u9009\u65e5\u671f\u62e9\u5668 \u53ef\u7528\u4e8e\u9152\u5e97\u53ca\u673a\u7968\u9884\u5b9a\u65e5\u671f \u989c\u8272\u9009\u62e9\u5668 \u6587\u4ef6\u53ca\u76ee\u5f55\u9009\u62e9\u5668\u7b49 Java\u5de5\u7a0b\u5e08\u9762\u8bd5\u590d\u4e60\u6307\u5357 \u672c\u4ed3\u5e93\u6db5\u76d6\u5927\u90e8\u5206Java\u7a0b\u5e8f\u5458\u6240\u9700\u8981\u638c\u63e1\u7684\u6838\u5fc3\u77e5\u8bc6 \u6574\u5408\u4e86\u4e92\u8054\u7f51\u4e0a\u7684\u5f88\u591a\u4f18\u8d28Java\u6280\u672f\u6587\u7ae0 \u529b\u6c42\u6253\u9020\u4e3a\u6700\u5b8c\u6574\u6700\u5b9e\u7528\u7684Java\u5f00\u53d1\u8005\u5b66\u4e60\u6307\u5357 \u5982\u679c\u5bf9\u4f60\u6709\u5e2e\u52a9 \u7ed9\u4e2astar\u544a\u8bc9\u6211\u5427 \u8c22\u8c22  Android MVP \u5feb\u901f\u5f00\u53d1\u6846\u67b6 \u505a\u56fd\u5185 \u793a\u4f8b\u6700\u5168\u9762 \u6ce8\u91ca\u6700\u8be6\u7ec6 \u4f7f\u7528\u6700\u7b80\u5355 \u4ee3\u7801\u6700\u4e25\u8c28 \u7684 Android \u5f00\u6e90 UI \u6846\u67b6\u51e0\u884c\u4ee3\u7801\u5feb\u901f\u96c6\u6210\u4e8c\u7ef4\u7801\u626b\u63cf\u529f\u80fdMeterSphere \u662f\u4e00\u7ad9\u5f0f\u5f00\u6e90\u6301\u7eed\u6d4b\u8bd5\u5e73\u53f0 \u6db5\u76d6\u6d4b\u8bd5\u8ddf\u8e2a \u63a5\u53e3\u6d4b\u8bd5 \u6027\u80fd\u6d4b\u8bd5 \u56e2\u961f\u534f\u4f5c\u7b49\u529f\u80fd \u5168\u9762\u517c\u5bb9 JMeter Postman Swagger \u7b49\u5f00\u6e90 \u4e3b\u6d41\u6807\u51c6 \u8bb0\u5f55\u5404\u79cd\u5b66\u4e60\u7b14\u8bb0 \u7b97\u6cd5 Java \u6570\u636e\u5e93 \u5e76\u53d1 \u4e0b\u4e00\u4ee3Android\u6253\u5305\u5de5\u5177 1 \u4e2a\u6e20\u9053\u5305\u53ea\u9700\u89811 \u79d2\u949f\u828b\u9053 mall \u5546\u57ce \u57fa\u4e8e\u5fae\u670d\u52a1\u7684\u601d\u60f3 \u6784\u5efa\u5728 B2C \u7535\u5546\u573a\u666f\u4e0b\u7684\u9879\u76ee\u5b9e\u6218 \u6838\u5fc3\u6280\u672f\u6808 \u662f Spring Boot Dubbo \u672a\u6765 \u4f1a\u91cd\u6784\u6210 Spring Cloud Alibaba Android \u4e07\u80fd\u7684\u7b49 \u652f\u6301\u591a\u79cdItem\u7c7b\u578b\u7684\u60c5\u51b5 lanproxy\u662f\u4e00\u4e2a\u5c06\u5c40\u57df\u7f51\u4e2a\u4eba\u7535\u8111 \u670d\u52a1\u5668\u4ee3\u7406\u5230\u516c\u7f51\u7684\u5185\u7f51\u7a7f\u900f\u5de5\u5177 \u652f\u6301tcp\u6d41\u91cf\u8f6c\u53d1 \u53ef\u652f\u6301\u4efb\u4f55tcp\u4e0a\u5c42\u534f\u8bae \u8bbf\u95ee\u5185\u7f51\u7f51\u7ad9 \u672c\u5730\u652f\u4ed8\u63a5\u53e3\u8c03\u8bd5 ssh\u8bbf\u95ee \u8fdc\u7a0b\u684c\u9762 \u76ee\u524d\u5e02\u9762\u4e0a\u63d0\u4f9b\u7c7b\u4f3c\u670d\u52a1\u7684\u6709\u82b1\u751f\u58f3 TeamView GoToMyCloud\u7b49\u7b49 \u4f46\u8981\u4f7f\u7528\u7b2c\u4e09\u65b9\u7684\u516c\u7f51\u670d\u52a1\u5668\u5c31\u5fc5\u987b\u4e3a\u7b2c\u4e09\u65b9\u4ed8\u8d39 \u5e76\u4e14\u8fd9\u4e9b\u670d\u52a1\u90fd\u6709\u5404\u79cd\u5404\u6837\u7684\u9650\u5236 \u6b64\u5916 \u7531\u4e8e\u6570\u636e\u5305\u4f1a\u6d41\u7ecf\u7b2c\u4e09\u65b9 \u56e0\u6b64\u5bf9\u6570\u636e\u5b89\u5168\u4e5f\u662f\u4e00\u5927\u9690\u60a3 \u6280\u672f\u4ea4\u6d41QQ\u7fa4 1 6742433 \u66f4\u4f18\u96c5\u7684\u9a7e\u8f66\u4f53\u9a8c\u4e0b\u8f7d\u53ef\u4ee5\u5f88\u7b80\u5355 \ufe0f \u4e91\u9605 \u4e00\u6b3e\u57fa\u4e8e\u7f51\u6613\u4e91\u97f3\u4e50UI \u4f7f\u7528\u73a9\u67b6\u6784\u5f00\u53d1\u7684\u7b26\u5408Google Material Design\u7684Android\u5ba2\u6237\u7aef\u5f00\u6e90\u7684 Material Design \u8c46\u74e3\u5ba2\u6237\u7aef\u4e00\u6b3e\u9488\u5bf9\u7cfb\u7edfPopupWindow\u4f18\u5316\u7684Popup\u5e93 \u529f\u80fd\u5f3a\u5927 \u652f\u6301\u80cc\u666f\u6a21\u7cca \u4f7f\u7528\u7b80\u5355 \u4f60\u4f1a\u7231\u4e0a\u4ed6\u7684 PLDroidPlayer \u662f\u4e03\u725b\u63a8\u51fa\u7684\u4e00\u6b3e\u514d\u8d39\u7684\u9002\u7528\u4e8e Android \u5e73\u53f0\u7684\u64ad\u653e\u5668 SDK \u91c7\u7528\u5168\u81ea\u7814\u7684\u8de8\u5e73\u53f0\u64ad\u653e\u5185\u6838 \u62e5\u6709\u4e30\u5bcc\u7684\u529f\u80fd\u548c\u4f18\u5f02\u7684\u6027\u80fd \u53ef\u9ad8\u5ea6\u5b9a\u5236\u5316\u548c\u4e8c\u6b21\u5f00\u53d1 \u8be5\u9879\u76ee\u5df2\u505c\u6b62\u7ef4\u62a4 9 Porn Android \u5ba2\u6237\u7aef \u7a81\u7834\u6e38\u5ba2\u6bcf\u5929\u89c2\u770b1 \u6b21\u89c6\u9891\u7684\u9650\u5236 \u8fd8\u53ef\u4ee5\u4e0b\u8f7d\u89c6\u9891 \ufe0f\u84dd\u7eff \u7070\u5ea6 \u8def\u7531 \u9650\u6d41 \u7194\u65ad \u964d\u7ea7 \u9694\u79bb \u8ffd\u8e2a \u6d41\u91cf\u67d3\u8272 \u6545\u969c\u8f6c\u79fb\u4e00\u672c\u5173\u4e8e\u6392\u5e8f\u7b97\u6cd5\u7684 GitBook \u5728\u7ebf\u4e66\u7c4d \u5341\u5927\u7ecf\u5178\u6392\u5e8f\u7b97\u6cd5 \u591a\u8bed\u8a00\u5b9e\u73b0 \u591a\u79cd\u4e0b\u62c9\u5237\u65b0\u6548\u679c \u4e0a\u62c9\u52a0\u8f7d\u66f4\u591a \u53ef\u914d\u7f6e\u81ea\u5b9a\u4e49\u5934\u90e8\u5e7f\u544a\u4f4d\u5b8c\u5168\u4eff\u5fae\u4fe1\u7684\u56fe\u7247\u9009\u62e9 \u5e76\u4e14\u63d0\u4f9b\u4e86\u591a\u79cd\u56fe\u7247\u52a0\u8f7d\u63a5\u53e3 \u9009\u62e9\u56fe\u7247\u540e\u53ef\u4ee5\u65cb\u8f6c \u53ef\u4ee5\u88c1\u526a\u6210\u77e9\u5f62\u6216\u5706\u5f62 \u53ef\u4ee5\u914d\u7f6e\u5404\u79cd\u5176\u4ed6\u7684\u53c2\u6570SoloPi \u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\u9f99\u679c\u652f\u4ed8\u7cfb\u7edf roncoo pay \u662f\u56fd\u5185\u9996\u6b3e\u5f00\u6e90\u7684\u4e92\u8054\u7f51\u652f\u4ed8\u7cfb\u7edf \u62e5\u6709\u72ec\u7acb\u7684\u8d26\u6237\u4f53\u7cfb \u7528\u6237\u4f53\u7cfb \u652f\u4ed8\u63a5\u5165\u4f53\u7cfb \u652f\u4ed8\u4ea4\u6613\u4f53\u7cfb \u5bf9\u8d26\u6e05\u7ed3\u7b97\u4f53\u7cfb \u76ee\u6807\u662f\u6253\u9020\u4e00\u6b3e\u96c6\u6210\u4e3b\u6d41\u652f\u4ed8\u65b9\u5f0f\u4e14\u8f7b\u91cf\u6613\u7528\u7684\u652f\u4ed8\u6536\u6b3e\u7cfb\u7edf \u6ee1\u8db3\u4e92\u8054\u7f51\u4e1a\u52a1\u7cfb\u7edf\u6253\u901a\u652f\u4ed8\u901a\u9053\u5b9e\u73b0\u652f\u4ed8\u6536\u6b3e\u548c\u4e1a\u52a1\u8d44\u91d1\u7ba1\u7406\u7b49\u529f\u80fd \u952e\u76d8\u9762\u677f\u51b2\u7a81 \u5e03\u5c40\u95ea\u52a8\u5904\u7406\u65b9\u6848  \u5495\u6ce1\u5b66\u9662\u5b9e\u6218\u9879\u76ee \u57fa\u4e8eSpringBoot Dubbo\u6784\u5efa\u7684\u7535\u5546\u5e73\u53f0 \u5fae\u670d\u52a1\u67b6\u6784 \u5546\u57ce \u7535\u5546 \u5fae\u670d\u52a1 \u9ad8\u5e76\u53d1 kafka Elasticsearch\u505c\u8f66\u573a\u7cfb\u7edf\u6e90\u7801 \u505c\u8f66\u573a\u5c0f\u7a0b\u5e8f \u667a\u80fd\u505c\u8f66 Parking system \u529f\u80fd\u4ecb\u7ecd \u2460\u517c\u5bb9\u5e02\u9762\u4e0a\u4e3b\u6d41\u7684\u591a\u5bb6\u76f8\u673a \u7406\u8bba\u4e0a\u517c\u5bb9\u6240\u6709\u786c\u4ef6 \u53ef\u7075\u6d3b\u6269\u5c55 \u2461\u76f8\u673a\u8bc6\u522b\u540e\u6570\u636e\u81ea\u52a8\u4e0a\u4f20\u5230\u4e91\u7aef\u5e76\u8bb0\u5f55 \u6821\u9a8c\u76f8\u673a\u552f\u4e00id\u548c\u786c\u4ef6\u5e8f\u5217\u53f7 \u9632\u6b62\u975e\u6cd5\u6570\u636e\u5f55\u5165 \u2462\u7528\u6237\u624b\u673a\u67e5\u8be2\u505c\u8f66\u8bb0\u5f55\u8be6\u60c5\u53ef\u81ea\u4e3b\u7f34\u8d39 \u652f\u6301\u5fae\u4fe1 \u652f\u4ed8\u5b9d \u94f6\u884c\u63a5\u53e3\u652f\u4ed8 \u652f\u6301\u6bcf\u4e2a\u505c\u8f66\u573a\u6307\u5b9a\u4e0d\u540c\u7684\u5546\u6237\u8fdb\u884c\u6536\u6b3e \u652f\u4ed8\u540e\u51fa\u573a\u5728\u514d\u8d39\u65f6\u95f4\u5185\u4f1a\u81ea\u52a8\u62ac\u6746 \u2463\u652f\u6301app\u4e0a\u67e5\u8be2\u9644\u8fd1\u505c\u8f66\u573a \u5bfc\u822a \u53ef\u7528\u8f66\u4f4d\u6570 \u505c\u8f66\u573a\u8d39\u7528 \u4f18\u60e0\u5238 \u8bc4\u5206 \u8bc4\u8bba\u7b49 \u53ef\u9884\u7ea6\u8f66\u4f4d \u2464\u65ad\u7535\u65ad\u7f51\u652f\u6301\u5c97\u4ead\u4eba\u5458\u4f7f\u7528app\u53ef\u63a5\u7ba1\u786c\u4ef6\u8fdb\u884c\u505c\u8f66\u8bb0\u5f55\u7684\u5f55\u5165 \u6280\u672f\u67b6\u6784 \u540e\u7aef\u5f00\u53d1\u8bed\u8a00java \u6846\u67b6oauth2 spring \u6210\u957f\u8def\u7ebf \u4f46\u5b66\u5230\u4e0d\u4ec5\u4ec5\u662fJava \u4e1a\u754c\u9996\u4e2a\u652f\u6301\u6e10\u8fdb\u5f0f\u7ec4\u4ef6\u5316\u6539\u9020\u7684Android\u7ec4\u4ef6\u5316\u5f00\u6e90\u6846\u67b6 \u652f\u6301\u8de8\u8fdb\u7a0b\u8c03\u7528SpringBoot2 \u4ece\u5165\u95e8\u5230\u5b9e\u6218 \u65e8\u5728\u6253\u9020\u5728\u7ebf\u6700\u4f73\u7684 Java \u5b66\u4e60\u7b14\u8bb0 \u542b\u535a\u5ba2\u8bb2\u89e3\u548c\u6e90\u7801\u5b9e\u4f8b \u5305\u62ec Java SE \u548c Java WebJava\u8bca\u65ad\u5de5\u5177\u5e74\u85aa\u767e\u4e07\u4e92\u8054\u7f51\u67b6\u6784\u5e08\u8bfe\u7a0b\u6587\u6863\u53ca\u6e90\u7801 \u516c\u5f00\u90e8\u5206 AndroidHttpCapture\u7f51\u7edc\u8bca\u65ad\u5de5\u5177 \u662f\u4e00\u6b3eAndroid\u624b\u673a\u6293\u5305\u8f6f\u4ef6 \u4e3b\u8981\u529f\u80fd\u5305\u62ec \u624b\u673a\u7aef\u6293\u5305 PING DNS TraceRoute\u8bca\u65ad \u6293\u5305HAR\u6570\u636e\u4e0a\u4f20\u5206\u4eab \u4f60\u4e5f\u53ef\u4ee5\u770b\u6210\u662fAndroid\u7248\u7684 Fiddler o \u8fd9\u53ef\u80fd\u662f\u53f2\u4e0a\u529f\u80fd\u6700\u5168\u7684Java\u6743\u9650\u8ba4\u8bc1\u6846\u67b6 \u76ee\u524d\u5df2\u96c6\u6210 \u767b\u5f55\u8ba4\u8bc1 \u6743\u9650\u8ba4\u8bc1 \u5206\u5e03\u5f0fSession\u4f1a\u8bdd \u5fae\u670d\u52a1\u7f51\u5173\u9274\u6743 \u5355\u70b9\u767b\u5f55 OAuth2 \u8e22\u4eba\u4e0b\u7ebf Redis\u96c6\u6210 \u524d\u540e\u53f0\u5206\u79bb \u8bb0\u4f4f\u6211\u6a21\u5f0f \u6a21\u62df\u4ed6\u4eba\u8d26\u53f7 \u4e34\u65f6\u8eab\u4efd\u5207\u6362 \u8d26\u53f7\u5c01\u7981 \u591a\u8d26\u53f7\u8ba4\u8bc1\u4f53\u7cfb \u6ce8\u89e3\u5f0f\u9274\u6743 \u8def\u7531\u62e6\u622a\u5f0f\u9274\u6743 \u82b1\u5f0ftoken\u751f\u6210 \u81ea\u52a8\u7eed\u7b7e \u540c\u7aef\u4e92\u65a5\u767b\u5f55 \u4f1a\u8bdd\u6cbb\u7406 \u5bc6\u7801\u52a0\u5bc6 jwt\u96c6\u6210 Spring\u96c6\u6210 WebFlux\u96c6\u6210 Android\u5e73\u53f0\u4e0b\u7684\u5bcc\u6587\u672c\u89e3\u6790\u5668 \u652f\u6301Html\u548cMarkdown\u667a\u80fd\u56fe\u7247\u88c1\u526a\u6846\u67b6 \u81ea\u52a8\u8bc6\u522b\u8fb9\u6846 \u624b\u52a8\u8c03\u8282\u9009\u533a \u4f7f\u7528\u900f\u89c6\u53d8\u6362\u88c1\u526a\u5e76\u77eb\u6b63\u9009\u533a \u9002\u7528\u4e8e\u8eab\u4efd\u8bc1 \u540d\u7247 \u6587\u6863\u7b49\u7167\u7247\u7684\u88c1\u526a \u4fd7\u540d \u53ef\u5782\u76f4\u8dd1 \u53ef\u6c34\u5e73\u8dd1\u7684\u8dd1\u9a6c\u706f \u5b66\u540d \u53ef\u5782\u76f4\u7ffb \u53ef\u6c34\u5e73\u7ffb\u7684\u7ffb\u9875\u516c\u544a \u5c0f\u9a6c\u54e5\u6280\u672f\u5468\u62a5 Android Video Player \u5b89\u5353\u89c6\u9891\u64ad\u653e\u5668 \u5c01\u88c5\u6a21\u4eff\u6296\u97f3\u5e76\u5b9e\u73b0\u9884\u52a0\u8f7d \u5217\u8868\u64ad\u653e \u60ac\u6d6e\u64ad\u653e \u5e7f\u544a\u64ad\u653e \u5f39\u5e55 \u91cd\u5b66Java\u8bbe\u8ba1\u6a21\u5f0f \u662f\u4e00\u672c\u4e92\u8054\u7f51\u771f\u5b9e\u6848\u4f8b\u5b9e\u8df5\u4e66\u7c4d \u4ee5\u843d\u5730\u89e3\u51b3\u65b9\u6848\u4e3a\u6838\u5fc3 \u4ece\u5b9e\u9645\u4e1a\u52a1\u4e2d\u62bd\u79bb\u51fa \u4ea4\u6613 \u8425\u9500 \u79d2\u6740 \u4e2d\u95f4\u4ef6 \u6e90\u7801\u7b4922\u4e2a\u771f\u5b9e\u573a\u666f \u6765\u5b66\u4e60\u8bbe\u8ba1\u6a21\u5f0f\u7684\u8fd0\u7528 \u6b22\u8fce\u5173\u6ce8\u5c0f\u5085\u54e5 \u5fae\u4fe1 fustack \u516c\u4f17\u53f7 bugstack\u866b\u6d1e\u6808 \u535a\u5ba2 bugstack cnmybatis\u6e90\u7801\u4e2d\u6587\u6ce8\u91ca\u4e00\u6b3e\u5f00\u6e90\u7684GIF\u5728\u7ebf\u5206\u4eabApp \u4e50\u8da3\u5c31\u8981\u548c\u4e16\u754c\u5206\u4eab MPush\u5f00\u6e90\u5b9e\u65f6\u6d88\u606f\u63a8\u9001\u7cfb\u7edf\u5728\u7ebf\u4e91\u76d8 \u7f51\u76d8 OneDrive \u4e91\u5b58\u50a8 \u79c1\u6709\u4e91 \u5bf9\u8c61\u5b58\u50a8 h5ai\u57fa\u4e8eSpring Boot 2 x\u7684\u4e00\u7ad9\u5f0f\u524d\u540e\u7aef\u5206\u79bb\u5feb\u901f\u5f00\u53d1\u5e73\u53f0XBoot \u5fae\u4fe1\u5c0f\u7a0b\u5e8f Uniapp \u524d\u7aef Vue iView Admin \u540e\u7aef\u5206\u5e03\u5f0f\u9650\u6d41 \u540c\u6b65\u9501 \u9a8c\u8bc1\u7801 SnowFlake\u96ea\u82b1\u7b97\u6cd5ID \u52a8\u6001\u6743\u9650 \u6570\u636e\u6743\u9650 \u5de5\u4f5c\u6d41 \u4ee3\u7801\u751f\u6210 \u5b9a\u65f6\u4efb\u52a1 \u793e\u4ea4\u8d26\u53f7 \u77ed\u4fe1\u767b\u5f55 \u5355\u70b9\u767b\u5f55 OAuth2\u5f00\u653e\u5e73\u53f0 \u5ba2\u670d\u673a\u5668\u4eba \u6570\u636e\u5927\u5c4f \u6697\u9ed1\u6a21\u5f0fGuns\u57fa\u4e8eSpringBoot 2 \u81f4\u529b\u4e8e\u505a\u66f4\u7b80\u6d01\u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf \u5b8c\u7f8e\u6574\u5408\u9879\u76ee\u4ee3\u7801\u7b80\u6d01 \u6ce8\u91ca\u4e30\u5bcc \u4e0a\u624b\u5bb9\u6613 \u540c\u65f6Guns\u5305\u542b\u8bb8\u591a\u57fa\u7840\u6a21\u5757 \u7528\u6237\u7ba1\u7406 \u89d2\u8272\u7ba1\u7406 \u90e8\u95e8\u7ba1\u7406 \u5b57\u5178\u7ba1\u7406\u7b491 \u4e2a\u6a21\u5757 \u53ef\u4ee5\u76f4\u63a5\u4f5c\u4e3a\u4e00\u4e2a\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u7684\u811a\u624b\u67b6  Android \u7248\u672c\u66f4\u65b0\u4e00\u4e2a\u7b80\u6d01\u800c\u4f18\u96c5\u7684Android\u539f\u751fUI\u6846\u67b6 \u89e3\u653e\u4f60\u7684\u53cc\u624b \u4e00\u5957\u5b8c\u6574\u6709\u6548\u7684android\u7ec4\u4ef6\u5316\u65b9\u6848 \u652f\u6301\u7ec4\u4ef6\u7684\u7ec4\u4ef6\u5b8c\u5168\u9694\u79bb \u5355\u72ec\u8c03\u8bd5 \u96c6\u6210\u8c03\u8bd5 \u7ec4\u4ef6\u4ea4\u4e92 UI\u8df3\u8f6c \u52a8\u6001\u52a0\u8f7d\u5378\u8f7d\u7b49\u529f\u80fd\u9002\u7528\u4e8eJava\u548cAndroid\u7684\u5feb\u901f \u4f4e\u5185\u5b58\u5360\u7528\u7684\u6c49\u5b57\u8f6c\u62fc\u97f3\u5e93 Codes of my MOOC Course <\u6211\u5728\u6155\u8bfe\u7f51\u4e0a\u7684\u8bfe\u7a0b \u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784 \u793a\u4f8b\u4ee3\u7801 \u5305\u62ecC \u548cJava\u7248\u672c \u8bfe\u7a0b\u7684\u66f4\u591a\u66f4\u65b0\u5185\u5bb9\u53ca\u8f85\u52a9\u7ec3\u4e60\u4e5f\u5c06\u9010\u6b65\u6dfb\u52a0\u8fdb\u8fd9\u4e2a\u4ee3\u7801\u4ed3  Hope Boot \u4e00\u6b3e\u73b0\u4ee3\u5316\u7684\u811a\u624b\u67b6\u9879\u76ee\u4e00\u4e2a\u7b80\u5355\u6f02\u4eae\u7684SSM Spring SpringMVC Mybatis \u535a\u5ba2\u7cfb\u7edf\u6839\u636eGson\u5e93\u4f7f\u7528\u7684\u8981\u6c42 \u5c06JSONObject\u683c\u5f0f\u7684String \u89e3\u6790\u6210\u5b9e\u4f53B\u7ad9 \u54d4\u54e9\u54d4\u54e9 Bilibili \u81ea\u52a8\u7b7e\u5230\u6295\u5e01\u5de5\u5177 \u6bcf\u5929\u8f7b\u677e\u83b7\u53d665\u7ecf\u9a8c\u503c \u652f\u6301\u6bcf\u65e5\u81ea\u52a8\u6295\u5e01 \u94f6\u74dc\u5b50\u5151\u6362\u786c\u5e01 \u9886\u53d6\u5927\u4f1a\u5458\u798f\u5229 \u5927\u4f1a\u5458\u6708\u5e95\u7ed9\u81ea\u5df1\u5145\u7535\u7b49\u529f\u80fd \u5450 \u8d76\u5feb\u548c\u6211\u4e00\u8d77\u6210\u4e3aLv6\u5427 IJPay \u8ba9\u652f\u4ed8\u89e6\u624b\u53ef\u53ca \u5c01\u88c5\u4e86\u5fae\u4fe1\u652f\u4ed8 QQ\u652f\u4ed8 \u652f\u4ed8\u5b9d\u652f\u4ed8 \u4eac\u4e1c\u652f\u4ed8 \u94f6\u8054\u652f\u4ed8 PayPal \u652f\u4ed8\u7b49\u5e38\u7528\u7684\u652f\u4ed8\u65b9\u5f0f\u4ee5\u53ca\u5404\u79cd\u5e38\u7528\u7684\u63a5\u53e3 \u4e0d\u4f9d\u8d56\u4efb\u4f55\u7b2c\u4e09\u65b9 mvc \u6846\u67b6 \u4ec5\u4ec5\u4f5c\u4e3a\u5de5\u5177\u4f7f\u7528\u7b80\u5355\u5feb\u901f\u5b8c\u6210\u652f\u4ed8\u6a21\u5757\u7684\u5f00\u53d1 \u53ef\u8f7b\u677e\u5d4c\u5165\u5230\u4efb\u4f55\u7cfb\u7edf\u91cc \u53f3\u4e0a\u89d2\u70b9\u4e0b\u5c0f\u661f\u661f  High quality pure Weex demo \u7f51\u6613\u4e25\u9009 App \u611f\u53d7 Weex \u5f00\u53d1Android \u5feb\u901f\u5b9e\u73b0\u65b0\u624b\u5f15\u5bfc\u5c42\u7684\u5e93 \u901a\u8fc7\u7b80\u6d01\u94fe\u5f0f\u8c03\u7528 \u4e00\u884c\u4ee3\u7801\u5b9e\u73b0\u5f15\u5bfc\u5c42\u7684\u663e\u793a\u901a\u8fc7\u6807\u7b7e\u76f4\u63a5\u751f\u6210shape \u65e0\u9700\u518d\u5199shape xml \u672c\u5e93\u662f\u4e00\u6b3e\u57fa\u4e8eRxJava2 Retrofit2\u5b9e\u73b0\u7b80\u5355\u6613\u7528\u7684\u7f51\u7edc\u8bf7\u6c42\u6846\u67b6 \u7ed3\u5408android\u5e73\u53f0\u7279\u6027\u7684\u7f51\u7edc\u5c01\u88c5\u5e93 \u91c7\u7528api\u94fe\u5f0f\u8c03\u7528\u4e00\u70b9\u5230\u5e95 \u96c6\u6210cookie\u7ba1\u7406 \u591a\u79cd\u7f13\u5b58\u6a21\u5f0f \u6781\u7b80https\u914d\u7f6e \u4e0a\u4f20\u4e0b\u8f7d\u8fdb\u5ea6\u663e\u793a \u8bf7\u6c42\u9519\u8bef\u81ea\u52a8\u91cd\u8bd5 \u8bf7\u6c42\u643a\u5e26token \u65f6\u95f4\u6233 \u7b7e\u540dsign\u52a8\u6001\u914d\u7f6e \u81ea\u52a8\u767b\u5f55\u6210\u529f\u540e\u8bf7\u6c42\u91cd\u53d1\u529f\u80fd 3\u79cd\u5c42\u6b21\u7684\u53c2\u6570\u8bbe\u7f6e\u9ed8\u8ba4\u5168\u5c40\u5c40\u90e8 \u9ed8\u8ba4\u6807\u51c6ApiResult\u540c\u65f6\u53ef\u4ee5\u652f\u6301\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u7ed3\u6784 \u5df2\u7ecf\u80fd\u6ee1\u8db3\u73b0\u5728\u7684\u5927\u90e8\u5206\u7f51\u7edc\u8bf7\u6c42 Android BLE\u84dd\u7259\u901a\u4fe1\u5e93 \u57fa\u4e8eFlink\u5b9e\u73b0\u7684\u5546\u54c1\u5b9e\u65f6\u63a8\u8350\u7cfb\u7edf flink\u7edf\u8ba1\u5546\u54c1\u70ed\u5ea6 \u653e\u5165redis\u7f13\u5b58 \u5206\u6790\u65e5\u5fd7\u4fe1\u606f \u5c06\u753b\u50cf\u6807\u7b7e\u548c\u5b9e\u65f6\u8bb0\u5f55\u653e\u5165Hbase \u5728\u7528\u6237\u53d1\u8d77\u63a8\u8350\u8bf7\u6c42\u540e \u6839\u636e\u7528\u6237\u753b\u50cf\u91cd\u6392\u5e8f\u70ed\u5ea6\u699c \u5e76\u7ed3\u5408\u534f\u540c\u8fc7\u6ee4\u548c\u6807\u7b7e\u4e24\u4e2a\u63a8\u8350\u6a21\u5757\u4e3a\u65b0\u751f\u6210\u7684\u699c\u5355\u7684\u6bcf\u4e00\u4e2a\u4ea7\u54c1\u6dfb\u52a0\u5173\u8054\u4ea7\u54c1 \u6700\u540e\u8fd4\u56de\u65b0\u7684\u7528\u6237\u5217\u8868 \u64ad\u653e\u5668\u57fa\u7840\u5e93 \u4e13\u6ce8\u4e8e\u64ad\u653e\u89c6\u56fe\u7ec4\u4ef6\u7684\u9ad8\u590d\u7528\u6027\u548c\u7ec4\u4ef6\u95f4\u7684\u4f4e\u8026\u5408 \u8f7b\u677e\u5904\u7406\u590d\u6742\u4e1a\u52a1 \u56fe\u7247\u9009\u62e9\u5e93 \u5355\u9009 \u591a\u9009 \u62cd\u7167 \u88c1\u526a \u538b\u7f29 \u81ea\u5b9a\u4e49 \u5305\u62ec\u89c6\u9891\u9009\u62e9\u548c\u5f55\u5236 DataX\u96c6\u6210\u53ef\u89c6\u5316\u9875\u9762 \u9009\u62e9\u6570\u636e\u6e90\u5373\u53ef\u4e00\u952e\u751f\u6210\u6570\u636e\u540c\u6b65\u4efb\u52a1 \u652f\u6301\u7b49\u6570\u636e\u6e90 \u6279\u91cf\u521b\u5efaRDBMS\u6570\u636e\u540c\u6b65\u4efb\u52a1 \u96c6\u6210\u5f00\u6e90\u8c03\u5ea6\u7cfb\u7edf \u652f\u6301\u5206\u5e03\u5f0f \u589e\u91cf\u540c\u6b65\u6570\u636e \u5b9e\u65f6\u67e5\u770b\u8fd0\u884c\u65e5\u5fd7 \u76d1\u63a7\u6267\u884c\u5668\u8d44\u6e90 KILL\u8fd0\u884c\u8fdb\u7a0b \u6570\u636e\u6e90\u4fe1\u606f\u52a0\u5bc6\u7b49  Deprecated android \u81ea\u5b9a\u4e49\u65e5\u5386\u63a7\u4ef6 \u652f\u6301\u5de6\u53f3\u65e0\u9650\u6ed1\u52a8 \u5468\u6708\u5207\u6362 \u6807\u8bb0\u65e5\u671f\u663e\u793a \u81ea\u5b9a\u4e49\u663e\u793a\u6548\u679c\u8df3\u8f6c\u5230\u6307\u5b9a\u65e5\u671f\u4e00\u4e2a\u901a\u8fc7\u52a8\u6001\u52a0\u8f7d\u672c\u5730\u76ae\u80a4\u5305\u8fdb\u884c\u6362\u80a4\u7684\u76ae\u80a4\u6846\u67b6\u8fd9\u662fRedSpider\u793e\u533a\u6210\u5458\u539f\u521b\u4e0e\u7ef4\u62a4\u7684Java\u591a\u7ebf\u7a0b\u7cfb\u5217\u6587\u7ae0 \u4e00\u7ad9\u5f0fApache Kafka\u96c6\u7fa4\u6307\u6807\u76d1\u63a7\u4e0e\u8fd0\u7ef4\u7ba1\u63a7\u5e73\u53f0\u5feb\u901f\u5f00\u53d1\u5de5\u5177\u7c7b\u6536\u96c6 \u53f2\u4e0a\u6700\u5168\u7684\u5f00\u53d1\u5de5\u5177\u7c7b \u6b22\u8fceFollow Fork Star\u540e\u7aef\u6280\u672f\u603b\u7ed3 \u5305\u62ecJava\u57fa\u7840 JVM \u6570\u636e\u5e93 mysql redis \u8ba1\u7b97\u673a\u7f51\u7edc \u7b97\u6cd5 \u6570\u636e\u7ed3\u6784 \u64cd\u4f5c\u7cfb\u7edf \u8bbe\u8ba1\u6a21\u5f0f \u7cfb\u7edf\u8bbe\u8ba1 \u6846\u67b6\u539f\u7406 \u6700\u4f73\u9605\u8bfb\u5730\u5740Android\u6e90\u7801\u8bbe\u8ba1\u6a21\u5f0f\u5206\u6790\u9879\u76ee\u53ef\u80fd\u662f\u6700\u597d\u7684\u652f\u4ed8SDK \u505c\u6b62\u7ef4\u62a4 \u7ec4\u4ef6\u5316\u7efc\u5408\u6848\u4f8b \u5305\u542b\u5fae\u4fe1\u65b0\u95fb \u5934\u6761\u89c6\u9891 \u7f8e\u5973\u56fe\u7247 \u767e\u5ea6\u97f3\u4e50 \u5e72\u6d3b\u96c6\u4e2d\u8425 \u73a9Android \u8c46\u74e3\u8bfb\u4e66\u7535\u5f71 \u77e5\u4e4e\u65e5\u62a5\u7b49\u7b49\u6a21\u5757 \u67b6\u6784\u6a21\u5f0f \u7ec4\u4ef6\u5316\u963f\u91ccVLayout \u817e\u8bafX5 \u817e\u8bafbugly \u878d\u5408\u5f00\u53d1\u4e2d\u9700\u8981\u7684\u5404\u79cd\u5c0f\u6848\u4f8b \u5f00\u6e90OA\u7cfb\u7edf \u7801\u4e91GVP Java\u5f00\u6e90oa \u4f01\u4e1aOA\u529e\u516c\u5e73\u53f0 \u4f01\u4e1aOA \u534f\u540c\u529e\u516cOA \u6d41\u7a0b\u5e73\u53f0OA O2OA OA \u652f\u6301\u56fd\u4ea7\u9e92\u9e9f\u64cd\u4f5c\u7cfb\u7edf\u548c\u56fd\u4ea7\u6570\u636e\u5e93 \u8fbe\u68a6 \u4eba\u5927\u91d1\u4ed3 \u653f\u52a1OA \u519b\u5de5\u4fe1\u606f\u5316OA\u4ee5Spring Cloud Netflix\u4f5c\u4e3a\u670d\u52a1\u6cbb\u7406\u57fa\u7840 \u5c55\u793a\u57fa\u4e8etcc\u601d\u60f3\u6240\u5b9e\u73b0\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\u4e00\u4e2a\u5e2e\u52a9\u60a8\u5b8c\u6210\u4ece\u7f29\u7565\u89c6\u56fe\u5230\u539f\u89c6\u56fe\u65e0\u7f1d\u8fc7\u6e21\u8f6c\u53d8\u7684\u795e\u5947\u6846\u67b6 \u7cfb\u7edf\u91cd\u6784\u4e0e\u8fc1\u79fb\u6307\u5357 \u624b\u628a\u624b\u6559\u4f60\u5206\u6790 \u8bc4\u4f30\u73b0\u6709\u7cfb\u7edf \u5236\u5b9a\u91cd\u6784\u7b56\u7565 \u63a2\u7d22\u53ef\u884c\u91cd\u6784\u65b9\u6848 \u642d\u5efa\u6d4b\u8bd5\u9632\u62a4\u7f51 \u8fdb\u884c\u7cfb\u7edf\u67b6\u6784\u91cd\u6784 \u670d\u52a1\u67b6\u6784\u91cd\u6784 \u6a21\u5757\u91cd\u6784 \u4ee3\u7801\u91cd\u6784 \u6570\u636e\u5e93\u91cd\u6784 \u91cd\u6784\u540e\u7684\u67b6\u6784\u5b88\u62a4\u7248\u672c\u68c0\u6d4b\u5347\u7ea7 \u66f4\u65b0 \u5e93\u5c0f\u8bf4\u7cbe\u54c1\u5c4b\u662f\u4e00\u4e2a\u591a\u5e73\u53f0 web \u5b89\u5353app \u5fae\u4fe1\u5c0f\u7a0b\u5e8f \u529f\u80fd\u5b8c\u5584\u7684\u5c4f\u5e55\u81ea\u9002\u5e94\u5c0f\u8bf4\u6f2b\u753b\u8fde\u8f7d\u7cfb\u7edf \u5305\u542b\u7cbe\u54c1\u5c0f\u8bf4\u4e13\u533a \u8f7b\u5c0f\u8bf4\u4e13\u533a\u548c\u6f2b\u753b\u4e13\u533a \u5305\u62ec\u5c0f\u8bf4 \u6f2b\u753b\u5206\u7c7b \u5c0f\u8bf4 \u6f2b\u753b\u641c\u7d22 \u5c0f\u8bf4 \u6f2b\u753b\u6392\u884c \u5b8c\u672c\u5c0f\u8bf4 \u6f2b\u753b \u5c0f\u8bf4 \u6f2b\u753b\u8bc4\u5206 \u5c0f\u8bf4 \u6f2b\u753b\u5728\u7ebf\u9605\u8bfb \u5c0f\u8bf4 \u6f2b\u753b\u4e66\u67b6 \u5c0f\u8bf4 \u6f2b\u753b\u9605\u8bfb\u8bb0\u5f55 \u5c0f\u8bf4\u4e0b\u8f7d \u5c0f\u8bf4\u5f39\u5e55 \u5c0f\u8bf4 \u6f2b\u753b\u81ea\u52a8\u91c7\u96c6 \u66f4\u65b0 \u7ea0\u9519 \u5c0f\u8bf4\u5185\u5bb9\u81ea\u52a8\u5206\u4eab\u5230\u5fae\u535a \u90ae\u4ef6\u81ea\u52a8\u63a8\u5e7f \u94fe\u63a5\u81ea\u52a8\u63a8\u9001\u5230\u767e\u5ea6\u641c\u7d22\u5f15\u64ce\u7b49\u529f\u80fd Android \u5fbd\u7ae0\u63a7\u4ef6 \u81f4\u529b\u4e8e\u6253\u9020\u4e00\u6b3e\u6781\u81f4\u4f53\u9a8c\u7684 www wanandroid com \u5ba2\u6237\u7aef \u77e5\u8bc6\u548c\u7f8e\u662f\u53ef\u4ee5\u5e76\u5b58\u7684\u54e6QAQn \u2267 \u2266 n \u4ece\u6e90\u7801\u5c42\u9762 \u5256\u6790\u6316\u6398\u4e92\u8054\u7f51\u884c\u4e1a\u4e3b\u6d41\u6280\u672f\u7684\u5e95\u5c42\u5b9e\u73b0\u539f\u7406 \u4e3a\u5e7f\u5927\u5f00\u53d1\u8005 \u201c\u63d0\u5347\u6280\u672f\u6df1\u5ea6\u201d \u63d0\u4f9b\u4fbf\u5229 \u76ee\u524d\u5f00\u653e Spring \u5168\u5bb6\u6876 Mybatis Netty Dubbo \u6846\u67b6 \u53ca Redis Tomcat \u4e2d\u95f4\u4ef6\u7b49Redis \u4e00\u7ad9\u5f0f\u7ba1\u7406\u5e73\u53f0 \u652f\u6301\u96c6\u7fa4\u7684\u76d1\u63a7 \u5b89\u88c5 \u7ba1\u7406 \u544a\u8b66\u4ee5\u53ca\u57fa\u672c\u7684\u6570\u636e\u64cd\u4f5c\u8be5\u9879\u76ee\u4e0d\u518d\u7ef4\u62a4 \u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\u4e13\u6ce8\u6279\u91cf\u63a8\u9001\u7684\u5c0f\u800c\u7f8e\u7684\u5de5\u5177 \u76ee\u524d\u652f\u6301 \u6a21\u677f\u6d88\u606f \u516c\u4f17\u53f7 \u6a21\u677f\u6d88\u606f \u5c0f\u7a0b\u5e8f \u5fae\u4fe1\u5ba2\u670d\u6d88\u606f \u5fae\u4fe1\u4f01\u4e1a\u53f7 \u4f01\u4e1a\u5fae\u4fe1\u6d88\u606f \u963f\u91cc\u4e91\u77ed\u4fe1 \u963f\u91cc\u5927\u4e8e\u6a21\u677f\u77ed\u4fe1 \u817e\u8baf\u4e91\u77ed\u4fe1 \u4e91\u7247\u7f51\u77ed\u4fe1 E Mail HTTP\u8bf7\u6c42 \u9489\u9489 \u534e\u4e3a\u4e91\u77ed\u4fe1 \u767e\u5ea6\u4e91\u77ed\u4fe1 \u53c8\u62cd\u4e91\u77ed\u4fe1 \u4e03\u725b\u4e91\u77ed\u4fe1Android \u5e73\u53f0\u5f00\u6e90\u5929\u6c14 App \u91c7\u7528\u7b49\u5f00\u6e90\u5e93\u6765\u5b9e\u73b0 SpringBoot \u76f8\u5173\u6f0f\u6d1e\u5b66\u4e60\u8d44\u6599 \u5229\u7528\u65b9\u6cd5\u548c\u6280\u5de7\u5408\u96c6 \u9ed1\u76d2\u5b89\u5168\u8bc4\u4f30 check listAndroid \u6743\u9650\u8bf7\u6c42\u6846\u67b6 \u5df2\u9002\u914d Android 11\u5fae\u4fe1SDK JAVA \u516c\u4f17\u5e73\u53f0 \u5f00\u653e\u5e73\u53f0 \u5546\u6237\u5e73\u53f0 \u670d\u52a1\u5546\u5e73\u53f0  QMQ\u662f\u53bb\u54ea\u513f\u7f51\u5185\u90e8\u5e7f\u6cdb\u4f7f\u7528\u7684\u6d88\u606f\u4e2d\u95f4\u4ef6 \u81ea2 12\u5e74\u8bde\u751f\u4ee5\u6765\u5728\u53bb\u54ea\u513f\u7f51\u6240\u6709\u4e1a\u52a1\u573a\u666f\u4e2d\u5e7f\u6cdb\u7684\u5e94\u7528 \u5305\u62ec\u8ddf\u4ea4\u6613\u606f\u606f\u76f8\u5173\u7684\u8ba2\u5355\u573a\u666f \u4e5f\u5305\u62ec\u62a5\u4ef7\u641c\u7d22\u7b49\u9ad8\u541e\u5410\u91cf\u573a\u666f  Java 23\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u5168\u5f52\u7eb3linux\u8fd0\u7ef4\u76d1\u63a7\u5de5\u5177 \u652f\u6301\u7cfb\u7edf\u4fe1\u606f \u5185\u5b58 cpu \u6e29\u5ea6 \u78c1\u76d8\u7a7a\u95f4\u53caIO \u786c\u76d8smart \u7cfb\u7edf\u8d1f\u8f7d \u7f51\u7edc\u6d41\u91cf \u8fdb\u7a0b\u7b49\u76d1\u63a7 API\u63a5\u53e3 \u5927\u5c4f\u5c55\u793a \u62d3\u6251\u56fe \u7aef\u53e3\u76d1\u63a7 docker\u76d1\u63a7 \u65e5\u5fd7\u6587\u4ef6\u76d1\u63a7 \u6570\u636e\u53ef\u89c6\u5316 webSSH\u5de5\u5177 \u5821\u5792\u673a \u8df3\u677f\u673a \u8fd9\u53ef\u80fd\u662f\u5168\u7f51\u6700\u597d\u7528\u7684ViewPager\u8f6e\u64ad\u56fe \u7b80\u5355 \u9ad8\u6548 \u4e00\u884c\u4ee3\u7801\u5b9e\u73b0\u5faa\u73af\u8f6e\u64ad \u4e00\u5c4f\u4e09\u9875\u4efb\u610f\u53d8 \u6307\u793a\u5668\u6837\u5f0f\u4efb\u4f60\u6311 \u4e00\u79cd\u7b80\u5355\u6709\u6548\u7684android\u7ec4\u4ef6\u5316\u65b9\u6848 \u652f\u6301\u7ec4\u4ef6\u7684\u4ee3\u7801\u8d44\u6e90\u9694\u79bb \u5355\u72ec\u8c03\u8bd5 \u96c6\u6210\u8c03\u8bd5 \u7ec4\u4ef6\u4ea4\u4e92 UI\u8df3\u8f6c \u751f\u547d\u5468\u671f\u7b49\u5b8c\u6574\u529f\u80fd \u4e00\u4e2a\u5f3a\u5927 1 % \u517c\u5bb9 \u652f\u6301 AndroidX \u652f\u6301 Kotlin\u5e76\u4e14\u7075\u6d3b\u7684\u7ec4\u4ef6\u5316\u6846\u67b6JPress \u4e00\u4e2a\u4f7f\u7528 Java \u5f00\u53d1\u7684\u5efa\u7ad9\u795e\u5668 \u76ee\u524d\u5df2\u7ecf\u6709 1 w \u7f51\u7ad9\u4f7f\u7528 JPress \u8fdb\u884c\u9a71\u52a8 \u5176\u4e2d\u5305\u62ec\u591a\u4e2a\u653f\u5e9c\u673a\u6784 2 \u4e0a\u5e02\u516c\u53f8 \u4e2d\u79d1\u9662 \u7ea2 \u5b57\u4f1a\u7b49 \u5206\u5e03\u5f0f\u4e8b\u52a1\u6613\u7528\u7684\u8f7b\u91cf\u5316\u7f51\u7edc\u722c\u866b Android\u7cfb\u7edf\u6e90\u7801\u5206\u6790\u91cd\u6784\u4e2d\u4e00\u6b3e\u514d\u8d39\u7684\u6570\u636e\u53ef\u89c6\u5316\u5de5\u5177 \u62a5\u8868\u4e0e\u5927\u5c4f\u8bbe\u8ba1 \u7c7b\u4f3c\u4e8eexcel\u64cd\u4f5c\u98ce\u683c \u5728\u7ebf\u62d6\u62fd\u5b8c\u6210\u62a5\u8868\u8bbe\u8ba1 \u529f\u80fd\u6db5\u76d6 \u62a5\u8868\u8bbe\u8ba1 \u56fe\u5f62\u62a5\u8868 \u6253\u5370\u8bbe\u8ba1 \u5927\u5c4f\u8bbe\u8ba1\u7b49 \u6c38\u4e45\u514d\u8d39 \u79c9\u627f\u201c\u7b80\u5355 \u6613\u7528 \u4e13\u4e1a\u201d\u7684\u4ea7\u54c1\u7406\u5ff5 \u6781\u5927\u7684\u964d\u4f4e\u62a5\u8868\u5f00\u53d1\u96be\u5ea6 \u7f29\u77ed\u5f00\u53d1\u5468\u671f \u8282\u7701\u6210\u672c \u89e3\u51b3\u5404\u7c7b\u62a5\u8868\u96be\u9898 Android Activity \u6ed1\u52a8\u8fd4\u56de \u652f\u6301\u5fae\u4fe1\u6ed1\u52a8\u8fd4\u56de\u6837\u5f0f \u6a2a\u5c4f\u6ed1\u52a8\u8fd4\u56de \u5168\u5c4f\u6ed1\u52a8\u8fd4\u56deSpringBoot \u57fa\u7840\u6559\u7a0b \u4ece\u5165\u95e8\u5230\u4e0a\u763e \u57fa\u4e8e2 M5\u5236\u4f5c \u4eff\u5fae\u4fe1\u89c6\u9891\u62cd\u6444UI \u57fa\u4e8effmpeg\u7684\u89c6\u9891\u5f55\u5236\u7f16\u8f91Python 1 \u5929\u4ece\u65b0\u624b\u5230\u5927\u5e08 \u5206\u4eab GitHub \u4e0a\u6709\u8da3 \u5165\u95e8\u7ea7\u7684\u5f00\u6e90\u9879\u76ee\u4e2d\u82f1\u6587\u654f\u611f\u8bcd \u8bed\u8a00\u68c0\u6d4b \u4e2d\u5916\u624b\u673a \u7535\u8bdd\u5f52\u5c5e\u5730 \u8fd0\u8425\u5546\u67e5\u8be2 \u540d\u5b57\u63a8\u65ad\u6027\u522b \u624b\u673a\u53f7\u62bd\u53d6 \u8eab\u4efd\u8bc1\u62bd\u53d6 \u90ae\u7bb1\u62bd\u53d6 \u4e2d\u65e5\u6587\u4eba\u540d\u5e93 \u4e2d\u6587\u7f29\u5199\u5e93 \u62c6\u5b57\u8bcd\u5178 \u8bcd\u6c47\u60c5\u611f\u503c \u505c\u7528\u8bcd \u53cd\u52a8\u8bcd\u8868 \u66b4\u6050\u8bcd\u8868 \u7e41\u7b80\u4f53\u8f6c\u6362 \u82f1\u6587\u6a21\u62df\u4e2d\u6587\u53d1\u97f3 \u6c6a\u5cf0\u6b4c\u8bcd\u751f\u6210\u5668 \u804c\u4e1a\u540d\u79f0\u8bcd\u5e93 \u540c\u4e49\u8bcd\u5e93 \u53cd\u4e49\u8bcd\u5e93 \u5426\u5b9a\u8bcd\u5e93 \u6c7d\u8f66\u54c1\u724c\u8bcd\u5e93 \u6c7d\u8f66\u96f6\u4ef6\u8bcd\u5e93 \u8fde\u7eed\u82f1\u6587\u5207\u5272 \u5404\u79cd\u4e2d\u6587\u8bcd\u5411\u91cf \u516c\u53f8\u540d\u5b57\u5927\u5168 \u53e4\u8bd7\u8bcd\u5e93 IT\u8bcd\u5e93 \u8d22\u7ecf\u8bcd\u5e93 \u6210\u8bed\u8bcd\u5e93 \u5730\u540d\u8bcd\u5e93 \u5386\u53f2\u540d\u4eba\u8bcd\u5e93 \u8bd7\u8bcd\u8bcd\u5e93 \u533b\u5b66\u8bcd\u5e93 \u996e\u98df\u8bcd\u5e93 \u6cd5\u5f8b\u8bcd\u5e93 \u6c7d\u8f66\u8bcd\u5e93 \u52a8\u7269\u8bcd\u5e93 \u4e2d\u6587\u804a\u5929\u8bed\u6599 \u4e2d\u6587\u8c23\u8a00\u6570\u636e \u767e\u5ea6\u4e2d\u6587\u95ee\u7b54\u6570\u636e\u96c6 \u53e5\u5b50\u76f8\u4f3c\u5ea6\u5339\u914d\u7b97\u6cd5\u96c6\u5408 bert\u8d44\u6e90 \u6587\u672c\u751f\u6210 \u6458\u8981\u76f8\u5173\u5de5\u5177 cocoNLP\u4fe1\u606f\u62bd\u53d6 2 21\u5e74\u6700\u65b0\u603b\u7ed3 \u963f\u91cc \u817e\u8baf \u767e\u5ea6 \u7f8e\u56e2 \u5934\u6761\u7b49\u6280\u672f\u9762\u8bd5\u9898\u76ee \u4ee5\u53ca\u7b54\u6848 \u4e13\u5bb6\u51fa\u9898\u4eba\u5206\u6790\u6c47\u603b AiLearning \u673a\u5668\u5b66\u4e60 MachineLearning ML \u6df1\u5ea6\u5b66\u4e60 DeepLearning DL \u81ea\u7136\u8bed\u8a00\u5904\u7406 NLP123 6\u667a\u80fd\u5237\u7968 \u8ba2\u7968\u7ed3\u5df4\u4e2d\u6587\u5206\u8bcd \u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60 \u9762\u5411\u4e2d\u6587\u8bfb\u8005 \u80fd\u8fd0\u884c \u53ef\u8ba8\u8bba \u4e2d\u82f1\u6587\u7248\u88ab\u5168\u7403175\u6240\u5927\u5b66\u91c7\u7528\u6559\u5b66 \u4e2d\u6587\u5206\u8bcd \u8bcd\u6027\u6807\u6ce8 \u547d\u540d\u5b9e\u4f53\u8bc6\u522b \u4f9d\u5b58\u53e5\u6cd5\u5206\u6790 \u8bed\u4e49\u4f9d\u5b58\u5206\u6790 \u65b0\u8bcd\u53d1\u73b0 \u5173\u952e\u8bcd\u77ed\u8bed\u63d0\u53d6 \u81ea\u52a8\u6458\u8981 \u6587\u672c\u5206\u7c7b\u805a\u7c7b \u62fc\u97f3\u7b80\u7e41\u8f6c\u6362 \u81ea\u7136\u8bed\u8a00\u5904\u7406\u5fae\u4fe1\u4e2a\u4eba\u53f7\u63a5\u53e3 \u5fae\u4fe1\u673a\u5668\u4eba\u53ca\u547d\u4ee4\u884c\u5fae\u4fe1 \u4e09\u5341\u884c\u5373\u53ef\u81ea\u5b9a\u4e49\u4e2a\u4eba\u53f7\u673a\u5668\u4eba \u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u5fc5\u77e5\u5fc5\u4f1a\u76845 \u4e2a\u4ee3\u7801\u5b9e\u73b0JumpServer \u662f\u5168\u7403\u9996\u6b3e\u5f00\u6e90\u7684\u5821\u5792\u673a \u662f\u7b26\u5408 4A \u7684\u4e13\u4e1a\u8fd0\u7ef4\u5b89\u5168\u5ba1\u8ba1\u7cfb\u7edf \u98de\u6868 \u6838\u5fc3\u6846\u67b6 \u6df1\u5ea6\u5b66\u4e60 \u673a\u5668\u5b66\u4e60\u9ad8\u6027\u80fd\u5355\u673a \u5206\u5e03\u5f0f\u8bad\u7ec3\u548c\u8de8\u5e73\u53f0\u90e8\u7f72 \u4e2d\u56fd\u7a0b\u5e8f\u5458\u5bb9\u6613\u53d1\u97f3\u9519\u8bef\u7684\u5355\u8bcd\u5fae\u4fe1 \u8df3\u4e00\u8df3 Python \u8f85\u52a9 python\u6a21\u62df\u767b\u9646\u4e00\u4e9b\u5927\u578b\u7f51\u7ad9 \u8fd8\u6709\u4e00\u4e9b\u7b80\u5355\u7684\u722c\u866b \u5e0c\u671b\u5bf9\u4f60\u4eec\u6709\u6240\u5e2e\u52a9 \ufe0f \u5982\u679c\u559c\u6b22\u8bb0\u5f97\u7ed9\u4e2astar\u54e6  \u7f51\u7edc\u722c\u866b\u5b9e\u6218 \u6dd8\u5b9d \u4eac\u4e1c \u7f51\u6613\u4e91 B\u7ad9 123 6 \u6296\u97f3 \u7b14\u8da3\u9601 \u6f2b\u753b\u5c0f\u8bf4\u4e0b\u8f7d \u97f3\u4e50\u7535\u5f71\u4e0b\u8f7d\u7b49Python\u722c\u866b\u4ee3\u7406IP\u6c60 proxy pool wtfpython\u7684\u4e2d\u6587\u7ffb\u8bd1 \u65bd\u5de5\u7ed3\u675f \u80fd\u529b\u6709\u9650 \u6b22\u8fce\u5e2e\u6211\u6539\u8fdb\u7ffb\u8bd1\u63d0\u4f9b\u591a\u6b3e Shadowrocket \u89c4\u5219 \u5e26\u5e7f\u544a\u8fc7\u6ee4\u529f\u80fd \u7528\u4e8e iOS \u672a\u8d8a\u72f1\u8bbe\u5907\u9009\u62e9\u6027\u5730\u81ea\u52a8\u7ffb\u5899  123 6 \u8d2d\u7968\u52a9\u624b \u652f\u6301\u96c6\u7fa4 \u591a\u8d26\u53f7 \u591a\u4efb\u52a1\u8d2d\u7968\u4ee5\u53ca Web \u9875\u9762\u7ba1\u7406 walle \u74e6\u529b Devops\u5f00\u6e90\u9879\u76ee\u4ee3\u7801\u90e8\u7f72\u5e73\u53f0\u4e00\u4e9b\u975e\u5e38\u6709\u8da3\u7684python\u722c\u866b\u4f8b\u5b50 \u5bf9\u65b0\u624b\u6bd4\u8f83\u53cb\u597d \u4e3b\u8981\u722c\u53d6\u6dd8\u5b9d \u5929\u732b \u5fae\u4fe1 \u8c46\u74e3 QQ\u7b49\u7f51\u7ad9\u673a\u5668\u5b66\u4e60\u76f8\u5173\u6559\u7a0b1 Chinese Word Vectors \u4e0a\u767e\u79cd\u9884\u8bad\u7ec3\u4e2d\u6587\u8bcd\u5411\u91cf \u7f51\u6613\u4e91\u97f3\u4e50\u547d\u4ee4\u884c\u7248\u672c\u4e00\u6b3e\u5165\u95e8\u7ea7\u7684\u4eba\u8138 \u89c6\u9891 \u6587\u5b57\u68c0\u6d4b\u4ee5\u53ca\u8bc6\u522b\u7684\u9879\u76ee  \u7f16\u7a0b\u968f\u60f3 \u6574\u7406\u7684 \u592a\u5b50\u515a\u5173\u7cfb\u7f51\u7edc \u4e13\u95e8\u63ed\u9732\u8d75\u56fd\u7684\u6743\u8d35\u5fae\u4fe1\u52a9\u624b 1 \u6bcf\u65e5\u5b9a\u65f6\u7ed9\u597d\u53cb \u5973\u53cb \u53d1\u9001\u5b9a\u5236\u6d88\u606f 2 \u673a\u5668\u4eba\u81ea\u52a8\u56de\u590d\u597d\u53cb 3 \u7fa4\u52a9\u624b\u529f\u80fd \u4f8b\u5982 \u67e5\u8be2\u5783\u573e\u5206\u7c7b \u5929\u6c14 \u65e5\u5386 \u7535\u5f71\u5b9e\u65f6\u7968\u623f \u5feb\u9012\u7269\u6d41 PM2 5\u7b49 \u4e8c\u7ef4\u7801\u751f\u6210\u5668 \u652f\u6301 gif \u52a8\u6001\u56fe\u7247\u4e8c\u7ef4\u7801 \u963f\u5e03\u91cf\u5316\u4ea4\u6613\u7cfb\u7edf \u80a1\u7968 \u671f\u6743 \u671f\u8d27 \u6bd4\u7279\u5e01 \u673a\u5668\u5b66\u4e60 \u57fa\u4e8epython\u7684\u5f00\u6e90\u91cf\u5316\u4ea4\u6613 \u91cf\u5316\u6295\u8d44\u67b6\u6784 book \u4e2d\u534e\u65b0\u534e\u5b57\u5178\u6570\u636e\u5e93 \u5305\u62ec\u6b47\u540e\u8bed \u6210\u8bed \u8bcd\u8bed \u6c49\u5b57  Git AWS Google \u955c\u50cf SS SSR VMESS\u8282\u70b9\u884c\u4e1a\u7814\u7a76\u62a5\u544a\u7684\u77e5\u8bc6\u50a8\u5907\u5e93\u4e2d\u6587\u7ffb\u8bd1\u624b\u5199\u5b9e\u73b0\u674e\u822a \u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5 \u4e66\u4e2d\u5168\u90e8\u7b97\u6cd5 Python \u6296\u97f3\u673a\u5668\u4eba \u8bba\u5982\u4f55\u5728\u6296\u97f3\u4e0a\u627e\u5230\u6f02\u4eae\u5c0f\u59d0\u59d0\uff1f \u8fc1\u79fb\u5b66\u4e60python\u722c\u866b\u6559\u7a0b\u7cfb\u5217 \u4ece \u52301\u5b66\u4e60python\u722c\u866b \u5305\u62ec\u6d4f\u89c8\u5668\u6293\u5305 \u624b\u673aAPP\u6293\u5305 \u5982 fiddler mitmproxy \u5404\u79cd\u722c\u866b\u6d89\u53ca\u7684\u6a21\u5757\u7684\u4f7f\u7528 \u5982\u7b49 \u4ee5\u53caIP\u4ee3\u7406 \u9a8c\u8bc1\u7801\u8bc6\u522b Mysql MongoDB\u6570\u636e\u5e93\u7684python\u4f7f\u7528 \u591a\u7ebf\u7a0b\u591a\u8fdb\u7a0b\u722c\u866b\u7684\u4f7f\u7528 css \u722c\u866b\u52a0\u5bc6\u9006\u5411\u7834\u89e3 JS\u722c\u866b\u9006\u5411 \u5206\u5e03\u5f0f\u722c\u866b \u722c\u866b\u9879\u76ee\u5b9e\u6218\u5b9e\u4f8b\u7b49Python\u811a\u672c \u6a21\u62df\u767b\u5f55\u77e5\u4e4e \u722c\u866b \u64cd\u4f5cexcel \u5fae\u4fe1\u516c\u4f17\u53f7 \u8fdc\u7a0b\u5f00\u673a\u8d8a\u6765\u8d8a\u591a\u7684\u7f51\u7ad9\u5177\u6709\u53cd\u722c\u866b\u7279\u6027 \u6709\u7684\u7528\u56fe\u7247\u9690\u85cf\u5173\u952e\u6570\u636e \u6709\u7684\u4f7f\u7528\u53cd\u4eba\u7c7b\u7684\u9a8c\u8bc1\u7801 \u5efa\u7acb\u53cd\u53cd\u722c\u866b\u7684\u4ee3\u7801\u4ed3\u5e93 \u901a\u8fc7\u4e0e\u4e0d\u540c\u7279\u6027\u7684\u7f51\u7ad9\u505a\u6597\u4e89 \u65e0\u6076\u610f \u63d0\u9ad8\u6280\u672f \u6b22\u8fce\u63d0\u4ea4\u96be\u4ee5\u91c7\u96c6\u7684\u7f51\u7ad9 \u56e0\u5de5\u4f5c\u539f\u56e0 \u9879\u76ee\u6682\u505c  \u4eba\u4eba\u5f71\u89c6bot \u5b8c\u5168\u5bf9\u63a5\u4eba\u4eba\u5f71\u89c6\u5168\u90e8\u65e0\u5220\u51cf\u8d44\u6e90\u83ab\u70e6Python \u4e2d\u6587AI\u6559\u5b66\u98de\u6868 \u5b98\u65b9\u6a21\u578b\u5e93 \u5305\u542b\u591a\u79cd\u5b66\u672f\u524d\u6cbf\u548c\u5de5\u4e1a\u573a\u666f\u9a8c\u8bc1\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b \u8f7b\u91cf\u7ea7\u4eba\u8138\u68c0\u6d4b\u6a21\u578b \u767e\u5ea6\u4e91 \u767e\u5ea6\u7f51\u76d8Python\u5ba2\u6237\u7aef Python\u8fdb\u9636 Intermediate Python \u4e2d\u6587\u7248 \u63d0\u4f9b\u540c\u82b1\u987a\u5ba2\u6237\u7aef \u56fd\u91d1 \u534e\u6cf0\u5ba2\u6237\u7aef \u96ea\u7403\u7684\u57fa\u91d1 \u80a1\u7968\u81ea\u52a8\u7a0b\u5e8f\u5316\u4ea4\u6613\u4ee5\u53ca\u81ea\u52a8\u6253\u65b0 \u652f\u6301\u8ddf\u8e2a joinquant ricequant \u6a21\u62df\u4ea4\u6613 \u548c \u5b9e\u76d8\u96ea\u7403\u7ec4\u5408 \u91cf\u5316\u4ea4\u6613\u7ec4\u4ef6QUANTAXIS \u652f\u6301\u4efb\u52a1\u8c03\u5ea6 \u5206\u5e03\u5f0f\u90e8\u7f72\u7684 \u80a1\u7968 \u671f\u8d27 \u671f\u6743 \u6e2f\u80a1 \u865a\u62df\u8d27\u5e01 \u6570\u636e \u56de\u6d4b \u6a21\u62df \u4ea4\u6613 \u53ef\u89c6\u5316 \u591a\u8d26\u6237 \u7eaf\u672c\u5730\u91cf\u5316\u89e3\u51b3\u65b9\u6848INFO SPIDER \u662f\u4e00\u4e2a\u96c6\u4f17\u591a\u6570\u636e\u6e90\u4e8e\u4e00\u8eab\u7684\u722c\u866b\u5de5\u5177\u7bb1 \u65e8\u5728\u5b89\u5168\u5feb\u6377\u7684\u5e2e\u52a9\u7528\u6237\u62ff\u56de\u81ea\u5df1\u7684\u6570\u636e \u5de5\u5177\u4ee3\u7801\u5f00\u6e90 \u6d41\u7a0b\u900f\u660e \u652f\u6301\u6570\u636e\u6e90\u5305\u62ecGitHub QQ\u90ae\u7bb1 \u7f51\u6613\u90ae\u7bb1 \u963f\u91cc\u90ae\u7bb1 \u65b0\u6d6a\u90ae\u7bb1 Hotmail\u90ae\u7bb1 Outlook\u90ae\u7bb1 \u4eac\u4e1c \u6dd8\u5b9d \u652f\u4ed8\u5b9d \u4e2d\u56fd\u79fb\u52a8 \u4e2d\u56fd\u8054\u901a \u4e2d\u56fd\u7535\u4fe1 \u77e5\u4e4e \u54d4\u54e9\u54d4\u54e9 \u7f51\u6613\u4e91\u97f3\u4e50 QQ\u597d\u53cb QQ\u7fa4 \u751f\u6210\u670b\u53cb\u5708\u76f8\u518c \u6d4f\u89c8\u5668\u6d4f\u89c8\u5386\u53f2 123 6 \u535a\u5ba2\u56ed CSDN\u535a\u5ba2 \u5f00\u6e90\u4e2d\u56fd\u535a\u5ba2 \u7b80\u4e66 \u4e2d\u6587BERT wwm\u7cfb\u5217\u6a21\u578b Python\u5165\u95e8\u7f51\u7edc\u722c\u866b\u4e4b\u7cbe\u534e\u7248\u4e2d\u6587 iOS Mac \u5f00\u53d1\u535a\u5ba2\u5217\u8868Python\u7f51\u9875\u5fae\u4fe1APIpkuseg\u591a\u9886\u57df\u4e2d\u6587\u5206\u8bcd\u5de5\u5177\u81ea\u5df1\u52a8\u624b\u505a\u804a\u5929\u673a\u5668\u4eba\u6559\u7a0b\u57fa\u4e8e\u641c\u72d7\u5fae\u4fe1\u641c\u7d22\u7684\u5fae\u4fe1\u516c\u4f17\u53f7\u722c\u866b\u63a5\u53e3\u7528\u6df1\u5ea6\u5b66\u4e60\u5bf9\u5bf9\u8054 v2ray xray\u591a\u7528\u6237\u7ba1\u7406\u90e8\u7f72\u7a0b\u5e8f\u5404\u79cd\u811a\u672c \u5173\u4e8e \u867e\u7c73 xiami com \u767e\u5ea6\u7f51\u76d8 pan baidu com 115\u7f51\u76d8 115 com \u7f51\u6613\u97f3\u4e50 music 163 com \u767e\u5ea6\u97f3\u4e50 music baidu com 36 \u7f51\u76d8 \u4e91\u76d8 yunpan cn \u89c6\u9891\u89e3\u6790 flvxz com bt torrent \u2194 magnet ed2k \u641c\u7d22 tumblr \u56fe\u7247\u4e0b\u8f7d unzip\u67e5\u770b\u88ab\u5220\u7684\u5fae\u4fe1\u597d\u53cb\u5b9a\u6295\u6539\u53d8\u547d\u8fd0 \u8ba9\u65f6\u95f4\u966a\u4f60\u6162\u6162\u53d8\u5bcc onregularinvesting com \u673a\u5668\u5b66\u4e60\u5b9e\u6218 Python3 kNN \u51b3\u7b56\u6811 \u8d1d\u53f6\u65af \u903b\u8f91\u56de\u5f52 SVM \u7ebf\u6027\u56de\u5f52 \u6811\u56de\u5f52Statistical learning methods \u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5 \u7b2c2\u7248 \u674e\u822a \u7b14\u8bb0 \u4ee3\u7801 notebook \u53c2\u8003\u6587\u732e Errata lihang stock \u80a1\u7968\u7cfb\u7edf \u4f7f\u7528python\u8fdb\u884c\u5f00\u53d1 \u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u4e2d\u6587\u8bed\u97f3\u8bc6\u522b\u7cfb\u7edf\u4eac\u4e1c\u62a2\u8d2d\u52a9\u624b \u5305\u542b\u767b\u5f55 \u67e5\u8be2\u5546\u54c1\u5e93\u5b58 \u4ef7\u683c \u6dfb\u52a0 \u6e05\u7a7a\u8d2d\u7269\u8f66 \u62a2\u8d2d\u5546\u54c1 \u4e0b\u5355 \u67e5\u8be2\u8ba2\u5355\u7b49\u529f\u80fd\u83ab\u70e6Python \u4e2d\u6587AI\u6559\u5b66\u673a\u5668\u5b66\u4e60\u7b97\u6cd5python\u5b9e\u73b0\u65b0\u6d6a\u5fae\u535a\u722c\u866b \u7528python\u722c\u53d6\u65b0\u6d6a\u5fae\u535a\u6570\u636e\u7684\u7b97\u6cd5\u4ee5\u53ca\u901a\u7528\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u56fe\u50cf\u751f\u6210\u7684\u7406\u8bba\u4e0e\u5b9e\u8df5\u7814\u7a76 \u9752\u5c9b\u5927\u5b66\u5f00\u6e90 Online Judge QQ\u7fa4 49671 125 admin qduoj comWeRoBot \u662f\u4e00\u4e2a\u5fae\u4fe1\u516c\u4f17\u53f7\u5f00\u53d1\u6846\u67b6 \u57fa\u4e8eDjango\u7684\u535a\u5ba2\u7cfb\u7edf \u4e2d\u6587\u8fd1\u4e49\u8bcd \u804a\u5929\u673a\u5668\u4eba \u667a\u80fd\u95ee\u7b54\u5de5\u5177\u5305\u5f00\u6e90\u8d22\u7ecf\u6570\u636e\u63a5\u53e3\u5e93\u5de1\u98ce\u662f\u4e00\u6b3e\u9002\u7528\u4e8e\u4f01\u4e1a\u5185\u7f51\u7684\u6f0f\u6d1e\u5feb\u901f\u5e94\u6025 \u5de1\u822a\u626b\u63cf\u7cfb\u7edf  \u756a\u53f7\u5927\u5168 \u89e3\u51b3\u7535\u8111 \u624b\u673a\u770b\u7535\u89c6\u76f4\u64ad\u7684\u82e6\u607c \u6536\u96c6\u5404\u79cd\u76f4\u64ad\u6e90 \u7535\u89c6\u76f4\u64ad\u7f51\u7ad9\u77e5\u8bc6\u56fe\u8c31\u6784\u5efa \u81ea\u52a8\u95ee\u7b54 \u57fa\u4e8ekg\u7684\u81ea\u52a8\u95ee\u7b54 \u4ee5\u75be\u75c5\u4e3a\u4e2d\u5fc3\u7684\u4e00\u5b9a\u89c4\u6a21\u533b\u836f\u9886\u57df\u77e5\u8bc6\u56fe\u8c31 \u5e76\u4ee5\u8be5\u77e5\u8bc6\u56fe\u8c31\u5b8c\u6210\u81ea\u52a8\u95ee\u7b54\u4e0e\u5206\u6790\u670d\u52a1 \u51fa\u5904\u672c\u5730\u7535\u5f71\u522e\u524a\u4e0e\u6574\u7406\u4e00\u4f53\u5316\u89e3\u51b3\u65b9\u6848\u81ea\u52a8\u5316\u8fd0\u7ef4\u5e73\u53f0 CMDB CD DevOps \u8d44\u4ea7\u7ba1\u7406 \u4efb\u52a1\u7f16\u6392 \u6301\u7eed\u4ea4\u4ed8 \u7cfb\u7edf\u76d1\u63a7 \u8fd0\u7ef4\u7ba1\u7406 \u914d\u7f6e\u7ba1\u7406 wukong robot \u662f\u4e00\u4e2a\u7b80\u5355 \u7075\u6d3b \u4f18\u96c5\u7684\u4e2d\u6587\u8bed\u97f3\u5bf9\u8bdd\u673a\u5668\u4eba \u667a\u80fd\u97f3\u7bb1\u9879\u76ee \u8fd8\u53ef\u80fd\u662f\u9996\u4e2a\u652f\u6301\u8111\u673a\u4ea4\u4e92\u7684\u5f00\u6e90\u667a\u80fd\u97f3\u7bb1\u9879\u76ee \u83b7\u53d6\u6597\u9c7c \u864e\u7259 \u54d4\u54e9\u54d4\u54e9 \u6296\u97f3 \u5feb\u624b\u7b49 55 \u4e2a\u76f4\u64ad\u5e73\u53f0\u7684\u771f\u5b9e\u6d41\u5a92\u4f53\u5730\u5740 \u76f4\u64ad\u6e90 \u548c\u5f39\u5e55 \u76f4\u64ad\u6e90\u53ef\u5728 PotPlayer flv js \u7b49\u64ad\u653e\u5668\u4e2d\u64ad\u653e \u5b9d\u5854Linux\u9762\u677f \u7b80\u5355\u597d\u7528\u7684\u670d\u52a1\u5668\u8fd0\u7ef4\u9762\u677f\u519c\u4e1a\u77e5\u8bc6\u56fe\u8c31 AgriKG \u519c\u4e1a\u9886\u57df\u7684\u4fe1\u606f\u68c0\u7d22 \u547d\u540d\u5b9e\u4f53\u8bc6\u522b \u5173\u7cfb\u62bd\u53d6 \u667a\u80fd\u95ee\u7b54 \u8f85\u52a9\u51b3\u7b56CODO\u662f\u4e00\u6b3e\u4e3a\u7528\u6237\u63d0\u4f9b\u4f01\u4e1a\u591a\u6df7\u5408\u4e91 \u4e00\u7ad9\u5f0fDevOps \u81ea\u52a8\u5316\u8fd0\u7ef4 \u5b8c\u5168\u5f00\u6e90\u7684\u4e91\u7ba1\u7406\u5e73\u53f0 \u81ea\u52a8\u5316\u8fd0\u7ef4\u5e73\u53f0Web Pentesting Fuzz \u5b57\u5178 \u4e00\u4e2a\u5c31\u591f\u4e86  \u8ba1\u7b97\u673a\u7f51\u7edc \u81ea\u9876\u5411\u4e0b\u65b9\u6cd5 \u539f\u4e66\u7b2c6\u7248 \u7f16\u7a0b\u4f5c\u4e1a Wireshark\u5b9e\u9a8c\u6587\u6863\u7684\u7ffb\u8bd1\u548c\u89e3\u7b54 \u4e2d\u6587\u53e4\u8bd7\u81ea\u52a8\u4f5c\u8bd7\u673a\u5668\u4eba \u5c4c\u70b8\u5929 \u57fa\u4e8etensorflow1 1 api \u6b63\u5728\u79ef\u6781\u7ef4\u62a4\u5347\u7ea7\u4e2d \u5febstar \u4fdd\u6301\u66f4\u65b0 PyQt Examples PyQt\u5404\u79cd\u6d4b\u8bd5\u548c\u4f8b\u5b50 PyQt4 PyQt5\u6d77\u91cf\u4e2d\u6587\u9884\u8bad\u7ec3ALBERT\u6a21\u578b\u6c49\u5b57\u8f6c\u62fc\u97f3 pypinyin \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5 leetcode lintcode\u9898\u89e3  Pytorch\u6a21\u578b\u8bad\u7ec3\u5b9e\u7528\u6559\u7a0b \u4e2d\u914d\u5957\u4ee3\u7801\u5b9e\u65f6\u83b7\u53d6\u65b0\u6d6a \u817e\u8baf \u7684\u514d\u8d39\u80a1\u7968\u884c\u60c5 \u96c6\u601d\u8def\u7684\u5206\u7ea7\u57fa\u91d1\u884c\u60c5Python\u722c\u866b Flask\u7f51\u7ad9 \u514d\u8d39ShadowSocks\u8d26\u53f7 ssr\u8ba2\u9605 json \u8ba2\u9605\u5b9e\u6218 \u591a\u79cd\u7f51\u7ad9 \u7535\u5546\u6570\u636e\u722c\u866b \u5305\u542b \u6dd8\u5b9d\u5546\u54c1 \u5fae\u4fe1\u516c\u4f17\u53f7 \u5927\u4f17\u70b9\u8bc4 \u4f01\u67e5\u67e5 \u62db\u8058\u7f51\u7ad9 \u95f2\u9c7c \u963f\u91cc\u4efb\u52a1 \u535a\u5ba2\u56ed \u5fae\u535a \u767e\u5ea6\u8d34\u5427 \u8c46\u74e3\u7535\u5f71 \u5305\u56fe\u7f51 \u5168\u666f\u7f51 \u8c46\u74e3\u97f3\u4e50 \u67d0\u7701\u836f\u76d1\u5c40 \u641c\u72d0\u65b0\u95fb \u673a\u5668\u5b66\u4e60\u6587\u672c\u91c7\u96c6 fofa\u8d44\u4ea7\u91c7\u96c6 \u6c7d\u8f66\u4e4b\u5bb6 \u56fd\u5bb6\u7edf\u8ba1\u5c40 \u767e\u5ea6\u5173\u952e\u8bcd\u6536\u5f55\u6570 \u8718\u86db\u6cdb\u76ee\u5f55 \u4eca\u65e5\u5934\u6761 \u8c46\u74e3\u5f71\u8bc4 \u643a\u7a0b \u5c0f\u7c73\u5e94\u7528\u5546\u5e97 \u5b89\u5c45\u5ba2 \u9014\u5bb6\u6c11\u5bbf \ufe0f \ufe0f \ufe0f \u5fae\u4fe1\u722c\u866b\u5c55\u793a\u9879\u76ee SQL \u5ba1\u6838\u67e5\u8be2\u5e73\u53f0\u56e2\u5b50\u7ffb\u8bd1\u5668 \u4e2a\u4eba\u5174\u8da3\u5236\u4f5c\u7684\u4e00\u6b3e\u57fa\u4e8eOCR\u6280\u672f\u7684\u7ffb\u8bd1\u5668\u81ea\u52a8\u5316\u8fd0\u7ef4\u5e73\u53f0 \u4ee3\u7801\u53ca\u5e94\u7528\u90e8\u7f72CI CD \u8d44\u4ea7\u7ba1\u7406CMDB \u8ba1\u5212\u4efb\u52a1\u7ba1\u7406\u5e73\u53f0 SQL\u5ba1\u6838 \u56de\u6eda \u4efb\u52a1\u8c03\u5ea6 \u7ad9\u5185WIKISource Code Security Audit \u6e90\u4ee3\u7801\u5b89\u5168\u5ba1\u8ba1 Exphub \u6f0f\u6d1e\u5229\u7528\u811a\u672c\u5e93 \u5305\u62ec\u7684\u6f0f\u6d1e\u5229\u7528\u811a\u672c \u6700\u65b0\u6dfb\u52a0\u6211\u7684\u81ea\u5b66\u7b14\u8bb0 \u7ec8\u8eab\u66f4\u65b0 \u5f53\u524d\u4e13\u6ce8System\u57fa\u7840 MLSys \u4f7f\u7528\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u5b8c\u6210\u5bf9123 6\u9a8c\u8bc1\u7801\u7684\u81ea\u52a8\u8bc6\u522bPython \u5f00\u6e90\u9879\u76ee\u4e4b \u81ea\u5b66\u7f16\u7a0b\u4e4b\u8def \u4fdd\u59c6\u7ea7\u6559\u7a0b AI\u5b9e\u9a8c\u5ba4 \u5b9d\u85cf\u89c6\u9891 \u6570\u636e\u7ed3\u6784 \u5b66\u4e60\u6307\u5357 \u673a\u5668\u5b66\u4e60\u5b9e\u6218 \u6df1\u5ea6\u5b66\u4e60\u5b9e\u6218 \u7f51\u7edc\u722c\u866b \u5927\u5382\u9762\u7ecf \u7a0b\u5e8f\u4eba\u751f \u8d44\u6e90\u5206\u4eab \u4e2d\u6587\u6587\u672c\u5206\u7c7b\u57fa\u4e8epytorch \u5f00\u7bb1\u5373\u7528 \u6839\u636e\u7f51\u6613\u4e91\u97f3\u4e50\u7684\u6b4c\u5355 \u4e0b\u8f7dflac\u65e0\u635f\u97f3\u4e50\u5230\u672c\u5730\u817e\u8baf\u4f18\u56fe\u9ad8\u7cbe\u5ea6\u53cc\u5206\u652f\u4eba\u8138\u68c0\u6d4b\u5668\u6587\u672c\u7ea0\u9519\u7b49\u6a21\u578b\u5b9e\u73b0 \u5f00\u7bb1\u5373\u7528 3 \u5929\u638c\u63e1\u91cf\u5316\u4ea4\u6613 \u6301\u7eed\u66f4\u65b0 \u4e2d\u6587\u5206\u8bcd \u8bcd\u6027\u6807\u6ce8 \u547d\u540d\u5b9e\u4f53\u8bc6\u522b \u4f9d\u5b58\u53e5\u6cd5\u5206\u6790 \u65b0\u8bcd\u53d1\u73b0 \u5173\u952e\u8bcd\u77ed\u8bed\u63d0\u53d6 \u81ea\u52a8\u6458\u8981 \u6587\u672c\u5206\u7c7b\u805a\u7c7b \u62fc\u97f3\u7b80\u7e41 \u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u6587\u516c\u5f00\u804a\u5929\u8bed\u6599\u5e93\u8c46\u74e3\u8bfb\u4e66\u7684\u722c\u866b\u603b\u7ed3\u68b3\u7406\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u7a0b\u5e08 NLP \u9700\u8981\u79ef\u7d2f\u7684\u5404\u65b9\u9762\u77e5\u8bc6 \u5305\u62ec\u9762\u8bd5\u9898 \u5404\u79cd\u57fa\u7840\u77e5\u8bc6 \u5de5\u7a0b\u80fd\u529b\u7b49\u7b49 \u63d0\u5347\u6838\u5fc3\u7ade\u4e89\u529b\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6570\u636e\u96c6 \u5e73\u65f6\u505a\u505a\u5b9e\u9a8c\u7684\u6750\u6599 \u6b22\u8fce\u8865\u5145\u63d0\u4ea4\u5408\u5e76 \u4e00\u4e2a\u53ef\u4ee5\u81ea\u5df1\u8fdb\u884c\u8bad\u7ec3\u7684\u4e2d\u6587\u804a\u5929\u673a\u5668\u4eba \u6839\u636e\u81ea\u5df1\u7684\u8bed\u6599\u8bad\u7ec3\u51fa\u81ea\u5df1\u60f3\u8981\u7684\u804a\u5929\u673a\u5668\u4eba \u53ef\u4ee5\u7528\u4e8e\u667a\u80fd\u5ba2\u670d \u5728\u7ebf\u95ee\u7b54 \u667a\u80fd\u804a\u5929\u7b49\u573a\u666f \u76ee\u524d\u5305\u542bseq2seq seqGAN\u7248\u672c tf2 \u7248\u672c pytorch\u7248\u672c \u80a1\u7968\u91cf\u5316\u6846\u67b6 \u652f\u6301\u884c\u60c5\u83b7\u53d6\u4ee5\u53ca\u4ea4\u6613\u5fae\u535a\u722c\u866b \u6301\u7eed\u7ef4\u62a4  Bilibili \u7528\u6237\u722c\u866b deepin\u6e90\u79fb\u690d Debian Ubuntu\u4e0a\u6700\u5feb\u7684QQ \u5fae\u4fe1\u5b89\u88c5\u65b9\u5f0f \u65b0\u95fb\u7f51\u9875\u6b63\u6587\u901a\u7528\u62bd\u53d6\u5668 Beta \u7248  flag on post \u81ea\u52a8\u66f4\u65b0\u57df\u540d\u89e3\u6790\u5230\u672c\u673aIP \u652f\u6301dnspod \u963f\u91ccDNS CloudFlare \u534e\u4e3a\u4e91 DNSCOM \u672c\u9879\u76ee\u9488\u5bf9\u5b57\u7b26\u578b\u56fe\u7247\u9a8c\u8bc1\u7801 \u4f7f\u7528tensorflow\u5b9e\u73b0\u5377\u79ef\u795e\u7ecf\u7f51\u7edc \u8fdb\u884c\u9a8c\u8bc1\u7801\u8bc6\u522b owllook \u5c0f\u8bf4\u641c\u7d22\u5f15\u64ce\u4e2d\u6587\u8bed\u8a00\u7406\u89e3\u6d4b\u8bc4\u57fa\u51c6python\u4e2d\u6587\u5e93 python\u4eba\u5de5\u667a\u80fd\u5927\u6570\u636e\u81ea\u52a8\u5316\u63a5\u53e3\u6d4b\u8bd5\u5f00\u53d1 \u4e66\u7c4d\u4e0b\u8f7d\u53capython\u5e93\u6c47\u603bchina testing github io 2 19\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u75ab\u60c5\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u4ed3\u5e93Python \u9ed1\u9b54\u6cd5\u624b\u518c\u5355\u9636\u6bb5\u901a\u7528\u76ee\u6807\u68c0\u6d4b\u5668\u4e00\u4e2a\u62cd\u7167\u505a\u9898\u7a0b\u5e8f \u8f93\u5165\u4e00\u5f20\u5305\u542b\u6570\u5b66\u8ba1\u7b97\u9898\u7684\u56fe\u7247 \u8f93\u51fa\u8bc6\u522b\u51fa\u7684\u6570\u5b66\u8ba1\u7b97\u5f0f\u4ee5\u53ca\u8ba1\u7b97\u7ed3\u679c video download B\u7ad9\u89c6\u9891\u4e0b\u8f7d\u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b TensorFlow Python \u4e2d\u6587\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6559\u7a0b \u9a8c\u8bc1\u7801\u8bc6\u522b \u8bad\u7ec3Python\u722c\u866b\u5b9e\u6218 \u6a21\u62df\u767b\u9646\u5404\u5927\u7f51\u7ad9 \u5305\u542b\u4f46\u4e0d\u9650\u4e8e \u6ed1\u5757\u9a8c\u8bc1 \u62fc\u591a\u591a \u7f8e\u56e2 \u767e\u5ea6 bilibili \u5927\u4f17\u70b9\u8bc4 \u6dd8\u5b9d \u5982\u679c\u559c\u6b22\u8bf7start \ufe0f\u5b66\u65e0\u6b62\u4e0b\u8f7d\u5668 \u6155\u8bfe\u4e0b\u8f7d\u5668 Mooc\u4e0b\u8f7d \u6155\u8bfe\u7f51\u4e0b\u8f7d \u4e2d\u56fd\u5927\u5b66\u4e0b\u8f7d \u7231\u8bfe\u7a0b\u4e0b\u8f7d \u7f51\u6613\u4e91\u8bfe\u5802\u4e0b\u8f7d \u5b66\u5802\u5728\u7ebf\u4e0b\u8f7d \u8d85\u661f\u5b66\u4e60\u901a\u4e0b\u8f7d \u652f\u6301\u89c6\u9891 \u8bfe\u4ef6\u540c\u65f6\u4e0b\u8f7d\u4e00\u4e2a\u9ad8\u7ea7web\u76ee\u5f55 \u6587\u4ef6\u626b\u63cf\u5de5\u5177 \u529f\u80fd\u5c06\u4f1a\u5f3a\u4e8eDirBuster Dirsearch cansina \u5fa1\u5251 \u641c\u7d22\u6240\u6709\u4e2d\u6587NLP\u6570\u636e\u96c6 \u9644\u5e38\u7528\u82f1\u6587NLP\u6570\u636e\u96c6\u4e2d\u6587\u5b9e\u4f53\u8bc6\u522b\u4e0e\u5173\u7cfb\u63d0\u53d62 19\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u75ab\u60c5\u5b9e\u65f6\u722c\u866b\u53cagithub release archive\u4ee5\u53ca\u9879\u76ee\u6587\u4ef6\u7684\u52a0\u901f\u9879\u76ee\u5b89\u5353\u5e94\u7528\u5b89\u5168\u5b66\u4e60\u6293\u53d6\u5927\u91cf\u514d\u8d39\u4ee3\u7406 ip \u63d0\u53d6\u6709\u6548 ip \u4f7f\u7528RoBERTa\u4e2d\u6587\u9884\u8bad\u7ec3\u6a21\u578b RoBERTa for Chinese \u7528\u4e8e\u8bad\u7ec3\u4e2d\u82f1\u6587\u5bf9\u8bdd\u7cfb\u7edf\u7684\u8bed\u6599\u5e93\u654f\u611f\u8bcd\u8fc7\u6ee4\u7684\u51e0\u79cd\u5b9e\u73b0 \u67d01w\u8bcd\u654f\u611f\u8bcd\u5e93\u7b80\u5355\u6613\u7528\u7684Python\u722c\u866b\u6846\u67b6 QQ\u4ea4\u6d41\u7fa4 59751 56 \u4f7f\u7528Bert ERNIE \u8fdb\u884c\u4e2d\u6587\u6587\u672c\u5206\u7c7b\u4e3a CSAPP \u89c6\u9891\u8bfe\u7a0b\u63d0\u4f9b\u5b57\u5e55 \u7ffb\u8bd1 PPT Lab PyTorch \u5b98\u65b9\u4e2d\u6587\u6559\u7a0b\u5305\u542b 6 \u5206\u949f\u5feb\u901f\u5165\u95e8\u6559\u7a0b \u5f3a\u5316\u6559\u7a0b \u8ba1\u7b97\u673a\u89c6\u89c9 \u81ea\u7136\u8bed\u8a00\u5904\u7406 \u751f\u6210\u5bf9\u6297\u7f51\u7edc \u5f3a\u5316\u5b66\u4e60 \u6b22\u8fce Star Fork \u515c\u54e5\u51fa\u54c1 <\u4e00\u672c\u5f00\u6e90\u7684NLP\u5165\u95e8\u4e66\u7c4d \u56fe\u50cf\u7ffb\u8bd1 \u6761\u4ef6GAN AI\u7ed8\u753b\u7528Resnet1 1 GPT\u642d\u5efa\u4e00\u4e2a\u73a9\u738b\u8005\u8363\u8000\u7684AI\u5404\u79cd\u6f0f\u6d1epoc Exp\u7684\u6536\u96c6\u6216\u7f16\u5199\u6597\u5730\u4e3bAIVulmap \u662f\u4e00\u6b3e web \u6f0f\u6d1e\u626b\u63cf\u548c\u9a8c\u8bc1\u5de5\u5177 \u53ef\u5bf9 webapps \u8fdb\u884c\u6f0f\u6d1e\u626b\u63cf \u5e76\u4e14\u5177\u5907\u6f0f\u6d1e\u9a8c\u8bc1\u529f\u80fd\u63d0\u4f9b\u8d85\u904e 5 \u500b\u91d1\u878d\u8cc7\u6599 \u53f0\u80a1\u70ba\u4e3b \u6bcf\u5929\u66f4\u65b0 finmind github io \u6570\u636e\u63a5\u53e3 \u767e\u5ea6 \u8c37\u6b4c \u5934\u6761 \u5fae\u535a\u6307\u6570 \u5b8f\u89c2\u6570\u636e \u5229\u7387\u6570\u636e \u8d27\u5e01\u6c47\u7387 \u5343\u91cc\u9a6c \u72ec\u89d2\u517d\u516c\u53f8 \u65b0\u95fb\u8054\u64ad\u6587\u5b57\u7a3f \u5f71\u89c6\u7968\u623f\u6570\u636e \u9ad8\u6821\u540d\u5355 \u75ab\u60c5\u6570\u636e PyOne \u4e00\u6b3e\u7ed9\u529b\u7684onedrive\u6587\u4ef6\u7ba1\u7406 \u5206\u4eab\u7a0b\u5e8f \u4f7f\u7528\u5f00\u53d1\u7684\u7528\u4e8e\u8fc5\u901f\u642d\u5efa\u5e76\u4f7f\u7528 WebHook \u8fdb\u884c\u81ea\u52a8\u5316\u90e8\u7f72\u548c\u8fd0\u7ef4 \u652f\u6301 Github GitLab Gogs GitOsc \u8ddf\u6211\u4e00\u8d77\u5199Makefile\u91cd\u5236\u7248 python\u81ea\u52a8\u5316\u8fd0\u7ef4 \u6280\u672f\u4e0e\u6700\u4f73\u5b9e\u8df5 \u4e66\u4e2d\u793a\u4f8b\u53ca\u6848\u4f8b\u6e90\u7801\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5b9e\u9a8c sougou\u6570\u636e\u96c6 TF IDF \u6587\u672c\u5206\u7c7b \u805a\u7c7b \u8bcd\u5411\u91cf \u60c5\u611f\u8bc6\u522b \u5173\u7cfb\u62bd\u53d6\u7b49\u5fae\u4fe1\u516c\u4f17\u5e73\u53f0 Python \u5f00\u53d1\u5305 DEPRECATED Weblogic\u4e00\u952e\u6f0f\u6d1e\u68c0\u6d4b\u5de5\u5177 V1 5 \u66f4\u65b0\u65f6\u95f4 2 2 73 \u5b8c\u5907\u4f18\u96c5\u7684\u5fae\u4fe1\u516c\u4f17\u53f7\u63a5\u53e3 \u539f\u751f\u652f\u6301\u540c\u6b65 \u534f\u7a0b\u4f7f\u7528 \u672c\u7a0b\u5e8f\u65e8\u5728\u4e3a\u5b89\u5168\u5e94\u6025\u54cd\u5e94\u4eba\u5458\u5bf9Linux\u4e3b\u673a\u6392\u67e5\u65f6\u63d0\u4f9b\u4fbf\u5229 \u5b9e\u73b0\u4e3b\u673a\u4fa7Checklist\u7684\u81ea\u52a8\u5168\u9762\u5316\u68c0\u6d4b \u6839\u636e\u68c0\u6d4b\u7ed3\u679c\u81ea\u52a8\u6570\u636e\u805a\u5408 \u8fdb\u884c\u9ed1\u5ba2\u653b\u51fb\u8def\u5f84\u6eaf\u6e90 PyCharm \u4e2d\u6587\u6307\u5357 \u5b89\u88c5 \u7834\u89e3 \u6548\u7387 \u6280\u5de7\u7c7b\u4f3c\u6309\u952e\u7cbe\u7075\u7684\u9f20\u6807\u952e\u76d8\u5f55\u5236\u548c\u81ea\u52a8\u5316\u64cd\u4f5c \u6a21\u62df\u70b9\u51fb\u548c\u952e\u5165GPT2 for Chinese chitchat \u7528\u4e8e\u4e2d\u6587\u95f2\u804a\u7684GPT2\u6a21\u578b \u5b9e\u73b0\u4e86DialoGPT\u7684MMI\u601d\u60f3 \u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u56fd\u5bb6\u6807\u51c6 GB T 226 \u884c\u653f\u533a\u5212\u4ee3\u7801\u57fa\u4e8epython\u7684\u91cf\u5316\u4ea4\u6613\u5e73\u53f0\u4e2d\u6587\u8bed\u97f3\u8bc6\u522b\u57fa\u4e8e OneBot \u6807\u51c6\u7684 Python \u5f02\u6b65 QQ \u673a\u5668\u4eba\u6846\u67b6Real World Masked Face Dataset \u53e3\u7f69\u4eba\u8138\u6570\u636e\u96c6 Vulfocus \u662f\u4e00\u4e2a\u6f0f\u6d1e\u96c6\u6210\u5e73\u53f0 \u5c06\u6f0f\u6d1e\u73af\u5883 docker \u955c\u50cf \u653e\u5165\u5373\u53ef\u4f7f\u7528 \u5f00\u7bb1\u5373\u7528 \u8c37\u6b4c \u767e\u5ea6 \u5fc5\u5e94\u56fe\u7247\u4e0b\u8f7d \u57fa\u4e8e\u65b9\u9762\u7684\u60c5\u611f\u5206\u6790 \u4f7f\u7528PyTorch\u5b9e\u73b0  \u6df1\u5ea6\u5b66\u4e60\u4e0e\u8ba1\u7b97\u673a\u89c6\u89c9 \u914d\u5957\u4ee3\u7801ART\u73af\u5883\u4e0b\u81ea\u52a8\u5316\u8131\u58f3\u65b9\u6848\u5229\u7528\u7f51\u7edc\u4e0a\u516c\u5f00\u7684\u6570\u636e\u6784\u5efa\u4e00\u4e2a\u5c0f\u578b\u7684\u8bc1\u5238\u77e5\u8bc6\u56fe\u8c31 \u77e5\u8bc6\u5e93\u4e2d\u6587\u8d44\u6e90\u7cbe\u9009 \u5b98\u65b9\u7f51\u7ad9 \u5b89\u88c5\u6559\u7a0b \u5165\u95e8\u6559\u7a0b \u89c6\u9891\u6559\u7a0b \u5b9e\u6218\u9879\u76ee \u5b66\u4e60\u8def\u5f84 QQ\u7fa4 167122861 \u516c\u4f17\u53f7 \u78d0\u521bAI \u5fae\u4fe1\u7fa4\u4e8c\u7ef4\u7801 www tensorflownews com Pre Trained Chinese XLNet \u4e2d\u6587XLNet\u9884\u8bad\u7ec3\u6a21\u578b \u65b0\u6d6a\u5fae\u535aPython SDK\u6709\u5173burpsuite\u7684\u63d2\u4ef6 \u975e\u5546\u5e97 \u6587\u7ae0\u4ee5\u53ca\u4f7f\u7528\u6280\u5de7\u7684\u6536\u96c6 \u6b64\u9879\u76ee\u4e0d\u518d\u63d0\u4f9bburpsuite\u7834\u89e3\u6587\u4ef6 \u5982\u9700\u8981\u8bf7\u5728\u535a\u5ba2mrxn net\u4e0b\u8f7dPython3\u7f16\u5199\u7684CMS\u6f0f\u6d1e\u68c0\u6d4b\u6846\u67b6\u57fa\u4e8edjango\u7684\u5de5\u4f5c\u6d41\u5f15\u64ce \u5de5\u5355 \ufe0f \u54d4\u54e9\u4e91 \u4e0d\u652f\u6301\u4efb\u610f\u6587\u4ef6\u7684\u5168\u901f\u4e0a\u4f20\u4e0e\u4e0b\u8f7d\u5fae\u4fe1SDK \u5305\u62ec\u5fae\u4fe1\u652f\u4ed8 \u5fae\u4fe1\u516c\u4f17\u53f7 \u5fae\u4fe1\u767b\u9646 \u5fae\u4fe1\u6d88\u606f\u5904\u7406\u7b49\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u7406\u89e3\u5821\u5792\u673a \u4e91\u684c\u9762\u81ea\u52a8\u5316\u8fd0\u7ef4 \u5ba1\u8ba1 \u5f55\u50cf \u6587\u4ef6\u7ba1\u7406 sftp\u4e0a\u4f20 \u5b9e\u65f6\u76d1\u63a7 \u5f55\u50cf\u56de\u653e \u7f51\u9875\u7248rz sz\u4e0a\u4f20\u4e0b\u8f7d \u52a8\u6001\u53e3\u4ee4 django\u8f6c\u6362\u4e2d\u56fd\u77e5\u7f51 CAJ \u683c\u5f0f\u6587\u732e\u4e3a PDF \u4f5b\u7cfb\u8f6c\u6362 \u6210\u529f\u4e0e\u5426 \u7686\u662f\u7384\u5b66 HanLP\u4f5c\u8005\u7684\u65b0\u4e66 \u81ea\u7136\u8bed\u8a00\u5904\u7406\u5165\u95e8 \u8be6\u7ec6\u7b14\u8bb0 \u4e1a\u754c\u826f\u5fc3\u4e4b\u4f5c \u4e66\u4e2d\u4e0d\u662f\u67af\u71e5\u65e0\u5473\u7684\u516c\u5f0f\u7f57\u5217 \u800c\u662f\u7528\u767d\u8bdd\u9610\u8ff0\u7684\u901a\u4fd7\u6613\u61c2\u7684\u7b97\u6cd5\u6a21\u578b \u4ece\u57fa\u672c\u6982\u5ff5\u51fa\u53d1 \u9010\u6b65\u4ecb\u7ecd\u4e2d\u6587\u5206\u8bcd \u8bcd\u6027\u6807\u6ce8 \u547d\u540d\u5b9e\u4f53\u8bc6\u522b \u4fe1\u606f\u62bd\u53d6 \u6587\u672c\u805a\u7c7b \u6587\u672c\u5206\u7c7b \u53e5\u6cd5\u5206\u6790\u8fd9\u51e0\u4e2a\u70ed\u95e8\u95ee\u9898\u7684\u7b97\u6cd5\u539f\u7406\u4e0e\u5de5\u7a0b\u5b9e\u73b0  Python3 \u7f51\u7edc\u722c\u866b\u5b9e\u6218 \u90e8\u5206\u542b\u8be6\u7ec6\u6559\u7a0b \u732b\u773c \u817e\u8baf\u89c6\u9891 \u8c46\u74e3 \u7814\u62db\u7f51 \u5fae\u535a \u7b14\u8da3\u9601\u5c0f\u8bf4 \u767e\u5ea6\u70ed\u70b9 B\u7ad9 CSDN \u7f51\u6613\u4e91\u9605\u8bfb \u963f\u91cc\u6587\u5b66 \u767e\u5ea6\u80a1\u7968 \u4eca\u65e5\u5934\u6761 \u5fae\u4fe1\u516c\u4f17\u53f7 \u7f51\u6613\u4e91\u97f3\u4e50 \u62c9\u52fe \u6709\u9053 unsplash \u5b9e\u4e60\u50e7 \u6c7d\u8f66\u4e4b\u5bb6 \u82f1\u96c4\u8054\u76df\u76d2\u5b50 \u5927\u4f17\u70b9\u8bc4 \u94fe\u5bb6 LPL\u8d5b\u7a0b \u53f0\u98ce \u68a6\u5e7b\u897f\u6e38 \u9634\u9633\u5e08\u85cf\u5b9d\u9601 \u5929\u6c14 \u725b\u5ba2\u7f51 \u767e\u5ea6\u6587\u5e93 \u7761\u524d\u6545\u4e8b \u77e5\u4e4e Wish\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u7684\u722c\u866b Python Web\u5f00\u53d1\u5b9e\u6218 \u4e66\u4e2d\u6e90\u7801\u4e00\u76f4\u53ef\u7528\u7684GoAgent \u4f1a\u5b9a\u65f6\u626b\u63cf\u53ef\u7528\u7684google gae ip \u63d0\u4f9b\u53ef\u81ea\u52a8\u5316\u83b7\u53d6ip\u8fd0\u884c\u7684\u7248\u672c\u5c42\u526a\u679d \u901a\u9053\u526a\u679d \u77e5\u8bc6\u84b8\u998f \u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b \u5305\u62ec\u591a\u79cd\u6a21\u578b HMM CRF BiLSTM BiLSTM CRF\u7684\u5177\u4f53\u5b9e\u73b0  The Way to Go \u4e2d\u6587\u8bd1\u672c \u4e2d\u6587\u6b63\u5f0f\u540d Go \u5165\u95e8\u6307\u5357 \u8c22\u8c22 Solutions to LeetCode by Go 1 % test coverage runtime beats 1 % LeetCode \u9898\u89e3\u4e00\u6b3e\u8f7b\u91cf\u7ea7 \u9ad8\u6027\u80fd \u529f\u80fd\u5f3a\u5927\u7684\u5185\u7f51\u7a7f\u900f\u4ee3\u7406\u670d\u52a1\u5668 \u652f\u6301tcp udp socks5 http\u7b49\u51e0\u4e4e\u6240\u6709\u6d41\u91cf\u8f6c\u53d1 \u53ef\u7528\u6765\u8bbf\u95ee\u5185\u7f51\u7f51\u7ad9 \u672c\u5730\u652f\u4ed8\u63a5\u53e3\u8c03\u8bd5 ssh\u8bbf\u95ee \u8fdc\u7a0b\u684c\u9762 \u5185\u7f51dns\u89e3\u6790 \u5185\u7f51socks5\u4ee3\u7406\u7b49\u7b49 \u5e76\u5e26\u6709\u529f\u80fd\u5f3a\u5927\u7684web\u7ba1\u7406\u7aef Go\u8bed\u8a00\u9ad8\u7ea7\u7f16\u7a0b \u5f00\u6e90\u56fe\u4e66 \u6db5\u76d6CGO Go\u6c47\u7f16\u8bed\u8a00 RPC\u5b9e\u73b0 Protobuf\u63d2\u4ef6\u5b9e\u73b0 Web\u6846\u67b6\u5b9e\u73b0 \u5206\u5e03\u5f0f\u7cfb\u7edf\u7b49\u9ad8\u9636\u4e3b\u9898 \u5b8c\u7a3f \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u5f3a\u52a0\u5bc6\u65e0\u7279\u5f81\u7684\u4ee3\u7406\u8f6f\u4ef6 \u96f6\u914d\u7f6e \u7b97\u6cd5\u6a21\u677f \u6700\u79d1\u5b66\u7684\u5237\u9898\u65b9\u5f0f \u6700\u5feb\u901f\u7684\u5237\u9898\u8def\u5f84 \u4f60\u503c\u5f97\u62e5\u6709 \u767e\u5ea6\u7f51\u76d8\u4e0d\u9650\u901f\u5ba2\u6237\u7aef golang qt5 \u8de8\u5e73\u53f0\u56fe\u5f62\u754c\u9762\u662fgolang\u5b9e\u73b0\u7684\u9ad8\u6027\u80fdhttp https websocket tcp socks5\u4ee3\u7406\u670d\u52a1\u5668 \u652f\u6301\u5185\u7f51\u7a7f\u900f \u94fe\u5f0f\u4ee3\u7406 \u901a\u8baf\u52a0\u5bc6 \u591c\u8bfb \u901a\u8fc7 bilibili \u5728\u7ebf\u76f4\u64ad\u7684\u65b9\u5f0f\u5206\u4eab Go \u76f8\u5173\u7684\u6280\u672f\u8bdd\u9898 \u6bcf\u5929\u5927\u5bb6\u5728\u5fae\u4fe1 telegram Slack \u4e0a\u53ca\u65f6\u6c9f\u901a\u4ea4\u6d41\u7f16\u7a0b\u6280\u672f\u8bdd\u9898  \u652f\u6301\u591a\u5bb6\u4e91\u5b58\u50a8\u7684\u4e91\u76d8\u7cfb\u7edf \u8fd9\u91cc\u662f\u5199\u535a\u5ba2\u7684\u5730\u65b9 Halfrost Field \u51b0\u971c\u4e4b\u5730Lantern\u5b98\u65b9\u7248\u672c\u4e0b\u8f7d \u84dd\u706f \u7ffb\u5899 \u4ee3\u7406 \u79d1\u5b66\u4e0a\u7f51 \u5916\u7f51 \u52a0\u901f\u5668 \u68af\u5b50 \u8def\u7531\u57fa\u4e8egin vue\u642d\u5efa\u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u6846\u67b6 \u96c6\u6210jwt\u9274\u6743 \u6743\u9650\u7ba1\u7406 \u52a8\u6001\u8def\u7531 \u5206\u9875\u5c01\u88c5 \u591a\u70b9\u767b\u5f55\u62e6\u622a \u8d44\u6e90\u6743\u9650 \u4e0a\u4f20\u4e0b\u8f7d \u4ee3\u7801\u751f\u6210\u5668 \u8868\u5355\u751f\u6210\u5668 \u901a\u7528\u5de5\u4f5c\u6d41\u7b49\u57fa\u7840\u529f\u80fd \u4e94\u5206\u949f\u4e00\u5957CURD\u524d\u540e\u7aef\u4ee3\u7801 \u76eeVUE3\u7248\u672c\u6b63\u5728\u91cd\u6784 \u6b22\u8fceissue\u548cpr \u5206\u5e03\u5f0f\u722c\u866b\u7ba1\u7406\u5e73\u53f0 \u652f\u6301\u4efb\u4f55\u8bed\u8a00\u548c\u6846\u67b6Golang\u6807\u51c6\u5e93 \u5bf9\u4e8e\u7a0b\u5e8f\u5458\u800c\u8a00 \u6807\u51c6\u5e93\u4e0e\u8bed\u8a00\u672c\u8eab\u540c\u6837\u91cd\u8981 \u5b83\u597d\u6bd4\u4e00\u4e2a\u767e\u5b9d\u7bb1 \u80fd\u4e3a\u5404\u79cd\u5e38\u89c1\u7684\u4efb\u52a1\u63d0\u4f9b\u5b8c\u7f8e\u7684\u89e3\u51b3\u65b9\u6848 \u4ee5\u793a\u4f8b\u9a71\u52a8\u7684\u65b9\u5f0f\u8bb2\u89e3Golang\u7684\u6807\u51c6\u5e93 \u5929\u7528Go\u52a8\u624b\u5199 \u4ece\u96f6\u5b9e\u73b0\u7cfb\u5217\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u4e14\u4f4e\u635f\u8017\u7684 goroutine \u6c60 \u6709 \u6709 \u8bbe\u8ba1\u6a21\u5f0f Golang\u5b9e\u73b0 \u7814\u78e8\u8bbe\u8ba1\u6a21\u5f0f \u8bfb\u4e66\u7b14\u8bb0Golang\u5b9e\u73b0\u7684\u57fa\u4e8ebeego\u6846\u67b6\u7684\u63a5\u53e3\u5728\u7ebf\u6587\u6863\u7ba1\u7406\u7cfb\u7edf\u9ad8\u6027\u80fd\u5f00\u6e90RTSP\u6d41\u5a92\u4f53\u670d\u52a1\u5668 \u57fa\u4e8ego\u8bed\u8a00\u7814\u53d1 \u7ef4\u62a4\u548c\u4f18\u5316 RTSP\u63a8\u6a21\u5f0f\u8f6c\u53d1 RTSP\u62c9\u6a21\u5f0f\u8f6c\u53d1 \u662f\u4e00\u4e2a\u9ad8\u6027\u80fd \u8f7b\u91cf\u7ea7 \u975e\u963b\u585e\u7684\u4e8b\u4ef6\u9a71\u52a8 Go \u7f51\u7edc\u6846\u67b6 \u57fa\u4e8eGin Vue Element UI\u7684\u524d\u540e\u7aef\u5206\u79bb\u6743\u9650\u7ba1\u7406\u7cfb\u7edf\u811a\u624b\u67b6 \u5305\u542b\u4e86 \u591a\u79df\u6237\u7684\u652f\u6301 \u57fa\u7840\u7528\u6237\u7ba1\u7406\u529f\u80fd jwt\u9274\u6743 \u4ee3\u7801\u751f\u6210\u5668 RBAC\u8d44\u6e90\u63a7\u5236 \u8868\u5355\u6784\u5efa \u5b9a\u65f6\u4efb\u52a1\u7b49 3\u5206\u949f\u6784\u5efa\u81ea\u5df1\u7684\u4e2d\u540e\u53f0\u9879\u76ee \u6587\u6863\u84dd\u9cb8\u667a\u4e91\u914d\u7f6e\u5e73\u53f0 BlueKing CMDB \u4eca\u65e5\u70ed\u699c \u4e00\u4e2a\u83b7\u53d6\u5404\u5927\u70ed\u95e8\u7f51\u7ad9\u70ed\u95e8\u5934\u6761\u7684\u805a\u5408\u7f51\u7ad9 \u4f7f\u7528Go\u8bed\u8a00\u7f16\u5199 \u591a\u534f\u7a0b\u5f02\u6b65\u5feb\u901f\u6293\u53d6\u4fe1\u606f \u9884\u89c8 mo fish\u4e00\u6761\u547d\u4ee4\u79bb\u7ebf\u5b89\u88c5\u9ad8\u53ef\u7528kubernetes 3min\u88c5\u5b8c 7 M 1 \u5e74\u8bc1\u4e66 \u751f\u4ea7\u73af\u5883\u7a33\u5982\u8001\u72d7\u963f\u91cc\u5df4\u5df4\u5f00\u6e90\u7684\u4e00\u6b3e\u7b80\u5355\u6613\u7528 \u529f\u80fd\u5f3a\u5927\u7684\u6df7\u6c8c\u5b9e\u9a8c\u6ce8\u5165\u5de5\u5177  Go\u8bed\u8a00\u56db\u5341\u4e8c\u7ae0\u7ecf \u8be6\u7ec6\u8bb2\u8ff0Go\u8bed\u8a00\u89c4\u8303\u4e0e\u8bed\u6cd5\u7ec6\u8282\u53ca\u5f00\u53d1\u4e2d\u5e38\u89c1\u7684\u8bef\u533a \u901a\u8fc7\u7814\u8bfb\u6807\u51c6\u5e93\u7b49\u7ecf\u5178\u4ee3\u7801\u8bbe\u8ba1\u6a21\u5f0f \u542f\u53d1\u8bfb\u8005\u6df1\u523b\u7406\u89e3Go\u8bed\u8a00\u7684\u6838\u5fc3\u601d\u7ef4 \u8fdb\u5165Go\u8bed\u8a00\u5f00\u53d1\u7684\u66f4\u9ad8\u9636\u6bb5  \ufe0f\u4e00\u4e2a\u8f7b\u5de7\u7684\u7f51\u7edc\u6df7\u6dc6\u4ee3\u7406 \u57fa\u4e8eGolang\u8f7b\u91cf\u7ea7TCP\u5e76\u53d1\u670d\u52a1\u5668\u6846\u67b6\u5b9a\u65f6\u4efb\u52a1\u7ba1\u7406\u7cfb\u7edfKubeOperator \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u8f7b\u91cf\u7ea7 Kubernetes \u53d1\u884c\u7248 \u4e13\u6ce8\u4e8e\u5e2e\u52a9\u4f01\u4e1a\u89c4\u5212 \u90e8\u7f72\u548c\u8fd0\u8425\u751f\u4ea7\u7ea7\u522b\u7684 K8s \u96c6\u7fa4 \u672c\u7cfb\u7edf\u662f\u96c6\u5de5\u5355\u7edf\u8ba1 \u4efb\u52a1\u94a9\u5b50 \u6743\u9650\u7ba1\u7406 \u7075\u6d3b\u914d\u7f6e\u6d41\u7a0b\u4e0e\u6a21\u7248\u7b49\u7b49\u4e8e\u4e00\u8eab\u7684\u5f00\u6e90\u5de5\u5355\u7cfb\u7edf \u5f53\u7136\u4e5f\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u5de5\u4f5c\u6d41\u5f15\u64ce \u81f4\u529b\u4e8e\u51cf\u5c11\u8de8\u90e8\u95e8\u4e4b\u95f4\u7684\u6c9f\u901a \u81ea\u52a8\u4efb\u52a1\u7684\u6267\u884c \u63d0\u5347\u5de5\u4f5c\u6548\u7387\u4e0e\u5de5\u4f5c\u8d28\u91cf \u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u5de5\u4f5c\u91cf\u4e0e\u4eba\u4e3a\u51fa\u9519\u7387 Go\u5b9e\u73b0\u7684Trojan\u4ee3\u7406 \u652f\u6301\u591a\u8def\u590d\u7528 \u8def\u7531\u529f\u80fd CDN\u4e2d\u8f6c Shadowsocks\u6df7\u6dc6\u63d2\u4ef6 \u591a\u5e73\u53f0 \u65e0\u4f9d\u8d56 Go\u8bed\u6cd5\u6811\u5165\u95e8 \u5f00\u542f\u81ea\u5236\u7f16\u7a0b\u8bed\u8a00\u548c\u7f16\u8bd1\u5668\u4e4b\u65c5 \u5f00\u6e90\u514d\u8d39\u56fe\u4e66 Go\u8bed\u8a00\u8fdb\u9636 \u638c\u63e1\u62bd\u8c61\u8bed\u6cd5\u6811 Go\u8bed\u8a00AST \u51f9\u8bed\u8a00 \u4e00\u6b3e\u53ef\u5168\u5e73\u53f0\u8fd0\u884c\u7684\u6d4f\u89c8\u5668\u6570\u636e\u5bfc\u51fa\u89e3\u5bc6\u5de5\u5177 Golang\u76f8\u5173 \u5ba1\u7a3f\u8fdb\u5ea68 % Go\u8bed\u6cd5 Go\u5e76\u53d1\u601d\u60f3 Go\u4e0eweb\u5f00\u53d1 Go\u5fae\u670d\u52a1\u8bbe\u65bd\u7b49Jupiter\u662f\u6597\u9c7c\u5f00\u6e90\u7684\u9762\u5411\u670d\u52a1\u6cbb\u7406\u7684Golang\u5fae\u670d\u52a1\u6846\u67b6Elasticsearch \u53ef\u89c6\u5316DashBoard \u652f\u6301Es\u76d1\u63a7 \u5b9e\u65f6\u641c\u7d22 Index template\u5feb\u6377\u66ff\u6362\u4fee\u6539 \u7d22\u5f15\u5217\u8868\u4fe1\u606f\u67e5\u770b SQL converts to DSL\u7b49  \u4ece\u95ee\u9898\u5207\u5165 \u4e32\u8fde Go \u8bed\u8a00\u76f8\u5173\u7684\u6240\u6709\u77e5\u8bc6 \u878d\u4f1a\u8d2f\u901a golang design go questionsWeChat SDK for Go \u5fae\u4fe1SDK \u7b80\u5355 \u6613\u7528 go fastdfs \u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf \u79c1\u6709\u4e91\u5b58\u50a8 \u5177\u6709\u65e0\u4e2d\u5fc3 \u9ad8\u6027\u80fd \u9ad8\u53ef\u9760 \u514d\u7ef4\u62a4\u7b49\u4f18\u70b9 \u652f\u6301\u65ad\u70b9\u7eed\u4f20 \u5206\u5757\u4e0a\u4f20 \u5c0f\u6587\u4ef6\u5408\u5e76 \u81ea\u52a8\u540c\u6b65 \u81ea\u52a8\u4fee\u590d Mastering GO \u4e2d\u6587\u8bd1\u672c \u73a9\u8f6c GO \u4e91\u539f\u751f\u4e14\u6613\u7528\u7684\u5e94\u7528\u7ba1\u7406\u5e73\u53f0 Go Web \u57fa\u7840 \u662f\u4e00\u5957\u9488\u5bf9 Google \u51fa\u54c1\u7684 Go \u8bed\u8a00\u7684\u89c6\u9891\u8bed\u97f3\u6559\u7a0b \u4e3b\u8981\u9762\u5411\u5b8c\u6210 Go \u7f16\u7a0b\u57fa\u7840 \u6559\u7a0b\u540e\u5e0c\u671b\u8fdb\u4e00\u6b65\u4e86\u89e3\u6709\u5173 Go Web \u5f00\u53d1\u7684\u5b66\u4e60\u8005 \u4e2d\u6587\u540d \u609f\u7a7a API \u7f51\u5173 \u662f\u4e00\u4e2a\u57fa\u4e8e Golang\u5f00\u53d1\u7684\u5fae\u670d\u52a1\u7f51\u5173 \u80fd\u591f\u5b9e\u73b0\u9ad8\u6027\u80fd HTTP API \u8f6c\u53d1 \u670d\u52a1\u7f16\u6392 \u591a\u79df\u6237\u7ba1\u7406 API \u8bbf\u95ee\u6743\u9650\u63a7\u5236\u7b49\u76ee\u7684 \u62e5\u6709\u5f3a\u5927\u7684\u81ea\u5b9a\u4e49\u63d2\u4ef6\u7cfb\u7edf\u53ef\u4ee5\u81ea\u884c\u6269\u5c55 \u5e76\u4e14\u63d0\u4f9b\u53cb\u597d\u7684\u56fe\u5f62\u5316\u914d\u7f6e\u754c\u9762 \u80fd\u591f\u5feb\u901f\u5e2e\u52a9\u4f01\u4e1a\u8fdb\u884c API \u670d\u52a1\u6cbb\u7406 \u63d0\u9ad8 API \u670d\u52a1\u7684\u7a33\u5b9a\u6027\u548c\u5b89\u5168\u6027  \u96c6\u5408\u591a\u5bb6 API \u7684\u65b0\u4e00\u4ee3\u56fe\u5e8aMIT\u8bfe\u7a0b Distributed Systems \u5b66\u4e60\u548c\u7ffb\u8bd1Go\u8bed\u8a00\u5723\u7ecf\u4e2d\u6587\u7248 \u53ea\u63a5\u6536PR Issue\u8bf7\u63d0\u4ea4\u5230golang china gopl zh trojan\u591a\u7528\u6237\u7ba1\u7406\u90e8\u7f72\u7a0b\u5e8f \u652f\u6301web\u9875\u9762\u7ba1\u7406BookStack \u57fa\u4e8eMinDoc \u4f7f\u7528Beego\u5f00\u53d1\u7684\u5728\u7ebf\u6587\u6863\u7ba1\u7406\u7cfb\u7edf \u529f\u80fd\u7c7b\u4f3cGitbook\u548c\u770b\u4e91 weixin wechat \u5fae\u4fe1\u516c\u4f17\u5e73\u53f0 \u5fae\u4fe1\u4f01\u4e1a\u53f7 \u5fae\u4fe1\u5546\u6237\u5e73\u53f0 \u5fae\u4fe1\u652f\u4ed8 go golang sdk  \u84dd\u773c\u4e91\u76d8 Eyeblue Cloud Storage \u8bed\u8a00\u9ad8\u6027\u80fd\u7f16\u7a0b Go \u8bed\u8a00\u9677\u9631 Gotchas Traps \u4f7f\u7528 XMind \u8bb0\u5f55 Linux \u64cd\u4f5c\u7cfb\u7edf \u7f51\u7edc C Golang \u4ee5\u53ca\u6570\u636e\u5e93\u7684\u4e00\u4e9b\u8bbe\u8ba1cqhttp\u7684golang\u5b9e\u73b0 \u8f7b\u91cf \u539f\u751f\u8de8\u5e73\u53f0 mqant\u662f\u4e00\u6b3e\u57fa\u4e8eGolang\u8bed\u8a00\u7684\u7b80\u6d01 \u9ad8\u6548 \u9ad8\u6027\u80fd\u7684\u5206\u5e03\u5f0f\u5fae\u670d\u52a1\u6846\u67b6\u57fa\u4e8ereact node js go\u5f00\u53d1\u7684\u5fae\u5546\u57ce \u542b\u5fae\u4fe1\u5c0f\u7a0b\u5e8f MM Wiki \u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u4f01\u4e1a\u77e5\u8bc6\u5206\u4eab\u4e0e\u56e2\u961f\u534f\u540c\u8f6f\u4ef6 \u53ef\u7528\u4e8e\u5feb\u901f\u6784\u5efa\u4f01\u4e1a Wiki \u548c\u56e2\u961f\u77e5\u8bc6\u5206\u4eab\u5e73\u53f0 \u90e8\u7f72\u65b9\u4fbf \u4f7f\u7528\u7b80\u5355 \u5e2e\u52a9\u56e2\u961f\u6784\u5efa\u4e00\u4e2a\u4fe1\u606f\u5171\u4eab \u6587\u6863\u7ba1\u7406\u7684\u534f\u4f5c\u73af\u5883 Go \u8bed\u8a00\u4e2d\u6587\u7f51 Golang\u4e2d\u6587\u793e\u533a Go\u8bed\u8a00\u5b66\u4e60\u56ed\u5730 \u6e90\u7801\u57fa\u4e8e Gin \u8fdb\u884c\u6a21\u5757\u5316\u8bbe\u8ba1\u7684 API \u6846\u67b6 \u5c01\u88c5\u4e86\u5e38\u7528\u529f\u80fd \u4f7f\u7528\u7b80\u5355 \u81f4\u529b\u4e8e\u8fdb\u884c\u5feb\u901f\u7684\u4e1a\u52a1\u7814\u53d1 \u6bd4\u5982 \u652f\u6301 cors \u8de8\u57df jwt \u7b7e\u540d\u9a8c\u8bc1 zap \u65e5\u5fd7\u6536\u96c6 panic \u5f02\u5e38\u6355\u83b7 trace \u94fe\u8def\u8ffd\u8e2a prometheus \u76d1\u63a7\u6307\u6807 swagger \u6587\u6863\u751f\u6210 viper \u914d\u7f6e\u6587\u4ef6\u89e3\u6790 gorm \u6570\u636e\u5e93\u7ec4\u4ef6 gormgen \u4ee3\u7801\u751f\u6210\u5de5\u5177 graphql \u67e5\u8be2\u8bed\u8a00 errno \u7edf\u4e00\u5b9a\u4e49\u9519\u8bef\u7801 gRPC \u7684\u4f7f\u7528 \u7b49\u7b49 syncd\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u4ee3\u7801\u90e8\u7f72\u5de5\u5177 \u5b83\u5177\u6709\u7b80\u5355 \u9ad8\u6548 \u6613\u7528\u7b49\u7279\u70b9 \u53ef\u4ee5\u63d0\u9ad8\u56e2\u961f\u7684\u5de5\u4f5c\u6548\u7387 \u4e00\u6b3e\u7531 YSRC \u5f00\u6e90\u7684\u4e3b\u673a\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edfgolang\u9762\u8bd5\u9898\u96c6\u5408\u8fd9\u662f\u4e00\u4e2a\u53ef\u4ee5\u8bc6\u522b\u89c6\u9891\u8bed\u97f3\u81ea\u52a8\u751f\u6210\u5b57\u5e55SRT\u6587\u4ef6\u7684\u5f00\u6e90 Windows GUI \u8f6f\u4ef6\u5de5\u5177 \u4e00\u6b3e\u5185\u7f51\u7efc\u5408\u626b\u63cf\u5de5\u5177 \u65b9\u4fbf\u4e00\u952e\u81ea\u52a8\u5316 \u5168\u65b9\u4f4d\u6f0f\u626b\u626b\u63cf \u662f\u4e00\u4e2a\u7528\u4e8e\u5728\u4e24\u4e2aredis\u4e4b\u95f4\u540c\u6b65\u6570\u636e\u7684\u5de5\u5177 \u6ee1\u8db3\u7528\u6237\u975e\u5e38\u7075\u6d3b\u7684\u540c\u6b65 \u8fc1\u79fb\u9700\u6c42 Overlord\u662f\u54d4\u54e9\u54d4\u54e9\u57fa\u4e8eGo\u8bed\u8a00\u7f16\u5199\u7684memcache\u548credis cluster\u7684\u4ee3\u7406\u53ca\u96c6\u7fa4\u7ba1\u7406\u529f\u80fd \u81f4\u529b\u4e8e\u63d0\u4f9b\u81ea\u52a8\u5316\u9ad8\u53ef\u7528\u7684\u7f13\u5b58\u670d\u52a1\u89e3\u51b3\u65b9\u6848 Stack RPC \u4e2d\u6587\u793a\u4f8b \u6559\u7a0b \u8d44\u6599 \u6e90\u7801\u89e3\u8bfbICMP\u6d41\u91cf\u4f2a\u88c5\u8f6c\u53d1\u5de5\u5177Freedom\u662f\u4e00\u4e2a\u57fa\u4e8e\u516d\u8fb9\u5f62\u67b6\u6784\u7684\u6846\u67b6 \u53ef\u4ee5\u652f\u6491\u5145\u8840\u7684\u9886\u57df\u6a21\u578b\u8303\u5f0f  Go2\u7f16\u7a0b\u6307\u5357 \u5f00\u6e90\u56fe\u4e66 \u91cd\u70b9\u8bb2\u89e3Go2\u65b0\u7279\u6027 \u4ee5\u53caGo1\u6559\u7a0b\u4e2d\u8f83\u5c11\u6d89\u53ca\u7684\u7279\u6027\u8bed\u8a00\u9ad8\u6027\u80fd\u5206\u8bcdgolang\u5199\u7684IM\u670d\u52a1\u5668 \u670d\u52a1\u7ec4\u4ef6\u5f62\u5f0f  \u7ed3\u5df4 \u4e2d\u6587\u5206\u8bcd\u7684Golang\u7248\u672cxorm\u662f\u4e00\u4e2a\u7b80\u5355\u800c\u5f3a\u5927\u7684Go\u8bed\u8a00ORM\u5e93 \u901a\u8fc7\u5b83\u53ef\u4ee5\u4f7f\u6570\u636e\u5e93\u64cd\u4f5c\u975e\u5e38\u7b80\u4fbf \u672c\u5e93\u662f\u57fa\u4e8e\u539f\u7248xorm\u7684\u5b9a\u5236\u589e\u5f3a\u7248\u672c \u4e3axorm\u63d0\u4f9b\u7c7b\u4f3cibatis\u7684\u914d\u7f6e\u6587\u4ef6\u53ca\u52a8\u6001SQL\u652f\u6301 \u652f\u6301AcitveRecord\u64cd\u4f5c\u4e00\u4e2a Go \u8bed\u8a00\u5b9e\u73b0\u7684\u5feb\u901f \u7a33\u5b9a \u5185\u5d4c\u7684 k v \u6570\u636e\u5e93 \u9ad8\u6027\u80fd\u8868\u683c\u6570\u636e\u5bfc\u51fa\u5668\u57fa\u4e8eGolang\u7684\u5f00\u6e90\u793e\u533a\u7cfb\u7edf \u7248\u672c\u7f51\u6613\u4e91\u97f3\u4e50ncm\u6587\u4ef6\u683c\u5f0f\u8f6c\u6362 go \u5b9e\u73b0\u7684\u538b\u6d4b\u5de5\u5177 ab locust Jmeter\u538b\u6d4b\u5de5\u5177\u4ecb\u7ecd \u5355\u53f0\u673a\u56681 w\u8fde\u63a5\u538b\u6d4b\u5b9e\u6218 \u6293\u5305\u622a\u53d6\u9879\u76ee\u4e2d\u7684\u6570\u636e\u5e93\u8bf7\u6c42\u5e76\u89e3\u6790\u6210\u76f8\u5e94\u7684\u8bed\u53e5  Go\u4e13\u5bb6\u7f16\u7a0b Go\u8bed\u8a00\u5feb\u901f\u5165\u95e8 \u8f7b\u677e\u8fdb\u9636 <<\u81ea\u5df1\u52a8\u624b\u5199docker \u6e90\u7801Go \u6bcf\u65e5\u4e00\u5e93kunpeng\u662f\u4e00\u4e2aGolang\u7f16\u5199\u7684\u5f00\u6e90POC\u6846\u67b6 \u5e93 \u4ee5\u52a8\u6001\u94fe\u63a5\u5e93\u7684\u5f62\u5f0f\u63d0\u4f9b\u5404\u79cd\u8bed\u8a00\u8c03\u7528 \u901a\u8fc7\u6b64\u9879\u76ee\u53ef\u5feb\u901f\u5f00\u53d1\u6f0f\u6d1e\u68c0\u6d4b\u7c7b\u7684\u7cfb\u7edf vue js element\u6846\u67b6 golang beego\u6846\u67b6 \u5f00\u53d1\u7684\u8fd0\u7ef4\u53d1\u5e03\u7cfb\u7edf \u652f\u6301git jenkins\u7248\u672c\u53d1\u5e03 go ssh BT\u4e24\u79cd\u6587\u4ef6\u4f20\u8f93\u65b9\u5f0f\u9009\u62e9 \u652f\u6301\u90e8\u7f72\u524d\u51c6\u5907\u4efb\u52a1\u548c\u90e8\u7f72\u540e\u4efb\u52a1\u94a9\u5b50\u51fd\u6570 Go \u4ece\u5165\u95e8\u5230\u5b9e\u6218 \u5b66\u4e60\u7b14\u8bb0 \u4ece\u96f6\u5f00\u59cb\u5b66 Go Gin \u6846\u67b6 \u57fa\u672c\u8bed\u6cd5\u5305\u62ec 26 \u4e2aDemo Gin \u6846\u67b6\u5305\u62ec Gin \u81ea\u5b9a\u4e49\u8def\u7531\u914d\u7f6e Gin \u4f7f\u7528 Logrus \u8fdb\u884c\u65e5\u5fd7\u8bb0\u5f55 Gin \u6570\u636e\u7ed1\u5b9a\u548c\u9a8c\u8bc1 Gin \u81ea\u5b9a\u4e49\u9519\u8bef\u5904\u7406 Go gRPC Hello World \u6301\u7eed\u66f4\u65b0\u4e2d Go \u5b66\u4e60\u4e4b\u8def Go \u5f00\u53d1\u8005\u535a\u5ba2 Go \u5fae\u4fe1\u516c\u4f17\u53f7 Go \u5b66\u4e60\u8d44\u6599 \u6587\u6863 \u4e66\u7c4d \u89c6\u9891 \u5fae\u4fe1 WeChat \u652f\u4ed8\u5b9d AliPay \u7684Go\u7248\u672cSDK \u6781\u7b80 \u6613\u7528\u7684\u805a\u5408\u652f\u4ed8SDK Go by Example \u901a\u8fc7\u4f8b\u5b50\u5b66 GolangPPGo Job\u662f\u4e00\u6b3e\u53ef\u89c6\u5316\u7684 \u591a\u4eba\u591a\u6743\u9650\u7684 \u4e00\u4efb\u52a1\u591a\u673a\u6267\u884c\u7684\u5b9a\u65f6\u4efb\u52a1\u7ba1\u7406\u7cfb\u7edf \u91c7\u7528golang\u5f00\u53d1 \u5b89\u88c5\u65b9\u4fbf \u8d44\u6e90\u6d88\u8017\u5c11 \u652f\u6301\u5927\u5e76\u53d1 \u53ef\u540c\u65f6\u7ba1\u7406\u591a\u53f0\u670d\u52a1\u5668\u4e0a\u7684\u5b9a\u65f6\u4efb\u52a1 Golang\u5b9e\u73b0\u7684IP\u4ee3\u7406\u6c60\u662f\u4e00\u6b3e\u7528Go\u8bed\u8a00\u5f00\u53d1\u7684web\u5e94\u7528\u6846\u67b6 API\u7279\u6027\u7c7b\u4f3c\u4e8eTornado\u5e76\u4e14\u62e5\u6709\u6bd4Tornado\u66f4\u597d\u7684\u6027\u80fd  \u81ea\u5df1\u52a8\u624b\u5199Java\u865a\u62df\u673a \u968f\u4e66\u6e90\u4ee3\u7801\u652f\u4ed8\u5b9d AliPay SDK for Go \u96c6\u6210\u7b80\u5355 \u529f\u80fd\u5b8c\u5584 \u6301\u7eed\u66f4\u65b0 \u652f\u6301\u516c\u94a5\u8bc1\u4e66\u548c\u666e\u901a\u516c\u94a5\u8fdb\u884c\u7b7e\u540d\u548c\u9a8c\u7b7e  ARCHIVED Geph \u8ff7\u9727\u901a\u5e2e\u52a9\u4f60\u5c06\u672c\u5730\u7aef\u53e3\u66b4\u9732\u5728\u5916\u7f51 \u652f\u6301TCP UDP \u5f53\u7136\u4e5f\u652f\u6301HTTP \u6df1\u5165Go\u5e76\u53d1\u7f16\u7a0b\u7814\u8ba8\u8bfe\u65e0\u72b6\u6001\u5b50\u57df\u540d\u7206\u7834\u5de5\u5177\u624b\u673a\u53f7\u7801\u5f52\u5c5e\u5730\u4fe1\u606f\u5e93 \u624b\u673a\u53f7\u5f52\u5c5e\u5730\u67e5\u8be2 phone dat \u6700\u540e\u66f4\u65b0 2 21\u5e74 6\u6708 golang\u57fa\u4e8ewebsocket\u5355\u53f0\u673a\u5668\u652f\u6301\u767e\u4e07\u8fde\u63a5\u5206\u5e03\u5f0f\u804a\u5929 IM \u7cfb\u7edf\u57fa\u4e8emongodb oplog\u7684\u96c6\u7fa4\u590d\u5236\u5de5\u5177 \u53ef\u4ee5\u6ee1\u8db3\u8fc1\u79fb\u548c\u540c\u6b65\u7684\u9700\u6c42 \u8fdb\u4e00\u6b65\u5b9e\u73b0\u707e\u5907\u548c\u591a\u6d3b\u529f\u80fd Gin Gorm\u5f00\u53d1Golang API\u5feb\u901f\u5f00\u53d1\u811a\u624b\u67b6\u7b80\u5355\u53ef\u4fe1\u8d56\u7684\u4efb\u52a1\u7ba1\u7406\u5de5\u5177Go\u8bed\u8a00\u5b9e\u4f8b\u6559\u7a0b\u4ece\u5165\u95e8\u5230\u8fdb\u9636 \u5305\u62ec\u57fa\u7840\u5e93\u4f7f\u7528 \u8bbe\u8ba1\u6a21\u5f0f \u9762\u8bd5\u6613\u9519\u70b9 \u5de5\u5177\u7c7b \u5bf9\u63a5\u7b2c\u4e09\u65b9\u7b49\u6388\u6743\u6846\u67b6\u7b80\u4f53\u4e2d\u6587\u7ffb\u8bd1 \u81ea\u52a8\u6293\u53d6tg\u9891\u9053 \u8ba2\u9605\u5730\u5740 \u516c\u5f00\u4e92\u8054\u7f51\u4e0a\u7684ss ssr vmess trojan\u8282\u70b9\u4fe1\u606f \u805a\u5408\u53bb\u91cd\u540e\u63d0\u4f9b\u8282\u70b9\u5217\u8868\u8f7b\u91cf\u7ea7 go \u4e1a\u52a1\u6846\u67b6  \u54ea\u5412\u76d1\u63a7 \u4e00\u7ad9\u5f0f\u8f7b\u76d1\u63a7\u8f7b\u8fd0\u7ef4\u7cfb\u7edf \u652f\u6301\u7cfb\u7edf\u72b6\u6001 TCP Ping \u76d1\u63a7\u62a5\u8b66 \u547d\u4ee4\u6279\u91cf\u6267\u884c\u548c\u8ba1\u5212\u4efb\u52a1 Go \u8bed\u8a00\u5b98\u65b9\u6559\u7a0b\u4e2d\u6587\u7248\u5de5\u7a0b\u5e08\u77e5\u8bc6\u7ba1\u7406\u7cfb\u7edf \u57fa\u4e8egolang go\u8bed\u8a00 beego\u6846\u67b6 \u6bcf\u4e2a\u884c\u4e1a\u90fd\u6709\u81ea\u5df1\u7684\u77e5\u8bc6\u7ba1\u7406\u7cfb\u7edf engineercms\u65e8\u5728\u4e3a\u571f\u6728\u5de5\u7a0b\u5e08\u4eec\u6253\u9020\u4e00\u6b3e\u9002\u7528\u7684\u57fa\u4e8eweb\u7684\u77e5\u8bc6\u7ba1\u7406\u7cfb\u7edf \u5b83\u65e2\u53ef\u4ee5\u7528\u4e8e\u7ba1\u7406\u4e2a\u4eba\u7684\u9879\u76ee\u8d44\u6599 \u4e5f\u53ef\u4ee5\u7528\u4e8e\u7ba1\u7406\u9879\u76ee\u56e2\u961f\u8d44\u6599 \u5b83\u65e2\u53ef\u4ee5\u8fd0\u884c\u4e8e\u4e2a\u4eba\u7535\u8111 \u4e5f\u53ef\u4ee5\u653e\u5230\u670d\u52a1\u5668\u4e0a \u652f\u6301\u63d0\u53d6\u7801\u5206\u4eab\u6587\u4ef6 onlyoffice\u5b9e\u65f6\u6587\u6863\u534f\u4f5c \u76f4\u63a5\u5728\u7ebf\u7f16\u8f91dwg\u6587\u4ef6 office\u6587\u6863 \u5728\u7ebf\u5229\u7528mindoc\u521b\u4f5c\u4f60\u7684\u4e66\u7c4d \u9605\u89c8PDF\u6587\u4ef6 \u901a\u7528\u7684\u4e1a\u52a1\u6d41\u7a0b\u8bbe\u7f6e \u624b\u673a\u7aef\u914d\u5957\u5c0f\u7a0b\u5e8f \u5fae\u4fe1\u641c\u7d22\u201c\u73e0\u4e09\u89d2\u8bbe\u4ee3\u201d\u6216\u201c\u9752\u5c11\u513f\u4e66\u753b\u201d\u5373\u53ef\u547c\u51fa\u5c0f\u7a0b\u5e8f \u8fb9\u754c\u6253\u70b9\u540e\u7684\u81ea\u52a8\u5316\u6e17\u900f\u5de5\u5177\u4e00\u4e2a\u96c6\u5ba1\u6838 \u6267\u884c \u5907\u4efd\u53ca\u751f\u6210\u56de\u6eda\u8bed\u53e5\u4e8e\u4e00\u8eab\u7684MySQL\u8fd0\u7ef4\u5de5\u5177\u6c49\u5b57\u8f6c\u62fc\u97f3 Go\u8d44\u6e90\u7cbe\u9009\u4e2d\u6587\u7248 \u542b\u4e2d\u6587\u56fe\u4e66\u5927\u5168 \u8bed\u8a00\u5b9e\u73b0\u7684 Redis \u670d\u52a1\u5668\u548c\u5206\u5e03\u5f0f\u96c6\u7fa4 \u8d85\u5168golang\u9762\u8bd5\u9898\u5408\u96c6 golang\u5b66\u4e60\u6307\u5357 golang\u77e5\u8bc6\u56fe\u8c31 \u5165\u95e8\u6210\u957f\u8def\u7ebf \u4e00\u4efd\u6db5\u76d6\u5927\u90e8\u5206golang\u7a0b\u5e8f\u5458\u6240\u9700\u8981\u638c\u63e1\u7684\u6838\u5fc3\u77e5\u8bc6 \u5e38\u7528\u7b2c\u4e09\u65b9\u5e93 mysql mq es redis\u7b49 \u673a\u5668\u5b66\u4e60\u5e93 \u7b97\u6cd5\u5e93 \u6e38\u620f\u5e93 \u5f00\u6e90\u6846\u67b6 \u81ea\u7136\u8bed\u8a00\u5904\u7406nlp\u5e93 \u7f51\u7edc\u5e93 \u89c6\u9891\u5e93 \u5fae\u670d\u52a1\u6846\u67b6 \u89c6\u9891\u6559\u7a0b \u97f3\u9891\u97f3\u4e50\u5e93 \u56fe\u5f62\u56fe\u7247\u5e93 \u7269\u8054\u7f51\u5e93 \u5730\u7406\u4f4d\u7f6e\u4fe1\u606f \u5d4c\u5165\u5f0f\u811a\u672c\u5e93 \u7f16\u8bd1\u5668\u5e93 \u6570\u636e\u5e93 \u91d1\u878d\u5e93 \u7535\u5b50\u90ae\u4ef6\u5e93 \u7535\u5b50\u4e66\u7c4d \u5206\u8bcd \u6570\u636e\u7ed3\u6784 \u8bbe\u8ba1\u6a21\u5f0f \u53bbhtml tag\u6807\u7b7e\u7b49 go\u5b66\u4e60 go\u9762\u8bd5go\u8bed\u8a00\u6269\u5c55\u5305 \u6536\u96c6\u4e00\u4e9b\u5e38\u7528\u7684\u64cd\u4f5c\u51fd\u6570 \u8f85\u52a9\u66f4\u5feb\u7684\u5b8c\u6210\u5f00\u53d1\u5de5\u4f5c \u5e76\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u767e\u7075\u5feb\u4f20 \u57fa\u4e8eGo\u8bed\u8a00\u7684\u9ad8\u6027\u80fd \u624b\u673a\u7535\u8111\u8d85\u5927\u6587\u4ef6\u4f20\u8f93\u795e\u5668 \u5c40\u57df\u7f51\u5171\u4eab\u6587\u4ef6\u670d\u52a1\u5668 LAN large file transfer tool \u4e00\u4e2a\u57fa\u4e8e\u4e91\u5b58\u50a8\u7684\u7f51\u76d8\u7cfb\u7edf \u7528\u4e8e\u81ea\u5efa\u79c1\u4eba\u7f51\u76d8\u6216\u4f01\u4e1a\u7f51\u76d8 go\u5206\u5e03\u5f0f\u670d\u52a1\u5668 \u57fa\u4e8e\u5185\u5b58mmo\u4e2a\u4eba\u535a\u5ba2\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u670d\u52a1\u7aef SDK for Golang \u63a7\u5236\u53f0\u989c\u8272\u6e32\u67d3\u5de5\u5177\u5e93 \u652f\u630116\u8272 256\u8272 RGB\u8272\u5f69\u6e32\u67d3\u8f93\u51fa \u4f7f\u7528\u7c7b\u4f3c\u4e8e Print Sprintf \u517c\u5bb9\u5e76\u652f\u6301 Windows \u73af\u5883\u7684\u8272\u5f69\u6e32\u67d3\u57fa\u4e8e IoC \u7684 Go \u540e\u7aef\u4e00\u7ad9\u5f0f\u5f00\u53d1\u6846\u67b6 v2ray web manager \u662f\u4e00\u4e2av2ray\u7684\u9762\u677f \u4e5f\u662f\u4e00\u4e2a\u96c6\u7fa4\u7684\u89e3\u51b3\u65b9\u6848 \u540c\u65f6\u589e\u52a0\u4e86\u6d41\u91cf\u63a7\u5236 \u8d26\u53f7\u7ba1\u7406 \u9650\u901f\u7b49\u529f\u80fd key admin panel web cluster \u96c6\u7fa4 proxyServerScan\u4e00\u6b3e\u4f7f\u7528Golang\u5f00\u53d1\u7684\u9ad8\u5e76\u53d1\u7f51\u7edc\u626b\u63cf \u670d\u52a1\u63a2\u6d4b\u5de5\u5177 \u662fhttp client\u9886\u57df\u7684\u745e\u58eb\u519b\u5200 \u5c0f\u5de7 \u5f3a\u5927 \u7280\u5229 \u5177\u4f53\u7528\u6cd5\u53ef\u770b\u6587\u6863 \u5982\u4f7f\u7528\u8ff7\u60d1\u6216\u8005API\u7528\u5f97\u4e0d\u723d\u90fd\u53ef\u63d0issuesTcpRoute TCP \u5c42\u7684\u8def\u7531\u5668 \u5bf9\u4e8e TCP \u8fde\u63a5\u81ea\u52a8\u4ece\u591a\u4e2a\u7ebf\u8def \u7535\u4fe1 \u8054\u901a \u79fb\u52a8 \u591a\u4e2a\u57df\u540d\u89e3\u6790\u7ed3\u679c\u4e2d\u9009\u62e9\u6700\u4f18\u7ebf\u8def Bifrost \u9762\u5411\u751f\u4ea7\u73af\u5883\u7684 MySQL \u540c\u6b65\u5230Redis MongoDB ClickHouse MySQL\u7b49\u670d\u52a1\u7684\u5f02\u6784\u4e2d\u95f4\u4ef6\u5e94\u7528\u7f51\u5173 \u63d0\u4f9b\u5feb\u901f \u5b89\u5168\u7684\u5e94\u7528\u4ea4\u4ed8 \u8eab\u4efd\u8ba4\u8bc1 WAF CC HTTPS\u4ee5\u53caACME\u81ea\u52a8\u8bc1\u4e66 A telegram bot for rss reader \u4e00\u4e2a\u652f\u6301\u5e94\u7528\u5185\u9605\u8bfb\u7684 Telegram RSS Bot RESTful API \u6587\u6863\u751f\u6210\u5de5\u5177 \u652f\u6301\u548c Ruby \u7b49\u5927\u90e8\u5206\u8bed\u8a00 \u57fa\u4e8egin gorm\u5f00\u53d1\u7684\u4e2a\u4eba\u535a\u5ba2\u9879\u76ee\u57fa\u4e8eGo\u8bed\u8a00\u7684\u56fd\u5bc6SM2 SM3 SM4\u7b97\u6cd5\u5e93 Golang \u8bbe\u8ba1\u6a21\u5f0f\u4e00\u4e2a\u963f\u91cc\u4e91\u76d8\u5217\u8868\u7a0b\u5e8f \u4e00\u6b3e\u5c0f\u5de7\u7684\u57fa\u4e8eGo\u6784\u5efa\u7684\u5f00\u53d1\u6846\u67b6 \u53ef\u4ee5\u5feb\u901f\u6784\u5efaAPI\u670d\u52a1\u6216\u8005Web\u7f51\u7ad9\u8fdb\u884c\u4e1a\u52a1\u5f00\u53d1 \u9075\u5faaSOLID\u8bbe\u8ba1\u539f\u5219\u5e76\u53d1\u7f16\u7a0b\u5b9e\u6218 \u7b2c2\u7248 Go \u5b66\u4e60 Go \u8fdb\u9636 Go \u5b9e\u7528\u5de5\u5177\u7c7b Go kit Go Micro \u5fae\u670d\u52a1\u5b9e\u8df5 Go \u63a8\u9001\u57fa\u4e8eDDD\u7684o2o\u7684\u4e1a\u52a1\u6a21\u578b\u53ca\u57fa\u7840 \u4f7f\u7528Golang gRPC Thrift\u5b9e\u73b0Sharingan \u5199\u8f6e\u773c \u662f\u4e00\u4e2a\u57fa\u4e8egolang\u7684\u6d41\u91cf\u5f55\u5236\u56de\u653e\u5de5\u5177 \u9002\u5408\u9879\u76ee\u91cd\u6784 \u56de\u5f52\u6d4b\u8bd5\u7b49 \u767e\u5ea6\u4e91\u7f51\u76d8\u722c\u866b\u57fa\u4e8ebeego\u7684\u8fdb\u9500\u5b58\u7cfb\u7edf TeaWeb \u53ef\u89c6\u5316\u7684Web\u4ee3\u7406\u670d\u52a1 DEMO teaos cn  \u767d\u5e3d\u5b50\u5b89\u5168\u5f00\u53d1\u5b9e\u6218 \u914d\u5957\u4ee3\u7801\u6296\u97f3\u63a8\u8350 \u641c\u7d22\u9875\u89c6\u9891\u5217\u8868\u89c6\u9891\u722c\u866b\u65b9\u6848 \u57fa\u4e8eapp \u865a\u62df\u673a\u6216\u771f\u673a \u76f8\u5173\u6280\u672f golang adb\u4e00\u6b3e\u7532\u65b9\u8d44\u4ea7\u5de1\u822a\u626b\u63cf\u7cfb\u7edf \u7cfb\u7edf\u5b9a\u4f4d\u662f\u53d1\u73b0\u8d44\u4ea7 \u8fdb\u884c\u7aef\u53e3\u7206\u7834 \u5e2e\u52a9\u4f01\u4e1a\u66f4\u5feb\u53d1\u73b0\u5f31\u53e3\u4ee4\u95ee\u9898 \u4e3b\u8981\u529f\u80fd\u5305\u62ec \u8d44\u4ea7\u63a2\u6d4b \u7aef\u53e3\u7206\u7834 \u5b9a\u65f6\u4efb\u52a1 \u7ba1\u7406\u540e\u53f0\u8bc6\u522b \u62a5\u8868\u5c55\u793a\u63d0\u4f9b\u5fae\u4fe1\u7ec8\u7aef\u7248\u672c \u5fae\u4fe1\u547d\u4ee4\u884c\u7248\u672c\u804a\u5929\u529f\u80fd \u5fae\u4fe1\u673a\u5668\u4eba \ufe0f \u4e92\u8054\u7f51\u6700\u5168\u5927\u5382\u6280\u672f\u5206\u4eabPPT \u6301\u7eed\u66f4\u65b0\u4e2d \u5404\u5927\u6280\u672f\u4ea4\u6d41\u4f1a \u6d3b\u52a8\u8d44\u6599\u6c47\u603b \u5982 QCon \u5168\u7403\u8fd0\u7ef4\u6280\u672f\u5927\u4f1a GDG \u5168\u7403\u6280\u672f\u9886\u5bfc\u529b\u5cf0\u4f1a \u5927\u524d\u7aef\u5927\u4f1a \u67b6\u6784\u5e08\u5cf0\u4f1a \u654f\u6377\u5f00\u53d1DevOps OpenResty Elastic \u6b22\u8fce PR Issues\u65e5\u672c\u9ebb\u5c06\u52a9\u624b \u724c\u6548 \u9632\u5b88 \u8bb0\u724c \u652f\u6301\u96c0\u9b42 \u5929\u51e4 \u5f00\u6e90\u5ba2\u670d\u7cfb\u7edfGO\u8bed\u8a00\u5f00\u53d1GO FLY \u514d\u8d39\u5ba2\u670d\u7cfb\u7edf\u4e00\u4e2a\u67e5\u8be2IP\u5730\u7406\u4fe1\u606f\u548cCDN\u670d\u52a1\u63d0\u4f9b\u5546\u7684\u79bb\u7ebf\u7ec8\u7aef\u5de5\u5177 \u662f\u4e00\u4e2a\u7528\u4e8e\u7cfb\u7edf\u91cd\u6784 \u7cfb\u7edf\u8fc1\u79fb\u548c\u7cfb\u7edf\u5206\u6790\u7684\u745e\u58eb\u519b\u5200 \u5b83\u53ef\u4ee5\u5206\u6790\u4ee3\u7801\u4e2d\u7684\u6d4b\u8bd5\u574f\u5473\u9053 \u6a21\u5757\u5316\u5206\u6790 \u884c\u6570\u7edf\u8ba1 \u5206\u6790\u8c03\u7528\u4e0e\u4f9d\u8d56 Git \u5206\u6790\u4ee5\u53ca\u81ea\u52a8\u5316\u91cd\u6784\u7b49 \u4e00\u4e2a\u76f4\u64ad\u5f55\u5236\u5de5\u5177Mastering Go \u7b2c\u4e8c\u7248\u4e2d\u6587\u7248\u6765\u88ad \u6e17\u900f\u6d4b\u8bd5\u60c5\u62a5\u6536\u96c6\u5de5\u5177\u5206\u5e03\u5f0f\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5e73\u53f0\u9ad8\u5ea6\u6a21\u5757\u5316 \u9075\u5faa KISS\u539f\u5219\u7684\u533a\u5757\u94fe\u5f00\u53d1\u6846\u67b6golang\u7248\u672c\u7684hangout \u5e0c\u671b\u80fd\u7701\u4e9b\u5185\u5b58 \u4f7f\u7528\u4e86\u81ea\u5df1\u5199\u7684Kafka lib \u865a \u4e0d\u8fc7\u6211\u4eec\u5728\u751f\u4ea7\u73af\u5883\u5df2\u7ecf\u4f7f\u7528\u8fd11\u5e74 kafka \u7248\u672c\u4ece 9 1\u52302 \u90fd\u5728\u4f7f\u7528 \u76ee\u524d\u60c5\u51b5\u7a33\u5b9a \u541e\u5410\u91cf\u5728\u6bcf\u59292 \u4ebf\u6761\u4ee5\u4e0a Go \u8bed\u8a00 Web \u5e94\u7528\u5f00\u53d1\u7cfb\u5217\u6559\u7a0b \u4ece\u65b0\u624b\u5230\u53cc\u624b\u6b8b\u5e9firis \u6846\u67b6\u7684\u540e\u53f0api\u9879\u76ee\u7b80\u5355\u597d\u7528\u7684DDNS \u81ea\u52a8\u66f4\u65b0\u57df\u540d\u89e3\u6790\u5230\u516c\u7f51IP \u652f\u6301\u963f\u91cc\u4e91 \u817e\u8baf\u4e91dnspod Cloudflare \u534e\u4e3a\u4e91  \u81ea\u5df1\u52a8\u624b\u5b9e\u73b0Lua \u968f\u4e66\u6e90\u4ee3\u7801php\u76f4\u64adgo\u76f4\u64ad \u77ed\u89c6\u9891 \u76f4\u64ad\u5e26\u8d27 \u4eff\u6bd4\u5fc3 \u730e\u6e38 tt\u8bed\u97f3\u804a\u5929 \u7f8e\u5973\u7ea6\u73a9 \u966a\u73a9\u7cfb\u7edf\u6e90\u7801\u5f00\u9ed1 \u7ea6\u73a9\u6e90\u7801 \u793e\u533a\u5f00\u6e90 \u4e91\u539f\u751f\u7684\u591a\u4e91\u548c\u6df7\u5408\u4e91\u878d\u5408\u5e73\u53f0 Jiajun\u7684\u7f16\u7a0b\u968f\u60f3Golang\u8bed\u8a00\u793e\u533a \u817e\u8baf\u8bfe\u5802 \u7f51\u6613\u4e91\u8bfe\u5802 \u5b57\u8282\u6559\u80b2\u8bfe\u7a0bPPT\u53ca\u4ee3\u7801\u57fa\u4e8eGF Go Frame \u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u5e26\u4f60\u4e86\u89e3\u4e00\u4e0bGolang\u7684\u5e02\u573a\u884c\u60c5mysql\u8868\u7ed3\u6784\u81ea\u52a8\u540c\u6b65\u5de5\u5177 \u76ee\u524d\u53ea\u652f\u6301\u5b57\u6bb5 \u7d22\u5f15\u7684\u540c\u6b65 \u5206\u533a\u7b49\u9ad8\u7ea7\u529f\u80fd\u6682\u4e0d\u652f\u6301 \u57fa\u4e8eKubernetes\u7684PaaS\u5e73\u53f0\u6d41\u5a92\u4f53NetFlix\u89e3\u9501\u68c0\u6d4b\u811a\u672c\u7a33\u5b9a\u5206\u652f2 9 X \u7248\u672c\u5df2\u66f4\u65b0 \u7531 Golang\u8bed\u8a00\u6e38\u620f\u670d\u52a1\u5668 \u7ef4\u62a4 \u5168\u7403\u670d\u6e38\u620f\u670d\u52a1\u5668\u53ca\u533a\u57df\u670d\u6846\u67b6 \u76ee\u524d\u534f\u8bae\u652f\u6301websocket KCP TCP\u53caRPC \u91c7\u7528\u72b6\u6001\u540c\u6b65 \u5e27\u540c\u6b65\u5185\u6d4b \u613f\u666f \u6253\u9020MMO\u591a\u4eba\u7ade\u6280\u6e38\u620f\u6846\u67b6 \u529f\u80fd\u6301\u7eed\u66f4\u65b0\u4e2d \u57fa\u4e8e Golang \u7c7b\u4f3c\u77e5\u4e4e\u7684\u79c1\u6709\u90e8\u7f72\u95ee\u7b54\u5e94\u7528 \u5305\u542b\u95ee\u7b54 \u8bc4\u8bba \u70b9\u8d5e \u7ba1\u7406\u540e\u53f0\u7b49\u529f\u80fd\u5168\u65b0\u7684\u5f00\u6e90\u6f0f\u6d1e\u6d4b\u8bd5\u6846\u67b6 \u5b9e\u73b0poc\u5728\u7ebf\u7f16\u8f91 \u8fd0\u884c \u6279\u91cf\u6d4b\u8bd5 \u4f7f\u7528\u6587\u6863 XAPI MANAGER \u4e13\u4e1a\u5b9e\u7528\u7684\u5f00\u6e90\u63a5\u53e3\u7ba1\u7406\u5e73\u53f0 \u4e3a\u7a0b\u5e8f\u5f00\u53d1\u8005\u63d0\u4f9b\u4e00\u4e2a\u7075\u6d3b \u65b9\u4fbf \u5feb\u6377\u7684API\u7ba1\u7406\u5de5\u5177 \u8ba9API\u7ba1\u7406\u53d8\u7684\u66f4\u52a0\u6e05\u6670 \u660e\u6717 \u5982\u679c\u4f60\u89c9\u5f97xApi\u5bf9\u4f60\u6709\u7528\u7684\u8bdd \u522b\u5fd8\u4e86\u7ed9\u6211\u4eec\u70b9\u4e2a\u8d5e\u54e6 qq\u534f\u8bae\u7684golang\u5b9e\u73b0 \u79fb\u690d\u4e8emiraigo\u7248\u672c\u6781\u7b80\u5de5\u4f5c\u6d41\u5f15\u64ce\u5168\u5e73\u53f0Go\u5f00\u6e90\u5185\u7f51\u6e17\u900f\u626b\u63cf\u5668\u6846\u67b6 Windows Linux Mac\u5185\u7f51\u6e17\u900f \u4f7f\u7528\u5b83\u53ef\u8f7b\u677e\u4e00\u952e\u6279\u91cf\u63a2\u6d4bC\u6bb5 B\u6bb5 A\u6bb5\u5b58\u6d3b\u4e3b\u673a \u9ad8\u5371\u6f0f\u6d1e\u68c0\u6d4bMS17 1 SmbGhost \u8fdc\u7a0b\u6267\u884cSSH Winrm \u5bc6\u7801\u7206\u7834\u7aef\u53e3\u626b\u63cf\u670d\u52a1\u8bc6\u522bPortScan\u6307\u7eb9\u8bc6\u522b\u591a\u7f51\u5361\u4e3b\u673a \u7aef\u53e3\u626b\u63cf\u670d\u52a1\u8bc6\u522bPortScan iikira BaiduPCS Go\u539f\u7248\u57fa\u7840\u4e0a\u96c6\u6210\u4e86\u5206\u4eab\u94fe\u63a5 \u79d2\u4f20\u94fe\u63a5\u8f6c\u5b58\u529f\u80fd e\u7b7e\u5b9d\u5b89\u5168\u56e2\u961f\u79ef\u7d2f\u5341\u51e0\u5e74\u7684\u5b89\u5168\u7ecf\u9a8c \u90fd\u5c06\u5bf9\u5916\u9010\u6b65\u5f00\u653e \u9996\u5f00\u7684Ehoney\u6b3a\u9a97\u9632\u5fa1\u7cfb\u7edf \u8be5\u7cfb\u7edf\u662f\u57fa\u4e8e\u4e91\u539f\u751f\u7684\u6b3a\u9a97\u9632\u5fa1\u7cfb\u7edf \u4e5f\u662f\u4e1a\u754c\u552f\u4e00\u5f00\u6e90\u7684\u5bf9\u6807\u5546\u4e1a\u7cfb\u7edf\u7684\u4ea7\u54c1 \u6b3a\u9a97\u9632\u5fa1\u7cfb\u7edf\u901a\u8fc7\u90e8\u7f72\u9ad8\u4ea4\u4e92\u9ad8\u4eff\u771f\u871c\u7f50\u53ca\u6d41\u91cf\u4ee3\u7406\u8f6c\u53d1 \u518d\u7ed3\u5408\u81ea\u7814\u5bc6\u7b7e\u53ca\u8bf1\u9975 \u5c06\u653b\u51fb\u8005\u653b\u51fb\u5f15\u5bfc\u5230\u871c\u7f50\u4e2d\u8fbe\u5230\u6270\u4e71\u5f15\u5bfc\u4ee5\u53ca\u5ef6\u8fdf\u653b\u51fb\u7684\u6548\u679c \u53ef\u4ee5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4fdd\u62a4\u4e1a\u52a1\u7684\u5b89\u5168 \u62a4\u7f51\u5fc5\u5907\u826f\u836f\u6f02\u4eae\u7684Go\u8bed\u8a00\u901a\u7528\u540e\u53f0\u7ba1\u7406\u6846\u67b6 \u5305\u542b\u8ba1\u5212\u4efb\u52a1 MySQL\u7ba1\u7406 Redis\u7ba1\u7406 FTP\u7ba1\u7406 SSH\u7ba1\u7406 \u670d\u52a1\u5668\u7ba1\u7406 Caddy\u914d\u7f6e \u4e91\u5b58\u50a8\u7ba1\u7406\u7b49\u529f\u80fd  \u5fae\u4fe1\u652f\u4ed8 WeChat Pay SDK for Golang\u7528\u4e8e\u76d1\u63a7\u7cfb\u7edf\u7684\u65e5\u5fd7\u91c7\u96c6agent \u53ef\u65e0\u7f1d\u5bf9\u63a5open falcon\u963f\u91cc\u5df4\u5df4mysql\u6570\u636e\u5e93binlog\u7684\u589e\u91cf\u8ba2\u9605 \u6d88\u8d39\u7ec4\u4ef6 Canal \u7684 go \u5ba2\u6237\u7aef github com alibaba canal \u7528\u4e8e\u6bd4\u8f832\u4e2aredis\u6570\u636e\u662f\u5426\u4e00\u81f4 \u652f\u6301\u5355\u8282\u70b9 \u4e3b\u4ece \u96c6\u7fa4\u7248 \u4ee5\u53ca\u591a\u79cdproxy \u652f\u6301\u540c\u6784\u4ee5\u53ca\u5f02\u6784\u5bf9\u6bd4 redis\u7684\u7248\u672c\u652f\u63012 x 5 x \u4f7f\u7528go micro\u5fae\u670d\u52a1\u5b9e\u73b0\u7684\u5728\u7ebf\u7535\u5f71\u9662\u8ba2\u7968\u7cfb\u7edf\u540e\u7aef\u4e00\u7ad9\u5f0f\u5fae\u670d\u52a1\u6846\u67b6 \u63d0\u4f9bAPI web websocket RPC \u4efb\u52a1\u8c03\u5ea6 \u6d88\u606f\u6d88\u8d39\u670d\u52a1\u5668\u7ea2\u84dd\u5bf9\u6297\u8de8\u5e73\u53f0\u8fdc\u63a7\u5de5\u5177Interchain protocol \u8de8\u94fe\u534f\u8bae\u7b80\u5355\u6613\u7528 \u8db3\u591f\u8f7b\u91cf \u6027\u80fd\u597d\u7684 Golang \u5e93\u4e00\u4e2ago echo vue \u5f00\u53d1\u7684\u5feb\u901f \u7b80\u6d01 \u7f8e\u89c2 \u524d\u540e\u7aef\u5206\u79bb\u7684\u4e2a\u4eba\u535a\u5ba2\u7cfb\u7edf blog \u4e5f\u53ef\u65b9\u4fbf\u4e8c\u6b21\u5f00\u53d1\u4e3aCMS \u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf \u548c\u5404\u79cd\u4f01\u4e1a\u95e8\u6237\u7f51\u7ad9 \u6b63\u5728\u66f4\u65b0\u6743\u9650\u7ba1\u7406 hauth\u9879\u76ee \u4e0d\u662f\u4e00\u4e2a\u524d\u7aefor\u540e\u53f0\u6846\u67b6 \u800c\u662f\u4e00\u4e2a\u96c6\u6210\u6743\u9650\u7ba1\u7406 \u83dc\u5355\u8d44\u6e90\u7ba1\u7406 \u57df\u7ba1\u7406 \u89d2\u8272\u7ba1\u7406 \u7528\u6237\u7ba1\u7406 \u7ec4\u7ec7\u67b6\u6784\u7ba1\u7406 \u64cd\u4f5c\u65e5\u5fd7\u7ba1\u7406\u7b49\u7b49\u7684\u5feb\u901f\u5f00\u53d1\u5e73\u53f0\uff0e hauth\u662f\u4e00\u4e2a\u57fa\u7840\u4ea7\u54c1 \u5728\u8fd9\u4e2a\u57fa\u7840\u4ea7\u54c1\u4e0a \u6839\u636e\u4e1a\u52a1\u9700\u6c42 \u5feb\u901f\u7684\u5f00\u53d1\u5e94\u7528\u670d\u52a1\uff0e\u8d26\u53f7 admin \u5bc6\u7801 123456\u901a\u7528\u7684\u6570\u636e\u9a8c\u8bc1\u4e0e\u8fc7\u6ee4\u5e93 \u4f7f\u7528\u7b80\u5355 \u5185\u7f6e\u5927\u90e8\u5206\u5e38\u7528\u9a8c\u8bc1 \u8fc7\u6ee4\u5668 \u652f\u6301\u81ea\u5b9a\u4e49\u9a8c\u8bc1\u5668 \u81ea\u5b9a\u4e49\u6d88\u606f \u5b57\u6bb5\u7ffb\u8bd1 CTF AWD Attack with Defense \u7ebf\u4e0b\u8d5b\u5e73\u53f0 AWD platform \u6b22\u8fce Star \u84dd\u9cb8\u667a\u4e91\u5bb9\u5668\u7ba1\u7406\u5e73\u53f0 BlueKing Container Service \u7a0b\u5e8f\u5458\u5982\u4f55\u4f18\u96c5\u7684\u6323\u96f6\u82b1\u94b1 2 \u7248 \u5347\u7ea7\u4e3a\u5c0f\u4e66\u4e86 \u4e00\u4e2a PHP \u5fae\u4fe1 SDKAV \u7535\u5f71\u7ba1\u7406\u7cfb\u7edf avmoo javbus javlibrary \u722c\u866b \u7ebf\u4e0a AV \u5f71\u7247\u56fe\u4e66\u9986 AV \u78c1\u529b\u94fe\u63a5\u6570\u636e\u5e93ThinkPHP Framework \u5341\u5e74\u5320\u5fc3\u7684\u9ad8\u6027\u80fdPHP\u6846\u67b6 \u6700\u5168\u7684\u524d\u7aef\u8d44\u6e90\u6c47\u603b\u4ed3\u5e93 \u5305\u62ec\u524d\u7aef\u5b66\u4e60 \u5f00\u53d1\u8d44\u6e90 \u6c42\u804c\u9762\u8bd5\u7b49 \u591a\u8bed\u8a00\u591a\u8d27\u5e01\u591a\u5165\u53e3\u7684\u5f00\u6e90\u7535\u5546 B2C \u5546\u57ce \u652f\u6301\u79fb\u52a8\u7aefvue app html5 \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u5fae\u5e97 \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u5546\u57ce\u7b49\u53ef\u80fd\u662f\u6211\u7528\u8fc7\u7684\u6700\u4f18\u96c5\u7684 Alipay \u548c WeChat \u7684\u652f\u4ed8 SDK \u6269\u5c55\u5305\u4e86 \u57fa\u4e8e\u8bcd\u5e93\u7684\u4e2d\u6587\u8f6c\u62fc\u97f3\u4f18\u8d28\u89e3\u51b3\u65b9\u6848 \u6211\u7528\u722c\u866b\u4e00\u5929\u65f6\u95f4\u201c\u5077\u4e86\u201d\u77e5\u4e4e\u4e00\u767e\u4e07\u7528\u6237 \u53ea\u4e3a\u8bc1\u660ePHP\u662f\u4e16\u754c\u4e0a\u6700\u597d\u7684\u8bed\u8a00 \u6240\u4f7f\u7528\u7684\u7a0b\u5e8f\u5fae\u4fe1 SDK for Laravel \u57fa\u4e8e overtrue wechat\u5f00\u6e90\u5728\u7ebf\u6559\u80b2\u70b9\u64ad\u7cfb\u7edf  \u4e00\u6b3e\u6ee1\u8db3\u4f60\u7684\u591a\u79cd\u53d1\u9001\u9700\u6c42\u7684\u77ed\u4fe1\u53d1\u9001\u7ec4\u4ef6 \u57fa\u4e8e Laravel \u7684\u540e\u53f0\u7cfb\u7edf\u6784\u5efa\u5de5\u5177 Laravel Admin \u4f7f\u7528\u5f88\u5c11\u7684\u4ee3\u7801\u5feb\u901f\u6784\u5efa\u4e00\u4e2a\u529f\u80fd\u5b8c\u5584\u7684\u9ad8\u989c\u503c\u540e\u53f0\u7cfb\u7edf \u5185\u7f6e\u4e30\u5bcc\u7684\u540e\u53f0\u5e38\u7528\u7ec4\u4ef6 \u5f00\u7bb1\u5373\u7528 \u8ba9\u5f00\u53d1\u8005\u544a\u522b\u5197\u6742\u7684HTML\u4ee3\u7801\u4e00\u4e2a\u60f3\u5e2e\u4f60\u603b\u7ed3\u6240\u6709\u7c7b\u578b\u7684\u4e0a\u4f20\u6f0f\u6d1e\u7684\u9776\u573a\u4f18\u96c5\u7684\u6e10\u8fdb\u5f0fPHP\u91c7\u96c6\u6846\u67b6 Laravel \u7535\u5546\u5b9e\u6218\u6559\u7a0b\u7684\u9879\u76ee\u4ee3\u7801Payment\u662fphp\u7248\u672c\u7684\u652f\u4ed8\u805a\u5408\u7b2c\u4e09\u65b9sdk \u96c6\u6210\u4e86\u5fae\u4fe1\u652f\u4ed8 \u652f\u4ed8\u5b9d\u652f\u4ed8 \u62db\u5546\u4e00\u7f51\u901a\u652f\u4ed8 \u63d0\u4f9b\u7edf\u4e00\u7684\u8c03\u7528\u63a5\u53e3 \u65b9\u4fbf\u5feb\u901f\u63a5\u5165\u5404\u79cd\u652f\u4ed8 \u67e5\u8be2 \u9000\u6b3e \u8f6c\u8d26\u80fd\u529b \u670d\u52a1\u7aef\u63a5\u5165\u652f\u4ed8\u529f\u80fd \u65b9\u4fbf \u5feb\u6377 SPF Swoole PHP Framework \u4e16\u754c\u7b2c\u4e00\u6b3e\u57fa\u4e8eSwoole\u6269\u5c55\u7684PHP\u6846\u67b6 \u5f00\u53d1\u8005\u662fSwoole\u521b\u59cb\u4eba A Wonderful WordPress Theme \u6a31\u82b1\u5e84\u7684\u767d\u732b\u535a\u5ba2\u4e3b\u9898\u56fe\u5e8a \u6b64\u9879\u76ee\u5df2\u5f03\u7528 \u57fa\u4e8e ThinkPHP \u57fa\u7840\u5f00\u53d1\u5e73\u53f0 \u767b\u5f55\u8d26\u53f7\u5bc6\u7801\u90fd\u662f admin PanDownload\u7f51\u9875\u590d\u523b\u7248\u4e00\u4e2a\u5f00\u6e90\u7684\u7f51\u5740\u5bfc\u822a\u7f51\u7ad9\u9879\u76ee \u60a8\u53ef\u4ee5\u62ff\u6765\u5236\u4f5c\u81ea\u5df1\u7684\u7f51\u5740\u5bfc\u822a \u4f7f\u7528PHP Swoole\u5b9e\u73b0\u7684\u7f51\u9875\u5373\u65f6\u804a\u5929\u5de5\u5177 \u72ec\u89d2\u6570\u5361 \u53d1\u5361 \u5f00\u6e90\u5f0f\u7ad9\u957f\u81ea\u52a8\u5316\u552e\u8d27\u89e3\u51b3\u65b9\u6848 \u9ad8\u6548 \u7a33\u5b9a \u5feb\u901f \u5361\u5bc6\u5546\u57ce\u7cfb\u7edf \u9ad8\u6548\u5b89\u5168\u7684\u5728\u7ebf\u5361\u5bc6\u5546\u57ce \ufe0f\u547d\u4ee4\u884c\u6a21\u5f0f\u5f00\u53d1\u6846\u67b6ShopXO\u514d\u8d39\u5f00\u6e90\u5546\u57ce\u7cfb\u7edf \u56fd\u5185\u9886\u5148\u4f01\u4e1a\u7ea7B2C\u514d\u8d39\u5f00\u6e90\u7535\u5546\u7cfb\u7edf \u5305\u542bPC h5 \u5fae\u4fe1\u5c0f\u7a0b\u5e8f \u652f\u4ed8\u5b9d\u5c0f\u7a0b\u5e8f \u767e\u5ea6\u5c0f\u7a0b\u5e8f \u5934\u6761 \u6296\u97f3\u5c0f\u7a0b\u5e8f QQ\u5c0f\u7a0b\u5e8f APP \u591a\u5546\u6237 \u9075\u5faaMIT\u5f00\u6e90\u534f\u8bae\u53d1\u5e03 \u57fa\u4e8e ThinkPHP5 1\u6846\u67b6\u7814\u53d1Wizard\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u6587\u6863\u7ba1\u7406\u5de5\u5177 \u652f\u6301Markdown Swagger Table\u7c7b\u578b\u7684\u6587\u6863 Swoole MySQL Proxy \u4e00\u4e2a\u57fa\u4e8e MySQL \u534f\u8bae Swoole \u5f00\u53d1\u7684MySQL\u6570\u636e\u5e93\u8fde\u63a5\u6c60 \u5b66\u4e60\u8d44\u6e90\u6574\u5408Freenom\u57df\u540d\u81ea\u52a8\u7eed\u671f\u4e00\u4e2a\u597d\u73a9\u7684Web\u5b89\u5168 \u6f0f\u6d1e\u6d4b\u8bd5\u5e73\u53f0\u4e00\u4e2a\u57fa\u4e8eYii2\u9ad8\u7ea7\u6846\u67b6\u7684\u5feb\u901f\u5f00\u53d1\u5e94\u7528\u5f15\u64ce\u84dd\u5929\u91c7\u96c6\u5668\u662f\u4e00\u6b3e\u514d\u8d39\u7684\u6570\u636e\u91c7\u96c6\u53d1\u5e03\u722c\u866b\u8f6f\u4ef6 \u91c7\u7528php mysql\u5f00\u53d1 \u53ef\u90e8\u7f72\u5728\u4e91\u670d\u52a1\u5668 \u51e0\u4e4e\u80fd\u91c7\u96c6\u6240\u6709\u7c7b\u578b\u7684\u7f51\u9875 \u65e0\u7f1d\u5bf9\u63a5\u5404\u7c7bCMS\u5efa\u7ad9\u7a0b\u5e8f \u514d\u767b\u5f55\u5b9e\u65f6\u53d1\u5e03\u6570\u636e \u5168\u81ea\u52a8\u65e0\u9700\u4eba\u5de5\u5e72\u9884 \u662f\u7f51\u9875\u5927\u6570\u636e\u91c7\u96c6\u8f6f\u4ef6\u4e2d\u5b8c\u5168\u8de8\u5e73\u53f0\u7684\u4e91\u7aef\u722c\u866b\u7cfb\u7edf\u514d\u8d39\u5f00\u6e90\u7684\u4e2d\u6587\u641c\u7d22\u5f15\u64ce \u91c7\u7528 C C \u7f16\u5199 \u57fa\u4e8e xapian \u548c scws \u63d0\u4f9b PHP \u7684\u5f00\u53d1\u63a5\u53e3\u548c\u4e30\u5bcc\u6587\u6863WDScanner\u5e73\u53f0\u76ee\u524d\u5b9e\u73b0\u4e86\u5982\u4e0b\u529f\u80fd \u5206\u5e03\u5f0fweb\u6f0f\u6d1e\u626b\u63cf \u5ba2\u6237\u7ba1\u7406 \u6f0f\u6d1e\u5b9a\u671f\u626b\u63cf \u5b50\u57df\u540d\u679a\u4e3e \u7aef\u53e3\u626b\u63cf \u7f51\u7ad9\u722c\u866b \u6697\u94fe\u68c0\u6d4b \u574f\u94fe\u68c0\u6d4b \u7f51\u7ad9\u6307\u7eb9\u641c\u96c6 \u4e13\u9879\u6f0f\u6d1e\u68c0\u6d4b \u4ee3\u7406\u641c\u96c6\u53ca\u90e8\u7f72\u7b49\u529f\u80fd  \ufe0f\u5170\u7a7a\u56fe\u5e8a\u56fe\u6807\u5de5\u573a \u79fb\u52a8\u5e94\u7528\u56fe\u6807\u751f\u6210\u5de5\u5177 \u4e00\u952e\u751f\u6210\u6240\u6709\u5c3a\u5bf8\u7684\u5e94\u7528\u56fe\u6807\u548c\u542f\u52a8\u56fe Argon \u4e00\u4e2a\u8f7b\u76c8 \u7b80\u6d01\u7684 WordPress \u4e3b\u9898Typecho Fans\u63d2\u4ef6\u4f5c\u54c1\u76ee\u5f55PHP\u4ee3\u7801\u5ba1\u8ba1\u5206\u6bb5\u8bb2\u89e3\u4e00\u4e2a\u7ed3\u6784\u6e05\u6670\u7684 \u6613\u4e8e\u7ef4\u62a4\u7684 \u73b0\u4ee3\u7684PHP Markdown\u89e3\u6790\u5668\u767e\u5ea6\u8d34\u5427\u4e91\u7b7e\u5230 \u5728\u670d\u52a1\u5668\u4e0a\u914d\u7f6e\u597d\u5c31\u65e0\u9700\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\u4fbf\u53ef\u4ee5\u5b9e\u73b0\u8d34\u5427\u7684\u5168\u81ea\u52a8\u7b7e\u5230 \u914d\u5408\u63d2\u4ef6\u4f7f\u7528\u8fd8\u53ef\u5b9e\u73b0\u4e91\u704c\u6c34 \u70b9\u8d5e \u5c01\u7981 \u5220\u5e16 \u5ba1\u67e5\u7b49\u529f\u80fd \u6ce8\u610f Gitee \u539fGit osc \u4ed3\u5e93\u5c06\u4e0d\u518d\u7ef4\u62a4 \u76ee\u524d\u552f\u4e00\u6307\u5b9a\u7684\u4ed3\u5e93\u4e3a Github \u672c\u9879\u76ee\u6ca1\u6709\u5b98\u65b9\u4ea4\u6d41\u7fa4 \u5982\u9700\u4ea4\u6d41\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528Github\u7684Discussions \u6ca1\u6709\u5546\u4e1a\u7248\u672c \u76ee\u524d\u8d34\u5427\u4e91\u7b7e\u5230\u7531\u793e\u533a\u5171\u540c\u7ef4\u62a4 \u4e0d\u4f1a\u505c\u6b62\u66f4\u65b0 PR \u901a\u5e38\u5728\u4e00\u5929\u5185\u5904\u7406 \u5fae\u4fe1\u8c03\u8bd5 API\u8c03\u8bd5\u548cAJAX\u7684\u8c03\u8bd5\u7684\u5de5\u5177 \u80fd\u5c06\u65e5\u5fd7\u901a\u8fc7WebSocket\u8f93\u51fa\u5230Chrome\u6d4f\u89c8\u5668\u7684console\u4e2d \u7d50\u5df4 \u4e2d\u6587\u5206\u8a5e \u505a\u6700\u597d\u7684 PHP \u4e2d\u6587\u5206\u8a5e \u4e2d\u6587\u65b7\u8a5e\u7d44\u4ef6EleTeam\u5f00\u6e90\u9879\u76ee \u7535\u5546\u5168\u5957\u89e3\u51b3\u65b9\u6848\u4e4bPHP\u7248 Shop for PHP Yii2 \u4e00\u4e2a\u7c7b\u4f3c\u4eac\u4e1c \u5929\u732b \u6dd8\u5b9d\u7684\u5546\u57ce \u6709\u5bf9\u5e94\u7684APP\u652f\u6301 \u7531EleTeam\u56e2\u961f\u7ef4\u62a4 RhaPHP\u662f\u5fae\u4fe1\u7b2c\u4e09\u65b9\u7ba1\u7406\u5e73\u53f0 \u5fae\u4fe1\u516c\u4f17\u53f7\u7ba1\u7406\u7cfb\u7edf \u652f\u6301\u591a\u516c\u4f17\u53f7\u7ba1\u7406 CRM\u4f1a\u5458\u7ba1\u7406 \u5c0f\u7a0b\u5e8f\u5f00\u53d1 APP\u63a5\u53e3\u5f00\u53d1 \u51e0\u4e4e\u96c6\u5408\u5fae\u4fe1\u529f\u80fd \u7b80\u6d01 \u5feb\u901f\u4e0a\u624b \u5feb\u901f\u5f00\u53d1\u5fae\u4fe1\u5404\u79cd\u5404\u6837\u5e94\u7528 \u7b80\u6d01 \u597d\u7528 \u5feb\u901f \u9879\u76ee\u5f00\u53d1\u5feb\u51e0\u500d \u7fa4 656868 \u4e00\u523b\u793e\u533a\u540e\u7aef API \u6e90\u7801 \u65b0 \u5fae\u4fe1\u670d\u52a1\u53f7 \u5fae\u4fe1\u5c0f\u7a0b\u5e8f \u5fae\u4fe1\u652f\u4ed8 \u652f\u4ed8\u5b9d\u652f\u4ed8\u82f9\u679ccms v1 maccms v1 \u9ea6\u514bcms \u5f00\u6e90cms \u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf \u89c6\u9891\u5206\u4eab\u7a0b\u5e8f \u5206\u96c6\u5267\u60c5\u7a0b\u5e8f \u7f51\u5740\u5bfc\u822a\u7a0b\u5e8f \u6587\u7ae0\u7a0b\u5e8f \u6f2b\u753b\u7a0b\u5e8f \u56fe\u7247\u7a0b\u5e8f\u4e00\u4e2aPHP\u6587\u4ef6\u641e\u5b9a\u652f\u4ed8\u5b9d\u652f\u4ed8\u7cfb\u5217 \u5305\u62ec\u7535\u8111\u7f51\u7ad9\u652f\u4ed8 \u624b\u673a\u7f51\u7ad9\u652f\u4ed8 \u73b0\u91d1\u7ea2\u5305 \u6d88\u8d39\u7ea2\u5305 \u626b\u7801\u652f\u4ed8 JSAPI\u652f\u4ed8 \u5355\u7b14\u8f6c\u8d26\u5230\u652f\u4ed8\u5b9d\u8d26\u6237 \u4ea4\u6613\u7ed3\u7b97 \u5206\u8d26 \u5206\u6da6 \u7f51\u9875\u6388\u6743\u83b7\u53d6\u7528\u6237\u4fe1\u606f\u7b49restful api\u98ce\u683c\u63a5\u53e3 APP\u63a5\u53e3 APP\u63a5\u53e3\u6743\u9650 oauth2 \u63a5\u53e3\u7248\u672c\u7ba1\u7406 \u63a5\u53e3\u9274\u6743\u57fa\u4e8e\u4f01\u4e1a\u5fae\u4fe1\u7684\u5f00\u6e90SCRM\u5e94\u7528\u5f00\u53d1\u6846\u67b6 \u5f15\u64ce \u4e5f\u662f\u4e00\u5957\u901a\u7528\u7684\u4f01\u4e1a\u79c1\u57df\u6d41\u91cf\u7ba1\u7406\u7cfb\u7edf API\u63a5\u53e3\u5927\u5168\u4e0d\u65ad\u66f4\u65b0\u4e2d \u6b22\u8fceFork\u548cStar 1 \u4e00\u8a00 \u53e4\u8bd7\u53e5\u7248 api 2 \u5fc5\u5e94\u6bcf\u65e5\u4e00\u56feapi 3 \u5728\u7ebfip\u67e5\u8be2 4 m3u8\u89c6\u9891\u5728\u7ebf\u89e3\u6790api 5 \u968f\u673a\u751f\u6210\u4e8c\u6b21\u5143\u56fe\u7247api 6 \u5feb\u9012\u67e5\u8be2api \u652f\u6301\u56fd\u5185\u767e\u5bb6\u5feb\u9012 7 flv\u89c6\u9891\u5728\u7ebf\u89e3\u6790api 8 \u6296\u97f3\u89c6\u9891\u65e0\u6c34\u5370\u89e3\u6790api 9 \u4e00\u53e5\u8bdd\u968f\u673a\u56fe\u7247api 1 QQ\u7528\u6237\u4fe1\u606f\u83b7\u53d6api 11 \u54d4\u54e9\u54d4\u54e9\u5c01\u9762\u56fe\u83b7\u53d6api 12 \u5343\u56fe\u7f5158pic\u65e0\u6c34\u5370\u89e3\u6790\u4e0b\u8f7dapi 13 \u559c\u9a6c\u62c9\u96c5\u4e3b\u64adFM\u6570\u636e\u91c7\u96c6api 14 \u7f51\u6613\u4e91\u97f3\u4e50api 15 CCTV\u592e\u89c6\u7f51\u89c6\u9891\u89e3\u6790api 16 \u5fae\u4fe1\u8fd0\u52a8\u5237\u6b65\u6570api 17 \u76ae\u76ae\u641e\u7b11 \u57fa\u4e8eswoole\u7684\u5b9a\u65f6\u5668\u7a0b\u5e8f \u652f\u6301\u79d2\u7ea7\u5904\u7406\u7fa4 656868 \ufe0f Saber PHP\u5f02\u6b65\u534f\u7a0bHTTP\u5ba2\u6237\u7aef\u5fae\u4fe1\u652f\u4ed8\u5355\u6587\u4ef6\u7248 \u4e00\u4e2aPHP\u6587\u4ef6\u641e\u5b9a\u5fae\u4fe1\u652f\u4ed8\u7cfb\u5217 \u5305\u62ec\u539f\u751f\u652f\u4ed8 \u626b\u7801\u652f\u4ed8 H5\u652f\u4ed8 \u516c\u4f17\u53f7\u652f\u4ed8 \u73b0\u91d1\u7ea2\u5305 \u4f01\u4e1a\u4ed8\u6b3e\u5230\u96f6\u94b1\u7b49 \u65b0\u589eV3\u7248 \u4e00\u4e2a\u8fd8\u4e0d\u9519\u7684\u56fe\u5e8a\u5de5\u5177 \u652f\u6301Mac Win Linux\u670d\u52a1\u5668 \u652f\u6301\u538b\u7f29\u540e\u4e0a\u4f20 \u6dfb\u52a0\u56fe\u7247\u6216\u6587\u5b57\u6c34\u5370 \u591a\u6587\u4ef6\u540c\u65f6\u4e0a\u4f20 \u540c\u65f6\u4e0a\u4f20\u5230\u591a\u4e2a\u4e91 \u53f3\u51fb\u4efb\u610f\u6587\u4ef6\u4e0a\u4f20 \u5feb\u6377\u952e\u4e0a\u4f20\u526a\u8d34\u677f\u622a\u56fe Web\u7248\u4e0a\u4f20 \u652f\u6301\u4f5c\u4e3aMweb Typora\u53d1\u5e03\u56fe\u7247\u63a5\u53e3 \u4f5c\u4e3aPicGo ShareX uPic\u7b49\u7684\u81ea\u5b9a\u4e49\u56fe\u5e8a \u652f\u6301\u5728\u670d\u52a1\u5668\u4e0a\u90e8\u7f72\u4f5c\u4e3a\u56fe\u5e8a\u63a5\u53e3 \u652f\u6301\u4e0a\u4f20\u4efb\u610f\u683c\u5f0f\u6587\u4ef6 \u53ef\u80fd\u662f\u6211\u7528\u8fc7\u7684\u6700\u4f18\u96c5\u7684 Alipay \u548c WeChat \u7684 laravel \u652f\u4ed8\u6269\u5c55\u5305\u4e86\u4e0a\u4f20\u5927\u6587\u4ef6\u7684Laravel\u6269\u5c55\u5305\u5f00\u53d1\u5185\u529f\u4fee\u70bcLaravel\u6838\u5fc3\u4ee3\u7801\u5b66\u4e60\u5357\u4eac\u90ae\u7535\u5927\u5b66\u5f00\u6e90 Online Judge QQ\u7fa4 6681 8264 \u514d\u8d39IP\u5730\u5740\u6570\u636e\u5e93 \u5df2\u652f\u6301IPV4 IPV6 \u7ed3\u6784\u5316\u8f93\u51fa\u4e3a\u56fd\u5bb6 \u7701 \u5e02 \u53bf \u8fd0\u8425\u5546 \u4e2d\u6587\u6570\u636e\u5e93 \u65b9\u4fbf\u5b9e\u7528 laravel5 5\u548cvue js\u7ed3\u5408\u7684\u524d\u540e\u7aef\u5206\u79bb\u9879\u76ee\u6a21\u677f \u540e\u7aef\u4f7f\u7528\u4e86laravel\u7684LTS\u7248\u672c 5 5 \u524d\u7aef\u4f7f\u7528\u4e86\u6d41\u884c\u7684vue element template\u9879\u76ee \u4f5c\u4e3a\u7a0b\u5e8f\u7684\u8d77\u70b9 \u53ef\u4ee5\u76f4\u63a5\u4ee5\u6b64\u4e3a\u57fa\u7840\u6765\u8fdb\u884c\u4e1a\u52a1\u6269\u5c55 \u6a21\u677f\u5185\u5bb9\u5305\u62ec\u57fa\u7840\u7684\u7528\u6237\u7ba1\u7406\u548c\u6743\u9650\u7ba1\u7406 \u65e5\u5fd7\u7ba1\u7406 \u96c6\u6210\u7b2c\u4e09\u65b9\u767b\u5f55 \u6574\u5408laravel echo server \u5b9e\u73b0\u4e86websocket \u505a\u5230\u4e86\u6d88\u606f\u7684\u5b9e\u65f6\u63a8\u9001 \u5e76\u5728\u6b64\u57fa\u7840\u4e0a \u5b9e\u73b0\u4e86\u804a\u5929\u5ba4\u548c\u5ba2\u670d\u529f\u80fd \u6743\u9650\u7ba1\u7406\u5305\u62ec\u540e\u7aefToken\u8ba4\u8bc1\u548c\u524d\u7aefvue js\u7684\u52a8\u6001\u6743\u9650 \u89e3\u51b3\u4e86\u524d\u540e\u7aef\u5b8c\u6574\u5206\u79bb\u7684\u60c5\u51b5\u4e0b vue js\u7684\u8ba4\u8bc1\u4e0e\u6743\u9650\u76f8\u5173\u7684\u75db\u70b9 \u5df2\u5728\u672c\u4eba\u7684\u591a\u4e2a\u9879\u76ee\u4e2d\u96c6\u6210\u4f7f\u7528  Web\u5b89\u5168\u4e4b\u673a\u5668\u5b66\u4e60\u5165\u95e8 \u7f51\u6613\u4e91\u97f3\u4e50\u5347\u7ea7APIPHP \u96c6\u6210\u652f\u4ed8 SDK \u96c6\u6210\u4e86\u652f\u4ed8\u5b9d \u5fae\u4fe1\u652f\u4ed8\u7684\u652f\u4ed8\u63a5\u53e3\u548c\u5176\u5b83\u76f8\u5173\u63a5\u53e3\u7684\u64cd\u4f5c \u652f\u6301 php fpm \u548c Swoole \u6240\u6709\u6846\u67b6\u901a\u7528 \u5b87\u6da6PHP\u5168\u5bb6\u6876\u6280\u672f\u652f\u6301\u7fa4 17916227MDClub \u793e\u533a\u7cfb\u7edf\u540e\u7aef\u4ee3\u7801imi \u662f\u57fa\u4e8e Swoole \u7684 PHP \u534f\u7a0b\u5f00\u53d1\u6846\u67b6 \u5b83\u652f\u6301 Http2 WebSocket TCP UDP MQTT \u7b49\u4e3b\u6d41\u534f\u8bae\u7684\u670d\u52a1\u5f00\u53d1 \u7279\u522b\u9002\u5408\u4e92\u8054\u7f51\u5fae\u670d\u52a1 \u5373\u65f6\u901a\u8baf\u804a\u5929im \u7269\u8054\u7f51\u7b49\u573a\u666f QQ\u7fa4 17916227WordPress \u7248 WebStack \u5bfc\u822a\u4e3b\u9898 nav iowen cnLive2D \u770b\u677f\u5a18\u63d2\u4ef6 www fghrsh net post 123 html \u4e0a\u4f7f\u7528\u7684\u540e\u7aef API\u7b80\u5355\u641c\u7d22 \u4e00\u4e2a\u7b80\u5355\u7684\u524d\u7aef\u754c\u9762 \u7528\u60ef\u4e86\u5404\u79cd\u5bfc\u822a\u9996\u9875 \u6ee1\u5c4f\u5e55\u5c3d\u662f\u5404\u79cd\u4e0d\u538c\u5176\u70e6\u7684\u5e7f\u544a\u548c\u8d44\u8baf \u5c1d\u8bd5\u81ea\u5df1\u5199\u4e2a\u81ea\u5df1\u7684\u4e3b\u9875 \u56fd\u5185\u5404\u5927CTF\u8d5b\u9898\u53cawriteup\u6574\u7406\u6536\u96c6\u81ea\u7f51\u7edc\u5404\u5904\u7684 webshell \u6837\u672c \u7528\u4e8e\u6d4b\u8bd5 webshell \u626b\u63cf\u5668\u68c0\u6d4b\u7387  PHP\u5fae\u4fe1SDK \u5fae\u4fe1\u5e73\u53f0 \u5fae\u4fe1\u652f\u4ed8 \u7801\u5c0f\u516d GitHub \u4ee3\u7801\u6cc4\u9732\u76d1\u63a7\u7cfb\u7edfPHP\u8868\u5355\u751f\u6210\u5668 \u5feb\u901f\u751f\u6210\u73b0\u4ee3\u5316\u7684form\u8868\u5355 \u652f\u6301\u524d\u540e\u7aef\u5206\u79bb \u5185\u7f6e\u590d\u9009\u6846 \u5355\u9009\u6846 \u8f93\u5165\u6846 \u4e0b\u62c9\u9009\u62e9\u6846 \u7701\u5e02\u533a\u4e09\u7ea7\u8054\u52a8 \u65f6\u95f4\u9009\u62e9 \u65e5\u671f\u9009\u62e9 \u989c\u8272\u9009\u62e9 \u6587\u4ef6 \u56fe\u7247\u4e0a\u4f20\u7b4917\u79cd\u5e38\u7528\u7ec4\u4ef6 \u609f\u7a7aCRM \u57fa\u4e8eTP5 vue ElementUI\u7684\u524d\u540e\u7aef\u5206\u79bbCRM\u7cfb\u7edfV\u514d\u7b7ePHP\u7248 \u5b8c\u5168\u5f00\u6e90\u514d\u8d39\u7684\u4e2a\u4eba\u514d\u7b7e\u7ea6\u89e3\u51b3\u65b9\u6848Composer \u5168\u91cf\u955c\u50cf\u53d1\u5e03\u4e8e2 17\u5e743\u6708 \u66fe\u4e0d\u95f4\u65ad\u8fd0\u884c2\u5e74\u591a \u8fd9\u4e2a\u5f00\u6e90\u6709\u52a9\u4e8e\u7406\u89e3 Composer \u955c\u50cf\u7684\u5de5\u4f5c\u539f\u7406\u4e00\u4e2a\u591a\u5f69 \u8f7b\u677e\u4e0a\u624b \u4f53\u9a8c\u5b8c\u5584 \u5177\u6709\u5f3a\u5927\u81ea\u5b9a\u4e49\u529f\u80fd\u7684WordPress\u4e3b\u9898 \u57fa\u4e8eSakura\u4e3b\u9898\u5168\u7403\u514d\u8d39\u4ee3\u7406IP\u5e93 \u9ad8\u53ef\u7528IP \u7cbe\u5fc3\u7b5b\u9009\u4f18\u8d28IP 2s\u5fc5\u8fbeLaraCMS \u662f\u5728\u5b66\u4e60 laravel web \u5f00\u53d1\u5b9e\u6218\u8fdb\u9636 \u5b9e\u6218\u6784\u67b6 API \u670d\u52a1\u5668 \u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u4e00\u4e2a\u4e1a\u4f59\u4f5c\u54c1 \u8bd5\u56fe\u901a\u8fc7\u7b80\u5355\u7684\u65b9\u5f0f \u5feb\u901f\u6784\u5efa\u4e00\u5957\u57fa\u672c\u7684\u4f01\u4e1a\u7ad9\u540c\u65f6\u4fdd\u7559\u5f88\u7075\u6d3b\u7684\u6269\u5c55\u80fd\u529b\u548c\u4f18\u96c5\u7684\u4ee3\u7801\u65b9\u5f0f \u5f53\u7136\u8fd9\u4e9b\u90fd\u5f97\u76caLaravel\u7684\u4f18\u79c0\u8bbe\u8ba1 \u540c\u65f6LaraCMS \u4e5f\u662f\u4e00\u4e2a\u5b66\u4e60Laravel \u4e0d\u9519\u7684\u53c2\u8003\u793a\u4f8b  \u5df2\u505c\u6b62\u7ef4\u62a4 HookPHP\u57fa\u4e8eC\u6269\u5c55\u642d\u5efa\u5185\u7f6eAI\u7f16\u7a0b\u7684\u67b6\u6784\u7cfb\u7edf \u652f\u6301\u5fae\u670d\u52a1\u90e8\u7f72 \u70ed\u63d2\u62d4\u4e1a\u52a1\u7ec4\u4ef6 \u96c6\u6210\u4e1a\u52a1\u6a21\u578b \u6743\u9650\u6a21\u578b UI\u7ec4\u4ef6\u5e93 \u591a\u6a21\u677f \u591a\u5e73\u53f0 \u591a\u57df\u540d \u591a\u7ec8\u7aef \u591a\u8bed\u8a00 \u542b\u5e38\u9a7b\u5185\u5b58 \u524d\u540e\u5206\u79bb API\u5e73\u53f0 LUA QQ\u7fa4 67911638 \u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u5c45\u6c11\u8eab\u4efd\u8bc1 \u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u6e2f\u6fb3\u5c45\u6c11\u5c45\u4f4f\u8bc1\u4ee5\u53ca\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u53f0\u6e7e\u5c45\u6c11\u5c45\u4f4f\u8bc1\u53f7\u7801\u9a8c\u8bc1\u5de5\u5177 PHP \u7248 \u6700\u7b80\u5355\u768491porn\u722c\u866bphp\u7248\u672cFend \u662f\u4e00\u6b3e\u77ed\u5c0f\u7cbe\u608d \u53ef\u5728 FPM Swoole \u670d\u52a1\u5bb9\u5668\u5e73\u6ed1\u5207\u6362\u7684\u9ad8\u6027\u80fdPHP\u6846\u67b6 no evil \u5b9e\u73b0\u8fc7\u6ee4\u654f\u611f\u8bcd\u6c47 \u57fa\u4e8e\u786e\u5b9a\u6709\u7a77\u81ea\u52a8\u673a DFA \u7b97\u6cd5 \u652f\u6301composer\u5b89\u88c5\u6269\u5c55Z BlogPHP\u535a\u5ba2\u7a0b\u5e8fIYUU\u81ea\u52a8\u8f85\u79cd\u5de5\u5177 \u76ee\u524d\u80fd\u5bf9\u56fd\u5185\u5927\u90e8\u5206\u7684PT\u7ad9\u70b9\u81ea\u52a8\u8f85\u79cd \u652f\u6301\u4e0b\u8f7d\u5668\u96c6\u7fa4 \u652f\u6301\u591a\u76d8\u4f4d \u652f\u6301\u591a\u4e0b\u8f7d\u76ee\u5f55 \u652f\u6301\u8fdc\u7a0b\u8fde\u63a5\u7b49 \u679c\u9171\u5c0f\u5e97 \u57fa\u4e8e Laravel swoole \u5c0f\u7a0b\u5e8f\u7684\u5f00\u6e90\u7535\u5546\u7cfb\u7edf \u4f18\u96c5\u4e0e\u6027\u80fd\u517c\u987e \u9019\u662f\u4e00\u4efd\u7d14\u9760\u5317\u5de5\u7a0b\u5e2b\u7684\u5c08\u6848 \u8acb\u597d\u597d\u611b\u8b77\u5b83 \u8b1d\u8b1d EC ecjia \u5230\u5bb6\u662f\u4e00\u6b3e\u53ef\u5f00\u5c55O2O\u4e1a\u52a1\u7684\u79fb\u52a8\u7535\u5546\u7cfb\u7edf \u5b83\u5305\u542b \u79fb\u52a8\u7aefAPP \u91c7\u7528\u539f\u751f\u6a21\u5f0f\u5f00\u53d1 \u8986\u76d6\u4f7f\u7528iOS \u53caAndroid\u7cfb\u7edf\u7684\u79fb \u52a8\u7ec8\u7aef \u540e\u53f0\u7cfb\u7edf \u9488\u5bf9\u5e73\u53f0\u65e5\u5e38\u8fd0\u8425\u7ef4\u62a4\u7684\u5e73\u53f0\u540e\u53f0 \u9488\u5bf9\u5165\u9a7b\u5e97\u94fa\u7ba1\u7406\u7684\u5546\u5bb6\u540e\u53f0 \u72ec\u7acb\u5e76\u884c \u79fb\u52a8\u7aefH5 \u80fd\u591f\u7075\u6d3b\u90e8\u7f72\u4e8e\u5fae\u4fe1\u53ca\u5176\u4ed6APP \u7f51\u9875\u7b49 Material Design \u6307\u5357\u7684\u4e2d\u6587\u7ffb\u8bd1 \u4e00\u4e2a\u7eafphp\u5206\u8bcd thinkphp5 1 layui \u5b9e\u73b0\u7684\u5e26rbac\u7684\u57fa\u7840\u7ba1\u7406\u540e\u53f0 \u65b9\u4fbf\u5feb\u901f\u5f00\u53d1\u6cd5\u4f7f\u7528\u767e\u5ea6pcs\u4e0a\u4f20\u811a\u672c\u76ee\u524d\u6700\u5168\u7684\u524d\u7aef\u5f00\u53d1\u9762\u8bd5\u9898\u53ca\u7b54\u6848\u6a31\u82b1\u5185\u7f51\u7a7f\u900f\u7f51\u7ad9\u6e90\u4ee3\u7801 2 2 \u91cd\u5236\u7248MeepoPS\u662fMeepo PHP Socket\u7684\u7f29\u5199 \u65e8\u5728\u63d0\u4f9b\u7a33\u5b9a\u7684Socket\u670d\u52a1 \u53ef\u4ee5\u8f7b\u677e\u6784\u5efa\u5728\u7ebf\u5b9e\u65f6\u804a\u5929 \u5373\u65f6\u6e38\u620f \u89c6\u9891\u6d41\u5a92\u4f53\u64ad\u653e\u7b49 \u57fa\u7840\u76ee\u5f55 \u805a\u5408\u6240\u6709\u5176\u4ed6\u76ee\u5f55 \u5305\u542b\u6587\u6863\u548c\u4f8b\u5b50\u57fa\u4e8e Vue js \u7684\u7b80\u6d01\u4e00\u822c\u5f3a\u5927\u7684 WordPress \u5355\u680f\u535a\u5ba2\u4e3b\u9898\u963f\u91cc\u4e91\u6253\u9020Laravel\u6700\u597d\u7684OSS Storage\u6269\u5c55 \u7f51\u4e0a\u5728\u7ebf\u5546\u57ce \u7efc\u5408\u7f51\u4e0a\u8d2d\u7269\u5e73\u53f0swoolefy\u662f\u4e00\u4e2a\u57fa\u4e8eswoole\u5b9e\u73b0\u7684\u8f7b\u91cf\u7ea7 \u9ad8\u6027\u80fd \u534f\u7a0b\u7ea7 \u5f00\u653e\u6027\u7684API\u5e94\u7528\u670d\u52a1\u6846\u67b6\u57fa\u4e8eredis\u5b9e\u73b0\u9ad8\u53ef\u7528 \u6613\u62d3\u5c55 \u63a5\u5165\u65b9\u4fbf \u751f\u4ea7\u73af\u5883\u7a33\u5b9a\u8fd0\u884c\u7684\u5ef6\u8fdf\u961f\u5217 \u4e00\u6b3e\u57fa\u4e8eWordPress\u5f00\u53d1\u7684\u9ad8\u989c\u503c\u7684\u81ea\u9002\u5e94\u4e3b\u9898 \u652f\u6301\u767d\u5929\u4e0e\u9ed1\u591c\u6a21\u5f0f \u65e0\u5237\u65b0\u52a0\u8f7d\u7b49 \u963f\u91cc\u4e91 OSS \u5b98\u65b9 SDK \u7684 Composer \u5c01\u88c5 \u652f\u6301\u4efb\u4f55 PHP \u9879\u76ee \u5305\u62ec Laravel Symfony TinyLara \u7b49\u7b49 \u6b64\u63d2\u4ef6\u5c06\u4f60\u7684WordPress\u63a5\u5165\u672c\u571f\u751f\u6001\u4f53\u7cfb\u4e4b\u4e2d \u4f7f\u4e4b\u66f4\u9002\u5408\u56fd\u5185\u5e94\u7528\u73af\u5883PHP\u7684\u670d\u52a1\u5316\u6846\u67b6 \u9002\u7528\u4e8eApi Server Rpc Server \u5e2e\u52a9\u539f\u751fPHP\u9879\u76ee\u8f6c\u5411\u5fae\u670d\u52a1\u5316 \u51fa\u8272\u7684\u6027\u80fd\u4e0e\u652f\u6301\u9ad8\u5e76\u53d1\u7684\u534f\u7a0b\u76f8\u7ed3\u5408\u57fa\u4e8eThinkPHP V6 \u5f00\u53d1\u7684\u9762\u5411API\u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf  PHP Swoole \u5f00\u53d1\u7684\u5728\u7ebf\u540c\u6b65\u70b9\u6b4c\u53f0 \u652f\u6301\u81ea\u7531\u70b9\u6b4c \u5207\u6b4c \u8c03\u6574\u6392\u5e8f \u5220\u9664\u6307\u5b9a\u97f3\u4e50\u4ee5\u53ca\u57fa\u7840\u6743\u9650\u5206\u7ea7\u4fe1\u547c \u514d\u8d39\u5f00\u6e90\u7684\u529e\u516cOA\u7cfb\u7edf \u5305\u62ecAPP pc\u4e0a\u5ba2\u6237\u7aef REIM\u5373\u65f6\u901a\u4fe1 \u670d\u52a1\u7aef\u7b49 \u8ba9\u6bcf\u4e2a\u4f01\u4e1a\u5355\u4f4d\u90fd\u6709\u81ea\u5df1\u7684\u529e\u516c\u7cfb\u7edf \u6765\u5ba2\u7535\u5546 \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u5546\u57ce APP\u5546\u57ce \u516c\u4f17\u53f7\u5546\u57ce PC\u5546\u57ce\u7cfb\u7edf \u652f\u4ed8\u5b9d\u5c0f\u7a0b\u5e8f\u5546\u57ce \u6296\u97f3\u5c0f\u7a0b\u5e8f\u5546\u57ce \u767e\u5ea6\u5c0f\u7a0b\u5e8f\u7535\u5546\u7cfb\u7edf \u524d\u540e\u7aef\u4ee3\u7801\u5168\u90e8\u5f00\u6e90 \u6ce8\u91cd\u754c\u9762\u7f8e\u611f\u4e0e\u7528\u6237\u4f53\u9a8c \u6253\u9020\u72ec\u7279\u7535\u5546\u7cfb\u7edf\u751f\u6001\u5708\u54d4\u54e9\u54d4\u54e9 Bilibili B \u7ad9\u4e3b\u7ad9\u52a9\u624b \u76f4\u64ad\u52a9\u624b \u76f4\u64ad\u62bd\u5956 \u6302\u673a\u5347\u7ea7 \u8d34\u5fc3\u5c0f\u68c9\u8884\u811a\u672c Lv6 \u79bb\u4f60\u4ec5\u6709\u4e00\u6b65\u4e4b\u9065 PHP \u7248 Personal \u4e00\u4e2a\u8fd0\u7528php\u4e0eswoole\u5b9e\u73b0\u7684\u7edf\u8ba1\u76d1\u63a7\u7cfb\u7edf\u77ed\u89c6\u9891\u53bb\u6c34\u5370 \u6296\u97f3 \u76ae\u76ae\u867e \u706b\u5c71 \u5fae\u89c6 \u5fae\u535a \u7eff\u6d32 \u6700\u53f3 \u8f7b\u89c6\u9891 \u5feb\u624b \u5168\u6c11\u5c0f\u89c6\u9891 \u5df4\u585e\u7535\u5f71 \u964c\u964c Before\u907f\u98ce \u5f00\u773c Vue Vlog \u5c0f\u5496\u79c0 \u76ae\u76ae\u641e\u7b11 \u5168\u6c11K\u6b4c \u897f\u74dc\u89c6\u9891  \u4e2d\u56fd\u519c\u5386 \u9634\u5386 \u4e0e\u9633\u5386 \u516c\u5386 \u8f6c\u6362\u4e0e\u67e5\u8be2\u5de5\u5177AoiAWD \u4e13\u4e3a\u6bd4\u8d5b\u8bbe\u8ba1 \u4fbf\u643a\u6027\u597d \u4f4e\u6743\u9650\u8fd0\u884c\u7684EDR\u7cfb\u7edf \u9879\u76ee\u7ba1\u7406\u7cfb\u7edf\u540e\u7aef\u63a5\u53e3ThinkPHP \u961f\u5217\u652f\u6301Typecho Theme Aria \u4e66\u5199\u81ea\u5df1\u7684\u7bc7\u7ae0PHP \u4e2d\u6587\u5de5\u5177\u5305 \u652f\u6301\u6c49\u5b57\u8f6c\u62fc\u97f3 \u62fc\u97f3\u5206\u8bcd \u7b80\u7e41\u4e92\u8f6c \u6570\u5b57 \u91d1\u989d\u5927\u5199 QQ\u7fa4 17916227Yii2 community \u8bf7\u8bbf\u95ee\u6dd8\u5ba25\u5408\u4e00SDK \u652f\u6301\u6dd8\u5b9d\u8054\u76df \u4eac\u4e1c\u8054\u76df \u591a\u591a\u8fdb\u5b9d \u552f\u54c1\u4f1a \u82cf\u5b81\u57fa\u4e8e thinkphp \u5f00\u53d1\u7684\u7684 blogMojito Admin \u57fa\u4e8e Laravel Vue Element \u6784\u5efa\u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u4e00\u4e2a\u7ecf\u5178\u7684XSS\u6e17\u900f\u7ba1\u7406\u5e73\u53f0\u4e00\u6b3e\u57fa\u4e8e RageFrame2 \u7684\u514d\u8d39\u5f00\u6e90\u7684\u57fa\u7840\u9500\u552e\u529f\u80fd\u7684\u5546\u57ce\u57fa\u4e8eLaravel 5 4 \u7684\u5f00\u53d1\u7684\u535a\u5ba2\u7cfb\u7edf \u4ee3\u53f7 myPersimmon\u8bc1\u4ef6\u7167\u7247\u6392\u7248\u5728\u7ebf\u751f\u6210\u5668 \u5728\u4e00\u5f206\u5bf8\u7684\u7167\u7247\u4e0a\u6392\u7248\u591a\u5f20\u8bc1\u4ef6\u7167\u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u5b66\u79d1\u63a8\u8350\u5b66\u672f\u4f1a\u8bae\u548c\u671f\u520a\u5217\u8868WordPress\u54cd\u5e94\u5f0f\u514d\u8d39\u4e3b\u9898 Art Blog\u552f\u54c1\u79c0\u535a\u5ba2 weipxiu com \u5907\u7528\u57df\u540dweipxiu cn \u5f00\u6e90\u7ed9\u5c0f\u4f19\u4f34\u514d\u8d39\u4f7f\u7528 \u5982\u4f7f\u7528\u8fc7\u7a0b\u6709\u4efb\u4f55\u95ee\u9898 \u5728\u7ebf\u6280\u672f\u652f\u6301QQ \u6b22\u8fce\u6253\u6270 \u539f\u521b\u4e0d\u6613 \u5982\u559c\u6b22 \u8bf7\u591a\u591a\u6253\u8d4f \u6f14\u793a EwoMail\u662f\u57fa\u4e8eLinux\u7684\u4f01\u4e1a\u90ae\u7bb1\u670d\u52a1\u5668 \u96c6\u6210\u4e86\u4f17\u591a\u4f18\u79c0\u7a33\u5b9a\u7684\u7ec4\u4ef6 \u662f\u4e00\u4e2a\u5feb\u901f\u90e8\u7f72 \u7b80\u5355\u9ad8\u6548 \u591a\u8bed\u8a00 \u5b89\u5168\u7a33\u5b9a\u7684\u90ae\u4ef6\u89e3\u51b3\u65b9\u6848 \u7b14\u8bb0\u672c\u65b0\u7248\u7b80\u5355\u5f3a\u5927\u7684\u65e0\u6570\u636e\u5e93\u7684\u56fe\u5e8a2 \u7248 \u6f14\u793a\u5730\u5740  Bilibili B \u7ad9\u81ea\u52a8\u9886\u74dc\u5b50 \u76f4\u64ad\u52a9\u624b \u76f4\u64ad\u6302\u673a\u811a\u672c \u4e3b\u7ad9\u52a9\u624b PHP \u7248\u5fae\u4fe1\u7fa4\u4e8c\u7ef4\u7801\u6d3b\u7801\u5de5\u5177 \u751f\u6210\u5fae\u4fe1\u7fa4\u6d3b\u7801 \u968f\u65f6\u53ef\u4ee5\u5207\u6362\u4e8c\u7ef4\u7801 \u77ed\u89c6\u9891\u7684PHP\u62d3\u5c55\u5305 \u96c6\u6210\u5404\u5927\u77ed\u89c6\u9891\u7684\u53bb\u6c34\u5370\u529f\u80fd \u6296\u97f3 \u5feb\u624b \u5fae\u89c6\u4e3b\u6d41\u77ed\u89c6\u9891 PHP\u53bb\u6c34\u5370\u4e00\u4e2aPHPer\u7684\u5347\u7ea7\u4e4b\u8def\u9177\u74dc\u4e91\u8bfe\u5802 \u5728\u7ebf\u6559\u80b2 \u7f51\u8bfe\u7cfb\u7edf \u7f51\u6821\u7cfb\u7edf \u77e5\u8bc6\u4ed8\u8d39\u7cfb\u7edf \u4e0d\u52a0\u5bc6\u4e0d\u9609\u5272 1 %\u5168\u529f\u80fd\u5f00\u6e90 \u53ef\u514d\u8d39\u5546\u7528 \u6846\u67b6\u4e3b\u8981\u4f7f\u7528ThinkPHP6 layui \u62e5\u6709\u5b8c\u5584\u7684\u6743\u9650\u7684\u7ba1\u7406\u6a21\u5757\u4ee5\u53ca\u654f\u6377\u7684\u5f00\u53d1\u65b9\u5f0f \u8ba9\u4f60\u5f00\u53d1\u8d77\u6765\u66f4\u52a0\u7684\u8212\u670d laravel5 5\u642d\u5efa\u7684\u540e\u53f0\u7ba1\u7406 \u548c api\u670d\u52a1 \u7684\u5c0f\u7a0b\u5e8f\u5546\u57ce\u57fa\u4e8eThinkPHP5 AdminLTE\u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u9b54\u6539\u7248\u672c \u4e3a OLAINDEX \u6dfb\u52a0\u591a\u7f51\u76d8\u6302\u8f7d\u53ca\u4e00\u4e9b\u5c0f\u4fee\u590d\u6d77\u8c5aPHP \u57fa\u4e8eThinkPHP5 1 41LTS\u7684\u5feb\u901f\u5f00\u53d1\u6846\u67b6\u6302\u8f7dTeambition\u6587\u4ef6 \u53ef\u76f4\u94fe\u5206\u4eab \u652f\u6301\u7f51\u76d8 \u9700\u7533\u8bf7 \u548c\u9879\u76ee\u6587\u4ef6 \u65e0\u9700\u9080\u8bf7\u7801 \u51c6\u786e\u738799 9%\u7684ip\u5730\u5740\u5b9a\u4f4d\u5e93laravel ant design vue \u6743\u9650\u540e\u53f0PHP \u7b2c\u4e09\u65b9\u767b\u5f55\u6388\u6743 SDK \u96c6\u6210\u4e86QQ \u5fae\u4fe1 \u5fae\u535a Github\u7b49\u5e38\u7528\u63a5\u53e3 \u652f\u6301 php fpm \u548c Swoole \u6240\u6709\u6846\u67b6\u901a\u7528 QQ\u7fa4 17916227\u6296\u97f3\u53bb\u6c34\u5370PHP\u7248\u63a5\u53e3\u4e00\u4e2a\u5206\u5e03\u5f0f\u7edf\u8ba1\u76d1\u63a7\u7cfb\u7edf \u5305\u542bPHP\u5ba2\u6237\u7aef \u670d\u52a1\u7aef\u6574\u5408\u591a\u63a5\u53e3\u7684IP\u67e5\u8be2\u5de5\u5177 \u57fa\u4e8e\u963f\u91cc\u4e91OSS\u7684WordPress\u8fdc\u7a0b\u9644\u4ef6\u652f\u6301\u63d2\u4ef6 \u540e\u4f1a\u6709\u671f \u5f00\u7bb1\u5373\u7528\u7684Laravel\u540e\u53f0\u6269\u5c55 \u524d\u540e\u7aef\u5206\u79bb \u540e\u7aef\u63a7\u5236\u524d\u7aef\u7ec4\u4ef6 \u65e0\u9700\u7f16\u5199vue\u5373\u53ef\u521b\u5efa\u4e00\u4e2a\u7684\u9879\u76ee \u4e30\u5bcc\u7684\u8868\u5355 \u8868\u683c\u7ec4\u4ef6 \u5f3a\u5927\u7684\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u529f\u80fd yii2 swoole \u8ba9yii2\u8fd0\u884c\u5728swoole\u4e0a\u80d6\u9f20\u91c7\u96c6 WordPress\u4f18\u79c0\u5f00\u6e90\u91c7\u96c6\u63d2\u4ef6CatchAdmin\u662f\u4e00\u6b3e\u57fa\u4e8ethinkphp6 \u548c element admin \u5f00\u53d1\u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf \u57fa\u4e8e ServiceProvider \u7cfb\u7edf\u6a21\u5757\u5b8c\u5168\u63a5\u8026 \u968f\u65f6\u5378\u8f7d\u5b89\u88c5\u6a21\u5757 \u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u6743\u9650\u548c\u6570\u636e\u6743\u9650\u7b49\u529f\u80fd \u5927\u91cf\u5185\u7f6e\u7684\u5f00\u53d1\u5de5\u5177\u63d0\u5347\u4f60\u7684\u5f00\u53d1\u4f53\u9a8c \u5b98\u7f51\u5730\u5740 \u5fae\u4fe1\u516c\u4f17\u5e73\u53f0php\u7248\u5f00\u53d1\u5305\u5fae\u4fe1\u5c0f\u7a0b\u5e8f \u6821\u56ed\u5c0f\u60c5\u4e66\u540e\u53f0\u6e90\u7801 \u597d\u73a9\u7684\u8868\u767d\u5899 \u544a\u767d\u5899 \u529f\u80fd\u5168\u9762\u7684PHP\u547d\u4ee4\u884c\u5e94\u7528\u5e93 \u63d0\u4f9b\u63a7\u5236\u53f0\u53c2\u6570\u89e3\u6790 \u547d\u4ee4\u8fd0\u884c \u989c\u8272\u98ce\u683c\u8f93\u51fa \u7528\u6237\u4fe1\u606f\u4ea4\u4e92 \u7279\u6b8a\u683c\u5f0f\u4fe1\u606f\u663e\u793a\u57fa\u4e8e chinese poetry \u6570\u636e\u6574\u7406\u7684\u4e00\u4efd mysql \u683c\u5f0f\u6570\u636e\u5e2e\u52a9 thinkphp 5 \u5f00\u53d1\u8005\u5feb\u901f \u8f7b\u677e\u7684\u6784\u5efaApi hyperf admin \u662f\u57fa\u4e8e hyperf vue \u7684\u914d\u7f6e\u5316\u540e\u53f0\u5f00\u53d1\u5de5\u5177 \u5fae\u4fe1\u652f\u4ed8php \u5199\u7684\u89c6\u9891\u4e0b\u8f7d\u5de5\u5177 \u73b0\u5df2\u652f\u6301 Youku Miaopai \u817e\u8baf XVideos Pornhub 91porn \u5fae\u535a\u9177\u71c3 bilibili \u4eca\u65e5\u5934\u6761 \u8292\u679cTVCorePress \u4e3b\u9898 \u4e00\u6b3e\u9ad8\u6027\u80fd \u9ad8\u989c\u503c\u7684WordPress\u4e3b\u9898\u5feb\u94fe\u7535\u5546 \u76f4\u64ad\u7535\u5546 \u5206\u9500\u5546\u57ce \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u5546\u57ce APP\u5546\u57ce \u516c\u4f17\u53f7\u5546\u57ce PC\u5546\u57ce\u7cfb\u7edf \u652f\u4ed8\u5b9d\u5c0f\u7a0b\u5e8f\u5546\u57ce \u6296\u97f3\u5c0f\u7a0b\u5e8f\u5546\u57ce \u767e\u5ea6\u5c0f\u7a0b\u5e8f\u7535\u5546\u7cfb\u7edf \u524d\u540e\u7aef\u4ee3\u7801\u5168\u90e8\u5f00\u6e90 Laravel vue\u5f00\u53d1 \u6210\u719f\u5546\u7528\u9879\u76ee shop mall \u5546\u57ce \u7535\u5546 \u5229\u7528 PHP cURL \u8f6c\u53d1 Disqus API \u8bf7\u6c42\u53ef\u80fd\u662f\u6700\u4f18\u96c5 \u7b80\u6613\u7684\u6dd8\u5b9d\u5ba2SDKUniAdmin\u662f\u4e00\u5957\u6e10\u8fdb\u5f0f\u6a21\u5757\u5316\u5f00\u6e90\u540e\u53f0 \u91c7\u7528\u524d\u540e\u7aef\u5206\u79bb\u6280\u672f \u6570\u636e\u4ea4\u4e92\u91c7\u7528json\u683c\u5f0f \u529f\u80fd\u4f4e\u8026\u5408\u9ad8\u5185\u805a \u6838\u5fc3\u6a21\u5757\u652f\u6301\u7cfb\u7edf\u8bbe\u7f6e \u6743\u9650\u7ba1\u7406 \u7528\u6237\u7ba1\u7406 \u83dc\u5355\u7ba1\u7406 API\u7ba1\u7406\u7b49\u529f\u80fd \u540e\u671f\u4e0a\u7ebf\u6a21\u5757\u5546\u57ce\u5c06\u6253\u9020\u7c7b\u4f3ccomposer npm\u7684\u5f00\u653e\u5f0f\u63d2\u4ef6\u5e02\u573a \u540c\u65f6\u6211\u4eec\u5c06\u6253\u9020\u4e00\u5957\u517c\u5bb9\u6027\u7684API\u6807\u51c6 \u4eceThinkPHP5 1 Vue2\u5f00\u59cb \u9010\u6b65\u5438\u5f15\u7231\u597d\u8005\u5171\u540c\u52a0\u5165 \u4ee5\u8986\u76d6\u7b49\u591a\u8bed\u8a00\u6846\u67b6 PHP \u591a\u63a5\u53e3\u83b7\u53d6\u5feb\u9012\u7269\u6d41\u4fe1\u606f\u5305LightCMS \u662f\u4e00\u4e2a\u57fa\u4e8e Laravel \u5f00\u53d1\u7684\u8f7b\u91cf\u7ea7 CMS \u7cfb\u7edf \u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u901a\u7528\u7684\u540e\u53f0\u7ba1\u7406\u6846\u67b6\u4f7f\u7528\u5355\u70b9\u767b\u5f55\u7cfb\u7edf\u5feb\u4e50\u4e8c\u7ea7\u57df\u540d\u5206\u53d1\u7cfb\u7edfTypecho Theme Story \u7231\u4e0a\u4f60\u6211\u7684\u6545\u4e8b \u4e00\u4e2a\u8f7b\u91cf\u5316\u7684\u7559\u8a00\u677f \u8bb0\u4e8b\u672c \u793e\u4ea4\u7cfb\u7edf \u535a\u5ba2 \u4eba\u7c7b\u7684\u672c\u8d28\u662f \u5495\u5495\u5495\uff1f\u5fae\u4fe1\u57df\u540d\u62e6\u622a\u68c0\u6d4b QQ\u57df\u540d\u62e6\u622a\u68c0\u6d4b t xzkxb com \u67e5\u8be2\u6709\u7f13\u5b58 \u5982\u9700\u5b9e\u65f6\u67e5\u8be2\u8bf7\u81ea\u884c\u90e8\u7f72 \u9ad8\u6027\u80fd\u5206\u5e03\u5f0f\u5e76\u53d1\u9501 \u884c\u4e3a\u9650\u6d41Emlog\u662f\u4e00\u6b3e\u57fa\u4e8ePHP\u548cMySQL\u7684\u529f\u80fd\u5f3a\u5927\u7684\u535a\u5ba2\u53caCMS\u5efa\u7ad9\u7cfb\u7edf \u8ffd\u6c42\u5feb\u901f \u7a33\u5b9a \u7b80\u5355 \u8212\u9002\u7684\u5efa\u7ad9\u4f53\u9a8cHyperf admin \u57fa\u4e8eHyperf Element UI \u901a\u7528\u7ba1\u7406\u540e\u53f0\u4f01\u4e1a\u4ed3\u5e93\u7ba1\u7406\u7cfb\u7edfHisiPHP V2\u7248\u662f\u57fa\u4e8eThinkPHP5 1\u548cLayui\u5f00\u53d1\u7684\u540e\u53f0\u6846\u67b6 \u627f\u8bfa\u6c38\u4e45\u514d\u8d39\u5f00\u6e90 \u60a8\u53ef\u7528\u4e8e\u5b66\u4e60\u548c\u5546\u7528 \u4f46\u987b\u4fdd\u7559\u7248\u6743\u4fe1\u606f\u6b63\u5e38\u663e\u793a \u5982\u679cHisiPHP\u5bf9\u60a8\u6709\u5e2e\u52a9 \u60a8\u53ef\u4ee5\u70b9\u51fb\u53f3\u4e0a\u89d2 Star \u652f\u6301\u4e00\u4e0b\u54e6 \u8c22\u8c22 \u4f7f\u7528PHP\u5f00\u53d1\u7684\u7b80\u7ea6\u5bfc\u822a \u4e66\u7b7e\u7ba1\u7406\u7cfb\u7edf \u8f6f\u64ce\u662f\u57fa\u4e8e Php 7 2 \u548c Swoole 4 4 \u7684\u9ad8\u6027\u80fd \u7b80\u5355\u6613\u7528\u7684\u5f00\u53d1\u6846\u67b6 \u652f\u6301\u540c\u65f6\u5728 Swoole Server \u548c php fpm \u4e24\u79cd\u6a21\u5f0f\u4e0b\u8fd0\u884c \u5185\u7f6e\u4e86\u670d\u52a1 \u96c6\u6210\u4e86\u5927\u91cf\u6210\u719f\u7684\u7ec4\u4ef6 \u53ef\u4ee5\u7528\u4e8e\u6784\u5efa\u9ad8\u6027\u80fd\u7684Web\u7cfb\u7edf API \u4e2d\u95f4\u4ef6 \u57fa\u7840\u670d\u52a1\u7b49\u7b49 \u4e2a\u4eba\u53d1\u5361\u6e90\u7801 \u53d1\u5361\u7cfb\u7edf \u4e8c\u6b21\u5143\u53d1\u5361\u7cfb\u7edf \u4e8c\u6b21\u5143\u53d1\u5361\u6e90\u7801 \u53d1\u5361\u7a0b\u5e8f \u52a8\u6f2b\u53d1\u5361 PHP\u53d1\u5361\u6e90\u7801\u804a\u5929\u5e94\u7528 php\u5b9e\u73b0\u7684dht\u722c\u866b\u642d\u5efa\u7684webim\u5ba2\u670d\u7cfb\u7edf \u5373\u65f6\u901a\u8baf\u4e00\u4e9b\u5b9e\u7528\u7684python\u811a\u672c\u540c\u57ce\u62fc\u8f66\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u540e\u7aef\u4ee3\u7801 \u4e00\u4e2a\u54cd\u5e94\u5f0f\u5e72\u51c0\u548c\u7b80\u6d01\u4f18\u96c5\u7684 Typecho \u4e3b\u9898php\u4ed3\u5e93\u8fdb\u9500\u5b58\u6df1\u5ea6\u5b66\u4e605 \u95ee \u4ee5\u95ee\u7b54\u5f62\u5f0f\u5bf9\u5e38\u7528\u7684\u6982\u7387\u77e5\u8bc6 \u7ebf\u6027\u4ee3\u6570 \u673a\u5668\u5b66\u4e60 \u6df1\u5ea6\u5b66\u4e60 \u8ba1\u7b97\u673a\u89c6\u89c9\u7b49\u70ed\u70b9\u95ee\u9898\u8fdb\u884c\u9610\u8ff0 \u4ee5\u5e2e\u52a9\u81ea\u5df1\u53ca\u6709\u9700\u8981\u7684\u8bfb\u8005 \u5168\u4e66\u5206\u4e3a18\u4e2a\u7ae0\u8282 5 \u4f59\u4e07\u5b57 \u7531\u4e8e\u6c34\u5e73\u6709\u9650 \u4e66\u4e2d\u4e0d\u59a5\u4e4b\u5904\u6073\u8bf7\u5e7f\u5927\u8bfb\u8005\u6279\u8bc4\u6307\u6b63 \u672a\u5b8c\u5f85\u7eed \u5982\u6709\u610f\u5408\u4f5c \u8054\u7cfbscutjy2 15 163 com \u7248\u6743\u6240\u6709 \u8fdd\u6743\u5fc5\u7a76 Tan 2 18 6\u9898\u89e3 \u8bb0\u5f55\u81ea\u5df1\u7684leetcode\u89e3\u9898\u4e4b\u8def \u6700\u5168\u4e2d\u534e\u53e4\u8bd7\u8bcd\u6570\u636e\u5e93 \u5510\u5b8b\u4e24\u671d\u8fd1\u4e00\u4e07\u56db\u5343\u53e4\u8bd7\u4eba \u63a5\u8fd15 5\u4e07\u9996\u5510\u8bd7\u52a026\u4e07\u5b8b\u8bd7 \u4e24\u5b8b\u65f6\u671f1564\u4f4d\u8bcd\u4eba 21 5 \u9996\u8bcd uni app \u662f\u4f7f\u7528 Vue \u8bed\u6cd5\u5f00\u53d1\u5c0f\u7a0b\u5e8f H5 App\u7684\u7edf\u4e00\u6846\u67b6\u91c7\u7528\u81ea\u8eab\u6a21\u5757\u89c4\u8303\u7f16\u5199\u7684\u524d\u7aef UI \u6846\u67b6 \u9075\u5faa\u539f\u751f HTML CSS JS \u7684\u4e66\u5199\u5f62\u5f0f \u6781\u4f4e\u95e8\u69db \u62ff\u6765\u5373\u7528 \u6211\u662f\u4f9d\u626c \u6728\u6613\u6768 \u516c\u4f17\u53f7 \u9ad8\u7ea7\u524d\u7aef\u8fdb\u9636 \u4f5c\u8005 \u6bcf\u5929\u641e\u5b9a\u4e00\u9053\u524d\u7aef\u5927\u5382\u9762\u8bd5\u9898 \u795d\u5927\u5bb6\u5929\u5929\u8fdb\u6b65 \u4e00\u5e74\u540e\u4f1a\u770b\u5230\u4e0d\u4e00\u6837\u7684\u81ea\u5df1 YApi \u662f\u4e00\u4e2a\u53ef\u672c\u5730\u90e8\u7f72\u7684 \u6253\u901a\u524d\u540e\u7aef\u53caQA\u7684 \u53ef\u89c6\u5316\u7684\u63a5\u53e3\u7ba1\u7406\u5e73\u53f0\u5c0f\u7a0b\u5e8f\u7ec4\u4ef6\u5316\u5f00\u53d1\u6846\u67b6\u7f51\u6613\u4e91\u97f3\u4e50 Node js API service\u57fa\u4e8e Vue js \u7684\u5c0f\u7a0b\u5e8f\u5f00\u53d1\u6846\u67b6 \u4ece\u5e95\u5c42\u652f\u6301 Vue js \u8bed\u6cd5\u548c\u6784\u5efa\u5de5\u5177\u4f53\u7cfb  ECMAScript 6\u5165\u95e8 \u662f\u4e00\u672c\u5f00\u6e90\u7684 JavaScript \u8bed\u8a00\u6559\u7a0b \u5168\u9762\u4ecb\u7ecd ECMAScript 6 \u65b0\u589e\u7684\u8bed\u6cd5\u7279\u6027  \u8c37\u7c92 Chrome\u63d2\u4ef6\u82f1\u96c4\u699c \u4e3a\u4f18\u79c0\u7684Chrome\u63d2\u4ef6\u5199\u4e00\u672c\u4e2d\u6587\u8bf4\u660e\u4e66 \u8ba9Chrome\u63d2\u4ef6\u82f1\u96c4\u4eec\u9020\u798f\u4eba\u7c7b\u516c\u4f17\u53f7 \u52a01 \u540c\u6b65\u66f4\u65b0\u524d\u7aef\u9762\u8bd5\u6bcf\u65e5 3 1 \u4ee5\u9762\u8bd5\u9898\u6765\u9a71\u52a8\u5b66\u4e60 \u63d0\u5021\u6bcf\u65e5\u5b66\u4e60\u4e0e\u601d\u8003 \u6bcf\u5929\u8fdb\u6b65\u4e00\u70b9 \u6bcf\u5929\u65e9\u4e0a5\u70b9\u7eaf\u624b\u5de5\u53d1\u5e03\u9762\u8bd5\u9898 \u6b7b\u78d5\u81ea\u5df1 \u6109\u60a6\u5927\u5bb6 4 \u9053\u524d\u7aef\u9762\u8bd5\u9898\u5168\u9762\u8986\u76d6\u5c0f\u7a0b\u5e8f \u8f6f\u6280\u80fd \u672c\u6587\u539f\u6587\u7531\u77e5\u540d Hacker Eric S Raymond \u6240\u64b0\u5beb \u6559\u4f60\u5982\u4f55\u6b63\u78ba\u7684\u63d0\u51fa\u6280\u8853\u554f\u984c\u4e26\u7372\u5f97\u4f60\u6eff\u610f\u7684\u7b54\u6848 \u5343\u53e4\u524d\u7aef\u56fe\u6587\u6559\u7a0b \u8d85\u8be6\u7ec6\u7684\u524d\u7aef\u5165\u95e8\u5230\u8fdb\u9636\u5b66\u4e60\u7b14\u8bb0 \u4ece\u96f6\u5f00\u59cb\u5b66\u524d\u7aef \u505a\u4e00\u540d\u7cbe\u81f4\u4f18\u96c5\u7684\u524d\u7aef\u5de5\u7a0b\u5e08 \u516c\u4f17\u53f7 \u5343\u53e4\u58f9\u53f7 \u4f5c\u8005  book Node js \u5305\u6559\u4e0d\u5305\u4f1a by alsotang\u6536\u96c6\u6240\u6709\u533a\u5757\u94fe BlockChain \u6280\u672f\u5f00\u53d1\u76f8\u5173\u8d44\u6599 \u5305\u62ecFabric\u548cEthereum\u5f00\u53d1\u8d44\u6599\u8f7b\u91cf \u53ef\u9760\u7684\u5c0f\u7a0b\u5e8f UI \u7ec4\u4ef6\u5e93\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u5546\u57ce \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u5fae\u5e97\u4e00\u4e2a\u53ef\u4ee5\u89c2\u770b\u56fd\u5185\u4e3b\u6d41\u89c6\u9891\u5e73\u53f0\u6240\u6709\u89c6\u9891\u7684\u5ba2\u6237\u7aef\u53ef\u4f38\u7f29\u5e03\u5c40\u65b9\u6848\u57fa\u4e8e node js Mongodb \u6784\u5efa\u7684\u540e\u53f0\u7cfb\u7edf js \u6e90\u7801\u89e3\u6790\u78c1\u529b\u94fe\u63a5\u805a\u5408\u641c\u7d22\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u884c\u653f\u533a\u5212 \u7701\u7ea7 \u7701\u4efd\u76f4\u8f96\u5e02\u81ea\u6cbb\u533a \u5730\u7ea7 \u57ce\u5e02 \u53bf\u7ea7 \u533a\u53bf \u4e61\u7ea7 \u4e61\u9547\u8857\u9053 \u6751\u7ea7 \u6751\u59d4\u4f1a\u5c45\u59d4\u4f1a \u4e2d\u56fd\u7701\u5e02\u533a\u9547\u6751\u4e8c\u7ea7\u4e09\u7ea7\u56db\u7ea7\u4e94\u7ea7\u8054\u52a8\u5730\u5740\u6570\u636e Web\u63a5\u53e3\u7ba1\u7406\u5de5\u5177 \u5f00\u6e90\u514d\u8d39 \u63a5\u53e3\u81ea\u52a8\u5316 MOCK\u6570\u636e\u81ea\u52a8\u751f\u6210 \u81ea\u52a8\u5316\u6d4b\u8bd5 \u4f01\u4e1a\u7ea7\u7ba1\u7406 \u963f\u91cc\u5988\u5988MUX\u56e2\u961f\u51fa\u54c1 \u963f\u91cc\u5df4\u5df4\u90fd\u5728\u7528 1 \u516c\u53f8\u7684\u9009\u62e9 RAP2\u5df2\u53d1\u5e03\u8bf7\u79fb\u6b65\u81f3github com thx rap2 delosKuboard \u662f\u57fa\u4e8e Kubernetes \u7684\u5fae\u670d\u52a1\u7ba1\u7406\u754c\u9762 \u540c\u65f6\u63d0\u4f9b Kubernetes \u514d\u8d39\u4e2d\u6587\u6559\u7a0b \u5165\u95e8\u6559\u7a0b \u6700\u65b0\u7248\u672c\u7684 Kubernetes v1 2 \u5b89\u88c5\u624b\u518c k8s install \u5728\u7ebf\u7b54\u7591 \u6301\u7eed\u66f4\u65b0 ApacheCN \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u8bd1\u6587\u96c6 chick \u662f\u4f7f\u7528 Node js \u548c MongoDB \u5f00\u53d1\u7684\u793e\u533a\u7cfb\u7edf\u4e00\u4e2a\u975e\u5e38\u9002\u5408IT\u56e2\u961f\u7684\u5728\u7ebfAPI\u6587\u6863 \u6280\u672f\u6587\u6863\u5de5\u5177 Chinese sticker pack More joy \u8868\u60c5\u5305\u7684\u535a\u7269\u9986 Github\u6700\u6709\u6bd2\u7684\u4ed3\u5e93 \u4e2d\u56fd\u8868\u60c5\u5305\u5927\u96c6\u5408 \u805a\u6b22\u4e50 \u9ad8\u989c\u503c\u7684\u7b2c\u4e09\u65b9\u7f51\u6613\u4e91\u64ad\u653e\u5668 \u652f\u6301 Windows macOS Linux vue2 vue router vuex \u5165\u95e8\u9879\u76ee\u7f51\u6613\u4e91\u97f3\u4e50\u7b2c\u4e09\u65b9 Flutter\u5b9e\u6218 \u7535\u5b50\u4e66 \u4e00\u5957\u4ee3\u7801\u8fd0\u884c\u591a\u7aef \u4e00\u7aef\u6240\u89c1\u5373\u591a\u7aef\u6240\u89c1 \u8ba1\u7b97\u673a\u901f\u6210\u8bfe Crash Course \u5b57\u5e55\u7ec4 \u51684 \u96c6 2 18 5 1 \u7cbe\u6821\u5b8c\u6210 \u4e00\u4e2a react redux \u7684\u5b8c\u6574\u9879\u76ee \u548c \u4e2a\u4eba\u603b\u7ed3\u4e2d\u6587\u72ec\u7acb\u535a\u5ba2\u5217\u8868CSS Inspiration \u5728\u8fd9\u91cc\u627e\u5230\u5199 CSS \u7684\u7075\u611f rich text \u5bcc\u6587\u672c\u7f16\u8f91\u5668 \u6c49\u5b57\u62fc\u97f3 h\u00e0n z\u00ec p\u012bn y\u012bn Chrome\u63d2\u4ef6\u5f00\u53d1\u5168\u653b\u7565 \u914d\u5957\u5b8c\u6574Demo \u6b22\u8fceclone\u4f53\u9a8c\u5fae\u4fe1\u8c03\u8bd5 \u5404\u79cdWebView\u6837\u5f0f\u8c03\u8bd5 \u624b\u673a\u6d4f\u89c8\u5668\u7684\u9875\u9762\u771f\u673a\u8c03\u8bd5 \u4fbf\u6377\u7684\u8fdc\u7a0b\u8c03\u8bd5\u624b\u673a\u9875\u9762 \u6293\u5305\u5de5\u5177 \u652f\u6301 HTTPS \u65e0\u9700USB\u8fde\u63a5\u8bbe\u5907  master\u5206\u652f \u6e32\u67d3\u5668 \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u7ec4\u4ef6 API \u4e91\u5f00\u53d1\u793a\u4f8b\u7b80\u60a6 SimpRead \u8ba9\u4f60\u77ac\u95f4\u8fdb\u5165\u6c89\u6d78\u5f0f\u9605\u8bfb\u7684\u6269\u5c55\u8ba9H5\u5236\u4f5c\u50cf\u642d\u79ef\u6728\u4e00\u6837\u7b80\u5355 \u8f7b\u677e\u642d\u5efaH5\u9875\u9762 H5\u7f51\u7ad9 PC\u7aef\u7f51\u7ad9 LowCode\u5e73\u53f0  \u4e00\u5957\u7ec4\u4ef6\u5316 \u53ef\u590d\u7528 \u6613\u6269\u5c55\u7684\u5fae\u4fe1\u5c0f\u7a0b\u5e8f UI \u7ec4\u4ef6\u5e93\u8fd9\u662f\u4e00\u4e2a\u6570\u636e\u53ef\u89c6\u5316\u9879\u76ee \u80fd\u591f\u5c06\u5386\u53f2\u6570\u636e\u6392\u540d\u8f6c\u5316\u4e3a\u52a8\u6001\u67f1\u72b6\u56fe\u56fe\u8868\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u56fe\u8868charts\u7ec4\u4ef6 Charts for WeChat small app\u7c7b\u4f3c\u6613\u4f01\u79c0\u7684H5\u5236\u4f5c \u5efa\u7ad9\u5de5\u5177 \u53ef\u89c6\u5316\u642d\u5efa\u7cfb\u7edf \u4e00\u4e2a\u5728\u4f60\u7f16\u7a0b\u65f6\u75af\u72c2\u79f0\u8d5e\u4f60\u7684 VSCode \u6269\u5c55\u63d2\u4ef6\u5168\u5bb6\u6876\u540e\u53f0\u7ba1\u7406\u6846\u67b6\u89e3\u9501\u7f51\u6613\u4e91\u97f3\u4e50\u5ba2\u6237\u7aef\u53d8\u7070\u6b4c\u66f2\u7f8e\u89c2\u6613\u7528\u7684React\u5bcc\u6587\u672c\u7f16\u8f91\u5668 \u57fa\u4e8edraft js\u5f00\u53d1\u4e00\u4e2a\u81f4\u529b\u4e8e\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u548c Web \u7aef\u540c\u6784\u7684\u89e3\u51b3\u65b9\u6848\u5f9e\u96f6\u958b\u59cb\u5b78 ReactJS ReactJS 1 1 \u662f\u4e00\u672c\u5e0c\u671b\u8b93\u521d\u5b78\u8005\u4e00\u770b\u5c31\u61c2\u7684 React \u4e2d\u6587\u5165\u9580\u6559\u5b78\u66f8 \u7531\u6dfa\u5165\u6df1\u5b78\u7fd2 ReactJS \u751f\u614b\u7cfb\u6e90\u7801\u89e3\u8bfb \u7cfb\u5217\u6587\u7ae0 \u5b8c \u6211\u5c31\u662f\u6765\u5206\u4eab\u811a\u672c\u73a9\u73a9\u7684\u5f00\u53d1\u8005\u8fb9\u8f66 github\u6253\u4e0d\u5f00 github\u52a0\u901f git clone\u52a0\u901f git release\u4e0b\u8f7d\u52a0\u901f stackoverflow\u52a0\u901fvue\u6e90\u7801\u9010\u884c\u6ce8\u91ca\u5206\u6790 4 \u591am\u7684vue\u6e90\u7801\u7a0b\u5e8f\u6d41\u7a0b\u56fe\u601d\u7ef4\u5bfc\u56fe diff\u90e8\u5206\u5f85\u540e\u7eed\u66f4\u65b0 \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u89e3\u51b3\u65b9\u6848 1KB javascript \u8986\u76d6\u72b6\u6001\u7ba1\u7406 \u8de8\u9875\u901a\u8baf \u63d2\u4ef6\u5f00\u53d1\u548c\u4e91\u6570\u636e\u5e93\u5f00\u53d1\u7ed9\u8001\u53f8\u673a\u7528\u7684\u4e00\u4e2a\u756a\u53f7\u63a8\u8350\u7cfb\u7edf FeHelper Web\u524d\u7aef\u52a9\u624b\u8bb0\u5f55\u6210\u957f\u7684\u8fc7\u7a0b\u54d4\u54e9\u54d4\u54e9 bilibili com \u8f85\u52a9\u5de5\u5177 \u53ef\u4ee5\u66ff\u6362\u64ad\u653e\u5668 \u63a8\u9001\u901a\u77e5\u5e76\u8fdb\u884c\u4e00\u4e9b\u5feb\u6377\u64cd\u4f5c\u63d0\u4f9b\u4e86\u767e\u5ea6\u5750\u6807 BD 9 \u56fd\u6d4b\u5c40\u5750\u6807 \u706b\u661f\u5750\u6807 GCJ 2 \u548cWGS84\u5750\u6807\u7cfb\u4e4b\u95f4\u7684\u8f6c\u6362F2etest\u662f\u4e00\u4e2a\u9762\u5411\u524d\u7aef \u6d4b\u8bd5 \u4ea7\u54c1\u7b49\u5c97\u4f4d\u7684\u591a\u6d4f\u89c8\u5668\u517c\u5bb9\u6027\u6d4b\u8bd5\u6574\u4f53\u89e3\u51b3\u65b9\u6848  \ufe0f \u963f\u91cc\u98de\u732a \u5f88\u6613\u7528\u7684\u4e2d\u540e\u53f0 \u8868\u5355 \u8868\u683c \u56fe\u8868 \u89e3\u51b3\u65b9\u6848CRMEB Min \u524d\u540e\u7aef\u5206\u79bb\u7248\u81ea\u5e26\u5ba2\u670d\u7cfb\u7edf \u662fCRMEB\u54c1\u724c\u5168\u65b0\u63a8\u51fa\u7684\u4e00\u6b3e\u8f7b\u91cf\u7ea7 \u9ad8\u6027\u80fd \u524d\u540e\u7aef\u5206\u79bb\u7684\u5f00\u6e90\u7535\u5546\u7cfb\u7edf \u5b8c\u5584\u7684\u540e\u53f0\u6743\u9650\u7ba1\u7406 \u4f1a\u5458\u7ba1\u7406 \u8ba2\u5355\u7ba1\u7406 \u4ea7\u54c1\u7ba1\u7406 \u5ba2\u670d\u7ba1\u7406 CMS\u7ba1\u7406 \u591a\u7aef\u7ba1\u7406 \u9875\u9762DIY \u6570\u636e\u7edf\u8ba1 \u7cfb\u7edf\u914d\u7f6e \u7ec4\u5408\u6570\u636e\u7ba1\u7406 \u65e5\u5fd7\u7ba1\u7406 \u6570\u636e\u5e93\u7ba1\u7406 \u4e00\u952e\u5f00\u901a\u77ed\u4fe1 \u4ea7\u54c1\u91c7\u96c6 \u7269\u6d41\u67e5\u8be2\u7b49\u63a5\u53e3  React\u6280\u672f\u63ed\u79d8 \u4e00\u672c\u81ea\u9876\u5411\u4e0b\u7684React\u6e90\u7801\u5206\u6790\u4e66\u5fae\u4fe1\u5c0f\u7a0b\u5e8f \u57fa\u4e8ewepy \u5546\u57ce \u5fae\u5e97 \u5fae\u4fe1\u5c0f\u7a0b\u5e8f \u6b22\u8fce\u5b66\u4e60\u4ea4\u6d41\u5927\u5c4f\u6570\u636e\u53ef\u89c6\u5316Pytorch \u4e2d\u6587\u6587\u6863\u7ecf\u5178\u7684\u7f51\u9875\u5bf9\u8bdd\u6846\u7ec4\u4ef6 \u5f3a\u5927\u7684\u52a8\u6001\u8868\u5355\u751f\u6210\u5668 \u7b80\u6d01 \u6613\u7528 \u7075\u6d3b\u7684\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u7ec4\u4ef6\u5e93 \u4e00\u6b3e Material Design \u98ce\u683c\u7684 Hexo \u4e3b\u9898\u7b7e\u5230\u4e00\u4e2a\u5e2e\u52a9\u4f60\u81ea\u52a8\u7533\u8bf7\u4eac\u4e1c\u4ef7\u683c\u4fdd\u62a4\u7684chrome\u62d3\u5c55\u540e\u53f0admin\u524d\u7aef\u6a21\u677f \u57fa\u4e8e layui \u7f16\u5199\u7684\u6700\u7b80\u6d01 \u6613\u7528\u7684\u540e\u53f0\u6846\u67b6\u6a21\u677f \u53ea\u9700\u63d0\u4f9b\u4e00\u4e2a\u63a5\u53e3\u5c31\u76f4\u63a5\u521d\u59cb\u5316\u6574\u4e2a\u6846\u67b6 \u65e0\u9700\u590d\u6742\u64cd\u4f5c \u5c0f\u7a0b\u5e8f\u751f\u6210\u56fe\u7247\u5e93 \u8f7b\u677e\u901a\u8fc7 json \u65b9\u5f0f\u7ed8\u5236\u4e00\u5f20\u53ef\u4ee5\u53d1\u5230\u670b\u53cb\u5708\u7684\u56fe\u7247\u5b89\u5353\u5e94\u7528\u5c42\u6293\u5305\u901a\u6740\u811a\u672c\u4e00\u4e2a\u8f7b\u91cf\u7684\u5de5\u5177\u96c6\u5408\u5a5a\u793c\u5927\u5c4f\u4e92\u52a8 \u5fae\u4fe1\u8bf7\u67ec\u4e00\u7ad9\u5f0f\u89e3\u51b3\u65b9\u6848mili \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u793e\u533a\u7cfb\u7edf \u754c\u9762\u4f18\u96c5 \u529f\u80fd\u4e30\u5bcc \u4e1d\u822c\u987a\u6ed1\u7684\u89e6\u6478\u8fd0\u52a8\u65b9\u6848\u505a\u6700\u597d\u7684\u63a5\u53e3\u7ba1\u7406\u5e73\u53f0Mpx \u4e00\u6b3e\u5177\u6709\u4f18\u79c0\u5f00\u53d1\u4f53\u9a8c\u548c\u6df1\u5ea6\u6027\u80fd\u4f18\u5316\u7684\u589e\u5f3a\u578b\u8de8\u7aef\u5c0f\u7a0b\u5e8f\u6846\u67b6\u7701\u5e02\u533a\u53bf\u4e61\u9547\u4e09\u7ea7\u6216\u56db\u7ea7\u57ce\u5e02\u6570\u636e \u5e26\u62fc\u97f3\u6807\u6ce8 \u5750\u6807 \u884c\u653f\u533a\u57df\u8fb9\u754c\u8303\u56f4 2 21\u5e74 7\u6708 3\u65e5\u6700\u65b0\u91c7\u96c6 \u63d0\u4f9bcsv\u683c\u5f0f\u6587\u4ef6 \u652f\u6301\u5728\u7ebf\u8f6c\u6210\u591a\u7ea7\u8054\u52a8js\u4ee3\u7801 \u901a\u7528json\u683c\u5f0f \u63d0\u4f9b\u8f6f\u4ef6\u8f6c\u6210shp geojson sql \u5bfc\u5165\u6570\u636e\u5e93 \u5e26\u6d4f\u89c8\u5668\u91cc\u9762\u8fd0\u884c\u7684js\u91c7\u96c6\u6e90\u7801 \u7efc\u5408\u4e86\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u6c11\u653f\u90e8 \u56fd\u5bb6\u7edf\u8ba1\u5c40 \u9ad8\u5fb7\u5730\u56fe \u817e\u8baf\u5730\u56fe\u884c\u653f\u533a\u5212\u6570\u636e\u5728vscode\u4e2d\u7528\u4e8e\u751f\u6210\u6587\u4ef6\u5934\u90e8\u6ce8\u91ca\u548c\u51fd\u6570\u6ce8\u91ca\u7684\u63d2\u4ef6 \u7ecf\u8fc7\u591a\u7248\u8fed\u4ee3\u540e \u63d2\u4ef6 \u652f\u6301\u6240\u6709\u4e3b\u6d41\u8bed\u8a00 \u529f\u80fd\u5f3a\u5927 \u7075\u6d3b\u65b9\u4fbf \u6587\u6863\u9f50\u5168 \u98df\u7528\u7b80\u5355 \u89c9\u5f97\u63d2\u4ef6\u4e0d\u9519\u7684\u8bdd \u70b9\u51fb\u53f3\u4e0a\u89d2\u7ed9\u4e2aStar \ufe0f\u5440  JAVClub \u8ba9\u4f60\u7684\u5927\u59d0\u59d0\u4e0d\u518d\u8d70\u4e22\ufe0f\u4f60\u60f3\u8981\u7684\u6700\u5168 Android \u8fdb\u9636\u8def\u7ebf\u77e5\u8bc6\u56fe\u8c31 \u5e72\u8d27\u8d44\u6599\u6536\u96c6  \u5f00\u53d1\u8005\u63a8\u8350\u9605\u8bfb\u7684\u4e66\u7c4d 2 2 \u6dd8\u5b9d \u4eac\u4e1c \u652f\u4ed8\u5b9d\u53cc\u5341\u4e00 \u53cc11\u5168\u6c11\u517b\u732b \u5168\u6c11\u8425\u4e1a\u81ea\u52a8\u5316\u811a\u672c \u5168\u989d\u5956\u52b1 \u9632\u68c0\u6d4b \u4e00\u6b3e\u9ad8\u6027\u80fd\u654f\u611f\u8bcd \u975e\u6cd5\u8bcd \u810f\u5b57 \u68c0\u6d4b\u8fc7\u6ee4\u7ec4\u4ef6 \u9644\u5e26\u7e41\u4f53\u7b80\u4f53\u4e92\u6362 \u652f\u6301\u5168\u89d2\u534a\u89d2\u4e92\u6362 \u6c49\u5b57\u8f6c\u62fc\u97f3 \u6a21\u7cca\u641c\u7d22\u7b49\u529f\u80fd \u524d\u7aef\u535a\u5ba2 \u5173\u6ce8\u57fa\u7840\u77e5\u8bc6\u548c\u6027\u80fd\u4f18\u5316 vue cli4\u914d\u7f6evue config js\u6301\u7eed\u66f4\u65b0PT \u52a9\u624b Plus \u4e3a Google Chrome \u548c Firefox \u6d4f\u89c8\u5668\u63d2\u4ef6 Web Extensions \u4e3b\u8981\u7528\u4e8e\u8f85\u52a9\u4e0b\u8f7d PT \u7ad9\u7684\u79cd\u5b50 \u57fa\u4e8evue2 koa2\u7684 H5\u5236\u4f5c\u5de5\u5177 \u8ba9\u4e0d\u4f1a\u5199\u4ee3\u7801\u7684\u4eba\u4e5f\u80fd\u8f7b\u677e\u5feb\u901f\u4e0a\u624b\u5236\u4f5cH5\u9875\u9762 \u7c7b\u4f3c\u6613\u4f01\u79c0 \u767e\u5ea6H5\u7b49H5\u5236\u4f5c \u5efa\u7ad9\u5de5\u5177\u6700\u5168\u6700\u65b0\u4e2d\u56fd\u7701 \u5e02 \u5730\u533ajson\u53casql\u6570\u636e\u9996\u4e2a Taro \u591a\u7aef\u7edf\u4e00\u5b9e\u4f8b \u7f51\u6613\u4e25\u9009 \u5c0f\u7a0b\u5e8f H5 React Native By \u8da3\u5e97 FED\u5730\u7406\u4fe1\u606f\u53ef\u89c6\u5316\u5e93\u4f01\u4e1a\u7ea7 Node js \u5e94\u7528\u6027\u80fd\u76d1\u63a7\u4e0e\u7ebf\u4e0a\u6545\u969c\u5b9a\u4f4d\u89e3\u51b3\u65b9\u6848 Node js\u533a\u5757\u94fe\u5f00\u53d1 \u6ce8 \u65b0\u7248\u4ee3\u7801\u5df2\u5f00\u6e90 \u8bf7star\u652f\u6301\u54e6 \u57fa\u4e8eAuto js\u7684\u8682\u8681\u68ee\u6797\u80fd\u91cf\u81ea\u52a8\u6536\u53d6\u811a\u672c \u7ed3\u5df4 \u4e2d\u6587\u5206\u8bcd\u7684Node js\u7248\u672c \u8bd1 \u9762\u5411\u673a\u5668\u5b66\u4e60\u7684\u7279\u5f81\u5de5\u7a0bwebfunny\u662f\u4e00\u6b3e\u8f7b\u91cf\u7ea7\u7684\u524d\u7aef\u76d1\u63a7\u7cfb\u7edf webfunny\u4e5f\u662f\u4e00\u6b3e\u524d\u7aef\u6027\u80fd\u76d1\u63a7\u7cfb\u7edf \u65e0\u57cb\u70b9\u76d1\u63a7\u524d\u7aef\u65e5\u5fd7 \u5b9e\u65f6\u5206\u6790\u524d\u7aef\u5065\u5eb7\u72b6\u6001\u4e00\u4e2a\u5b9e\u73b0\u6c49\u5b57\u4e0e\u62fc\u97f3\u4e92\u8f6c\u7684\u5c0f\u5de7web\u5de5\u5177\u5e93 \u6f14\u793a\u5730\u5740  \u524d\u7aef\u8fdb\u9636 \u4f18\u8d28\u535a\u6587 \u4e00\u4e2a Chrome \u63d2\u4ef6 \u5c06 Google CDN \u66ff\u6362\u4e3a\u56fd\u5185\u7684  Vue ElementUI\u6784\u5efa\u7684CMS\u5f00\u53d1\u6846\u67b6\u8d85\u5b8c\u6574\u7684React Native\u9879\u76ee \u529f\u80fd\u4e30\u5bcc \u9002\u5408\u5b66\u4e60\u548c\u65e5\u5e38\u4f7f\u7528 GSYGithubApp\u7cfb\u5217\u7684\u4f18\u52bf \u6211\u4eec\u76ee\u524d\u5df2\u7ecf\u62e5\u6709\u56db\u4e2a\u7248\u672c \u529f\u80fd\u9f50\u5168 \u9879\u76ee\u6846\u67b6\u5185\u6280\u672f\u6d89\u53ca\u9762\u5e7f \u5b8c\u6210\u5ea6\u9ad8 \u914d\u5957\u6587\u7ae0 \u9002\u5408\u5168\u9762\u5b66\u4e60 \u5bf9\u6bd4\u53c2\u8003 \u5f00\u6e90Github\u5ba2\u6237\u7aefApp \u66f4\u597d\u7684\u4f53\u9a8c \u66f4\u4e30\u5bcc\u7684\u529f\u80fd \u65e8\u5728\u66f4\u597d\u7684\u65e5\u5e38\u7ba1\u7406\u548c\u7ef4\u62a4\u4e2a\u4ebaGithub \u63d0\u4f9b\u66f4\u597d\u66f4\u65b9\u4fbf\u7684\u9a7e\u8f66\u4f53\u9a8c\u03a3 \u540c\u6b3eWeex\u7248\u672c\u540c\u6b3eFlutter\u7248\u672c https github com CarGu \u7fa4 \u5b87\u5b99\u6700\u5f3a\u7684\u524d\u7aef\u9762\u8bd5\u6307\u5357 lucifer ren fe interview \u5fae\u6155\u5c0f\u7a0b\u5e8f\u5f00\u6e90\u7248 WordPress\u7248\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u51fd\u6570\u5f0f\u7f16\u7a0b\u6307\u5317\u4e2d\u6587\u7248Node js\u9762\u8bd5\u9898 \u4fa7\u91cd\u540e\u7aef\u5e94\u7528\u4e0e\u5bf9Node\u6838\u5fc3\u7684\u7406\u89e3jQuery\u6e90\u7801\u89e3\u6790\u5c0f\u767d\u5165\u5751vue\u4e09\u90e8\u66f2 \u5173\u4e8e vue \u5728\u5de5\u4f5c\u7684\u4f7f\u7528\u95ee\u9898\u603b\u7ed3 \u8bf7\u770b\u535a\u5ba2 sunseekers github io \u4e00\u76f4\u4fdd\u6301\u66f4\u65b0\u57fa\u4e8e Vue \u7684 PWA \u89e3\u51b3\u65b9\u6848 \u5e2e\u52a9\u5f00\u53d1\u8005\u5feb\u901f\u642d\u5efa PWA \u5e94\u7528 \u89e3\u51b3\u63a5\u5165 PWA \u7684\u5404\u79cd\u95ee\u9898ThinkCMF\u662f\u4e00\u6b3e\u652f\u6301Swoole\u7684\u5f00\u6e90\u5185\u5bb9\u7ba1\u7406\u6846\u67b6 \u57fa\u4e8eThinkPHP\u5f00\u53d1 \u540c\u65f6\u652f\u6301PHP FPM\u548cSwoole\u53cc\u6a21\u5f0f \u8ba9WEB\u5f00\u53d1\u66f4\u5feb \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u56fe\u7247\u88c1\u526a\u5de5\u5177\u524d\u7aef\u77e5\u8bc6\u6708\u520aNext Terminal\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u5821\u5792\u673a\u7cfb\u7edf \u6613\u5b89\u88c5 \u6613\u4f7f\u7528 \u652f\u6301RDP SSH VNC Telnet Kubernetes\u534f\u8bae \u5fae\u4fe1\u5c0f\u7a0b\u5e8f \u65e5\u5386\u7ec4\u4ef6 \u57fa\u4e8e ueditor\u7684\u66f4\u73b0\u4ee3\u5316\u7684\u5bcc\u6587\u672c\u7f16\u8f91\u5668 \u652f\u6301HTTPS\u57fa\u4e8eJavaScript React Vue2\u7684\u6d41\u7a0b\u56fe\u7ec4\u4ef6 \u91c7\u7528Spring MyBatis Shiro\u6846\u67b6 \u5f00\u53d1\u7684\u4e00\u5957\u6743\u9650\u7cfb\u7edf \u6781\u4f4e\u95e8\u69db \u62ff\u6765\u5373\u7528 \u8bbe\u8ba1\u4e4b\u521d \u5c31\u975e\u5e38\u6ce8\u91cd\u5b89\u5168\u6027 \u4e3a\u4f01\u4e1a\u7cfb\u7edf\u4fdd\u9a7e\u62a4\u822a \u8ba9\u4e00\u5207\u90fd\u53d8\u5f97\u5982\u6b64\u7b80\u5355 QQ\u7fa4 32478 2 4 145799952  \u4e00\u4e2a\u524d\u7aef\u7684\u535a\u5ba2  \u6625\u677e\u5ba2\u670d \u591a\u6e20\u9053\u667a\u80fd\u5ba2\u670d\u7cfb\u7edf \u5f00\u6e90\u5ba2\u670d\u7cfb\u7edf \u673a\u5668\u4eba\u5ba2\u670d\u4e00\u4e2a\u5de5\u4f5c\u6d41\u5e73\u53f0\u5c0f\u7a0b\u5e8f \u5c0f\u6e38\u620f\u4ee5\u53ca Web \u901a\u7528 Canvas \u6e32\u67d3\u5f15\u64ce \u5728\u7ebf\u5de5\u5177\u79d8\u7c4d \u4e3a\u5728\u7ebf\u5de5\u5177\u5199\u4e00\u672c\u4f18\u8d28\u8bf4\u660e\u4e66 \u8ba9\u5728\u7ebf\u5de5\u5177\u9020\u798f\u4eba\u7c7b \u524d\u7aef\u5185\u53c2 \u6709\u5173\u4e8eJavaScript \u7f16\u7a0b\u8303\u5f0f \u8bbe\u8ba1\u6a21\u5f0f \u8f6f\u4ef6\u5f00\u53d1\u7684\u827a\u672f\u7b49\u5927\u524d\u7aef\u8303\u7574\u5185\u7684\u77e5\u8bc6\u5206\u4eab \u65e8\u5728\u5e2e\u52a9\u524d\u7aef\u5de5\u7a0b\u5e08\u4eec\u592f\u5b9e\u6280\u672f\u57fa\u7840\u4ee5\u901a\u8fc7\u4e00\u7ebf\u4e92\u8054\u7f51\u4f01\u4e1a\u6280\u672f\u9762\u8bd5  \ufe0f vCards \u4e2d\u56fd\u9ec4\u9875 \u4f18\u5316 iOS Android \u6765\u7535 \u4fe1\u606f\u754c\u9762\u4f53\u9a8c\u5404\u5e73\u53f0\u7684\u5206\u6d41\u89c4\u5219 \u590d\u5199\u89c4\u5219\u53ca\u81ea\u52a8\u5316\u811a\u672c \u57fa\u4e8evue2 \u7684\u5b9e\u65f6\u804a\u5929\u9879\u76ee \u56fe\u7247\u526a\u88c1\u4e0a\u4f20\u7ec4\u4ef6 \u7b49\u7b14\u8bb0\u5feb\u901f\u5206\u4eab GoogleDrive OneDrive \u6bcf\u65e5\u65f6\u62a5 \u4ee5\u524d\u7aef\u6280\u672f\u4f53\u7cfb\u4e3a\u4e3b\u8981\u5206\u4eab\u8bfe\u9898 \u6839\u636e \u6587\u7ae0 \u5de5\u5177 \u65b0\u95fb \u89c6\u9891\u51e0\u5927\u677f\u5757\u4f5c\u4e3a\u4e3b\u8981\u5206\u7c7b \u4e00\u6b3e\u9ad8\u6548 \u9ad8\u6027\u80fd\u7684\u5e27\u52a8\u753b\u751f\u6210\u5de5\u5177 \u505c\u6b62\u7ef4\u62a4 \u4e00\u4e2a\u5728\u7ebf\u97f3\u4e50\u64ad\u653e\u5668 \u4ec5 UI \u65e0\u529f\u80fd \u5c0f\u7a0b\u5e8f\u5bcc\u6587\u672c\u7ec4\u4ef6 \u652f\u6301\u6e32\u67d3\u548c\u7f16\u8f91 html \u652f\u6301\u5728\u5fae\u4fe1 QQ \u767e\u5ea6 \u652f\u4ed8\u5b9d \u5934\u6761\u548c uni app \u5e73\u53f0\u4f7f\u7528\u57fa\u4e8e electron vue \u5f00\u53d1\u7684\u97f3\u4e50\u64ad\u653e\u5668 \u754c\u9762\u6a21\u4effQQ\u97f3\u4e50 \u6280\u672f\u6808\u6b22\u8fcestarweui \u662f\u5728weui\u548czepto\u57fa\u7840\u4e0a\u5f00\u53d1\u7684\u589e\u5f3aUI\u7ec4\u4ef6 \u76ee\u524d\u5206\u4e3a\u8868\u5355 \u57fa\u7840 \u7ec4\u4ef6 js\u63d2\u4ef6\u56db\u5927\u7c7b \u5171\u8ba1\u767e\u4f59\u9879\u529f\u80fd \u662f\u6700\u5168\u7684weui\u6837\u5f0f\u540c\u6b65\u548c\u66f4\u65b0\u5927\u4f6c\u811a\u672c\u5e93 \u66f4\u65b0\u61d2\u4eba\u914d\u7f6e\u817e\u8baf\u4e91\u5373\u65f6\u901a\u4fe1 IM \u670d\u52a1 \u56fd\u5185\u4e0b\u8f7d\u955c\u50cf \u57fa\u4e8e Vue \u7684\u5c0f\u7a0b\u5e8f\u5f00\u53d1\u6846\u67b6React 16 8\u6253\u9020\u7cbe\u7f8e\u97f3\u4e50WebAppWK\u7cfb\u5217\u5f00\u53d1\u6846\u67b6 V1\u81f3V5 Java\u5f00\u6e90\u4f01\u4e1a\u7ea7\u5f00\u53d1\u6846\u67b6 \u5355\u5e94\u7528 \u5fae\u670d\u52a1 \u5206\u5e03\u5f0f  \ufe0f\u4e2d\u56fd \u7701\u5e02\u533a \u4e09\u7ea7\u8054\u52a8 \u5730\u5740\u9009\u62e9\u5668 \u5fae\u4fe1\u5c0f\u7a0b\u5e8f2d\u52a8\u753b\u5e93 \u5206\u5e03\u5f0f Redis\u7f13\u5b58 Shiro\u6743\u9650\u7ba1\u7406 Spring Session\u5355\u70b9\u767b\u5f55 Quartz\u5206\u5e03\u5f0f\u96c6\u7fa4\u8c03\u5ea6 Restful\u670d\u52a1 QQ \u5fae\u4fe1\u767b\u5f55 App token\u767b\u5f55 \u5fae\u4fe1 \u652f\u4ed8\u5b9d\u652f\u4ed8 \u65e5\u671f\u8f6c\u6362 \u6570\u636e\u7c7b\u578b\u8f6c\u6362 \u5e8f\u5217\u5316 \u6c49\u5b57\u8f6c\u62fc\u97f3 \u8eab\u4efd\u8bc1\u53f7\u7801\u9a8c\u8bc1 \u6570\u5b57\u8f6c\u4eba\u6c11\u5e01 \u53d1\u9001\u77ed\u4fe1 \u53d1\u9001\u90ae\u4ef6 \u52a0\u5bc6\u89e3\u5bc6 \u56fe\u7247\u5904\u7406 excel\u5bfc\u5165\u5bfc\u51fa FTP SFTP fastDFS\u4e0a\u4f20\u4e0b\u8f7d \u4e8c\u7ef4\u7801 XML\u8bfb\u5199 \u9ad8\u7cbe\u5ea6\u8ba1\u7b97 \u7cfb\u7edf\u914d\u7f6e\u5de5\u5177\u7c7b\u7b49\u7b49 EduSoho \u7f51\u7edc\u8bfe\u5802\u662f\u7531\u676d\u5dde\u9614\u77e5\u7f51\u7edc\u79d1\u6280\u6709\u9650\u516c\u53f8\u7814\u53d1\u7684\u5f00\u6e90\u7f51\u6821\u7cfb\u7edf EduSoho \u5305\u542b\u4e86\u5728\u7ebf\u6559\u5b66 \u62db\u751f\u548c\u7ba1\u7406\u7b49\u5b8c\u6574\u529f\u80fd \u8ba9\u6559\u80b2\u673a\u6784\u53ef\u4ee5\u96f6\u95e8\u69db\u5efa\u7acb\u7f51\u6821 \u6210\u529f\u8f6c\u578b\u5728\u7ebf\u6559\u80b2 EduSoho \u4e5f\u53ef\u4f5c\u4e3a\u4f01\u4e1a\u5185\u8bad\u5e73\u53f0 \u5e2e\u52a9\u4f01\u4e1a\u5b9e\u73b0\u4eba\u624d\u57f9\u517b  \u81ea\u7528\u7684\u4e00\u4e9b\u4e71\u4e03\u516b\u7cdf \u6cb9\u7334\u811a\u672c \u4e3a\u521a\u521a\u5b66\u4e60php\u8bed\u8a00\u4ee5\u53caweb\u7f51\u7ad9\u5f00\u53d1\u6574\u7406\u7684\u4e00\u5957\u8d44\u6e90 \u6709\u89c6\u9891 \u5b9e\u6218\u4ee3\u7801 \u5b66\u4e60\u8def\u5f84\u7b49 \u4f1a\u6301\u7eed\u66f4\u65b0 This is a goindex theme \u4e00\u4e2agoindex\u7684\u6269\u5c55\u4e3b\u9898 NumPy\u5b98\u65b9\u4e2d\u6587\u6587\u6863 \u5b8c\u6574\u7248  \u642d\u5efa\u79fb\u52a8\u7aef\u5f00\u53d1 \u57fa\u4e8e\u9002\u914d\u65b9\u6848 axios\u5c01\u88c5 \u6784\u5efa\u624b\u673a\u7aef\u6a21\u677f\u811a\u624b\u67b6 \u540e\u53f0\u7ba1\u7406 \u811a\u624b\u67b6\u63a5\u53e3 \u4ece\u7b80\u5355\u5f00\u59cb PhalApi\u7b80\u79f0\u03c0\u6846\u67b6 \u4e00\u4e2a\u8f7b\u91cf\u7ea7PHP\u5f00\u6e90\u63a5\u53e3\u6846\u67b6 \u4e13\u6ce8\u4e8e\u63a5\u53e3\u670d\u52a1\u5f00\u53d1 \u524d\u7aef\u7279\u6548\u5b58\u6863Chrome\u6d4f\u89c8\u5668 \u62a2\u8d2d \u79d2\u6740\u63d2\u4ef6 \u79d2\u6740\u52a9\u624b \u5b9a\u65f6\u81ea\u52a8\u70b9\u51fb\u4e91\u5b58\u50a8\u7ba1\u7406\u5ba2\u6237\u7aef \u652f\u6301\u4e03\u725b\u4e91 \u817e\u8baf\u4e91 \u9752\u4e91 \u963f\u91cc\u4e91 \u53c8\u62cd\u4e91 \u4e9a\u9a6c\u900aS3 \u4eac\u4e1c\u4e91 \u4eff\u6587\u4ef6\u5939\u7ba1\u7406 \u56fe\u7247\u9884\u89c8 \u62d6\u62fd\u4e0a\u4f20 \u6587\u4ef6\u5939\u4e0a\u4f20 \u540c\u6b65 \u6279\u91cf\u5bfc\u51faURL\u7b49\u529f\u80fdfont carrier\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u5b57\u4f53\u64cd\u4f5c\u5e93 \u4f7f\u7528\u5b83\u4f60\u53ef\u4ee5\u968f\u5fc3\u6240\u6b32\u7684\u64cd\u4f5c\u5b57\u4f53 \u8ba9\u4f60\u53ef\u4ee5\u5728svg\u7684\u7ef4\u5ea6\u6539\u9020\u5b57\u4f53\u7684\u5c55\u73b0\u5f62\u72b6 CRN\u662fCtrip React Native\u7b80\u79f0 \u7531\u643a\u7a0b\u65e0\u7ebf\u5e73\u53f0\u7814\u53d1\u56e2\u961f\u57fa\u4e8eReact Native\u6846\u67b6\u4f18\u5316 \u5b9a\u5236\u6210\u7a33\u5b9a\u6027\u548c\u6027\u80fd\u66f4\u4f73 \u4e5f\u66f4\u9002\u5408\u4e1a\u52a1\u573a\u666f\u7684\u8de8\u5e73\u53f0\u5f00\u53d1\u6846\u67b6  \u6cb9\u7334\u811a\u672c\u9875\u9762\u6d6e\u7a97\u5e7f\u544a\u5b8c\u5168\u8fc7\u6ee4\u51c0\u5316 \u56fd\u670d\u6700\u5f3a\u6700\u5168\u6700\u65b0CSDN\u811a\u672c\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u5373\u65f6\u901a\u8baf\u6a21\u677f \u4f7f\u7528WebSocket\u901a\u4fe1\u5c0f\u7a0b\u5e8f\u53cd\u7f16\u8bd1 \u652f\u6301\u5206\u5305 \u201c\u60f3\u5b66\u5417\u201d\u4e2a\u4eba\u77e5\u8bc6\u7ba1\u7406\u4e0e\u81ea\u5a92\u4f53\u8425\u9500\u5de5\u5177 \u8d85\u591a\u7ecf\u5178 Canvas \u5b9e\u4f8b \u52a8\u6001\u79bb\u5b50\u80cc\u666f \u70ab\u5f69\u5c0f\u7403 \u8d2a\u5403\u86c7 \u5766\u514b\u5927\u6218 \u662f\u7537\u4eba\u5c31\u4e0b1 \u5c42 \u5fc3\u5f62\u6587\u5b57\u7b49  Vue UEditor v model\u53cc\u5411\u7ed1\u5b9a HQChart H5 \u5fae\u4fe1\u5c0f\u7a0b\u5e8f \u6caa\u6df1 \u6e2f\u80a1 \u6570\u5b57\u8d27\u5e01 \u671f\u8d27 \u7f8e\u80a1 K\u7ebf\u56fe kline \u8d70\u52bf\u56fe \u7f29\u653e \u62d6\u62fd \u5341\u5b57\u5149\u6807 \u753b\u56fe\u5de5\u5177 \u622a\u56fe \u7b79\u7801\u56fe \u5206\u6790\u5bb6\u8bed\u6cd5 \u901a\u8fbe\u4fe1\u8bed\u6cd5 \u9ea6\u8bed\u6cd5 \u7b2c3\u65b9\u6570\u636e\u66ff\u6362\u63a5\u53e3\u57fa\u4e8ekoa2\u7684\u6807\u51c6\u524d\u540e\u7aef\u5206\u79bb\u6846\u67b6 \u4e00\u6b3e\u4f01\u4e1a\u4fe1\u606f\u5316\u5f00\u53d1\u57fa\u7840\u5e73\u53f0 \u62df\u96c6\u6210OA \u529e\u516c\u81ea\u52a8\u5316 CMS \u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf \u7b49\u4f01\u4e1a\u7cfb\u7edf\u7684\u901a\u7528\u4e1a\u52a1\u529f\u80fd JeePlatform\u9879\u76ee\u662f\u4e00\u6b3e\u4ee5SpringBoot\u4e3a\u6838\u5fc3\u6846\u67b6 \u96c6ORM\u6846\u67b6Mybatis Web\u5c42\u6846\u67b6SpringMVC\u548c\u591a\u79cd\u5f00\u6e90\u7ec4\u4ef6\u6846\u67b6\u800c\u6210\u7684\u4e00\u6b3e\u901a\u7528\u57fa\u7840\u5e73\u53f0 \u4ee3\u7801\u5df2\u7ecf\u6350\u8d60\u7ed9\u5f00\u6e90\u4e2d\u56fd\u793e\u533a\u57fa\u4e8einception\u7684\u81ea\u52a8\u5316SQL\u64cd\u4f5c\u5e73\u53f0 \u652f\u6301SQL\u6267\u884c LDAP\u8ba4\u8bc1 \u53d1\u90ae\u4ef6 OSC SQL\u67e5\u8be2 SQL\u4f18\u5316\u5efa\u8bae \u6743\u9650\u7ba1\u7406\u7b49\u529f\u80fd \u652f\u6301docker\u955c\u50cf\u662f\u4e00\u6b3e\u4e13\u95e8\u9762\u5411\u4e2a\u4eba \u56e2\u961f\u548c\u5c0f\u578b\u7ec4\u7ec7\u7684\u79c1\u6709\u7f51\u76d8\u7cfb\u7edf \u8f7b\u91cf \u5f00\u6e90 \u5b8c\u5584 \u65e0\u8bba\u662f\u5728\u5bb6\u5ead \u5b66\u6821\u8fd8\u662f\u5728\u529e\u516c\u5ba4 \u60a8\u90fd\u80fd\u7acb\u523b\u5f00\u59cb\u4f7f\u7528\u5b83 \u4e86\u89e3\u66f4\u591a\u8bf7\u8bbf\u95ee\u5b98\u65b9\u7f51\u7ad9 Node js API \u4e2d\u6587\u6587\u6863dubbo\u670d\u52a1\u7ba1\u7406\u4ee5\u53ca\u76d1\u63a7\u7cfb\u7edf\u62ef\u6551B\u7ad9\u7684\u5f39\u5e55\u4f53\u9a8c  \u5bf9\u6297\u5047\u6d88\u606f\u7cfb\u5217\u9879\u76ee\u4e4b\u4e00 \u622a\u5c4f \u5b9e\u9524\uff1f\u76f8\u4fe1\u4f60\u5c31\u8f93\u4e86 \u201d\u7a81\u7834\u6027\u201c\u66f4\u65b0 \u652f\u6301\u4fee\u6539\u4efb\u4f55\u7f51\u7ad9  \ufe0f\u4e00\u4e2a\u7b80\u6d01 \u4f18\u96c5\u4e14\u9ad8\u6548\u7684 Hugo \u4e3b\u9898Vue js \u793a\u4f8b\u9879\u76ee \u7b80\u6613\u7559\u8a00\u677f \u672c\u9879\u76ee\u62e5\u6709\u5b8c\u5584\u7684\u6587\u6863\u8bf4\u660e\u4e0e\u6ce8\u91ca \u8ba9\u60a8\u5feb\u901f\u4e0a\u624b Vue js \u5f00\u53d1? Vue Validator? Vuex?\u6700\u4f73\u5b9e\u8df5\u57fa\u4e8e Node js Koa2 \u5b9e\u6218\u5f00\u53d1\u7684\u4e00\u5957\u5b8c\u6574\u7684\u535a\u5ba2\u9879\u76ee\u7f51\u7ad9 \u7528 React \u7f16\u5199\u7684\u57fa\u4e8eTaro Dva\u6784\u5efa\u7684\u9002\u914d\u4e0d\u540c\u7aef \u5fae\u4fe1 \u767e\u5ea6 \u652f\u4ed8\u5b9d\u5c0f\u7a0b\u5e8f H5 React Native \u7b49 \u7684\u65f6\u88c5\u8863\u6a71\u4fe1\u606f\u6cc4\u6f0f\u76d1\u63a7\u7cfb\u7edf \u4f2a\u88c5115\u6d4f\u89c8\u5668\u5e72\u7206\u524d\u7aef \u4e00\u7f51\u6253\u5c3d\u524d\u7aef\u9762\u8bd5 \u5b66\u4e60\u8def\u5f84 \u4f18\u79c0\u597d\u6587\u7b49\u5404\u7c7b\u5185\u5bb9 \u5e2e\u52a9\u5927\u5bb6\u4e00\u5e74\u5185\u62ff\u5230\u671f\u671b\u7684 offer \u524d\u7aef\u6027\u80fd\u76d1\u63a7\u7cfb\u7edf \u6d88\u606f\u961f\u5217 \u9ad8\u53ef\u7528 \u96c6\u7fa4\u7b49\u76f8\u5173\u67b6\u6784SpringBoot v2\u9879\u76ee\u662f\u52aa\u529b\u6253\u9020springboot\u6846\u67b6\u7684\u6781\u81f4\u7ec6\u817b\u7684\u811a\u624b\u67b6 \u5305\u62ec\u4e00\u5957\u6f02\u4eae\u7684\u524d\u53f0 \u65e0\u5176\u4ed6\u6742\u4e03\u6742\u516b\u7684\u529f\u80fd \u539f\u751f\u7eaf\u51c0 \u4e2d\u6587\u6587\u672c\u6807\u6ce8\u5de5\u5177 \u6700\u5168\u6700\u65b0\u4e2d\u56fd \u7701 \u5e02 \u533a\u53bf \u4e61\u9547\u8857\u9053 json csv sql\u6570\u636e \u4e00\u6b3e\u8f7b\u5de7\u7684\u6e10\u8fdb\u5f0f\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u6846\u67b6 \u5168\u7f51 1 w \u9605\u8bfb\u91cf\u7684\u8fdb\u9636\u524d\u7aef\u6280\u672f\u535a\u5ba2\u4ed3\u5e93 Vue \u6e90\u7801\u89e3\u6790 React \u6df1\u5ea6\u5b9e\u8df5 TypeScript \u8fdb\u9636\u827a\u672f \u5de5\u7a0b\u5316 \u6027\u80fd\u4f18\u5316\u5b9e\u8df5 \u5b8c\u6574\u5f00\u6e90 Java\u5feb\u901f\u5f00\u53d1\u5e73\u53f0 \u57fa\u4e8eSpring SpringMVC Mybatis\u67b6\u6784 MStore\u63d0\u4f9b\u66f4\u591a\u597d\u7528\u7684\u63d2\u4ef6\u4e0e\u6a21\u677f \u6587\u7ae0 \u5546\u57ce \u5fae\u4fe1 \u8bba\u575b \u4f1a\u5458 \u8bc4\u8bba \u652f\u4ed8 \u79ef\u5206 \u5de5\u4f5c\u6d41 \u4efb\u52a1\u8c03\u5ea6\u7b49 \u540c\u65f6\u63d0\u4f9b\u4e0a\u767e\u5957\u514d\u8d39\u6a21\u677f\u4efb\u610f\u9009\u62e9 \u4ef7\u503c\u6e90\u81ea\u5206\u4eab \u94ed\u98de\u7cfb\u7edf\u4e0d\u4ec5\u4e00\u5957\u7b80\u5355\u597d\u7528\u7684\u5f00\u6e90\u7cfb\u7edf \u66f4\u662f\u4e00\u6574\u5957\u4f18\u8d28\u7684\u5f00\u6e90\u751f\u6001\u5185\u5bb9\u4f53\u7cfb \u94ed\u98de\u7684\u4f7f\u547d\u5c31\u662f\u964d\u4f4e\u5f00\u53d1\u6210\u672c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387 \u63d0\u4f9b\u5168\u65b9\u4f4d\u7684\u4f01\u4e1a\u7ea7\u5f00\u53d1\u89e3\u51b3\u65b9\u6848 \u6bcf\u670828\u5b9a\u671f\u66f4\u65b0\u7248\u672cWeHalo \u7b80\u7ea6\u98ce \u7684\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u7248\u535a\u5ba2 \u57fa\u4e8e vue2 vuex \u6784\u5efa\u4e00\u4e2a\u5177\u6709 45 \u4e2a\u9875\u9762\u7684\u5927\u578b\u5355\u9875\u9762\u5e94\u7528\u57fa\u4e8eVue3 Element Plus \u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u89e3\u51b3\u65b9\u6848\u57fa\u4e8e vue element ui \u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u9c9c\u4eae\u7684\u9ad8\u9971\u548c\u8272\u5f69 \u4e13\u6ce8\u89c6\u89c9\u7684\u5c0f\u7a0b\u5e8f\u7ec4\u4ef6\u5e93 \ufe0f \u8de8\u5e73\u53f0\u684c\u9762\u7aef\u89c6\u9891\u8d44\u6e90\u64ad\u653e\u5668 \u7b80\u6d01\u65e0\u5e7f\u544a \u514d\u8d39\u9ad8\u989c\u503c \u540e\u53f0\u7ba1\u7406\u4e3b\u7ebf\u7248\u672c\u57fa\u4e8e\u4e09\u8005\u5e76\u884c\u5f00\u53d1\u7ef4\u62a4 \u540c\u65f6\u652f\u6301\u7535\u8111 \u624b\u673a \u5e73\u677f \u5207\u6362\u5206\u652f\u67e5\u770b\u4e0d\u540c\u7684vue\u7248\u672c element plus\u7248\u672c\u5df2\u53d1\u5e03 vue3 vue3 vue vue3 x vue js \u7a0b\u5e8f\u65e0\u56fd\u754c \u4f46\u7a0b\u5e8f\u5458\u6709\u56fd\u754c \u4e2d\u56fd\u56fd\u5bb6\u5c0a\u4e25\u4e0d\u5bb9\u6311\u8845 \u5982\u679c\u60a8\u5728\u7279\u6b8a\u65f6\u671f mall admin web\u662f\u4e00\u4e2a\u7535\u5546\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u7684\u524d\u7aef\u9879\u76ee \u57fa\u4e8eVue Element\u5b9e\u73b0 \u4e3b\u8981\u5305\u62ec\u5546\u54c1\u7ba1\u7406 \u8ba2\u5355\u7ba1\u7406 \u4f1a\u5458\u7ba1\u7406 \u4fc3\u9500\u7ba1\u7406 \u8fd0\u8425\u7ba1\u7406 \u5185\u5bb9\u7ba1\u7406 \u7edf\u8ba1\u62a5\u8868 \u8d22\u52a1\u7ba1\u7406 \u6743\u9650\u7ba1\u7406 \u8bbe\u7f6e\u7b49\u529f\u80fd \u4e00\u6b3e\u5b8c\u5584\u7684\u5b89\u5168\u8bc4\u4f30\u5de5\u5177 \u652f\u6301\u5e38\u89c1 web \u5b89\u5168\u95ee\u9898\u626b\u63cf\u548c\u81ea\u5b9a\u4e49 poc \u4f7f\u7528\u4e4b\u524d\u52a1\u5fc5\u5148\u9605\u8bfb\u6587\u6863Vue\u6570\u636e\u53ef\u89c6\u5316\u7ec4\u4ef6\u5e93 \u7c7b\u4f3c\u963f\u91ccDataV \u5927\u5c4f\u6570\u636e\u5c55\u793a \u63d0\u4f9bSVG\u7684\u8fb9\u6846\u53ca\u88c5\u9970 \u56fe\u8868 \u6c34\u4f4d\u56fe \u98de\u7ebf\u56fe\u7b49\u7ec4\u4ef6 \u7b80\u5355\u6613\u7528 \u957f\u671f\u66f4\u65b0 React\u7248\u5df2\u53d1\u5e03  UI\u8868\u5355\u8bbe\u8ba1\u53ca\u4ee3\u7801\u751f\u6210\u5668\u57fa\u4e8eVue\u7684\u53ef\u89c6\u5316\u8868\u5355\u8bbe\u8ba1\u5668 \u8ba9\u8868\u5355\u5f00\u53d1\u7b80\u5355\u800c\u9ad8\u6548 \u57fa\u4e8evue\u7684\u9ad8\u6269\u5c55\u5728\u7ebf\u7f51\u9875\u5236\u4f5c\u5e73\u53f0 \u53ef\u81ea\u5b9a\u4e49\u7ec4\u4ef6 \u53ef\u6dfb\u52a0\u811a\u672c \u53ef\u6570\u636e\u7edf\u8ba1 vue\u540e\u53f0\u7ba1\u7406\u6846\u67b6 \u7cbe\u81f4\u7684\u4e0b\u62c9\u5237\u65b0\u548c\u4e0a\u62c9\u52a0\u8f7d js\u6846\u67b6 \u652f\u6301vue \u5b8c\u7f8e\u8fd0\u884c\u4e8e\u79fb\u52a8\u7aef\u548c\u4e3b\u6d41PC\u6d4f\u89c8\u5668 \u57fa\u4e8evue2 vuex element ui\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf  Vue js\u9ad8\u4eff\u997f\u4e86\u4e48\u5916\u5356App\u8bfe\u7a0b\u6e90\u7801 coding imooc com class 74 html\u4eac\u4e1c\u98ce\u683c\u79fb\u52a8\u7aef Vue2 Vue3 \u7ec4\u4ef6\u5e93eladmin\u524d\u7aef\u6e90\u7801 \u9879\u76ee\u57fa\u4e8e\u7684\u524d\u540e\u7aef\u5206\u79bb\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf \u6743\u9650\u63a7\u5236\u91c7\u7528 RBAC \u83dc\u5355\u52a8\u6001\u8def\u7531\u8d44\u6e90\u91c7\u96c6\u7ad9\u5728\u7ebf\u64ad\u653euView UI \u662funi app\u751f\u6001\u6700\u4f18\u79c0\u7684UI\u6846\u67b6 \u5168\u9762\u7684\u7ec4\u4ef6\u548c\u4fbf\u6377\u7684\u5de5\u5177\u4f1a\u8ba9\u60a8\u4fe1\u624b\u62c8\u6765 \u5982\u9c7c\u5f97\u6c34Vue2 \u5168\u5bb6\u6876\u4eff \u5fae\u4fe1App \u9879\u76ee \u652f\u6301\u591a\u4eba\u5728\u7ebf\u804a\u5929\u548c\u673a\u5668\u4eba\u804a\u5929\u524d\u7aefvue \u540e\u7aefkoa \u5168\u6808\u5f0f\u5f00\u53d1bilibili\u9996\u9875 A magical vue admin \u8bb0\u5f97star\u4e92\u8054\u7f51\u5927\u5382\u5185\u63a8\u53ca\u5927\u5382\u9762\u7ecf\u6574\u7406 \u5e76\u4e14\u6bcf\u5929\u4e00\u9053\u9762\u8bd5\u9898\u63a8\u9001 \u6bcf\u5929\u4e94\u5206\u949f \u534a\u5e74\u5927\u5382\u4e2d Vue3 \u5168\u5bb6\u6876 Vant \u642d\u5efa\u5927\u578b\u5355\u9875\u9762\u5546\u57ce\u9879\u76ee \u65b0\u8702\u5546\u57ce Vue3 \u7248\u672c \u6280\u672f\u6808\u4e3a\u57fa\u4e8eVue\u5f00\u53d1\u7684XMall\u5546\u57ce\u524d\u53f0\u9875\u9762 PC\u7aef Vue\u5168\u5bb6\u6876 Vant \u642d\u5efa\u5927\u578b\u5355\u9875\u9762\u7535\u5546\u9879\u76ee ddbuy 7 orange cn\u524d\u540e\u7aef\u5206\u79bb\u6743\u9650\u7ba1\u7406\u7cfb\u7edf \u7cbe\u529b\u6709\u9650 \u505c\u6b62\u7ef4\u62a4 \u7528 Vue js \u5f00\u53d1\u7684\u8de8\u4e09\u7aef\u5e94\u7528Prototyping Tool For Vue Devs \u9002\u7528\u4e8eVue\u7684\u539f\u578b\u5de5\u5177\u5b9e\u6218\u5546\u57ce  \u57fa\u4e8eVue2 \u9ad8\u4eff\u5fae\u4fe1App\u7684\u5355\u9875\u5e94\u7528electron\u8de8\u5e73\u53f0\u97f3\u4e50\u64ad\u653e\u5668 \u53ef\u641c\u7f51\u6613\u4e91 QQ\u97f3\u4e50 \u867e\u7c73\u97f3\u4e50 \u652f\u6301QQ \u5fae\u535a Github\u767b\u5f55 \u4e91\u6b4c\u5355 \u652f\u6301\u4e00\u952e\u5bfc\u5165\u97f3\u4e50\u5e73\u53f0\u6b4c\u5355ThorUI\u7ec4\u4ef6\u5e93 \u8f7b\u91cf \u7b80\u6d01\u7684\u79fb\u52a8\u7aef\u7ec4\u4ef6\u5e93 \u7ec4\u4ef6\u6587\u6863\u5730\u5740 thorui cn doc \u6700\u8fd1\u66f4\u65b0\u65f6\u95f4 2 21 5 28uni app\u6846\u67b6\u6f14\u793a\u793a\u4f8b Electron Vue \u4eff\u7f51\u6613\u4e91\u97f3\u4e50windows\u5ba2\u6237\u7aef \u57fa\u4e8e Vue2 Vue CLI3 \u7684\u9ad8\u4eff\u7f51\u6613\u4e91 mac \u5ba2\u6237\u7aef\u64ad\u653e\u5668 PC Online Music PlayerGitHub \u6cc4\u9732\u76d1\u63a7\u7cfb\u7edfpear \u68a8\u5b50 \u8f7b\u91cf\u7ea7\u7684\u5728\u7ebf\u9879\u76ee \u4efb\u52a1\u534f\u4f5c\u7cfb\u7edf \u8fdc\u7a0b\u529e\u516c\u534f\u4f5c\u81ea\u9009\u57fa\u91d1\u52a9\u624b\u662f\u4e00\u6b3eChrome\u6269\u5c55 \u7528\u6765\u5feb\u901f\u83b7\u53d6\u5173\u6ce8\u57fa\u91d1\u7684\u5b9e\u65f6\u6570\u636e \u67e5\u770b\u81ea\u9009\u57fa\u91d1\u7684\u5b9e\u65f6\u4f30\u503c\u60c5\u51b5\u652f\u6301 markdown \u6e32\u67d3\u7684\u535a\u5ba2\u524d\u53f0\u5c55\u793aVue \u97f3\u4e50\u641c\u7d22 \u64ad\u653e Demo \u4e00\u4e2a\u57fa\u4e8e vue2 vue3 \u7684 \u5927\u8f6c\u76d8 \u4e5d\u5bab\u683c \u62bd\u5956\u63d2\u4ef6\u5956\u54c1 \u6587\u5b57 \u56fe\u7247 \u989c\u8272 \u6309\u94ae\u5747\u53ef\u914d\u7f6e \u652f\u6301\u540c\u6b65 \u5f02\u6b65\u62bd\u5956 \u6982\u7387\u524d \u540e\u7aef\u53ef\u63a7 \u81ea\u52a8\u6839\u636e dpr \u8c03\u6574\u6e05\u6670\u5ea6\u9002\u914d\u79fb\u52a8\u7aef \u57fa\u4e8e Vue \u7684\u5728\u7ebf\u97f3\u4e50\u64ad\u653e\u5668 PC Online music player\u7f8e\u56e2\u997f\u4e86\u5417\u5916\u5356\u7ea2\u5305\u5916\u5356\u4f18\u60e0\u5238 \u5148\u9886\u7ea2\u5305\u518d\u4e0b\u5355 \u5916\u5356\u7ea2\u5305\u4f18\u60e0\u5238 cps\u5206\u6210 \u522b\u4eba\u9886\u7ea2\u5305\u4e0b\u5355 \u4f60\u62ff\u4f63\u91d1 \u8ba8\u8bba\u5982\u4f55\u6784\u5efa\u4e00\u5957\u53ef\u9760\u7684\u5927\u578b\u5206\u5e03\u5f0f\u7cfb\u7edf\u7528 vue \u5199\u5c0f\u7a0b\u5e8f \u57fa\u4e8e mpvue \u6846\u67b6\u91cd\u5199 weui \u57fa\u4e8eVue\u6846\u67b6\u6784\u5efa\u7684github\u6570\u636e\u53ef\u89c6\u5316\u5e73\u53f0\u4f7f\u7528GitHub API \u642d\u5efa\u4e00\u4e2a\u53ef\u52a8\u6001\u53d1\u5e03\u6587\u7ae0\u7684\u535a\u5ba2\u53ef\u89c6\u5316\u62d6\u62fd\u7ec4\u4ef6\u5e93 DEMO\u57fa\u4e8e\u5f00\u6e90\u7ec4\u4ef6 Inception SQLAdvisor SOAR \u7684SQL\u5ba1\u6838 SQL\u4f18\u5316\u7684Web\u5e73\u53f0\u663e\u793a\u5f53\u524d\u7f51\u7ad9\u7684\u6240\u6709\u53ef\u7528Tampermonkey\u811a\u672c \u4e13\u6ce8Web\u4e0e\u7b97\u6cd5\u65e0\u7f1d\u6eda\u52a8component\u7cbe\u901a\u4ee5\u592a\u574a \u4e2d\u6587\u7248 \u7f51\u9875\u6a21\u62df\u684c\u9762\u57fa\u4e8e\u7684\u591a\u6a21\u5757\u524d\u540e\u7aef\u5206\u79bb\u7684\u535a\u5ba2\u9879\u76ee\u7f51\u6613\u4e91\u97f3\u4e50 QQ\u97f3\u4e50 \u54aa\u5495\u97f3\u4e50 \u7b2c\u4e09\u65b9 web\u7aef \u53ef\u64ad\u653e vip \u4e0b\u67b6\u6b4c\u66f2 \u57fa\u4e8e\u6743\u9650\u7ba1\u7406\u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u57fa\u4e8e Node js \u7684\u5f00\u6e90\u4e2a\u4eba\u535a\u5ba2\u7cfb\u7edf \u91c7\u7528 Nuxt Vue TypeScript \u6280\u672f\u6808  \u4e00\u6b3e\u7b80\u6d01\u9ad8\u6548\u7684VuePress\u77e5\u8bc6\u7ba1\u7406 \u535a\u5ba2 blog \u4e3b\u9898\u57fa\u4e8euni app\u7684ui\u6846\u67b6\u57fa\u4e8eVue Vuex iView\u7684\u7535\u5b50\u5546\u57ce\u7f51\u7ad9 Vue2 \u5168\u5bb6\u6876 Vant \u642d\u5efa\u5927\u578b\u5355\u9875\u9762\u5546\u57ce\u9879\u76ee \u65b0\u8702\u5546\u57ce\u524d\u540e\u7aef\u5206\u79bb\u7248\u672c \u524d\u7aefVue\u9879\u76ee\u6e90\u7801\u9177\u72d7 \ufe0f \u6781\u5ba2\u733f\u68a6\u5bfc\u822a \u72ec\u7acb\u5f00\u53d1\u8005\u7684\u5bfc\u822a\u7ad9  Vue SpringBoot MyBatis \u97f3\u4e50\u7f51\u7ad9\u57fa\u4e8e RageFrame2 \u7684\u4e00\u6b3e\u514d\u8d39\u5f00\u6e90\u7684\u57fa\u7840\u5546\u57ce\u9500\u552e\u529f\u80fd\u7684\u5f00\u6e90\u5fae\u5546\u57ce \u57fa\u4e8evue2 \u7684\u7f51\u6613\u4e91\u97f3\u4e50\u64ad\u653e\u5668 api\u6765\u81ea\u4e8eNeteaseCloudMusicApi v2 \u4e3a\u6700\u65b0\u7248\u672c\u7f16\u5199\u7684\u4e00\u5957\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u5168\u6808\u5f00\u53d1\u738b\u8005\u8363\u8000\u624b\u673a\u7aef\u5b98\u7f51\u548c\u7ba1\u7406\u540e\u53f0\u57fa\u4e8e Vue3 x TypeScript \u7684\u5728\u7ebf\u6f14\u793a\u6587\u7a3f\u5e94\u7528 \u5b9e\u73b0PPT\u5e7b\u706f\u7247\u7684\u5728\u7ebf\u7f16\u8f91 \u6f14\u793a \u57fa\u4e8evue2 \u751f\u6001\u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u6a21\u677f\u5f00\u53d1\u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf Vchat \u4ece\u5934\u5230\u811a \u64b8\u4e00\u4e2a\u793e\u4ea4\u804a\u5929\u7cfb\u7edf vue node mongodb h5\u7f16\u8f91\u5668\u7c7b\u4f3cmaka \u6613\u4f01\u79c0 \u8d26\u53f7 \u5bc6\u7801 admin996 \u516c\u53f8\u5c55\u793a \u8ba8\u8bbaVue Spring boot\u524d\u540e\u7aef\u5206\u79bb\u9879\u76ee wh web wh server\u7684\u5347\u7ea7\u7248 \u57fa\u4e8eelement ui\u7684\u6570\u636e\u9a71\u52a8\u8868\u5355\u7ec4\u4ef6\u57fa\u4e8e GitHub API \u5f00\u53d1\u7684\u56fe\u5e8a\u795e\u5668 \u56fe\u7247\u5916\u94fe\u4f7f\u7528 jsDelivr \u8fdb\u884c CDN \u52a0\u901f \u514d\u4e0b\u8f7d \u514d\u5b89\u88c5 \u6253\u5f00\u7f51\u7ad9\u5373\u53ef\u76f4\u63a5\u4f7f\u7528 \u514d\u8d39 \u7a33\u5b9a \u9ad8\u6548  \ufe0f Vue\u521d \u4e2d\u7ea7\u9879\u76ee CnodeJS\u793e\u533a\u91cd\u6784\u9884\u89c8 DEMO \u57fa\u4e8evue2\u5168\u5bb6\u6876\u5b9e\u73b0\u7684 \u4eff\u79fb\u52a8\u7aefQQ\u57fa\u4e8eVue Echarts \u6784\u5efa\u7684\u6570\u636e\u53ef\u89c6\u5316\u5e73\u53f0 \u9177\u70ab\u5927\u5c4f\u5c55\u793a\u6a21\u677f\u548c\u7ec4\u4ef6\u5e93 \u6301\u7eed\u66f4\u65b0\u5404\u884c\u5404\u4e1a\u5b9e\u7528\u6a21\u677f\u548c\u70ab\u9177\u5c0f\u7ec4\u4ef6 \u57fa\u4e8eSpring Boot\u7684\u5728\u7ebf\u8003\u8bd5\u7cfb\u7edf \u9884\u89c8\u5730\u5740 129 211 88 191 \u8d26\u6237\u5206\u522b\u662fadmin teacher student \u5bc6\u7801\u662fadmin123 6pan 6\u76d8\u5c0f\u767d\u7f8a \u7b2c\u4e8c\u7248 vue3 antd typescript on bone and knife \u57fa\u4e8eVue \u5168\u5bb6\u6876 2 x \u5236\u4f5c\u7684\u7f8e\u56e2\u5916\u5356APP \u672c\u9879\u76ee\u662f\u4e00\u6b3e\u57fa\u4e8e Avue \u7684\u8868\u5355\u8bbe\u8ba1\u5668 \u62d6\u62fd\u5f0f\u64cd\u4f5c\u8ba9\u4f60\u5feb\u901f\u6784\u5efa\u4e00\u4e2a\u8868\u5355 \u4e00\u523b\u793e\u533a\u524d\u7aef\u6e90\u7801\u57fa\u4e8eVue iView Admin\u5f00\u53d1\u7684XBoot\u524d\u540e\u7aef\u5206\u79bb\u5f00\u653e\u5e73\u53f0\u524d\u7aef \u6743\u9650\u53ef\u63a7\u5236\u81f3\u6309\u94ae\u663e\u793a \u52a8\u6001\u8def\u7531\u6743\u9650\u83dc\u5355 \u591a\u8bed\u8a00 \u7b80\u6d01\u7f8e\u89c2 \u524d\u540e\u7aef\u5206\u79bb \ufe0f\u4e00\u4e2a\u5f00\u6e90\u7684\u793e\u533a\u7a0b\u5e8f \u4e34\u65f6\u6d4b\u8bd5\u7ad9 https t myrpg cnecharts\u5730\u56fegeoJson\u884c\u653f\u8fb9\u754c\u6570\u636e\u7684\u5b9e\u65f6\u83b7\u53d6\u4e0e\u5e94\u7528 \u7701\u5e02\u533a\u53bf\u591a\u7ea7\u8054\u52a8\u4e0b\u94bb \u771f\u6b63\u610f\u4e49\u7684\u4e0b\u94bb\u81f3\u53bf\u7ea7 \u9644\u6700\u65b0geoJson\u6587\u4ef6\u4e0b\u8f7d Vue\u7684Nuxt js\u670d\u52a1\u7aef\u6e32\u67d3\u6846\u67b6 NodeJS\u4e3a\u540e\u7aef\u7684\u5168\u6808\u9879\u76ee Docker\u4e00\u952e\u90e8\u7f72 \u9762\u5411\u5c0f\u767d\u7684\u5b8c\u7f8e\u535a\u5ba2\u7cfb\u7edfvue\u7011\u5e03\u6d41\u7ec4\u4ef6 vue waterfall easy 2 x Ego \u79fb\u52a8\u7aef\u8d2d\u7269\u5546\u57ce vue vuex ruoter webpack  Vue js Node js Mongodb \u524d\u540e\u7aef\u5206\u79bb\u7684\u4e2a\u4eba\u535a\u5ba2\u5934\u50cf\u52a0\u53e3\u7f69\u5c0f\u7a0b\u5e8f \u57fa\u4e8euniapp\u4f7f\u7528vue\u5feb\u901f\u5b9e\u73b0 \u5e7f\u544a\u6708\u6536\u51654k  \u57fa\u4e8evue3 \u7684\u7ba1\u7406\u7aef\u6a21\u677f\u6559\u4f60\u5982\u4f55\u6253\u9020\u8212\u9002 \u9ad8\u6548 \u65f6\u5c1a\u7684\u524d\u7aef\u5f00\u53d1\u73af\u5883\u57fa\u4e8e Flask \u548c Vue js \u524d\u540e\u7aef\u5206\u79bb\u7684\u5fae\u578b\u535a\u5ba2\u9879\u76ee \u652f\u6301\u591a\u7528\u6237 Markdown\u6587\u7ae0 \u559c\u6b22 \u6536\u85cf\u6587\u7ae0 \u7c89\u4e1d\u5173\u6ce8 \u7528\u6237\u8bc4\u8bba \u70b9\u8d5e \u52a8\u6001\u901a\u77e5 \u7ad9\u5185\u79c1\u4fe1 \u9ed1\u540d\u5355 \u90ae\u4ef6\u652f\u6301 \u7ba1\u7406\u540e\u53f0 \u6743\u9650\u7ba1\u7406 RQ\u4efb\u52a1\u961f\u5217 Elasticsearch\u5168\u6587\u641c\u7d22 Linux VPS\u90e8\u7f72 Docker\u5bb9\u5668\u90e8\u7f72\u7b49\u57fa\u4e8e vue \u548c heyui \u7ec4\u4ef6\u5e93\u7684\u4e2d\u540e\u7aef\u7cfb\u7edf admin heyui topVue \u8f7b\u91cf\u7ea7\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u57fa\u7840\u6a21\u677funi app\u9879\u76ee\u63d2\u4ef6\u529f\u80fd\u96c6\u5408We\u5ddd\u5927\u5c0f\u7a0b\u5e8f scuplus \u4f7f\u7528wepy\u5f00\u53d1\u7684\u5b8c\u5584\u7684\u6821\u56ed\u7efc\u5408\u5c0f\u7a0b\u5e8f 4 \u9875\u9762 \u524d\u540e\u7aef\u5f00\u6e90 \u5305\u62ec\u6210\u7ee9 \u8bfe\u8868 \u5931\u7269\u62db\u9886 \u56fe\u4e66\u9986 \u65b0\u95fb\u8d44\u8baf\u7b49\u7b49\u5e38\u89c1\u6821\u56ed\u573a\u666f\u529f\u80fd\u4e00\u4e2a\u5168\u968f\u673a\u7684\u5237\u88c5\u5907\u5c0f\u6e38\u620f\u4e00\u4e2avue\u5168\u5bb6\u6876\u5165\u95e8Demo \u662f\u4e00\u500b\u53ef\u4ee5\u5e6b\u52a9\u60a8 Vue js \u7684\u9805\u76ee\u6e2c\u8a66\u53ca\u5075\u932f\u7684\u5de5\u5177 \u4e5f\u540c\u6642\u652f\u6301 Vuex\u53ca Vue Router  \u5fae\u4fe1\u516c\u4f17\u53f7\u7ba1\u7406\u7cfb\u7edf \u5305\u542b\u516c\u4f17\u53f7\u83dc\u5355\u7ba1\u7406 \u81ea\u52a8\u56de\u590d \u7d20\u6750\u7ba1\u7406 \u6a21\u677f\u6d88\u606f \u7c89\u4e1d\u7ba1\u7406 \ufe0f\u7b49\u529f\u80fd \u524d\u540e\u7aef\u90fd\u5f00\u6e90\u514d\u8d39  \u57fa\u4e8evue \u7684\u7ba1\u7406\u540e\u53f0 \u914d\u5408Blog Core\u4e0eBlog Vue\u7b49\u591a\u4e2a\u9879\u76ee\u4f7f\u7528\u6d77\u98ce\u5c0f\u5e97 \u5f00\u6e90\u5546\u57ce \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u5546\u57ce\u7ba1\u7406\u540e\u53f0 \u540e\u53f0\u7ba1\u7406 VUE IT\u4e4b\u5bb6\u7b2c\u4e09\u65b9\u5c0f\u7a0b\u5e8f\u7248\u5ba2\u6237\u7aef \u4f7f\u7528 mpvue \u5f00\u53d1 \u517c\u5bb9 web vue \u53ef\u4ee5\u62d6\u62fd\u6392\u5e8f\u7684\u6811\u5f62\u8868\u683c \u73b0\u4ee3 Web \u5f00\u53d1\u8bed\u6cd5\u57fa\u7840\u4e0e\u5de5\u7a0b\u5b9e\u8df5 \u6db5\u76d6 Web \u5f00\u53d1\u57fa\u7840 \u524d\u7aef\u5de5\u7a0b\u5316 \u5e94\u7528\u67b6\u6784 \u6027\u80fd\u4e0e\u4f53\u9a8c\u4f18\u5316 \u6df7\u5408\u5f00\u53d1 React \u5b9e\u8df5 Vue \u5b9e\u8df5 WebAssembly \u7b49\u591a\u65b9\u9762  \u6570\u636e\u5927\u5c4f\u53ef\u89c6\u5316\u7f16\u8f91\u5668\u4e00\u4e2a\u9002\u7528\u4e8e\u6444\u5f71\u4ece\u4e1a\u8005 \u7231\u597d\u8005 \u8bbe\u8ba1\u5e08\u7b49\u521b\u610f\u884c\u4e1a\u4ece\u4e1a\u8005\u7684\u56fe\u50cf\u5de5\u5177\u7bb1 \u6b66\u6c49\u5927\u5b66\u56fe\u4e66\u9986\u52a9\u624b \u684c\u9762\u7aef\u57fa\u4e8eform generator \u4eff\u9489\u9489\u5ba1\u6279\u6d41\u7a0b\u521b\u5efa \u8868\u5355\u521b\u5efa \u6d41\u7a0b\u8282\u70b9\u53ef\u89c6\u5316\u914d\u7f6e \u5fc5\u586b\u6761\u4ef6\u53ca\u6821\u9a8c \u4e00\u4e2a\u5b8c\u6574electron\u684c\u9762\u8bb0\u8d26\u7a0b\u5e8f \u6280\u672f\u6808\u4e3b\u8981\u4f7f\u7528electron vue vuetify \u5f00\u673a\u81ea\u52a8\u542f\u52a8 \u81ea\u52a8\u66f4\u65b0 \u6258\u76d8\u6700\u5c0f\u5316 \u95ea\u70c1\u7b49\u5e38\u7528\u529f\u80fd Nsis\u5236\u4f5c\u6f02\u4eae\u7684\u5b89\u88c5\u5305 \u7a0b\u5e8f\u733f\u7684\u5a5a\u793c\u9080\u8bf7\u51fd \u4e00\u4e2a\u57fa\u4e8evue\u548celement ui\u7684\u6811\u5f62\u7a7f\u68ad\u6846\u53ca\u90ae\u4ef6\u901a\u8baf\u5f55\u7248\u672c\u89c1\u793a\u4f8b\u89c1 \u57fa\u4e8eGin Vue Element UI\u7684\u524d\u540e\u7aef\u5206\u79bb\u6743\u9650\u7ba1\u7406\u7cfb\u7edf\u7684\u524d\u7aef\u6a21\u5757\u901a\u7528\u4e66\u7c4d\u9605\u8bfbAPP BookChat \u7684 uni app \u5b9e\u73b0\u7248\u672c \u652f\u6301\u591a\u7aef\u5206\u53d1 \u7f16\u8bd1\u751f\u6210Android\u548ciOS \u624b\u673aAPP\u4ee5\u53ca\u5404\u5e73\u53f0\u7684\u5c0f\u7a0b\u5e8f\u57fa\u4e8eVue3\u7684Material design\u98ce\u683c\u79fb\u52a8\u7aef\u7ec4\u4ef6\u5e93\u8fdb\u9636\u8d44\u6df1\u524d\u7aef\u5f00\u53d1\u5728\u7ebf\u8003\u8bd5\u7cfb\u7edf springboot vue\u524d\u540e\u7aef\u5206\u79bb\u7684\u4e00\u4e2a\u9879\u76ee  \ufe0f \u65e0\u540e\u7aef\u7684\u4eff YouTube Live Chat \u98ce\u683c\u7684\u7b80\u6613 Bilibili \u5f39\u5e55\u59ecvue\u540e\u7aef\u7ba1\u7406\u7cfb\u7edf\u754c\u9762 \u57fa\u4e8eui\u7ec4\u4ef6iviewBilibili\u76f4\u64ad\u5f39\u5e55\u5e93 for Mac Windows LinuxVue\u9ad8\u4eff\u7f51\u6613\u4e91\u97f3\u4e50 \u57fa\u672c\u5b9e\u73b0\u7f51\u6613\u4e91\u6240\u6709\u97f3\u4e50 MV\u76f8\u5173\u529f\u80fd \u73b0\u5df2\u66f4\u65b0\u5230\u7b2c\u4e8c\u7248 \u4ec5\u7528\u4e8e\u5b66\u4e60 \u4e0b\u9762\u6709\u8be6\u7ec6\u6559\u7a0b \u6b66\u6c49\u5927\u5b66\u56fe\u4e66\u9986\u52a9\u624b \u79fb\u52a8\u7aefZeus\u57fa\u4e8eGolang Gin casbin \u81f4\u529b\u4e8e\u505a\u4f01\u4e1a\u7edf\u4e00\u6743\u9650 \u8d26\u53f7\u4e2d\u5fc3\u7ba1\u7406\u7cfb\u7edf \u5305\u542b\u8d26\u53f7\u7ba1\u7406 \u6570\u636e\u6743\u9650 \u529f\u80fd\u6743\u9650 \u5e94\u7528\u7ba1\u7406 \u591a\u6570\u636e\u5e93\u9002\u914d \u53efdocker \u4e00\u952e\u8fd0\u884c \u793e\u533a\u6d3b\u8dc3 \u7248\u672c\u8fed\u4ee3\u5feb \u52a0\u7fa4\u514d\u8d39\u6280\u672f\u652f\u6301 Vue\u9ad8\u4eff\u7f51\u6613\u4e91\u97f3\u4e50 Vue\u5165\u95e8\u5b9e\u8df5 \u5728\u7ebf\u9884\u89c8 \u6682\u65f6\u505c\u6b62\u57fa\u4e8e Vue \u548c ElementUI \u6784\u5efa\u7684\u4e00\u4e2a\u4f01\u4e1a\u7ea7\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf \ufe0f \u8de8\u5e73\u53f0\u79fb\u52a8\u7aef\u89c6\u9891\u8d44\u6e90\u64ad\u653e\u5668 \u7b80\u6d01\u514d\u8d39 ZY Player \u79fb\u52a8\u7aef APP \u57fa\u4e8e Uni app \u5f00\u53d1 Vue\u5b9e\u6218\u9879\u76ee\u57fa\u4e8e\u53c2\u8003\u5c0f\u7c73\u5546\u57ce \u5b9e\u73b0\u7684\u7535\u5546\u9879\u76ee h5\u5236\u4f5c \u79fb\u52a8\u7aef\u4e13\u9898\u6d3b\u52a8\u9875\u9762\u53ef\u89c6\u5316\u7f16\u8f91\u4eff\u9489\u9489\u5ba1\u6279\u6d41\u7a0b\u8bbe\u7f6e\u52a8\u6001\u8868\u5355\u9875\u9762\u8bbe\u8ba1 \u81ea\u52a8\u751f\u6210\u9875\u9762\u5fae\u524d\u7aef\u9879\u76ee\u5b9e\u6218vue\u9879\u76ee \u57fa\u4e8evue3 qiankun2 \u8fdb\u9636\u7248 github com wl ui wl mfe\u57fa\u4e8e d2 admin\u7684RBAC\u6743\u9650\u7ba1\u7406\u89e3\u51b3\u65b9\u6848VueNode \u662f\u4e00\u5957\u57fa\u4e8e\u7684\u524d\u540e\u7aef\u5206\u79bb\u9879\u76ee \u57fa\u4e8e\u4eff\u4eac\u4e1c\u6dd8\u5b9d\u7684 \u79fb\u52a8\u7aefH5\u7535\u5546\u5e73\u53f0  \u5de8\u6811 \u57fa\u4e8eztree\u5c01\u88c5\u7684Vue\u6811\u5f62\u7ec4\u4ef6 \u8f7b\u677e\u5b9e\u73b0\u6d77\u91cf\u6570\u636e\u7684\u9ad8\u6027\u80fd\u6e32\u67d3 \u5fae\u4fe1\u7ea2\u5305\u5c01\u9762\u9886\u53d6 \u7528\u6237\u89c2\u770b\u89c6\u9891\u5e7f\u544a\u6216\u8005\u9080\u8bf7\u7528\u6237\u53ef\u83b7\u53d6\u5fae\u4fe1\u7ea2\u5305\u5e8f\u5217\u53f7\u57fa\u4e8e Vue \u7684\u53ef\u89c6\u5316\u5e03\u5c40\u7f16\u8f91\u5668\u63d2\u4ef6kbone ui \u662f\u4e00\u5957\u80fd\u540c\u65f6\u652f\u6301 \u5c0f\u7a0b\u5e8f kbone \u548c vue \u6846\u67b6\u5f00\u53d1\u7684\u591a\u7aef UI \u5e93 PS \u65b0\u7248 kbone ui \u5df2\u51fa\u7089\u5e76\u8fc1\u79fb\u5230 kbone \u4e3b\u4ed3\u5e93 \u6b64\u4ed3\u5e93\u4ec5\u505a\u65e7\u7248\u7ef4\u62a4\u4e4b\u7528  \u4e00\u4e2avue\u7684\u4e2a\u4eba\u535a\u5ba2\u9879\u76ee \u914d\u5408 net core api\u6559\u7a0b \u6253\u9020\u524d\u540e\u7aef\u5206\u79bbTumo Blog For Vue js \u524d\u540e\u7aef\u5206\u79bbbpmn js\u6d41\u7a0b\u8bbe\u8ba1\u5668\u7ec4\u4ef6 \u57fa\u4e8evue elementui\u7f8e\u5316\u5c5e\u6027\u9762\u677f \u6ee1\u8db39 %\u4ee5\u4e0a\u7684\u4e1a\u52a1\u9700\u6c42\u4e13\u95e8\u4e3a Weex \u524d\u7aef\u5f00\u53d1\u8005\u6253\u9020\u7684\u4e00\u5957\u9ad8\u8d28\u91cfUI\u6846\u67b6 \u60f3\u7528vue\u628a\u6211\u73b0\u5728\u7684\u4e2a\u4eba\u7f51\u7ad9\u91cd\u65b0\u5199\u4e00\u4e0b \u65b0\u7684\u98ce\u683c \u65b0\u7684\u6280\u672f \u4ec0\u4e48\u90fd\u662f\u65b0\u7684 \u672c\u9879\u76ee\u662f\u4e00\u4e2a\u5728\u7ebf\u804a\u5929\u7cfb\u7edf \u6700\u5927\u7a0b\u5ea6\u7684\u8fd8\u539f\u4e86Mac\u5ba2\u6237\u7aefQQ vue cli3 \u540e\u53f0\u7ba1\u7406\u6a21\u677f heart \u57fa\u4e8evue2\u548cvuex\u7684\u590d\u6742\u5355\u9875\u9762\u5e94\u7528 2 \u9875\u976253\u4e2aAPI \u4eff\u5b9e\u9a8c\u697c \u57fa\u4e8e Vue Koa \u7684 WebDesktop \u89c6\u7a97\u7cfb\u7edf Jeebase\u662f\u4e00\u6b3e\u524d\u540e\u7aef\u5206\u79bb\u7684\u5f00\u6e90\u5f00\u53d1\u6846\u67b6 \u57fa\u4e8e\u5f00\u53d1 \u4e00\u5957SpringBoot\u540e\u53f0 \u4e24\u5957\u524d\u7aef\u9875\u9762 \u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u57fa\u4e8eElementUI\u6216\u8005AntDesign\u7684\u524d\u7aef\u754c\u9762 \u4e8c\u671f\u4f1a\u6574\u5408react\u524d\u7aef\u6846\u67b6 Ant Design React \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u5df2\u7ecf\u4f7f\u7528\u8fd9\u5957\u6846\u67b6\u5f00\u53d1\u4e86CMS\u7f51\u7ad9\u7cfb\u7edf \u793e\u533a\u8bba\u575b\u7cfb\u7edf \u5fae\u4fe1\u5c0f\u7a0b\u5e8f \u5fae\u4fe1\u670d\u52a1\u53f7\u7b49 \u540e\u9762\u4f1a\u9010\u6b65\u6574\u7406\u5f00\u6e90 \u672c\u9879\u76ee\u4e3b\u8981\u76ee\u7684\u5728\u4e8e\u6574\u5408\u4e3b\u6d41\u6280\u672f\u6846\u67b6 \u5bfb\u627e\u5e94\u7528\u6700\u4f73\u9879\u76ee\u5b9e\u8df5\u65b9\u6848 \u5b9e\u73b0\u53ef\u76f4\u63a5\u4f7f\u7528\u7684\u5feb\u901f\u5f00\u53d1\u6846\u67b6 \u4f7f\u7528 vue cli3 \u642d\u5efa\u7684vue vuex router element \u5f00\u53d1\u6a21\u7248 \u96c6\u6210\u5e38\u7528\u7ec4\u4ef6 \u529f\u80fd\u6a21\u5757JEECG BOOT APP \u79fb\u52a8\u89e3\u51b3\u65b9\u6848 \u91c7\u7528uniapp\u6846\u67b6 \u4e00\u4efd\u4ee3\u7801\u591a\u7ec8\u7aef\u9002\u914d \u540c\u65f6\u652f\u6301APP \u5c0f\u7a0b\u5e8f H5 \u5b9e\u73b0\u4e86\u4e0eJeecgBoot\u5e73\u53f0\u5b8c\u7f8e\u5bf9\u63a5\u7684\u79fb\u52a8\u89e3\u51b3\u65b9\u6848 \u76ee\u524d\u5df2\u7ecf\u5b9e\u73b0\u767b\u5f55 \u7528\u6237\u4fe1\u606f \u901a\u8baf\u5f55 \u516c\u544a \u79fb\u52a8\u9996\u9875 \u4e5d\u5bab\u683c\u7b49\u57fa\u7840\u529f\u80fd \u660e\u65e5\u65b9\u821f\u5de5\u5177\u7bb1 \u652f\u6301\u4e2d\u53f0\u7f8e\u65e5\u97e9\u670dvue\u7684\u9a8c\u8bc1\u7801\u63d2\u4ef6\u8fd9\u91cc\u6709\u4e00\u4e9b\u6807\u51c6\u7ec4\u4ef6\u5e93\u53ef\u80fd\u6ca1\u6709\u7684\u529f\u80fd\u7ec4\u4ef6 \u5df2\u6709\u7ec4\u4ef6 \u653e\u5927\u955c \u7b7e\u5230 \u56fe\u7247\u6807\u7b7e \u6ed1\u52a8\u9a8c\u8bc1 \u5012\u8ba1\u65f6 \u6c34\u5370 \u62d6\u62fd \u5927\u5bb6\u6765\u627e\u832c \u57fa\u4e8eVue2 Nodejs MySQL\u7684\u535a\u5ba2 \u6709\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf \u652f\u6301 \u767b\u9646 \u6ce8\u518c \u7559\u8a00 \u8bc4\u8bba \u56de\u590d \u70b9\u8d5e\u957f\u6c5f\u8bc1\u5238\u90d1\u5dde\u5927\u5b66\u8d85\u5e02\u7ba1\u7406\u7cfb\u7edf\u5929\u5b89\u95e8\u5766\u514b\u684c\u9762\u884c\u9a76\u5de5\u51b5\u8336\u9a6c\u53e4\u9053\u91d1\u878d\u6587\u672c\u60c5\u611f\u81ea\u52a8\u9ec4\u6cb3\u94f6\u884c\u8425\u9500\u901a\u8bb8\u7ae0\u6da6", "created": "2015-04-02 20:51:50", "language": "HTML", "type": "User", "username": "cirosantilli", "stars": 771, "forks": 143, "subscribers": 36, "open_issues": 470, "topics": ["china", "censorship", "censorship-circumvention", "chinese-communist-party", "great-firewall", "tiananmen", "dictator", "dictatorship", "totalitarian", "human-rights", "xi-jinping", "falun-gong", "gfw", "china-dictatorship", "covid-19", "covid-19-china", "xinjiang", "996", "socks5", "shadowsocks"]}, {"id": 60330051, "repo_name": "zheye", "full_name": "996refuse/zheye", "description": "\u8005\u4e5f - \u77e5\u4e4e \u5012\u7acb\u7684\u6587\u5b57 \u6c49\u5b57\u9a8c\u8bc1\u7801\u8bc6\u522b\u7a0b\u5e8f", "created": "2016-06-03 08:07:30", "language": "Python", "type": "User", "username": "996refuse", "stars": 769, "forks": 224, "subscribers": 27, "open_issues": 2, "topics": ["zhihu", "neural-network", "python", "pytorch", "gmm"]}, {"id": 103506787, "repo_name": "pytorch-custom-dataset-examples", "full_name": "utkuozbulak/pytorch-custom-dataset-examples", "description": "Some custom dataset examples for PyTorch", "created": "2017-09-14 08:27:04", "language": "Python", "type": "User", "username": "utkuozbulak", "stars": 767, "forks": 111, "subscribers": 22, "open_issues": 0, "topics": []}, {"id": 212251461, "repo_name": "Super-mario-bros-PPO-pytorch", "full_name": "uvipen/Super-mario-bros-PPO-pytorch", "description": "Proximal Policy Optimization (PPO) algorithm for Super Mario Bros", "created": "2019-10-02 03:55:53", "language": "Python", "type": "User", "username": "uvipen", "stars": 766, "forks": 155, "subscribers": 27, "open_issues": 9, "topics": ["reinforcement-learning", "ppo", "ppo2", "pytorch", "gym", "python3", "python", "deep-learning", "super-mario-bros", "mario", "ai", "proximal-policy-optimization", "openai", "openai-gym"]}, {"id": 259171328, "repo_name": "torchdyn", "full_name": "DiffEqML/torchdyn", "description": "A PyTorch library entirely dedicated to neural differential equations, implicit models and related numerical methods.", "created": "2020-04-27 01:18:41", "language": "Jupyter Notebook", "type": "Organization", "username": "DiffEqML", "stars": 765, "forks": 78, "subscribers": 24, "open_issues": 17, "topics": ["deep-learning", "neural-network", "neural-differential-equations", "pytorch", "dynamical-systems", "deep-equilibrium-models", "implicit-models", "control-theory", "neural-ode", "numerical-methods"]}, {"id": 245145949, "repo_name": "avalanche", "full_name": "ContinualAI/avalanche", "description": "Avalanche: an End-to-End Library for Continual Learning. Among other features, it provides implementations of existing strategies (EWC, LwF, GEM, iCarl, GDumb and others).", "created": "2020-03-05 11:32:13", "language": "Python", "type": "Organization", "username": "ContinualAI", "stars": 765, "forks": 118, "subscribers": 25, "open_issues": 66, "topics": ["continual-learning", "deep-learning", "pytorch", "lifelong-learning", "framework", "benchmarks", "strategies", "metrics", "continualai", "evaluation", "library", "training"]}, {"id": 186662030, "repo_name": "open-unmix-pytorch", "full_name": "sigsep/open-unmix-pytorch", "description": "Open-Unmix - Music Source Separation for PyTorch", "created": "2019-05-14 16:38:52", "language": "Python", "type": "Organization", "username": "sigsep", "stars": 764, "forks": 141, "subscribers": 34, "open_issues": 9, "topics": []}, {"id": 123063153, "repo_name": "medicaltorch", "full_name": "perone/medicaltorch", "description": "A medical imaging framework for Pytorch", "created": "2018-02-27 02:50:07", "language": "Python", "type": "User", "username": "perone", "stars": 764, "forks": 120, "subscribers": 49, "open_issues": 15, "topics": ["machine-learning", "deep-learning", "medical-imaging", "computer-vision", "python", "pytorch"]}, {"id": 119365126, "repo_name": "Prototypical-Networks-for-Few-shot-Learning-PyTorch", "full_name": "orobix/Prototypical-Networks-for-Few-shot-Learning-PyTorch", "description": "Implementation of Prototypical Networks for Few Shot Learning (https://arxiv.org/abs/1703.05175) in Pytorch", "created": "2018-01-29 10:02:00", "language": "Python", "type": "Organization", "username": "orobix", "stars": 764, "forks": 188, "subscribers": 14, "open_issues": 7, "topics": ["python", "pytorch", "cnn", "prototypical-networks"]}, {"id": 129686552, "repo_name": "pointer_summarizer", "full_name": "atulkum/pointer_summarizer", "description": "pytorch implementation of \"Get To The Point: Summarization with Pointer-Generator Networks\"", "created": "2018-04-16 04:54:08", "language": "Python", "type": "User", "username": "atulkum", "stars": 763, "forks": 219, "subscribers": 14, "open_issues": 25, "topics": ["nlp", "deep-learning", "attention-mechanism", "summarization", "pointer-networks", "pytorch-implmention", "seq2seq-attn"]}, {"id": 165981451, "repo_name": "pytorch-gradual-warmup-lr", "full_name": "ildoonet/pytorch-gradual-warmup-lr", "description": "Gradually-Warmup Learning Rate Scheduler for PyTorch", "created": "2019-01-16 05:46:13", "language": "Python", "type": "User", "username": "ildoonet", "stars": 762, "forks": 113, "subscribers": 11, "open_issues": 15, "topics": ["pytorch", "deep-learning", "learning-rate-decay", "pytorch-extension", "multinode", "multigpu", "large-scale-learning"]}, {"id": 211226246, "repo_name": "android-demo-app", "full_name": "pytorch/android-demo-app", "description": "PyTorch android examples of usage in applications", "created": "2019-09-27 03:11:18", "language": "Java", "type": "Organization", "username": "pytorch", "stars": 758, "forks": 346, "subscribers": 27, "open_issues": 130, "topics": []}, {"id": 113921911, "repo_name": "PyTorch-CycleGAN", "full_name": "aitorzip/PyTorch-CycleGAN", "description": "A clean and readable Pytorch implementation of CycleGAN", "created": "2017-12-12 00:01:28", "language": "Python", "type": "User", "username": "aitorzip", "stars": 756, "forks": 228, "subscribers": 12, "open_issues": 31, "topics": ["generative-adversarial-network", "deep-learning", "pytorch", "cyclegan", "artificial-intelligence", "computer-vision", "image-generation", "image-processing", "computer-graphics"]}, {"id": 165017326, "repo_name": "FaceBoxes.PyTorch", "full_name": "zisianw/FaceBoxes.PyTorch", "description": "A PyTorch Implementation of FaceBoxes", "created": "2019-01-10 08:04:39", "language": "Python", "type": "User", "username": "zisianw", "stars": 756, "forks": 195, "subscribers": 19, "open_issues": 15, "topics": ["faceboxes", "face-detection", "pytorch"]}, {"id": 98370587, "repo_name": "two-stream-action-recognition", "full_name": "jeffreyyihuang/two-stream-action-recognition", "description": "Using two stream architecture to implement a classic action recognition method on UCF101 dataset", "created": "2017-07-26 02:34:46", "language": "Python", "type": "User", "username": "jeffreyyihuang", "stars": 756, "forks": 250, "subscribers": 22, "open_issues": 37, "topics": ["action-recognition", "two-stream", "pytorch", "ucf101", "video", "action-detection"]}, {"id": 112793061, "repo_name": "TRN-pytorch", "full_name": "zhoubolei/TRN-pytorch", "description": "Temporal Relation Networks", "created": "2017-12-01 22:29:27", "language": "Python", "type": "User", "username": "zhoubolei", "stars": 753, "forks": 187, "subscribers": 23, "open_issues": 62, "topics": []}, {"id": 177263796, "repo_name": "inltk", "full_name": "goru001/inltk", "description": "Natural Language Toolkit for Indic Languages aims to provide out of the box support for various NLP tasks that an application developer might need", "created": "2019-03-23 08:28:20", "language": "Python", "type": "User", "username": "goru001", "stars": 753, "forks": 154, "subscribers": 33, "open_issues": 22, "topics": ["nlp", "deep-learning", "indic-languages", "pytorch", "data-augmentation", "sentence-similarity", "sentence-encoding", "word-embeddings", "sentence-embeddings"]}, {"id": 115131280, "repo_name": "gans", "full_name": "diegoalejogm/gans", "description": "Generative Adversarial Networks implemented in PyTorch and Tensorflow", "created": "2017-12-22 16:15:37", "language": "Jupyter Notebook", "type": "User", "username": "diegoalejogm", "stars": 751, "forks": 339, "subscribers": 32, "open_issues": 15, "topics": ["gans", "dcgans", "tensorflow", "paper-implementations", "pytorch", "gans-collections", "cyclegan"]}, {"id": 354751914, "repo_name": "SkinDeep", "full_name": "vijishmadhavan/SkinDeep", "description": "Get Deinked!!", "created": "2021-04-05 07:17:40", "language": "Jupyter Notebook", "type": "User", "username": "vijishmadhavan", "stars": 751, "forks": 86, "subscribers": 8, "open_issues": 5, "topics": ["tattoos", "imgur", "synthetic-data", "photoshop", "image-pairs", "deep-learning", "pix2pix", "pytorch", "fastai", "machine-learning"]}, {"id": 203417155, "repo_name": "lxmert", "full_name": "airsplay/lxmert", "description": "PyTorch code for EMNLP 2019 paper \"LXMERT: Learning Cross-Modality Encoder Representations from Transformers\".", "created": "2019-08-20 16:50:29", "language": "Python", "type": "User", "username": "airsplay", "stars": 750, "forks": 132, "subscribers": 17, "open_issues": 47, "topics": []}, {"id": 163359611, "repo_name": "awesome-AutoML-and-Lightweight-Models", "full_name": "guan-yuan/awesome-AutoML-and-Lightweight-Models", "description": "A list of high-quality (newest) AutoML works and lightweight models including 1.) Neural Architecture Search, 2.) Lightweight Structures, 3.) Model Compression, Quantization and Acceleration, 4.) Hyperparameter Optimization, 5.) Automated Feature Engineering.", "created": "2018-12-28 03:08:56", "language": null, "type": "User", "username": "guan-yuan", "stars": 749, "forks": 151, "subscribers": 55, "open_issues": 1, "topics": ["automl", "meta-learning", "automated-feature-engineering", "hyperparameter-optimization", "architecture-search", "model-compression", "model-acceleration", "awesome-list", "neural-architecture-search", "nas", "pytorch", "quantization", "quantized-neural-network", "quantized-training", "tensorflow"]}, {"id": 126206423, "repo_name": "pytorch-center-loss", "full_name": "KaiyangZhou/pytorch-center-loss", "description": "Pytorch implementation of Center Loss", "created": "2018-03-21 16:12:01", "language": "Python", "type": "User", "username": "KaiyangZhou", "stars": 748, "forks": 190, "subscribers": 8, "open_issues": 16, "topics": ["pytorch", "deep-learning", "center-loss", "python", "loss-functions", "feature-learning", "computer-vision"]}, {"id": 249513553, "repo_name": "torch-cam", "full_name": "frgfm/torch-cam", "description": "Class activation maps for your PyTorch models (CAM, Grad-CAM, Grad-CAM++, Smooth Grad-CAM++, Score-CAM, SS-CAM, IS-CAM, XGrad-CAM, Layer-CAM)", "created": "2020-03-23 18:34:51", "language": "Python", "type": "User", "username": "frgfm", "stars": 748, "forks": 71, "subscribers": 11, "open_issues": 4, "topics": ["pytorch", "python", "deep-learning", "cnn", "activation-maps", "gradcam-plus-plus", "gradcam", "saliency-map", "interpretability", "interpretable-deep-learning", "smoothgrad", "score-cam", "class-activation-map", "grad-cam"]}, {"id": 276495512, "repo_name": "Open3D-ML", "full_name": "isl-org/Open3D-ML", "description": "An extension of Open3D to address 3D Machine Learning tasks", "created": "2020-07-01 22:33:57", "language": "Python", "type": "Organization", "username": "isl-org", "stars": 744, "forks": 149, "subscribers": 35, "open_issues": 23, "topics": ["3d-perception", "datasets", "pretrained-models", "lidar", "rgbd", "tensorflow", "pytorch", "visualization", "semantic-segmentation", "object-detection", "3d-object-detection"]}, {"id": 115489214, "repo_name": "Capsule-Network-Tutorial", "full_name": "higgsfield/Capsule-Network-Tutorial", "description": "Pytorch easy-to-follow Capsule Network tutorial", "created": "2017-12-27 06:25:41", "language": "Jupyter Notebook", "type": "User", "username": "higgsfield", "stars": 743, "forks": 135, "subscribers": 11, "open_issues": 12, "topics": ["pytorch", "pytorch-tutorials", "easy-to-use", "clean-code", "capsule-network"]}, {"id": 201037432, "repo_name": "graph_nets", "full_name": "dsgiitr/graph_nets", "description": "PyTorch Implementation and Explanation of Graph Representation Learning papers: DeepWalk, GCN, GraphSAGE, ChebNet & GAT.", "created": "2019-08-07 11:33:14", "language": "Jupyter Notebook", "type": "Organization", "username": "dsgiitr", "stars": 743, "forks": 179, "subscribers": 33, "open_issues": 1, "topics": ["graph-representation-learning", "graph-convolutional-networks", "graph-attention-networks", "graph-embedding", "deepwalk", "node-embedding", "graph-sage", "chebyshev-polynomials", "pytorch"]}, {"id": 117527290, "repo_name": "pytorch_resnet_cifar10", "full_name": "akamaster/pytorch_resnet_cifar10", "description": "Proper implementation of ResNet-s for CIFAR10/100 in pytorch that matches description of the original paper.", "created": "2018-01-15 09:50:56", "language": "Python", "type": "User", "username": "akamaster", "stars": 741, "forks": 246, "subscribers": 5, "open_issues": 6, "topics": ["resnet", "resnet20", "resnet32", "resnet44", "resnet56", "resnet110", "resnet1202", "pytorch", "resnet-cifar", "cifar", "torchvision-models-cifar"]}, {"id": 123683042, "repo_name": "extension-cpp", "full_name": "pytorch/extension-cpp", "description": "C++ extensions in PyTorch", "created": "2018-03-03 10:46:31", "language": "Python", "type": "Organization", "username": "pytorch", "stars": 741, "forks": 144, "subscribers": 34, "open_issues": 30, "topics": []}, {"id": 81465000, "repo_name": "densenet.pytorch", "full_name": "bamos/densenet.pytorch", "description": "A PyTorch implementation of DenseNet.", "created": "2017-02-09 15:33:23", "language": "Python", "type": "User", "username": "bamos", "stars": 740, "forks": 177, "subscribers": 14, "open_issues": 8, "topics": ["pytorch", "deep-learning", "densenet"]}, {"id": 242907435, "repo_name": "Zooming-Slow-Mo-CVPR-2020", "full_name": "Mukosame/Zooming-Slow-Mo-CVPR-2020", "description": "Fast and Accurate One-Stage Space-Time Video Super-Resolution (accepted in CVPR 2020)", "created": "2020-02-25 04:13:58", "language": "Python", "type": "User", "username": "Mukosame", "stars": 740, "forks": 137, "subscribers": 29, "open_issues": 17, "topics": ["pytorch", "video", "super-resolution", "video-frame-interpolation", "video-super-resolution", "spatio-temporal", "cvpr2020", "cvpr"]}, {"id": 138151002, "repo_name": "Text-Classification-Pytorch", "full_name": "prakashpandey9/Text-Classification-Pytorch", "description": "Text classification using deep learning models in Pytorch", "created": "2018-06-21 09:43:39", "language": "Python", "type": "User", "username": "prakashpandey9", "stars": 739, "forks": 229, "subscribers": 18, "open_issues": 7, "topics": ["pytorch", "text-classification", "sentiment-classification", "lstm-model", "attention-model", "self-attention", "rnn-model", "glove"]}, {"id": 100121638, "repo_name": "focal_loss_pytorch", "full_name": "clcarwin/focal_loss_pytorch", "description": "A PyTorch Implementation of Focal Loss.", "created": "2017-08-12 15:41:46", "language": "Python", "type": "User", "username": "clcarwin", "stars": 739, "forks": 206, "subscribers": 10, "open_issues": 11, "topics": []}, {"id": 370728359, "repo_name": "CogView", "full_name": "THUDM/CogView", "description": "Text-to-Image generation. The repo for NeurIPS 2021 paper \"CogView: Mastering Text-to-Image Generation via Transformers\".", "created": "2021-05-25 14:48:31", "language": "Python", "type": "Organization", "username": "THUDM", "stars": 739, "forks": 92, "subscribers": 45, "open_issues": 7, "topics": ["text-to-image", "transformers", "pretrained-models", "pytorch"]}, {"id": 110502308, "repo_name": "pggan-pytorch", "full_name": "nashory/pggan-pytorch", "description": ":fire::fire: PyTorch implementation of \"Progressive growing of GANs (PGGAN)\" :fire::fire:", "created": "2017-11-13 05:01:40", "language": "Python", "type": "User", "username": "nashory", "stars": 738, "forks": 135, "subscribers": 19, "open_issues": 35, "topics": ["generative-adversarial-network", "progressive-gan", "pytorch", "celeba-hq-dataset", "gan", "progressively-growing-gan", "tensorboard"]}, {"id": 288539712, "repo_name": "NVAE", "full_name": "NVlabs/NVAE", "description": "The Official PyTorch Implementation of \"NVAE: A Deep Hierarchical Variational Autoencoder\" (NeurIPS 2020 spotlight paper)", "created": "2020-08-18 18:59:20", "language": "Python", "type": "Organization", "username": "NVlabs", "stars": 738, "forks": 114, "subscribers": 17, "open_issues": 16, "topics": []}, {"id": 354147404, "repo_name": "TimeSformer", "full_name": "facebookresearch/TimeSformer", "description": "The official pytorch implementation of our paper \"Is Space-Time Attention All You Need for Video Understanding?\"", "created": "2021-04-02 22:26:46", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 738, "forks": 113, "subscribers": 21, "open_issues": 37, "topics": []}, {"id": 140929219, "repo_name": "PyTorch-From-Zero-To-One", "full_name": "amusi/PyTorch-From-Zero-To-One", "description": "PyTorch\u4ece\u5165\u95e8\u5230\u7cbe\u901a", "created": "2018-07-14 08:19:14", "language": null, "type": "User", "username": "amusi", "stars": 733, "forks": 207, "subscribers": 22, "open_issues": 1, "topics": ["pytorch", "pytorch-tutorials", "deep-learning"]}, {"id": 147632891, "repo_name": "PytorchToCaffe", "full_name": "xxradon/PytorchToCaffe", "description": "Pytorch model to caffe model, supported pytorch 0.3, 0.3.1,  0.4,  0.4.1 ,1.0 , 1.0.1 ,  1.2 ,1.3 .notice that only pytorch 1.1 have some bugs", "created": "2018-09-06 07:13:38", "language": "Python", "type": "User", "username": "xxradon", "stars": 732, "forks": 205, "subscribers": 18, "open_issues": 85, "topics": []}, {"id": 168725504, "repo_name": "ml-mipt", "full_name": "girafe-ai/ml-mipt", "description": "Open Machine Learning course at MIPT", "created": "2019-02-01 16:20:39", "language": "Jupyter Notebook", "type": "Organization", "username": "girafe-ai", "stars": 729, "forks": 556, "subscribers": 49, "open_issues": 8, "topics": ["machine-learning", "python", "course", "mipt", "deep-learning", "pytorch", "natural-language-processing", "reinforcement-learning", "computer-vision", "materials", "seminars"]}, {"id": 122384641, "repo_name": "AdaptSegNet", "full_name": "wasidennis/AdaptSegNet", "description": "Learning to Adapt Structured Output Space for Semantic Segmentation, CVPR 2018 (spotlight)", "created": "2018-02-21 19:44:10", "language": "Python", "type": "User", "username": "wasidennis", "stars": 728, "forks": 192, "subscribers": 19, "open_issues": 25, "topics": ["deep-learning", "computer-vision", "domain-adaptation", "semantic-segmentation", "generative-adversarial-network", "adversarial-learning", "pytorch"]}, {"id": 190776339, "repo_name": "cleanrl", "full_name": "vwxyzjn/cleanrl", "description": "High-quality single file implementation of Deep Reinforcement Learning algorithms with research-friendly features (PPO, DQN, C51, Ape-X DQN, DDPG, TD3, SAC)", "created": "2019-06-07 16:31:50", "language": "Python", "type": "User", "username": "vwxyzjn", "stars": 728, "forks": 82, "subscribers": 17, "open_issues": 23, "topics": ["wandb", "reinforcement-learning", "pytorch", "python", "gym", "machine-learning", "deep-reinforcement-learning", "deep-learning", "atari", "ale", "a2c", "proximal-policy-optimization", "ppo", "advantage-actor-critic", "actor-critic"]}, {"id": 130885307, "repo_name": "translate", "full_name": "pytorch/translate", "description": "Translate - a PyTorch Language Library", "created": "2018-04-24 16:44:04", "language": "Python", "type": "Organization", "username": "pytorch", "stars": 727, "forks": 193, "subscribers": 44, "open_issues": 28, "topics": ["artificial-intelligence", "machine-learning", "onnx", "pytorch"]}, {"id": 354138793, "repo_name": "FasterTransformer", "full_name": "NVIDIA/FasterTransformer", "description": "Transformer related optimization, including BERT, GPT", "created": "2021-04-02 21:36:33", "language": "C++", "type": "Organization", "username": "NVIDIA", "stars": 727, "forks": 124, "subscribers": 20, "open_issues": 55, "topics": ["pytorch", "transformer", "gpt", "bert"]}, {"id": 156602369, "repo_name": "pytorch-segmentation-toolbox", "full_name": "speedinghzl/pytorch-segmentation-toolbox", "description": "PyTorch Implementations for DeeplabV3 and PSPNet", "created": "2018-11-07 20:11:58", "language": "Python", "type": "User", "username": "speedinghzl", "stars": 726, "forks": 161, "subscribers": 14, "open_issues": 21, "topics": ["pytorch", "pytorch-segmentation-toolbox", "deeplabv3", "pspnet", "cityscape-dataset", "semantic-segmentation"]}, {"id": 396828995, "repo_name": "YOLOv5-Lite", "full_name": "ppogg/YOLOv5-Lite", "description": "\ud83c\udf45\ud83c\udf45\ud83c\udf45YOLOv5-Lite: lighter, faster and easier to deploy. Evolved from yolov5 and the size of model is only 930+kb (int8) and 1.7M (fp16). It can reach 10+ FPS on the Raspberry Pi 4B when the input size is 320\u00d7320~", "created": "2021-08-16 14:24:00", "language": "Python", "type": "User", "username": "ppogg", "stars": 725, "forks": 274, "subscribers": 16, "open_issues": 41, "topics": ["ncnn", "yolov5", "android-app", "mnn", "shufflenetv2", "repvgg", "transformer", "tensorrt", "pplcnet", "openvivo", "mobilenet", "tflite", "pytorch", "picodet"]}, {"id": 344676740, "repo_name": "perceiver-pytorch", "full_name": "lucidrains/perceiver-pytorch", "description": "Implementation of Perceiver, General Perception with Iterative Attention, in Pytorch", "created": "2021-03-05 02:58:52", "language": "Python", "type": "User", "username": "lucidrains", "stars": 724, "forks": 108, "subscribers": 30, "open_issues": 26, "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism"]}, {"id": 323721661, "repo_name": "metrics", "full_name": "PyTorchLightning/metrics", "description": "Machine learning metrics for distributed, scalable PyTorch applications.", "created": "2020-12-22 20:02:42", "language": "Python", "type": "Organization", "username": "PyTorchLightning", "stars": 724, "forks": 158, "subscribers": 23, "open_issues": 57, "topics": ["python", "data-science", "machine-learning", "pytorch", "deep-learning", "metrics", "analyses"]}, {"id": 112338125, "repo_name": "pytorch-AdaIN", "full_name": "naoto0804/pytorch-AdaIN", "description": "Unofficial pytorch implementation of 'Arbitrary Style Transfer in Real-time with Adaptive Instance Normalization' [Huang+, ICCV2017]", "created": "2017-11-28 13:21:19", "language": "Python", "type": "User", "username": "naoto0804", "stars": 723, "forks": 161, "subscribers": 7, "open_issues": 2, "topics": ["pytorch", "style-transfer", "cnn", "instance-normalization"]}, {"id": 406555580, "repo_name": "openfold", "full_name": "aqlaboratory/openfold", "description": "Trainable PyTorch reproduction of AlphaFold 2", "created": "2021-09-14 23:59:02", "language": "Python", "type": "Organization", "username": "aqlaboratory", "stars": 723, "forks": 93, "subscribers": 32, "open_issues": 20, "topics": ["pytorch", "protein-structure", "alphafold2"]}, {"id": 189070727, "repo_name": "TorchSnooper", "full_name": "zasdfgbnm/TorchSnooper", "description": "Debug PyTorch code using PySnooper", "created": "2019-05-28 17:09:09", "language": "Python", "type": "User", "username": "zasdfgbnm", "stars": 719, "forks": 37, "subscribers": 13, "open_issues": 0, "topics": []}, {"id": 201089222, "repo_name": "webdataset", "full_name": "webdataset/webdataset", "description": "A high-performance Python-based I/O system for large (and small) deep learning problems, with strong support for PyTorch.", "created": "2019-08-07 16:42:04", "language": "Jupyter Notebook", "type": "Organization", "username": "webdataset", "stars": 719, "forks": 69, "subscribers": 19, "open_issues": 45, "topics": ["webdataset", "webdataset-format", "data-augmentation", "pytorch", "deep-learning"]}, {"id": 79951706, "repo_name": "warp-ctc", "full_name": "SeanNaren/warp-ctc", "description": "Pytorch Bindings for warp-ctc", "created": "2017-01-24 20:35:30", "language": "Cuda", "type": "User", "username": "SeanNaren", "stars": 718, "forks": 273, "subscribers": 16, "open_issues": 100, "topics": []}, {"id": 93953373, "repo_name": "pytorch-segmentation-detection", "full_name": "warmspringwinds/pytorch-segmentation-detection", "description": "Image Segmentation and Object Detection in Pytorch", "created": "2017-06-10 16:57:15", "language": "Jupyter Notebook", "type": "User", "username": "warmspringwinds", "stars": 718, "forks": 168, "subscribers": 31, "open_issues": 15, "topics": []}, {"id": 226934007, "repo_name": "pytorch-normalizing-flows", "full_name": "karpathy/pytorch-normalizing-flows", "description": "Normalizing flows in PyTorch. Current intended use is education not production.", "created": "2019-12-09 17:55:39", "language": "Jupyter Notebook", "type": "User", "username": "karpathy", "stars": 716, "forks": 78, "subscribers": 27, "open_issues": 8, "topics": []}, {"id": 217621634, "repo_name": "melgan-neurips", "full_name": "descriptinc/melgan-neurips", "description": "GAN-based Mel-Spectrogram Inversion Network for Text-to-Speech Synthesis", "created": "2019-10-25 22:10:57", "language": "Python", "type": "Organization", "username": "descriptinc", "stars": 716, "forks": 167, "subscribers": 54, "open_issues": 24, "topics": ["speech-synthesis", "gans", "pytorch", "deep-learning"]}, {"id": 201605934, "repo_name": "DeblurGANv2", "full_name": "VITA-Group/DeblurGANv2", "description": "[ICCV 2019] \"DeblurGAN-v2: Deblurring (Orders-of-Magnitude) Faster and Better\" by Orest Kupyn, Tetiana Martyniuk, Junru Wu, Zhangyang Wang", "created": "2019-08-10 09:02:40", "language": "Python", "type": "Organization", "username": "VITA-Group", "stars": 716, "forks": 194, "subscribers": 29, "open_issues": 44, "topics": ["deblurgan", "generative-adversarial-network", "pytorch", "deep-learning", "iccv", "iccv2019", "low-level-vision"]}, {"id": 211071855, "repo_name": "GNNs-for-NLP", "full_name": "svjan5/GNNs-for-NLP", "description": "Tutorial: Graph Neural Networks for Natural Language Processing at EMNLP 2019 and CODS-COMAD 2020", "created": "2019-09-26 11:22:00", "language": "Python", "type": "User", "username": "svjan5", "stars": 715, "forks": 101, "subscribers": 26, "open_issues": 1, "topics": ["graph-convolutional-networks", "deep-learning", "tutorial", "emnlp2019", "tensorflow", "pytorch"]}, {"id": 139824749, "repo_name": "network-slimming", "full_name": "Eric-mingjie/network-slimming", "description": "Network Slimming (Pytorch) (ICCV 2017)", "created": "2018-07-05 09:14:05", "language": "Python", "type": "User", "username": "Eric-mingjie", "stars": 714, "forks": 181, "subscribers": 15, "open_issues": 49, "topics": ["deep-learning", "convolutional-neural-networks", "pytorch", "channel-pruning", "sparsity"]}, {"id": 37250561, "repo_name": "face_verification_experiment", "full_name": "AlfredXiangWu/face_verification_experiment", "description": "Original Caffe Version for LightCNN-9. Highly recommend to use PyTorch Version (https://github.com/AlfredXiangWu/LightCNN) ", "created": "2015-06-11 09:02:28", "language": "Matlab", "type": "User", "username": "AlfredXiangWu", "stars": 714, "forks": 334, "subscribers": 74, "open_issues": 2, "topics": ["face-recognition", "caffe"]}, {"id": 50407897, "repo_name": "AI-Series", "full_name": "wx-chevalier/AI-Series", "description": ":books: [.md & .ipynb] Series of Artificial Intelligence & Deep Learning, including Mathematics Fundamentals, Python Practices, NLP Application, etc. \ud83d\udcab \u4eba\u5de5\u667a\u80fd\u4e0e\u6df1\u5ea6\u5b66\u4e60\u5b9e\u6218\uff0c\u6570\u7406\u7edf\u8ba1\u7bc7 | \u673a\u5668\u5b66\u4e60\u7bc7 | \u6df1\u5ea6\u5b66\u4e60\u7bc7 | \u81ea\u7136\u8bed\u8a00\u5904\u7406\u7bc7 | \u5de5\u5177\u5b9e\u8df5 Scikit & Tensoflow & PyTorch \u7bc7 | \u884c\u4e1a\u5e94\u7528 & \u8bfe\u7a0b\u7b14\u8bb0", "created": "2016-01-26 06:14:46", "language": "Jupyter Notebook", "type": "User", "username": "wx-chevalier", "stars": 714, "forks": 248, "subscribers": 68, "open_issues": 0, "topics": ["datascience", "machinelearning", "deeplearning", "neural-network", "natural-language-processing", "artificial-intelligence", "wx-doc"]}, {"id": 171240699, "repo_name": "gpt-2-Pytorch", "full_name": "graykode/gpt-2-Pytorch", "description": "Simple Text-Generator with OpenAI gpt-2 Pytorch Implementation", "created": "2019-02-18 08:06:33", "language": "Python", "type": "User", "username": "graykode", "stars": 712, "forks": 180, "subscribers": 26, "open_issues": 13, "topics": ["gpt-2", "pytorch", "implementation", "nlp", "text-generator", "story-telling", "gpt2", "natural-language-processing"]}, {"id": 114252768, "repo_name": "PytorchSSD", "full_name": "lzx1413/PytorchSSD", "description": "pytorch version of SSD and it's enhanced methods such as RFBSSD,FSSD and RefineDet", "created": "2017-12-14 13:17:03", "language": "Python", "type": "User", "username": "lzx1413", "stars": 711, "forks": 238, "subscribers": 23, "open_issues": 45, "topics": ["pytorch", "ssd", "fssd", "rfb", "refinedet"]}, {"id": 80216474, "repo_name": "FlowNetPytorch", "full_name": "ClementPinard/FlowNetPytorch", "description": "Pytorch implementation of FlowNet by Dosovitskiy et al.", "created": "2017-01-27 14:58:42", "language": "Python", "type": "User", "username": "ClementPinard", "stars": 710, "forks": 180, "subscribers": 19, "open_issues": 12, "topics": ["pytorch", "flownet", "flow"]}, {"id": 131102851, "repo_name": "CVND_Exercises", "full_name": "udacity/CVND_Exercises", "description": "Exercise notebooks for CVND.", "created": "2018-04-26 05:07:30", "language": "Jupyter Notebook", "type": "Organization", "username": "udacity", "stars": 710, "forks": 657, "subscribers": 61, "open_issues": 10, "topics": ["computer-vision-nanodegree", "computer-vision", "cnn", "pytorch"]}, {"id": 102551895, "repo_name": "test-tube", "full_name": "williamFalcon/test-tube", "description": "Python library to easily log experiments and parallelize hyperparameter search for neural networks", "created": "2017-09-06 02:14:57", "language": "JavaScript", "type": "User", "username": "williamFalcon", "stars": 709, "forks": 66, "subscribers": 21, "open_issues": 26, "topics": ["deep-learning", "machine-learning", "tensorflow", "hyperparameter-optimization", "neural-networks", "data-science", "keras", "pytorch", "caffe2", "caffe", "chainer", "grid-search", "random-search"]}, {"id": 240265895, "repo_name": "LightAutoML", "full_name": "sberbank-ai-lab/LightAutoML", "description": "LAMA - automatic model creation framework", "created": "2020-02-13 13:23:58", "language": "Python", "type": "Organization", "username": "sberbank-ai-lab", "stars": 709, "forks": 82, "subscribers": 26, "open_issues": 23, "topics": ["automl", "classification", "regression", "multiclass", "pytorch", "nlp", "model-selection", "parameter-tuning", "automated-machine-learning", "lama", "pipeline", "data-science", "feature-engineering", "ensembling", "stacking", "kaggle", "gradient-boosting", "linear-model", "blackbox", "whitebox"]}, {"id": 125590460, "repo_name": "LightNet", "full_name": "linksense/LightNet", "description": "LightNet: Light-weight Networks for Semantic Image Segmentation (Cityscapes and Mapillary Vistas Dataset)", "created": "2018-03-17 02:38:10", "language": "Python", "type": "Organization", "username": "linksense", "stars": 708, "forks": 174, "subscribers": 30, "open_issues": 12, "topics": ["semantic-segmentation", "mobilenet-v2", "deeplabv3plus", "wide-residual-networks", "pytorch", "cityscapes", "mapillary-vistas-dataset", "shufflenet", "inplace-activated-batchnorm", "mobilenet", "light-weight-net", "deeplabv3", "mobilenetv2plus", "rfmobilenetv2plus", "semantic-context-loss", "scse-aspp", "light-weight-networks", "mobilenetv2", "segmentation"]}, {"id": 114434939, "repo_name": "bottom-up-attention-vqa", "full_name": "hengyuan-hu/bottom-up-attention-vqa", "description": "An efficient PyTorch implementation of the winning entry of the 2017 VQA Challenge.", "created": "2017-12-16 05:00:41", "language": "Python", "type": "User", "username": "hengyuan-hu", "stars": 707, "forks": 174, "subscribers": 35, "open_issues": 17, "topics": ["vqa", "pytorch", "bottom-up-attention"]}, {"id": 174444931, "repo_name": "texar-pytorch", "full_name": "asyml/texar-pytorch", "description": "Integrating the Best of TF into PyTorch, for Machine Learning, Natural Language Processing, and Text Generation.  This is part of the CASL project: http://casl-project.ai/", "created": "2019-03-08 01:04:09", "language": "Python", "type": "Organization", "username": "asyml", "stars": 706, "forks": 114, "subscribers": 24, "open_issues": 38, "topics": ["machine-learning", "natural-language-processing", "pytorch", "deep-learning", "text-generation", "python", "machine-translation", "dialog-systems", "texar", "bert", "gpt-2", "xlnet", "roberta", "text-data", "data-processing", "texar-pytorch", "casl-project"]}, {"id": 303981258, "repo_name": "hifi-gan", "full_name": "jik876/hifi-gan", "description": "HiFi-GAN: Generative Adversarial Networks for Efficient and High Fidelity Speech Synthesis", "created": "2020-10-14 10:33:18", "language": "Python", "type": "User", "username": "jik876", "stars": 706, "forks": 210, "subscribers": 25, "open_issues": 55, "topics": ["speech-synthesis", "gan", "text-to-speech", "tts", "deep-learning", "hifi-gan", "pytorch", "vocoder"]}, {"id": 199516660, "repo_name": "trt_pose", "full_name": "NVIDIA-AI-IOT/trt_pose", "description": "Real-time pose estimation accelerated with NVIDIA TensorRT", "created": "2019-07-29 19:42:14", "language": "Python", "type": "Organization", "username": "NVIDIA-AI-IOT", "stars": 705, "forks": 230, "subscribers": 41, "open_issues": 114, "topics": ["human-pose-estimation", "human-pose", "tensorrt", "pytorch", "torch2trt", "jetson", "jetson-nano", "jetson-xavier", "real-time", "live-demo", "pretrained-models"]}, {"id": 93629266, "repo_name": "Convolutional_LSTM_PyTorch", "full_name": "automan000/Convolutional_LSTM_PyTorch", "description": "Multi-layer convolutional LSTM with Pytorch", "created": "2017-06-07 11:45:29", "language": "Python", "type": "User", "username": "automan000", "stars": 704, "forks": 196, "subscribers": 5, "open_issues": 10, "topics": []}, {"id": 167261741, "repo_name": "OpenLongTailRecognition-OLTR", "full_name": "zhmiao/OpenLongTailRecognition-OLTR", "description": "Pytorch implementation for \"Large-Scale Long-Tailed Recognition in an Open World\" (CVPR 2019 ORAL)", "created": "2019-01-23 22:08:16", "language": "Python", "type": "User", "username": "zhmiao", "stars": 704, "forks": 125, "subscribers": 34, "open_issues": 5, "topics": ["open-long-tail-recognition", "pytorch-implementation", "computer-vision", "long-tail", "open-set", "oltr", "cvpr2019", "deep-learning"]}, {"id": 160983886, "repo_name": "breast_cancer_classifier", "full_name": "nyukat/breast_cancer_classifier", "description": "Deep Neural Networks Improve Radiologists' Performance in Breast Cancer Screening", "created": "2018-12-08 22:26:26", "language": "Jupyter Notebook", "type": "Organization", "username": "nyukat", "stars": 704, "forks": 217, "subscribers": 47, "open_issues": 1, "topics": ["pytorch", "breast-cancer", "classification", "pretrained-models", "deep-learning", "neural-network", "breast-cancer-diagnosis", "medical-imaging", "medical-image-analysis", "tensorflow"]}, {"id": 345216380, "repo_name": "solo-learn", "full_name": "vturrisi/solo-learn", "description": "solo-learn: a library of self-supervised methods for visual representation learning powered by Pytorch Lightning", "created": "2021-03-06 23:22:01", "language": "Python", "type": "User", "username": "vturrisi", "stars": 699, "forks": 65, "subscribers": 12, "open_issues": 11, "topics": ["simclr", "nvidia-dali", "contrastive-learning", "pytorch", "pytorch-lightning", "barlow-twins", "self-supervised-learning", "swav", "byol", "moco", "simsiam", "vicreg", "nnclr", "dino", "wmse", "deepcluster", "ressl", "deep-learning", "vibcreg", "transformer-models"]}, {"id": 274157925, "repo_name": "SRFlow", "full_name": "andreas128/SRFlow", "description": "Official SRFlow training code: Super-Resolution using Normalizing Flow in PyTorch", "created": "2020-06-22 14:21:00", "language": "Jupyter Notebook", "type": "User", "username": "andreas128", "stars": 697, "forks": 101, "subscribers": 72, "open_issues": 33, "topics": ["normalizing-flow", "paper", "image-manipulation", "super-resolution"]}, {"id": 311882022, "repo_name": "AutoKernel", "full_name": "OAID/AutoKernel", "description": "AutoKernel \u662f\u4e00\u4e2a\u7b80\u5355\u6613\u7528\uff0c\u4f4e\u95e8\u69db\u7684\u81ea\u52a8\u7b97\u5b50\u4f18\u5316\u5de5\u5177\uff0c\u63d0\u9ad8\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u90e8\u7f72\u6548\u7387\u3002", "created": "2020-11-11 06:25:06", "language": "C++", "type": "Organization", "username": "OAID", "stars": 697, "forks": 79, "subscribers": 43, "open_issues": 6, "topics": ["tensorflow", "pytorch", "tvm", "halide", "tengine", "deep-learning", "auto", "reinforcement-learning", "autosearch", "optimization", "tensor"]}, {"id": 91645983, "repo_name": "grad-cam-pytorch", "full_name": "kazuto1011/grad-cam-pytorch", "description": "PyTorch implementation of Grad-CAM, vanilla/guided backpropagation, deconvnet, and occlusion sensitivity maps", "created": "2017-05-18 03:45:02", "language": "Python", "type": "User", "username": "kazuto1011", "stars": 696, "forks": 159, "subscribers": 8, "open_issues": 2, "topics": ["pytorch", "grad-cam", "visualization", "occlusion-sensitivity", "guided-backpropagation", "deconvnet"]}, {"id": 79786603, "repo_name": "Seq2Seq-PyTorch", "full_name": "MaximumEntropy/Seq2Seq-PyTorch", "description": "Sequence to Sequence Models with PyTorch", "created": "2017-01-23 08:49:40", "language": "Python", "type": "User", "username": "MaximumEntropy", "stars": 694, "forks": 164, "subscribers": 22, "open_issues": 6, "topics": ["pytorch", "seq2seq", "deep-learning", "rnn"]}, {"id": 212205845, "repo_name": "elastic", "full_name": "pytorch/elastic", "description": "PyTorch elastic training", "created": "2019-10-01 21:48:15", "language": "Python", "type": "Organization", "username": "pytorch", "stars": 694, "forks": 94, "subscribers": 36, "open_issues": 12, "topics": []}, {"id": 255074156, "repo_name": "PixelLib", "full_name": "ayoolaolafenwa/PixelLib", "description": "Visit PixelLib's official documentation  https://pixellib.readthedocs.io/en/latest/", "created": "2020-04-12 12:07:34", "language": "Python", "type": "User", "username": "ayoolaolafenwa", "stars": 692, "forks": 176, "subscribers": 28, "open_issues": 46, "topics": ["computer-vision", "machine-learning", "artificial-intelligence", "image-segmentation", "semantic-segmentation", "instance-segmentation", "video-segmentation", "deeplab", "deeplearning", "maskr-cnn", "tensorflow", "deep-learning", "pointrend", "pytorch", "convolutional-neural-networks", "segmentation", "object-detection"]}, {"id": 113267829, "repo_name": "semseg", "full_name": "guanfuchen/semseg", "description": "\u5e38\u7528\u7684\u8bed\u4e49\u5206\u5272\u67b6\u6784\u7ed3\u6784\u7efc\u8ff0\u4ee5\u53ca\u4ee3\u7801\u590d\u73b0", "created": "2017-12-06 04:14:49", "language": "Python", "type": "User", "username": "guanfuchen", "stars": 691, "forks": 157, "subscribers": 21, "open_issues": 54, "topics": ["semantic-segmentation", "deep-learning", "pytorch", "fcn", "segnet", "erfnet", "enet", "drn", "lrn", "label-refinement-network", "image-segmentation", "segmentation-networks", "segmentation-models", "deeplab", "bisenet", "frrn", "shufflenet", "future-semantic-segmentation", "gcn"]}, {"id": 144767237, "repo_name": "polyrnn-pp-pytorch", "full_name": "fidler-lab/polyrnn-pp-pytorch", "description": "PyTorch training/tool code for Polygon-RNN++ (CVPR 2018)", "created": "2018-08-14 20:07:46", "language": null, "type": "Organization", "username": "fidler-lab", "stars": 690, "forks": 102, "subscribers": 35, "open_issues": 14, "topics": ["cvpr2018", "pytorch", "deep-learning", "instance-segmentation", "polygon-rnn", "annotation", "labelling"]}, {"id": 104818215, "repo_name": "CondenseNet", "full_name": "ShichenLiu/CondenseNet", "description": "CondenseNet: Light weighted CNN for mobile devices", "created": "2017-09-26 01:03:24", "language": "Python", "type": "User", "username": "ShichenLiu", "stars": 690, "forks": 136, "subscribers": 23, "open_issues": 11, "topics": ["deep-learning", "pytorch", "mobile-device"]}, {"id": 158446849, "repo_name": "pytorch-lr-finder", "full_name": "davidtvs/pytorch-lr-finder", "description": "A learning rate range test implementation in PyTorch", "created": "2018-11-20 20:23:27", "language": "Python", "type": "User", "username": "davidtvs", "stars": 689, "forks": 102, "subscribers": 13, "open_issues": 14, "topics": ["pytorch", "learning-rate"]}, {"id": 344510921, "repo_name": "barlowtwins", "full_name": "facebookresearch/barlowtwins", "description": "PyTorch implementation of Barlow Twins.", "created": "2021-03-04 14:56:56", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 689, "forks": 88, "subscribers": 25, "open_issues": 8, "topics": []}, {"id": 257648141, "repo_name": "adapter-transformers", "full_name": "Adapter-Hub/adapter-transformers", "description": "Huggingface Transformers + Adapters = \u2764\ufe0f", "created": "2020-04-21 16:21:43", "language": "Python", "type": "Organization", "username": "Adapter-Hub", "stars": 688, "forks": 114, "subscribers": 14, "open_issues": 45, "topics": ["nlp", "natural-language-processing", "adapters", "transformers", "bert", "pytorch"]}, {"id": 188970384, "repo_name": "pytorch-fm", "full_name": "rixwew/pytorch-fm", "description": "Factorization Machine models in PyTorch", "created": "2019-05-28 06:46:31", "language": "Python", "type": "User", "username": "rixwew", "stars": 687, "forks": 172, "subscribers": 16, "open_issues": 13, "topics": ["factorization-machines", "pytorch", "deepfm", "xdeepfm", "autoint", "ffm", "fm", "nfm", "fnfm", "dcn", "pnn", "movielens-dataset", "criteo-dataset", "avazu-dataset", "ctr-prediction", "collaborative-filtering", "neural-collaborative-filtering", "hofm"]}, {"id": 259023310, "repo_name": "faster-rcnn-pytorch", "full_name": "bubbliiiing/faster-rcnn-pytorch", "description": "\u8fd9\u662f\u4e00\u4e2afaster-rcnn\u7684pytorch\u5b9e\u73b0\u7684\u5e93\uff0c\u53ef\u4ee5\u5229\u7528voc\u6570\u636e\u96c6\u683c\u5f0f\u7684\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\u3002", "created": "2020-04-26 12:20:32", "language": "Python", "type": "User", "username": "bubbliiiing", "stars": 687, "forks": 216, "subscribers": 4, "open_issues": 79, "topics": []}, {"id": 357891182, "repo_name": "mmgeneration", "full_name": "open-mmlab/mmgeneration", "description": "MMGeneration is a powerful toolkit for generative models, based on PyTorch and MMCV. ", "created": "2021-04-14 12:06:16", "language": "Python", "type": "Organization", "username": "open-mmlab", "stars": 686, "forks": 103, "subscribers": 22, "open_issues": 28, "topics": ["generative", "gan", "pytorch", "mmcv", "openmmlab"]}, {"id": 241833366, "repo_name": "centermask2", "full_name": "youngwanLEE/centermask2", "description": "CenterMask : Real-time Anchor-Free Instance Segmentation, in CVPR 2020", "created": "2020-02-20 08:39:46", "language": "Python", "type": "User", "username": "youngwanLEE", "stars": 685, "forks": 155, "subscribers": 17, "open_issues": 30, "topics": ["centermask", "detectron2", "object-detection", "instance-segmentation", "anchor-free", "vovnet", "vovnetv2", "real-time", "pytorch", "cvpr2020"]}, {"id": 173100082, "repo_name": "DeepLabV3Plus-Pytorch", "full_name": "VainF/DeepLabV3Plus-Pytorch", "description": "DeepLabv3 and DeepLabv3+ with pretrained weights for Pascal VOC & Cityscapes", "created": "2019-02-28 11:29:20", "language": "Python", "type": "User", "username": "VainF", "stars": 683, "forks": 197, "subscribers": 9, "open_issues": 39, "topics": ["deeplabv3plus", "deeplabv3", "pytorch", "pascal-voc", "cityscapes", "segmentation"]}, {"id": 188495333, "repo_name": "pytorch_memlab", "full_name": "Stonesjtu/pytorch_memlab", "description": "Profiling and inspecting memory in pytorch", "created": "2019-05-24 22:39:13", "language": "Python", "type": "User", "username": "Stonesjtu", "stars": 683, "forks": 23, "subscribers": 10, "open_issues": 6, "topics": ["pytorch", "cuda-memory", "memory-profiler"]}, {"id": 212140860, "repo_name": "ttach", "full_name": "qubvel/ttach", "description": "Image Test Time Augmentation with PyTorch!", "created": "2019-10-01 16:08:55", "language": "Python", "type": "User", "username": "qubvel", "stars": 683, "forks": 47, "subscribers": 8, "open_issues": 11, "topics": ["augmentation", "deep-learning", "test-time-augmentation", "tta", "tta-wrapper", "pytorch", "computer-vision", "classification", "segmentation", "keypoint-detection"]}, {"id": 131726145, "repo_name": "ganomaly", "full_name": "samet-akcay/ganomaly", "description": "GANomaly: Semi-Supervised Anomaly Detection via Adversarial Training", "created": "2018-05-01 14:58:55", "language": "Python", "type": "User", "username": "samet-akcay", "stars": 682, "forks": 198, "subscribers": 25, "open_issues": 40, "topics": ["anomaly-detection", "gan", "semi-supervised-learning", "pytorch"]}, {"id": 172835975, "repo_name": "Enzyme", "full_name": "EnzymeAD/Enzyme", "description": "High-performance automatic differentiation of LLVM.", "created": "2019-02-27 03:27:23", "language": "LLVM", "type": "Organization", "username": "EnzymeAD", "stars": 681, "forks": 45, "subscribers": 31, "open_issues": 48, "topics": ["enzyme", "llvm", "ad", "automatic-differentiation", "c", "cpp", "tensorflow", "pytorch", "machine-learning", "gradient", "derivative", "high-performance", "rust", "clang", "deep-learning", "scientific-computing", "simulation", "differentiable-programming", "compiler", "llvm-enzyme"]}, {"id": 389495808, "repo_name": "tensorRT_Pro", "full_name": "shouxieai/tensorRT_Pro", "description": "C++ library based on tensorrt integration", "created": "2021-07-26 03:20:10", "language": "C++", "type": "User", "username": "shouxieai", "stars": 680, "forks": 168, "subscribers": 11, "open_issues": 11, "topics": ["pytorch", "tensorrt", "object-detection", "deep-learning", "yolov5", "yolox"]}, {"id": 122027056, "repo_name": "pytorch-cnn-finetune", "full_name": "creafz/pytorch-cnn-finetune", "description": "Fine-tune pretrained Convolutional Neural Networks with PyTorch", "created": "2018-02-19 06:36:45", "language": "Python", "type": "User", "username": "creafz", "stars": 679, "forks": 115, "subscribers": 19, "open_issues": 4, "topics": ["pytorch", "deep-learning", "convolutional-neural-networks", "pretrained-models"]}, {"id": 189590197, "repo_name": "FastSpeech", "full_name": "xcmyz/FastSpeech", "description": "The Implementation of FastSpeech based on pytorch.", "created": "2019-05-31 12:27:47", "language": "Python", "type": "User", "username": "xcmyz", "stars": 679, "forks": 182, "subscribers": 33, "open_issues": 11, "topics": ["speech-synthesis", "deep-learning", "pytorch"]}, {"id": 213285753, "repo_name": "Efficient-Segmentation-Networks", "full_name": "xiaoyufenfei/Efficient-Segmentation-Networks", "description": "Lightweight models for real-time semantic segmentationon PyTorch (include SQNet, LinkNet, SegNet, UNet, ENet, ERFNet, EDANet, ESPNet, ESPNetv2, LEDNet, ESNet, FSSNet, CGNet, DABNet, Fast-SCNN, ContextNet, FPENet, etc.)", "created": "2019-10-07 03:16:07", "language": "Python", "type": "User", "username": "xiaoyufenfei", "stars": 679, "forks": 133, "subscribers": 18, "open_issues": 17, "topics": ["pytorch", "real-time-semantic-segmentation", "camvid", "cityscapes", "computer-vision", "scene-understanding", "segmentation", "efficient-segmentation-networks", "semantic-segmentation-models", "image-segmentation", "neural-networks", "lightweight-semantic-segmentation", "driving-scene-understanding", "semantic-segmentation"]}, {"id": 332609215, "repo_name": "fastmoe", "full_name": "laekov/fastmoe", "description": "A fast MoE impl for PyTorch", "created": "2021-01-25 02:32:20", "language": "Python", "type": "User", "username": "laekov", "stars": 677, "forks": 82, "subscribers": 16, "open_issues": 5, "topics": []}, {"id": 179587286, "repo_name": "Machine_Learning_Tutorials", "full_name": "maelfabien/Machine_Learning_Tutorials", "description": "Code, exercises and tutorials of my personal blog ! \ud83d\udcdd", "created": "2019-04-04 22:39:44", "language": "Jupyter Notebook", "type": "User", "username": "maelfabien", "stars": 677, "forks": 245, "subscribers": 26, "open_issues": 1, "topics": ["tutorials", "example", "machine-learning", "deep-learning", "statistics", "python", "keras", "tensorflow", "pytorch", "dataviz", "explainable-ai", "ai"]}, {"id": 115953728, "repo_name": "super-resolution", "full_name": "soapisnotfat/super-resolution", "description": "collection of super-resolution models & algorithms", "created": "2018-01-01 22:50:22", "language": "Python", "type": "User", "username": "soapisnotfat", "stars": 674, "forks": 176, "subscribers": 13, "open_issues": 12, "topics": ["resolution-models", "pytorch", "srcnn", "srgan", "fsrcnn", "sup-pixel-cnn"]}, {"id": 109098136, "repo_name": "mobile-semantic-segmentation", "full_name": "akirasosa/mobile-semantic-segmentation", "description": "Real-Time Semantic Segmentation in Mobile device", "created": "2017-11-01 06:59:39", "language": "Python", "type": "User", "username": "akirasosa", "stars": 674, "forks": 134, "subscribers": 37, "open_issues": 14, "topics": ["coreml", "lfw", "semantic-segmentation", "deep-learning", "tensorflow", "python", "android", "ios", "mobilenets", "u-net", "pytorch"]}, {"id": 241830209, "repo_name": "Scene-Graph-Benchmark.pytorch", "full_name": "KaihuaTang/Scene-Graph-Benchmark.pytorch", "description": "A new codebase for popular Scene Graph Generation methods (2020). Visualization & Scene Graph Extraction on custom images/datasets are provided. It's also a PyTorch implementation of paper \u201cUnbiased Scene Graph Generation from Biased Training CVPR 2020\u201d", "created": "2020-02-20 08:23:54", "language": "Jupyter Notebook", "type": "User", "username": "KaihuaTang", "stars": 673, "forks": 162, "subscribers": 11, "open_issues": 90, "topics": []}, {"id": 185657873, "repo_name": "pytorch-mobilenet-v3", "full_name": "kuan-wang/pytorch-mobilenet-v3", "description": "MobileNetV3 in pytorch and ImageNet pretrained models", "created": "2019-05-08 18:16:57", "language": "Python", "type": "User", "username": "kuan-wang", "stars": 672, "forks": 184, "subscribers": 13, "open_issues": 9, "topics": ["pytorch", "imagenet", "mobilenet", "classification", "mobilenetv3", "mobilenetv2"]}, {"id": 370646033, "repo_name": "bagua", "full_name": "BaguaSys/bagua", "description": "Bagua Speeds up PyTorch", "created": "2021-05-25 10:01:01", "language": "Python", "type": "Organization", "username": "BaguaSys", "stars": 672, "forks": 61, "subscribers": 9, "open_issues": 38, "topics": ["distributed", "pytorch", "rust-lang", "deep-learning", "distributed-systems", "distributed-computing", "machine-learning", "bagua"]}, {"id": 206240250, "repo_name": "FreeAnchor", "full_name": "zhangxiaosong18/FreeAnchor", "description": "FreeAnchor: Learning to Match Anchors for Visual Object Detection (NeurIPS 2019)", "created": "2019-09-04 05:41:04", "language": "Python", "type": "User", "username": "zhangxiaosong18", "stars": 671, "forks": 115, "subscribers": 21, "open_issues": 15, "topics": ["freeanchor", "object-detection", "one-stage", "pytorch", "computer-vision", "neurips-2019"]}, {"id": 173236386, "repo_name": "KL-Loss", "full_name": "yihui-he/KL-Loss", "description": "Bounding Box Regression with Uncertainty for Accurate Object Detection (CVPR'19)", "created": "2019-03-01 04:47:09", "language": "Python", "type": "User", "username": "yihui-he", "stars": 671, "forks": 100, "subscribers": 21, "open_issues": 6, "topics": ["object-detection", "pytorch", "detection-algorithm", "detection-model", "detection", "detection-network"]}, {"id": 124947840, "repo_name": "Pytorch-Project-Template", "full_name": "moemen95/Pytorch-Project-Template", "description": "A scalable template for PyTorch projects, with examples in Image Segmentation, Object classification, GANs and Reinforcement Learning.", "created": "2018-03-12 20:32:09", "language": "Python", "type": "User", "username": "moemen95", "stars": 670, "forks": 165, "subscribers": 26, "open_issues": 1, "topics": ["pytorch", "pytorch-tutorial", "pytorch-template", "pytorch-project-template", "dcgan", "condense-net", "erfnet", "dqn", "deep-learning", "machine-learning", "scemantic", "semantic-segmentation-models"]}, {"id": 162687318, "repo_name": "Face_Pytorch", "full_name": "wujiyang/Face_Pytorch", "description": "face recognition algorithms  in pytorch framework, including arcface, cosface, sphereface and so on", "created": "2018-12-21 08:23:55", "language": "Python", "type": "User", "username": "wujiyang", "stars": 668, "forks": 148, "subscribers": 22, "open_issues": 51, "topics": ["face-recognition", "pytorch", "arcface", "cosface", "sphereface"]}, {"id": 91998524, "repo_name": "docker-pytorch", "full_name": "anibali/docker-pytorch", "description": "A Docker image for PyTorch", "created": "2017-05-22 01:11:02", "language": "Dockerfile", "type": "User", "username": "anibali", "stars": 667, "forks": 181, "subscribers": 17, "open_issues": 0, "topics": ["docker", "docker-image", "pytorch", "cuda"]}, {"id": 126876127, "repo_name": "pytorch-i3d", "full_name": "piergiaj/pytorch-i3d", "description": null, "created": "2018-03-26 18:59:04", "language": "Python", "type": "User", "username": "piergiaj", "stars": 667, "forks": 199, "subscribers": 11, "open_issues": 55, "topics": []}, {"id": 142345353, "repo_name": "neural-style-pt", "full_name": "ProGamerGov/neural-style-pt", "description": "PyTorch implementation of neural style transfer algorithm", "created": "2018-07-25 19:35:33", "language": "Python", "type": "User", "username": "ProGamerGov", "stars": 667, "forks": 145, "subscribers": 15, "open_issues": 21, "topics": ["neural-style", "pytorch", "style-transfer", "deep-learning", "neural-style-pt", "neural-style-transfer", "nst", "styletransfer", "pytorch-style-transfer", "deep-style"]}, {"id": 68528301, "repo_name": "RedisAI", "full_name": "RedisAI/RedisAI", "description": "A Redis module for serving tensors and executing deep learning graphs", "created": "2016-09-18 14:59:36", "language": "C", "type": "Organization", "username": "RedisAI", "stars": 666, "forks": 77, "subscribers": 26, "open_issues": 89, "topics": ["redisai", "pytorch", "tensorflow", "onnxruntime", "serving-tensors", "machine-learning"]}, {"id": 151910457, "repo_name": "light-weight-refinenet", "full_name": "DrSleep/light-weight-refinenet", "description": "Light-Weight RefineNet for Real-Time Semantic Segmentation", "created": "2018-10-07 05:52:08", "language": "Python", "type": "User", "username": "DrSleep", "stars": 665, "forks": 155, "subscribers": 31, "open_issues": 9, "topics": ["semantic-segmentation", "deep-learning", "light-weight", "refinenet", "pytorch"]}, {"id": 104969676, "repo_name": "sphereface_pytorch", "full_name": "clcarwin/sphereface_pytorch", "description": "A PyTorch Implementation of SphereFace.", "created": "2017-09-27 03:53:12", "language": "Python", "type": "User", "username": "clcarwin", "stars": 664, "forks": 174, "subscribers": 20, "open_issues": 33, "topics": []}, {"id": 196354409, "repo_name": "nlp-pytorch-zh", "full_name": "apachecn/nlp-pytorch-zh", "description": "\u300aNatural Language Processing with PyTorch\u300b\u4e2d\u6587\u7ffb\u8bd1", "created": "2019-07-11 08:37:46", "language": "JavaScript", "type": "Organization", "username": "apachecn", "stars": 664, "forks": 179, "subscribers": 19, "open_issues": 15, "topics": ["nlp", "python", "pytorch", "tutorial"]}, {"id": 223331337, "repo_name": "Deep-Learning-with-PyTorch-Chinese", "full_name": "ShusenTang/Deep-Learning-with-PyTorch-Chinese", "description": "\u672c\u4ed3\u5e93\u5c06PyTorch\u5b98\u65b9\u4e66\u7c4d\u300aDeep learning with PyTorch\u300b\uff08\u57fa\u672c\u6458\u5f55\u7248\uff09\u7ffb\u8bd1\u6210\u4e2d\u6587\u7248\u5e76\u7ed9\u51fa\u53ef\u8fd0\u884c\u7684\u76f8\u5173\u4ee3\u7801\u3002", "created": "2019-11-22 05:38:54", "language": "Jupyter Notebook", "type": "User", "username": "ShusenTang", "stars": 664, "forks": 185, "subscribers": 20, "open_issues": 6, "topics": ["pytorch-tutorial", "pytorch", "deep-learning-tutorial"]}, {"id": 243782399, "repo_name": "USRNet", "full_name": "cszn/USRNet", "description": "Deep Unfolding Network for Image Super-Resolution (CVPR, 2020) (PyTorch)", "created": "2020-02-28 14:34:53", "language": "Python", "type": "User", "username": "cszn", "stars": 664, "forks": 105, "subscribers": 37, "open_issues": 10, "topics": ["super-resolution", "deblurring", "end-to-end-learning", "degradation-model", "gaussian-kernel", "motion-kernel", "bicubic-kernels", "noise-levels", "blur-kernels", "scale-factors", "unfolding-algorithm", "generalizability", "sisr"]}, {"id": 310081524, "repo_name": "LibreASR", "full_name": "iceychris/LibreASR", "description": ":speech_balloon: An On-Premises, Streaming Speech Recognition System ", "created": "2020-11-04 18:10:36", "language": "Python", "type": "User", "username": "iceychris", "stars": 664, "forks": 29, "subscribers": 24, "open_issues": 6, "topics": ["asr", "speech-recognition", "pytorch", "fastai", "rnn-transducer", "deep-learning", "esp32-lyrat", "python"]}, {"id": 105130683, "repo_name": "semi-supervised-pytorch", "full_name": "wohlert/semi-supervised-pytorch", "description": "Implementations of various VAE-based semi-supervised and generative models in PyTorch", "created": "2017-09-28 09:41:18", "language": "Python", "type": "User", "username": "wohlert", "stars": 662, "forks": 112, "subscribers": 16, "open_issues": 5, "topics": ["semi-supervised-learning", "pytorch", "generative-models"]}, {"id": 131428996, "repo_name": "pytorch-maml-rl", "full_name": "tristandeleu/pytorch-maml-rl", "description": "Reinforcement Learning with Model-Agnostic Meta-Learning in Pytorch", "created": "2018-04-28 17:11:19", "language": "Python", "type": "User", "username": "tristandeleu", "stars": 659, "forks": 137, "subscribers": 15, "open_issues": 21, "topics": []}, {"id": 120658002, "repo_name": "FfDL", "full_name": "IBM/FfDL", "description": "Fabric for Deep Learning (FfDL, pronounced fiddle) is a Deep Learning Platform offering TensorFlow, Caffe, PyTorch etc. as a Service on Kubernetes", "created": "2018-02-07 19:00:14", "language": "Go", "type": "Organization", "username": "IBM", "stars": 659, "forks": 185, "subscribers": 80, "open_issues": 34, "topics": ["ai", "ml", "deep-learning", "kubernetes-cluster", "tensorflow", "caffe", "pytorch", "keras", "machine-learning", "deeplearning", "deep-neural-networks", "watson", "storage", "model", "artificial-intelligence", "ibm-research-ai", "python", "jupyter"]}, {"id": 262403047, "repo_name": "point2mesh", "full_name": "ranahanocka/point2mesh", "description": "Reconstruct Watertight Meshes from Point Clouds [SIGGRAPH 2020]", "created": "2020-05-08 18:48:29", "language": "Python", "type": "User", "username": "ranahanocka", "stars": 658, "forks": 85, "subscribers": 34, "open_issues": 13, "topics": ["3d-graphics", "deep-learning", "mesh-processing", "pointcloud", "pytorch", "reconstruction"]}, {"id": 205777020, "repo_name": "nnAudio", "full_name": "KinWaiCheuk/nnAudio", "description": "Audio processing by using pytorch 1D convolution network", "created": "2019-09-02 04:31:14", "language": "Python", "type": "User", "username": "KinWaiCheuk", "stars": 657, "forks": 63, "subscribers": 18, "open_issues": 12, "topics": ["spectrogram-conversion-toolbox", "pytorch", "audio-processing", "preprocessing", "stft", "melspectrogram", "spectrogram", "cqt-spectrogram", "neural-network", "1d-convolution"]}, {"id": 193165594, "repo_name": "Deep-Image-Matting-PyTorch", "full_name": "foamliu/Deep-Image-Matting-PyTorch", "description": "Deep Image Matting implementation in PyTorch", "created": "2019-06-21 22:11:23", "language": "Python", "type": "User", "username": "foamliu", "stars": 655, "forks": 161, "subscribers": 30, "open_issues": 3, "topics": []}, {"id": 369428935, "repo_name": "torchgeo", "full_name": "microsoft/torchgeo", "description": "TorchGeo: datasets, transforms, and models for geospatial data", "created": "2021-05-21 05:58:56", "language": "Python", "type": "Organization", "username": "microsoft", "stars": 655, "forks": 68, "subscribers": 29, "open_issues": 56, "topics": ["pytorch", "torchvision", "datasets", "models", "transforms", "remote-sensing", "deep-learning"]}, {"id": 158685166, "repo_name": "Speech-Transformer", "full_name": "kaituoxu/Speech-Transformer", "description": "A PyTorch implementation of Speech Transformer, an End-to-End ASR with Transformer network on Mandarin Chinese.", "created": "2018-11-22 10:53:01", "language": "Python", "type": "User", "username": "kaituoxu", "stars": 654, "forks": 189, "subscribers": 31, "open_issues": 5, "topics": ["asr", "transformer", "end-to-end", "attention", "self-attention", "attention-is-all-you-need", "pytorch"]}, {"id": 344362642, "repo_name": "anycost-gan", "full_name": "mit-han-lab/anycost-gan", "description": "[CVPR 2021] Anycost GANs for Interactive Image Synthesis and Editing", "created": "2021-03-04 05:39:06", "language": "Python", "type": "Organization", "username": "mit-han-lab", "stars": 653, "forks": 74, "subscribers": 21, "open_issues": 10, "topics": ["computer-vision", "deep-learning", "computer-graphics", "generative-adversarial-network", "gan", "image-generation", "image-manipulation", "image-editing", "gans", "pytorch", "stylegan2"]}, {"id": 91613727, "repo_name": "vqa.pytorch", "full_name": "Cadene/vqa.pytorch", "description": "Visual Question Answering in Pytorch", "created": "2017-05-17 19:41:04", "language": "Python", "type": "User", "username": "Cadene", "stars": 652, "forks": 174, "subscribers": 32, "open_issues": 20, "topics": ["vqa", "deep-learning", "resnet", "skipthoughts", "pytorch", "clevr", "coco", "torch", "vgenome"]}, {"id": 128312370, "repo_name": "robustness", "full_name": "hendrycks/robustness", "description": "Corruption and Perturbation Robustness (ICLR 2019)", "created": "2018-04-06 03:50:57", "language": "Python", "type": "User", "username": "hendrycks", "stars": 650, "forks": 106, "subscribers": 12, "open_issues": 3, "topics": ["imagenet", "robustness", "pytorch", "deep-learning", "convolutional-neural-networks", "computer-vision", "machine-learning", "domain-generalization", "ml-safety"]}, {"id": 294508228, "repo_name": "sense", "full_name": "quic/sense", "description": "Enhance your application with the ability to see and interact with humans using any RGB camera.", "created": "2020-09-10 19:50:40", "language": "Python", "type": "Organization", "username": "quic", "stars": 649, "forks": 90, "subscribers": 26, "open_issues": 15, "topics": ["pytorch", "neural-networks", "deep-learning", "computer-vision", "activity-recognition", "gesture-recognition", "fitness-app", "calorie-estimation", "video"]}, {"id": 169991845, "repo_name": "Bert-Multi-Label-Text-Classification", "full_name": "lonePatient/Bert-Multi-Label-Text-Classification", "description": "This repo contains a PyTorch implementation of a pretrained BERT model for multi-label text classification.", "created": "2019-02-10 15:19:42", "language": "Python", "type": "User", "username": "lonePatient", "stars": 648, "forks": 177, "subscribers": 20, "open_issues": 37, "topics": ["pytorch", "pytorch-implmention", "nlp", "multi-label-classification", "text-classification", "bert", "fine-tuning", "xlnet", "transformers", "albert"]}, {"id": 207012989, "repo_name": "SpeedTorch", "full_name": "Santosh-Gupta/SpeedTorch", "description": "Library for faster pinned CPU <-> GPU transfer in Pytorch ", "created": "2019-09-07 18:57:52", "language": "Python", "type": "User", "username": "Santosh-Gupta", "stars": 647, "forks": 39, "subscribers": 26, "open_issues": 5, "topics": ["cpu-pinned-tensors", "pytorch-variables", "gpu-transfer", "cuda-variables", "cupy", "data-transfer", "pytorch-tensors", "cuda-tensors", "embeddings-trained", "pytorch", "embeddings", "cuda", "sparse", "sparse-modeling", "machine-learning", "natural-language-processing", "nlp", "gpu", "cpu-gpu-transfer", "pinned-cpu-tensors"]}, {"id": 335918199, "repo_name": "MPRNet", "full_name": "swz30/MPRNet", "description": "Official repository for \"Multi-Stage Progressive Image Restoration\" (CVPR 2021). SOTA results for Image deblurring, deraining, and denoising.", "created": "2021-02-04 10:26:35", "language": "Python", "type": "User", "username": "swz30", "stars": 647, "forks": 119, "subscribers": 18, "open_issues": 11, "topics": ["image-deblurring", "image-denoising", "image-deraining", "low-level-vision", "computer-vision", "image-restoration", "multistage-network", "progressive-restoration", "pytorch", "cvpr2021", "cvpr21", "cvpr-2021"]}, {"id": 202509346, "repo_name": "former", "full_name": "pbloem/former", "description": "Simple transformer implementation from scratch in pytorch.", "created": "2019-08-15 09:04:24", "language": "Python", "type": "User", "username": "pbloem", "stars": 646, "forks": 110, "subscribers": 21, "open_issues": 3, "topics": ["machine-learning", "transformer", "pytorch"]}, {"id": 177140934, "repo_name": "flashtorch", "full_name": "MisaOgura/flashtorch", "description": "Visualization toolkit for neural networks in PyTorch! Demo -->", "created": "2019-03-22 13:00:57", "language": "HTML", "type": "User", "username": "MisaOgura", "stars": 646, "forks": 83, "subscribers": 18, "open_issues": 11, "topics": ["pytorch", "neural-networks", "cnn", "interpretability", "machine-learning", "deep-learning", "visualization", "explainability"]}, {"id": 279458588, "repo_name": "fire-smoke-detect-yolov4", "full_name": "gengyanlei/fire-smoke-detect-yolov4", "description": "fire-smoke-detect-yolov4-yolov5 and fire-smoke-detection-dataset \u706b\u707e\u68c0\u6d4b\uff0c\u70df\u96fe\u68c0\u6d4b", "created": "2020-07-14 02:14:28", "language": "Jupyter Notebook", "type": "User", "username": "gengyanlei", "stars": 645, "forks": 189, "subscribers": 11, "open_issues": 14, "topics": ["fire-detection", "smoke-detection", "fire-smoke-detection-dataset", "yolov4", "yolov5", "darknet", "pytorch"]}, {"id": 96199030, "repo_name": "LightCNN", "full_name": "AlfredXiangWu/LightCNN", "description": "A Light CNN for Deep Face Representation with Noisy Labels, TIFS 2018", "created": "2017-07-04 09:12:03", "language": "Python", "type": "User", "username": "AlfredXiangWu", "stars": 644, "forks": 159, "subscribers": 25, "open_issues": 0, "topics": ["pytorch", "face-recognition", "lightcnn"]}, {"id": 196042371, "repo_name": "APDrawingGAN", "full_name": "yiranran/APDrawingGAN", "description": "Code for APDrawingGAN: Generating Artistic Portrait Drawings from Face Photos with Hierarchical GANs (CVPR 2019 Oral)", "created": "2019-07-09 16:08:07", "language": "Python", "type": "User", "username": "yiranran", "stars": 644, "forks": 131, "subscribers": 20, "open_issues": 14, "topics": ["pytorch", "gan", "apdrawinggan", "computer-vision", "computer-graphics", "image-generation", "image-synthesis", "deep-learning", "face"]}, {"id": 115590068, "repo_name": "All-About-the-GAN", "full_name": "hollobit/All-About-the-GAN", "description": "All About the GANs(Generative Adversarial Networks) - Summarized lists for GAN", "created": "2017-12-28 05:54:01", "language": "Python", "type": "User", "username": "hollobit", "stars": 641, "forks": 157, "subscribers": 47, "open_issues": 0, "topics": ["gan", "adversarial-networks", "arxiv", "neural-network", "unsupervised-learning", "adversarial-nets", "image-synthesis", "deep-learning", "generative-adversarial-network", "medical-imaging", "tensorflow", "pytorch", "paper", "cgan", "ct-denoising", "segmentation", "medical-image-synthesis", "reconstruction", "detection", "classification"]}, {"id": 224771387, "repo_name": "DBNet.pytorch", "full_name": "WenmuZhou/DBNet.pytorch", "description": "A pytorch re-implementation of Real-time Scene Text Detection with Differentiable Binarization", "created": "2019-11-29 03:38:37", "language": "Python", "type": "User", "username": "WenmuZhou", "stars": 640, "forks": 195, "subscribers": 19, "open_issues": 60, "topics": ["ocr", "python3", "pytorch", "text-detection"]}, {"id": 136622423, "repo_name": "Pytorch-Memory-Utils", "full_name": "Oldpan/Pytorch-Memory-Utils", "description": "pytorch memory track code", "created": "2018-06-08 13:27:20", "language": "Python", "type": "User", "username": "Oldpan", "stars": 640, "forks": 127, "subscribers": 14, "open_issues": 13, "topics": ["pytorch", "memory", "gpu"]}, {"id": 185968705, "repo_name": "torchgpipe", "full_name": "kakaobrain/torchgpipe", "description": "A GPipe implementation in PyTorch", "created": "2019-05-10 10:25:41", "language": "Python", "type": "Organization", "username": "kakaobrain", "stars": 640, "forks": 65, "subscribers": 29, "open_issues": 5, "topics": ["deep-learning", "pytorch", "gpipe", "model-parallelism", "pipeline-parallelism", "parallelism", "checkpointing"]}, {"id": 416171716, "repo_name": "TorchSSL", "full_name": "TorchSSL/TorchSSL", "description": "A PyTorch-based library for semi-supervised learning (NeurIPS'21)", "created": "2021-10-12 03:40:49", "language": "Python", "type": "Organization", "username": "TorchSSL", "stars": 640, "forks": 86, "subscribers": 12, "open_issues": 0, "topics": ["semi-supervised-learning", "toolkit", "codebase", "pytorch", "machine-learning", "computer-vision", "deep-learning", "self-supervised-learning"]}, {"id": 289947862, "repo_name": "SFA3D", "full_name": "maudzung/SFA3D", "description": "Super Fast and Accurate 3D Object Detection based on 3D LiDAR Point Clouds (The PyTorch implementation)", "created": "2020-08-24 14:16:33", "language": "Python", "type": "User", "username": "maudzung", "stars": 639, "forks": 196, "subscribers": 31, "open_issues": 29, "topics": ["3d-object-detection", "lidar-point-cloud", "bevmap", "center", "rtm3d", "real-time", "fast-detection", "kitti-dataset", "ros"]}, {"id": 140515088, "repo_name": "graph-rcnn.pytorch", "full_name": "jwyang/graph-rcnn.pytorch", "description": "Pytorch code for our ECCV 2018 paper \"Graph R-CNN for Scene Graph Generation\" and other papers", "created": "2018-07-11 03:11:10", "language": "Python", "type": "User", "username": "jwyang", "stars": 637, "forks": 151, "subscribers": 29, "open_issues": 44, "topics": []}, {"id": 223594022, "repo_name": "fastai2", "full_name": "fastai/fastai2", "description": "Temporary home for fastai v2 while it's being developed", "created": "2019-11-23 13:36:39", "language": "Jupyter Notebook", "type": "Organization", "username": "fastai", "stars": 637, "forks": 240, "subscribers": 42, "open_issues": 0, "topics": ["fastai", "data-science", "machine-learning", "deep-learning", "pytorch", "python", "jupyter", "nbdev"]}, {"id": 211853338, "repo_name": "albert_pytorch", "full_name": "lonePatient/albert_pytorch", "description": "A Lite Bert For Self-Supervised Learning Language Representations", "created": "2019-09-30 12:21:14", "language": "Python", "type": "User", "username": "lonePatient", "stars": 636, "forks": 144, "subscribers": 11, "open_issues": 28, "topics": ["albert", "bert", "pytorch", "ngram", "mask", "nlp", "language-model"]}, {"id": 102265654, "repo_name": "pytorch-best-practice", "full_name": "chenyuntc/pytorch-best-practice", "description": "A Guidance on PyTorch Coding Style Based on Kaggle Dogs vs. Cats ", "created": "2017-09-03 13:13:30", "language": "Python", "type": "User", "username": "chenyuntc", "stars": 636, "forks": 221, "subscribers": 17, "open_issues": 10, "topics": ["pytorch", "image-classification", "visdom"]}, {"id": 186056630, "repo_name": "Chinese-Chatbot-PyTorch-Implementation", "full_name": "Doragd/Chinese-Chatbot-PyTorch-Implementation", "description": ":four_leaf_clover: Another Chinese chatbot implemented in PyTorch,  which is the sub-module of intelligent work order processing robot. \ud83d\udc69\u200d\ud83d\udd27", "created": "2019-05-10 21:29:45", "language": "Python", "type": "User", "username": "Doragd", "stars": 636, "forks": 157, "subscribers": 12, "open_issues": 0, "topics": ["deep-learning", "chatbot", "pytorch", "pytorch-nlp", "chinese-nlp"]}, {"id": 305492699, "repo_name": "pytorch-original-transformer", "full_name": "gordicaleksa/pytorch-original-transformer", "description": "My implementation of the original transformer model (Vaswani et al.). I've additionally included the playground.py file for visualizing otherwise seemingly hard concepts. Currently included IWSLT pretrained models.", "created": "2020-10-19 19:30:45", "language": "Jupyter Notebook", "type": "User", "username": "gordicaleksa", "stars": 635, "forks": 103, "subscribers": 30, "open_issues": 6, "topics": ["transformer", "transformers", "pytorch-transformer", "pytorch-transformers", "attention", "attention-mechanism", "attention-is-all-you-need", "pytorch", "python", "jupyter", "transformer-tutorial", "deeplearning", "deep-learning", "original-transformer"]}, {"id": 231215857, "repo_name": "OpenSeeFace", "full_name": "emilianavt/OpenSeeFace", "description": "Robust realtime face and facial landmark tracking on CPU with Unity integration", "created": "2020-01-01 12:49:35", "language": "Python", "type": "User", "username": "emilianavt", "stars": 633, "forks": 80, "subscribers": 22, "open_issues": 5, "topics": ["face-tracking", "face-landmarks", "depth-estimation", "unity", "unity3d", "python", "csharp", "udp", "onnx", "onnxruntime", "virtual-youtuber", "vtuber", "mobilenetv3", "pytorch", "openseeface", "face-detection", "detection-model", "landmark-model", "tracker", "cpu"]}, {"id": 179983520, "repo_name": "CIFAR-ZOO", "full_name": "BIGBALLON/CIFAR-ZOO", "description": "PyTorch implementation of CNNs for CIFAR benchmark", "created": "2019-04-07 15:13:57", "language": "Python", "type": "User", "username": "BIGBALLON", "stars": 631, "forks": 175, "subscribers": 18, "open_issues": 0, "topics": ["pytorch", "cifar", "resnet", "resnext", "densenet", "shake-shake", "mixup", "cutout", "learning-rate-decay", "senet"]}, {"id": 291160909, "repo_name": "tensor-sensor", "full_name": "parrt/tensor-sensor", "description": "The goal of this library is to generate more helpful exception messages for matrix algebra expressions for numpy, pytorch, jax, tensorflow, keras, fastai. ", "created": "2020-08-28 22:54:04", "language": "Jupyter Notebook", "type": "User", "username": "parrt", "stars": 631, "forks": 33, "subscribers": 12, "open_issues": 8, "topics": ["numpy", "pytorch", "matrix", "vector", "debugging", "tracing", "deep-learning", "python", "tensorflow", "jax"]}, {"id": 364623340, "repo_name": "mlp-mixer-pytorch", "full_name": "lucidrains/mlp-mixer-pytorch", "description": "An All-MLP solution for Vision, from Google AI", "created": "2021-05-05 15:29:05", "language": "Python", "type": "User", "username": "lucidrains", "stars": 630, "forks": 75, "subscribers": 10, "open_issues": 4, "topics": ["deep-learning", "vision"]}, {"id": 441467833, "repo_name": "mmdeploy", "full_name": "open-mmlab/mmdeploy", "description": "OpenMMLab Model Deployment Framework", "created": "2021-12-24 13:04:44", "language": "Python", "type": "Organization", "username": "open-mmlab", "stars": 630, "forks": 105, "subscribers": 24, "open_issues": 33, "topics": ["model-converter", "sdk", "deployment", "tensorrt", "ncnn", "pplnn", "openvino", "onnxruntime", "onnx", "mmdetection", "mmsegmentation", "computer-vision", "deep-learning", "pytorch"]}, {"id": 158843711, "repo_name": "Detection-PyTorch-Notebook", "full_name": "dongdonghy/Detection-PyTorch-Notebook", "description": "\u4ee3\u7801 -\u300a\u6df1\u5ea6\u5b66\u4e60\u4e4bPyTorch\u7269\u4f53\u68c0\u6d4b\u5b9e\u6218\u300b", "created": "2018-11-23 14:37:06", "language": "Python", "type": "User", "username": "dongdonghy", "stars": 629, "forks": 340, "subscribers": 23, "open_issues": 13, "topics": []}, {"id": 192405566, "repo_name": "ClusterGCN", "full_name": "benedekrozemberczki/ClusterGCN", "description": "A PyTorch implementation of \"Cluster-GCN: An Efficient Algorithm for Training Deep and Large Graph Convolutional Networks\" (KDD 2019).", "created": "2019-06-17 19:22:40", "language": "Python", "type": "User", "username": "benedekrozemberczki", "stars": 627, "forks": 119, "subscribers": 19, "open_issues": 3, "topics": ["gcn", "graph-convolution", "graph-neural-networks", "graph-convolutional-networks", "deepwalk", "node2vec", "pytorch", "graphsage", "graph2vec", "musae", "gemsec", "diff2vec", "community-detection", "clustering", "graph-clustering", "node-classification", "neural-network", "deep-learning", "metis", "louvain"]}, {"id": 223335609, "repo_name": "VL-BERT", "full_name": "jackroos/VL-BERT", "description": "Code for ICLR 2020 paper \"VL-BERT: Pre-training of Generic Visual-Linguistic Representations\".", "created": "2019-11-22 06:08:58", "language": "Jupyter Notebook", "type": "User", "username": "jackroos", "stars": 627, "forks": 102, "subscribers": 12, "open_issues": 18, "topics": ["pre-training", "representation-learning", "self-supervised-learning", "vision-and-language", "bert", "pytorch", "iclr2020", "vl-bert"]}, {"id": 178318753, "repo_name": "TextGAN-PyTorch", "full_name": "williamSYSU/TextGAN-PyTorch", "description": "TextGAN is a PyTorch framework for Generative Adversarial Networks (GANs) based text generation models.", "created": "2019-03-29 02:36:16", "language": "Python", "type": "User", "username": "williamSYSU", "stars": 624, "forks": 171, "subscribers": 16, "open_issues": 31, "topics": ["pytorch", "generative-adversarial-network", "text-generation", "framework", "seqgan", "gan", "nlp", "natural-language-processing", "deep-learning"]}, {"id": 327949189, "repo_name": "doctr", "full_name": "mindee/doctr", "description": "docTR (Document Text Recognition) - a seamless, high-performing & accessible library for OCR-related tasks powered by Deep Learning.", "created": "2021-01-08 16:05:12", "language": "Python", "type": "Organization", "username": "mindee", "stars": 624, "forks": 95, "subscribers": 15, "open_issues": 39, "topics": ["ocr", "deep-learning", "document-recognition", "tensorflow2", "text-detection-recognition", "text-detection", "text-recognition", "optical-character-recognition", "pytorch"]}, {"id": 150605839, "repo_name": "PPO-PyTorch", "full_name": "nikhilbarhate99/PPO-PyTorch", "description": "Minimal implementation of clipped objective Proximal Policy Optimization (PPO) in PyTorch", "created": "2018-09-27 15:07:12", "language": "Python", "type": "User", "username": "nikhilbarhate99", "stars": 623, "forks": 193, "subscribers": 6, "open_issues": 2, "topics": ["pytorch-implmention", "pytorch", "pytorch-tutorial", "proximal-policy-optimization", "reinforcement-learning-algorithms", "deep-reinforcement-learning", "ppo", "policy-gradient", "ppo-pytorch", "deep-learning", "reinforcement-learning"]}, {"id": 224102642, "repo_name": "tfrecord", "full_name": "vahidk/tfrecord", "description": "TFRecord reader for PyTorch", "created": "2019-11-26 04:31:11", "language": "Python", "type": "User", "username": "vahidk", "stars": 623, "forks": 87, "subscribers": 11, "open_issues": 6, "topics": ["tfrecord", "pytorch", "tensorflow", "dataset", "loader"]}, {"id": 167619488, "repo_name": "rl-book", "full_name": "ZhiqingXiao/rl-book", "description": "Source codes for the book \"Reinforcement Learning: Theory and Python Implementation\"", "created": "2019-01-25 21:58:17", "language": "Jupyter Notebook", "type": "User", "username": "ZhiqingXiao", "stars": 623, "forks": 260, "subscribers": 23, "open_issues": 1, "topics": ["reinforcement-learning", "gym", "openai-gym", "tensorflow", "tensorflow2", "python", "pytorch", "deep-reinforcement-learning"]}, {"id": 237805550, "repo_name": "Self-Driving-Car-in-Video-Games", "full_name": "ikergarcia1996/Self-Driving-Car-in-Video-Games", "description": "A deep neural network that learns to drive in video games", "created": "2020-02-02 17:08:26", "language": "Python", "type": "User", "username": "ikergarcia1996", "stars": 623, "forks": 92, "subscribers": 27, "open_issues": 0, "topics": ["python", "pytorch", "self-driving-car", "videogame", "videogame-bot", "neural-network", "deep-learning", "supervised-learning", "machine-learning", "autonomous-driving", "deep-neural-network", "video-games", "pretrained-models"]}, {"id": 359624909, "repo_name": "functorch", "full_name": "pytorch/functorch", "description": "functorch is JAX-like composable function transforms for PyTorch.", "created": "2021-04-19 23:24:04", "language": "C++", "type": "Organization", "username": "pytorch", "stars": 622, "forks": 43, "subscribers": 16, "open_issues": 161, "topics": ["pytorch", "hessians", "gradients"]}, {"id": 112837516, "repo_name": "seq2seq", "full_name": "keon/seq2seq", "description": "Minimal Seq2Seq model with Attention for Neural Machine Translation in PyTorch", "created": "2017-12-02 11:42:18", "language": "Python", "type": "User", "username": "keon", "stars": 622, "forks": 155, "subscribers": 14, "open_issues": 12, "topics": ["seq2seq", "deep-learning", "machine-translation"]}, {"id": 290094746, "repo_name": "MEAL-V2", "full_name": "szq0214/MEAL-V2", "description": "MEAL V2: Boosting Vanilla ResNet-50 to 80%+ Top-1 Accuracy on ImageNet without Tricks", "created": "2020-08-25 02:44:29", "language": "Python", "type": "User", "username": "szq0214", "stars": 622, "forks": 61, "subscribers": 15, "open_issues": 2, "topics": ["distillation", "imagenet", "compression-algorithm", "mobilenetv3", "efficientnet", "pre-trained", "resnet50", "imagenet-dataset", "meal", "model-architecture", "pytorch", "distillation-model"]}, {"id": 94369653, "repo_name": "ctcdecode", "full_name": "parlance/ctcdecode", "description": "PyTorch CTC Decoder bindings", "created": "2017-06-14 20:17:41", "language": "C++", "type": "Organization", "username": "parlance", "stars": 621, "forks": 205, "subscribers": 19, "open_issues": 70, "topics": ["machine-learning", "pytorch", "ctc", "ctc-loss", "beam-search", "decoder"]}, {"id": 316507602, "repo_name": "SimSiam", "full_name": "PatrickHua/SimSiam", "description": "A pytorch implementation for paper 'Exploring Simple Siamese Representation Learning'", "created": "2020-11-27 13:23:22", "language": "Python", "type": "User", "username": "PatrickHua", "stars": 621, "forks": 117, "subscribers": 6, "open_issues": 19, "topics": []}, {"id": 156942199, "repo_name": "euclidesdb", "full_name": "perone/euclidesdb", "description": "A multi-model machine learning feature embedding database", "created": "2018-11-10 03:03:51", "language": "C++", "type": "User", "username": "perone", "stars": 621, "forks": 33, "subscribers": 33, "open_issues": 14, "topics": ["deep-learning", "database", "search", "cpp", "pytorch", "machine-learning"]}, {"id": 205436943, "repo_name": "torchbeast", "full_name": "facebookresearch/torchbeast", "description": "A PyTorch Platform for Distributed RL", "created": "2019-08-30 18:30:09", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 620, "forks": 96, "subscribers": 19, "open_issues": 11, "topics": []}, {"id": 127416920, "repo_name": "federated-learning", "full_name": "shaoxiongji/federated-learning", "description": "A PyTorch Implementation of Federated Learning http://doi.org/10.5281/zenodo.4321561", "created": "2018-03-30 10:44:46", "language": "Python", "type": "User", "username": "shaoxiongji", "stars": 620, "forks": 214, "subscribers": 13, "open_issues": 9, "topics": ["federated-learning", "deep-learning", "pytorch"]}, {"id": 315270108, "repo_name": "silero-vad", "full_name": "snakers4/silero-vad", "description": "Silero VAD: pre-trained enterprise-grade Voice Activity Detector, Language Classifier and Spoken Number Detector", "created": "2020-11-23 09:54:16", "language": "Python", "type": "User", "username": "snakers4", "stars": 619, "forks": 66, "subscribers": 18, "open_issues": 4, "topics": ["voice-detection", "voice-recognition", "voice-commands", "language-classifier", "pytorch", "onnx", "voice-activity-detection", "voice-control"]}, {"id": 132115652, "repo_name": "lemniscate.pytorch", "full_name": "zhirongw/lemniscate.pytorch", "description": "Unsupervised Feature Learning via Non-parametric Instance Discrimination", "created": "2018-05-04 08:59:24", "language": "Python", "type": "User", "username": "zhirongw", "stars": 618, "forks": 120, "subscribers": 14, "open_issues": 17, "topics": ["computer-vision", "deep-learning", "unsupervised-learning", "imagenet", "pytorch", "nce", "cvpr2018", "representation-learning", "self-supervised-learning"]}, {"id": 109214143, "repo_name": "pytorch-capsule", "full_name": "timomernick/pytorch-capsule", "description": "Pytorch implementation of Hinton's Dynamic Routing Between Capsules", "created": "2017-11-02 03:37:23", "language": "Python", "type": "User", "username": "timomernick", "stars": 618, "forks": 107, "subscribers": 25, "open_issues": 7, "topics": []}, {"id": 272313807, "repo_name": "YOLO-v5", "full_name": "DataXujing/YOLO-v5", "description": ":art: Pytorch YOLO v5 \u8bad\u7ec3\u81ea\u5df1\u7684\u6570\u636e\u96c6\u8d85\u8be6\u7ec6\u6559\u7a0b\uff01\uff01\uff01 :art: (\u63d0\u4f9bPDF\u8bad\u7ec3\u6559\u7a0b\u4e0b\u8f7d\uff09", "created": "2020-06-15 01:21:55", "language": "Jupyter Notebook", "type": "User", "username": "DataXujing", "stars": 618, "forks": 161, "subscribers": 12, "open_issues": 34, "topics": ["pytorch", "yolov5", "object-detection"]}, {"id": 124918816, "repo_name": "torchbearer", "full_name": "pytorchbearer/torchbearer", "description": "torchbearer: A model fitting library for PyTorch", "created": "2018-03-12 16:30:42", "language": "Python", "type": "Organization", "username": "pytorchbearer", "stars": 616, "forks": 68, "subscribers": 29, "open_issues": 8, "topics": ["pytorch", "deep-learning", "differentiable-programming", "machine-learning", "python3", "model-fitting"]}, {"id": 261059191, "repo_name": "icevision", "full_name": "airctic/icevision", "description": "An Agnostic Computer Vision Framework - Pluggable to any Training Library: Fastai, Pytorch-Lightning with more to come", "created": "2020-05-04 01:57:02", "language": "Python", "type": "Organization", "username": "airctic", "stars": 616, "forks": 93, "subscribers": 20, "open_issues": 45, "topics": ["object-detection", "deep-learning", "pytorch", "pytorch-lightning", "python", "fastai", "ai", "computer-vision", "effecientdet", "faster-rcnn", "mask-rcnn", "annotation-parsers", "tutorials", "coco-parser", "voc-parser", "pycocotools", "coco-dataset", "voc-dataset"]}, {"id": 215025056, "repo_name": "VTuber_Unity", "full_name": "kwea123/VTuber_Unity", "description": "Use Unity 3D character and Python deep learning algorithms to stream as a VTuber!", "created": "2019-10-14 11:23:56", "language": "Python", "type": "User", "username": "kwea123", "stars": 616, "forks": 89, "subscribers": 12, "open_issues": 13, "topics": ["unity", "python", "face-detection", "face-landmark-detection", "face-pose", "vtuber", "gaze-estimation", "pytorch", "dlib", "unity-chan", "vrm"]}, {"id": 113403430, "repo_name": "AlignedReID-Re-Production-Pytorch", "full_name": "huanghoujing/AlignedReID-Re-Production-Pytorch", "description": "Reproduce AlignedReID: Surpassing Human-Level Performance in Person Re-Identification, using Pytorch.", "created": "2017-12-07 04:38:13", "language": "Python", "type": "User", "username": "huanghoujing", "stars": 615, "forks": 190, "subscribers": 44, "open_issues": 34, "topics": []}, {"id": 210014892, "repo_name": "DeepRobust", "full_name": "DSE-MSU/DeepRobust", "description": "A pytorch adversarial library for attack and defense methods on images and graphs", "created": "2019-09-21 16:09:07", "language": "Python", "type": "User", "username": "DSE-MSU", "stars": 615, "forks": 125, "subscribers": 14, "open_issues": 12, "topics": ["adversarial-attacks", "adversarial-examples", "deep-neural-networks", "defense", "graph-neural-networks", "machine-learning", "deep-learning", "graph-convolutional-networks", "graph-mining"]}, {"id": 121275114, "repo_name": "NRI", "full_name": "ethanfetaya/NRI", "description": "Neural relational inference for interacting systems - pytorch", "created": "2018-02-12 16:59:19", "language": "Python", "type": "User", "username": "ethanfetaya", "stars": 613, "forks": 136, "subscribers": 24, "open_issues": 20, "topics": []}, {"id": 218382079, "repo_name": "nboost", "full_name": "koursaros-ai/nboost", "description": "NBoost is a scalable, search-api-boosting platform for deploying transformer models to improve the relevance of search results on different platforms (i.e. Elasticsearch)", "created": "2019-10-29 20:56:24", "language": "Python", "type": "Organization", "username": "koursaros-ai", "stars": 613, "forks": 68, "subscribers": 19, "open_issues": 30, "topics": ["elasticsearch", "tensorflow", "pytorch", "python", "machine-learning", "deep-learning", "microservices", "proxy", "nboost", "nlp", "search-engine", "kubernetes", "helm", "cloud", "docker", "semantic-search", "search-api"]}, {"id": 138813086, "repo_name": "pytorch-unet", "full_name": "usuyama/pytorch-unet", "description": "Simple PyTorch implementations of U-Net/FullyConvNet (FCN) for image segmentation", "created": "2018-06-27 01:24:14", "language": "Jupyter Notebook", "type": "User", "username": "usuyama", "stars": 612, "forks": 197, "subscribers": 8, "open_issues": 6, "topics": ["image-segmentation", "unet", "fully-convolutional-networks", "semantic-segmentation"]}, {"id": 139102670, "repo_name": "sgan", "full_name": "agrimgupta92/sgan", "description": "Code for \"Social GAN: Socially Acceptable Trajectories with Generative Adversarial Networks\", Gupta et al, CVPR 2018", "created": "2018-06-29 04:58:03", "language": "Python", "type": "User", "username": "agrimgupta92", "stars": 612, "forks": 229, "subscribers": 19, "open_issues": 50, "topics": ["pytorch", "deep-learning", "generative-adversarial-network", "trajectory-prediction", "human-trajectory-prediction", "social-navigation"]}, {"id": 103635160, "repo_name": "Random-Erasing", "full_name": "zhunzhong07/Random-Erasing", "description": "Random Erasing Data Augmentation. Experiments on CIFAR10, CIFAR100 and Fashion-MNIST", "created": "2017-09-15 08:45:42", "language": "Python", "type": "User", "username": "zhunzhong07", "stars": 612, "forks": 136, "subscribers": 14, "open_issues": 10, "topics": ["data-augmentation", "image-classification", "object-detection", "person-re-identification", "pytorch", "aaai2020"]}, {"id": 93684694, "repo_name": "speech", "full_name": "awni/speech", "description": "A PyTorch Implementation of End-to-End Models for Speech-to-Text", "created": "2017-06-07 22:23:03", "language": "Python", "type": "User", "username": "awni", "stars": 611, "forks": 163, "subscribers": 31, "open_issues": 20, "topics": []}, {"id": 108329371, "repo_name": "hls4ml", "full_name": "fastmachinelearning/hls4ml", "description": "Machine learning on FPGAs using HLS", "created": "2017-10-25 21:43:56", "language": "C++", "type": "Organization", "username": "fastmachinelearning", "stars": 611, "forks": 225, "subscribers": 56, "open_issues": 137, "topics": ["hls", "machine-learning", "fpga", "python", "keras", "pytorch", "onnx", "vivado", "vivado-hls"]}, {"id": 86917247, "repo_name": "Paper-Implementations", "full_name": "sunshineatnoon/Paper-Implementations", "description": "Use PyTorch to implement some classic frameworks", "created": "2017-04-01 14:02:32", "language": "Python", "type": "User", "username": "sunshineatnoon", "stars": 610, "forks": 198, "subscribers": 24, "open_issues": 6, "topics": ["pytorch", "computer-vision", "deep-learning"]}, {"id": 247768523, "repo_name": "pytorch-ts", "full_name": "zalandoresearch/pytorch-ts", "description": "PyTorch based Probabilistic Time Series forecasting framework based on GluonTS backend", "created": "2020-03-16 16:47:08", "language": "Python", "type": "Organization", "username": "zalandoresearch", "stars": 609, "forks": 107, "subscribers": 20, "open_issues": 33, "topics": ["pytorch", "time-series", "probabilistic", "deepar", "lstnet", "n-beats"]}, {"id": 149956769, "repo_name": "deeplabv3", "full_name": "fregu856/deeplabv3", "description": "PyTorch implementation of DeepLabV3, trained on the Cityscapes dataset.", "created": "2018-09-23 07:17:02", "language": "Python", "type": "User", "username": "fregu856", "stars": 608, "forks": 164, "subscribers": 16, "open_issues": 9, "topics": ["pytorch", "autonomous-driving", "machine-learning", "deep-learning", "semantic-segmentation", "computer-vision"]}, {"id": 205512270, "repo_name": "Class-balanced-loss-pytorch", "full_name": "vandit15/Class-balanced-loss-pytorch", "description": "Pytorch implementation of the paper \"Class-Balanced Loss Based on Effective Number of Samples\"", "created": "2019-08-31 07:34:08", "language": "Python", "type": "User", "username": "vandit15", "stars": 607, "forks": 112, "subscribers": 10, "open_issues": 12, "topics": ["pytorch", "cvpr2019", "loss-functions", "deep-learning", "computer-vision"]}, {"id": 87502908, "repo_name": "sketch_simplification", "full_name": "bobbens/sketch_simplification", "description": "Models and code related to sketch simplification of rough sketches.", "created": "2017-04-07 04:02:53", "language": "Lua", "type": "User", "username": "bobbens", "stars": 607, "forks": 88, "subscribers": 29, "open_issues": 10, "topics": ["deep-learning", "torch", "pytorch", "sketch", "siggraph", "convolutional-neural-networks"]}, {"id": 253718080, "repo_name": "SiamTrackers", "full_name": "HonglinChu/SiamTrackers", "description": "(2020-2021)The PyTorch version  of SiamFC\uff0cSiamRPN\uff0cDaSiamRPN, UpdateNet , SiamDW, SiamRPN++, SiamMask, SiamFC++,  SiamCar,  SiamBAN, Ocean, LightTrack , TrTr;  Visual object tracking based on deep learning", "created": "2020-04-07 07:24:00", "language": "Python", "type": "User", "username": "HonglinChu", "stars": 606, "forks": 145, "subscribers": 13, "open_issues": 42, "topics": ["tracking", "deep-learning", "visual-tracking"]}, {"id": 112754935, "repo_name": "pytorch-spectral-normalization-gan", "full_name": "christiancosgrove/pytorch-spectral-normalization-gan", "description": "Paper by Miyato et al. https://openreview.net/forum?id=B1QRgziT-", "created": "2017-12-01 15:25:03", "language": "Python", "type": "User", "username": "christiancosgrove", "stars": 605, "forks": 100, "subscribers": 16, "open_issues": 10, "topics": []}, {"id": 217076467, "repo_name": "eagerpy", "full_name": "jonasrauber/eagerpy", "description": "PyTorch, TensorFlow, JAX and NumPy \u2014 all of them natively using the same code", "created": "2019-10-23 14:21:50", "language": "Python", "type": "User", "username": "jonasrauber", "stars": 605, "forks": 30, "subscribers": 21, "open_issues": 17, "topics": ["pytorch", "tensorflow", "tensorflow2", "eager-execution", "jax", "numpy", "python"]}, {"id": 111715635, "repo_name": "superpoint_graph", "full_name": "loicland/superpoint_graph", "description": "Large-scale Point Cloud Semantic Segmentation with Superpoint Graphs", "created": "2017-11-22 17:52:02", "language": "Python", "type": "User", "username": "loicland", "stars": 605, "forks": 192, "subscribers": 29, "open_issues": 45, "topics": ["point-cloud", "partition", "semantic-segmentation", "pytorch", "lidar", "large-scale", "clustering", "segmentation", "superpoint-graphs", "semantic", "ply-files"]}, {"id": 217049502, "repo_name": "fastHan", "full_name": "fastnlp/fastHan", "description": "fastHan\u662f\u57fa\u4e8efastNLP\u4e0epytorch\u5b9e\u73b0\u7684\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\uff0c\u50cfspacy\u4e00\u6837\u8c03\u7528\u65b9\u4fbf\u3002", "created": "2019-10-23 12:16:49", "language": "Python", "type": "Organization", "username": "fastnlp", "stars": 602, "forks": 73, "subscribers": 21, "open_issues": 21, "topics": ["fastnlp", "python", "pytorch", "parser", "cws", "pos", "ner", "joint-model", "bert"]}, {"id": 140494324, "repo_name": "brevitas", "full_name": "Xilinx/brevitas", "description": "Brevitas: quantization-aware training in PyTorch", "created": "2018-07-10 22:37:01", "language": "Python", "type": "Organization", "username": "Xilinx", "stars": 600, "forks": 123, "subscribers": 27, "open_issues": 81, "topics": ["quantization", "pytorch", "brevitas", "fpga", "neural-networks", "speech-recognition", "text-to-speech", "image-classification", "hardware-acceleration", "xilinx"]}, {"id": 377682331, "repo_name": "moco-v3", "full_name": "facebookresearch/moco-v3", "description": "PyTorch implementation of MoCo v3 https//arxiv.org/abs/2104.02057", "created": "2021-06-17 02:28:41", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 600, "forks": 61, "subscribers": 14, "open_issues": 2, "topics": []}, {"id": 351965006, "repo_name": "dive_into_deep_learning", "full_name": "Miraclelucy/dive_into_deep_learning", "description": "\u2714\ufe0f\u674e\u6c90 \u3010\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60\u3011\u8bfe\u7a0b\u5b66\u4e60\u7b14\u8bb0\uff1a\u4f7f\u7528pycharm\u7f16\u7a0b\uff0c\u57fa\u4e8epytorch\u6846\u67b6\u5b9e\u73b0\u3002", "created": "2021-03-27 02:38:59", "language": "Python", "type": "User", "username": "Miraclelucy", "stars": 600, "forks": 177, "subscribers": 7, "open_issues": 2, "topics": []}, {"id": 216305480, "repo_name": "SegmenTron", "full_name": "LikeLy-Journey/SegmenTron", "description": "Support PointRend, Fast_SCNN, HRNet, Deeplabv3_plus(xception, resnet, mobilenet), ContextNet, FPENet, DABNet, EdaNet, ENet, Espnetv2, RefineNet, UNet, DANet, HRNet, DFANet, HardNet, LedNet, OCNet, EncNet, DuNet, CGNet, CCNet, BiSeNet, PSPNet, ICNet, FCN, deeplab) ", "created": "2019-10-20 04:06:21", "language": "Python", "type": "User", "username": "LikeLy-Journey", "stars": 599, "forks": 148, "subscribers": 15, "open_issues": 40, "topics": ["deeplab-v3-plus", "deeplabv3plus", "xception", "fast-scnn", "pytorch", "ccnet", "hrnet", "cityscapes", "coco", "eval", "mobilenet", "pointrend"]}, {"id": 87747805, "repo_name": "pytorch-deeplab-resnet", "full_name": "isht7/pytorch-deeplab-resnet", "description": "DeepLab resnet v2 model in pytorch", "created": "2017-04-09 23:45:01", "language": "Python", "type": "User", "username": "isht7", "stars": 598, "forks": 123, "subscribers": 22, "open_issues": 16, "topics": ["deep-learning", "deeplab", "pytorch", "semantic-segmentation", "deeplab-resnet", "pascal-voc"]}, {"id": 135063444, "repo_name": "fast_abs_rl", "full_name": "ChenRocks/fast_abs_rl", "description": "Code for ACL 2018 paper: \"Fast Abstractive Summarization with Reinforce-Selected Sentence Rewriting. Chen and Bansal\"", "created": "2018-05-27 16:29:54", "language": "Python", "type": "User", "username": "ChenRocks", "stars": 598, "forks": 184, "subscribers": 21, "open_issues": 15, "topics": ["deep-learning", "natural-language-processing", "reinforcement-learning", "abstractive-summarization", "pytorch"]}, {"id": 186358163, "repo_name": "ERNIE-Pytorch", "full_name": "nghuyong/ERNIE-Pytorch", "description": "ERNIE Pytorch Version", "created": "2019-05-13 06:25:20", "language": "Python", "type": "User", "username": "nghuyong", "stars": 597, "forks": 93, "subscribers": 11, "open_issues": 8, "topics": []}, {"id": 156390410, "repo_name": "Lets_OCR", "full_name": "AstarLight/Lets_OCR", "description": "A repository for OCR, which inlcudes some classical OCR algorithms Pytorch implementation such as CTPN, EAST and CRNN.", "created": "2018-11-06 13:48:00", "language": "C++", "type": "User", "username": "AstarLight", "stars": 597, "forks": 322, "subscribers": 26, "open_issues": 60, "topics": []}, {"id": 181637976, "repo_name": "mmdetection-annotated", "full_name": "ming71/mmdetection-annotated", "description": "mmdetection\u6e90\u7801\u6ce8\u91ca", "created": "2019-04-16 07:30:25", "language": "Python", "type": "User", "username": "ming71", "stars": 596, "forks": 99, "subscribers": 15, "open_issues": 13, "topics": ["object-detection", "pytorch", "mmdetection", "instance-segmentation"]}, {"id": 127338735, "repo_name": "wdsr_ntire2018", "full_name": "JiahuiYu/wdsr_ntire2018", "description": "Code of our winning entry to NTIRE super-resolution challenge, CVPR 2018", "created": "2018-03-29 19:34:17", "language": "Python", "type": "User", "username": "JiahuiYu", "stars": 595, "forks": 125, "subscribers": 27, "open_issues": 1, "topics": ["wdsr", "super-resolution", "deep-neural-networks", "efficient-algorithm", "pytorch"]}, {"id": 137431513, "repo_name": "YOLOv3_PyTorch", "full_name": "BobLiu20/YOLOv3_PyTorch", "description": "Full implementation of YOLOv3 in PyTorch", "created": "2018-06-15 02:25:32", "language": "Python", "type": "User", "username": "BobLiu20", "stars": 594, "forks": 177, "subscribers": 20, "open_issues": 51, "topics": ["yolov3", "pytorch", "object-detection", "yolo"]}, {"id": 91914165, "repo_name": "pytorch-for-numpy-users", "full_name": "wkentaro/pytorch-for-numpy-users", "description": "PyTorch for Numpy users. https://pytorch-for-numpy-users.wkentaro.com", "created": "2017-05-20 20:18:43", "language": "HTML", "type": "User", "username": "wkentaro", "stars": 594, "forks": 81, "subscribers": 15, "open_issues": 1, "topics": ["pytorch", "numpy"]}, {"id": 195428791, "repo_name": "tfpyth", "full_name": "BlackHC/tfpyth", "description": "Putting TensorFlow back in PyTorch, back in TensorFlow (differentiable TensorFlow PyTorch adapters).", "created": "2019-07-05 15:08:50", "language": "Python", "type": "User", "username": "BlackHC", "stars": 594, "forks": 98, "subscribers": 25, "open_issues": 4, "topics": ["tensorflow", "pytorch", "machine-learning"]}, {"id": 124525866, "repo_name": "ResidualAttentionNetwork-pytorch", "full_name": "tengshaofeng/ResidualAttentionNetwork-pytorch", "description": "a pytorch code about Residual Attention Network.  This code is based on two  projects from", "created": "2018-03-09 10:29:02", "language": "Python", "type": "User", "username": "tengshaofeng", "stars": 593, "forks": 161, "subscribers": 10, "open_issues": 19, "topics": []}, {"id": 137520057, "repo_name": "CartoonGAN-Test-Pytorch-Torch", "full_name": "Yijunmaverick/CartoonGAN-Test-Pytorch-Torch", "description": "Pytorch and Torch testing code of CartoonGAN [Chen et al., CVPR18]", "created": "2018-06-15 18:27:38", "language": "Python", "type": "User", "username": "Yijunmaverick", "stars": 593, "forks": 184, "subscribers": 20, "open_issues": 16, "topics": []}, {"id": 94944551, "repo_name": "ATen", "full_name": "zdevito/ATen", "description": "ATen: A TENsor library for C++11", "created": "2017-06-20 23:50:41", "language": "C++", "type": "User", "username": "zdevito", "stars": 592, "forks": 113, "subscribers": 30, "open_issues": 65, "topics": ["tensor", "torch7", "pytorch"]}, {"id": 188705941, "repo_name": "pytorch_active_learning", "full_name": "rmunro/pytorch_active_learning", "description": "PyTorch Library for Active Learning to accompany Human-in-the-Loop Machine Learning book", "created": "2019-05-26 16:21:07", "language": "Python", "type": "User", "username": "rmunro", "stars": 590, "forks": 126, "subscribers": 25, "open_issues": 2, "topics": []}, {"id": 192192752, "repo_name": "EnlightenGAN", "full_name": "VITA-Group/EnlightenGAN", "description": "[IEEE TIP'2021] \"EnlightenGAN: Deep Light Enhancement without Paired Supervision\" by Yifan Jiang, Xinyu Gong, Ding Liu, Yu Cheng, Chen Fang, Xiaohui Shen, Jianchao Yang, Pan Zhou, Zhangyang Wang", "created": "2019-06-16 13:14:30", "language": "Python", "type": "Organization", "username": "VITA-Group", "stars": 588, "forks": 160, "subscribers": 18, "open_issues": 3, "topics": ["unsupervised-learning", "generative-adversarial-networks", "gan", "pytorch", "low-light-enhance", "low-light"]}, {"id": 289262638, "repo_name": "ROMP", "full_name": "Arthur151/ROMP", "description": "ROMP: Monocular, One-stage, Regression of Multiple 3D People, ICCV21", "created": "2020-08-21 12:18:59", "language": "Python", "type": "User", "username": "Arthur151", "stars": 585, "forks": 110, "subscribers": 32, "open_issues": 47, "topics": ["3d-mesh-recovery", "bottom-up", "multi-person-3d-mesh-recovery", "smpl", "multi-person", "pytorch", "pose-estimation"]}, {"id": 120153084, "repo_name": "alfred", "full_name": "jinfagang/alfred", "description": "alfred-py: A deep learning utility library for **human**, more detail about the usage of lib to: https://zhuanlan.zhihu.com/p/341446046", "created": "2018-02-04 03:57:14", "language": "Python", "type": "User", "username": "jinfagang", "stars": 585, "forks": 108, "subscribers": 18, "open_issues": 9, "topics": ["deeplearning", "video-combiner", "pytorch", "segmentation", "network", "3d-object-detection", "sensor-fusion", "alfred", "pycocotools", "alfred-py"]}, {"id": 261098554, "repo_name": "transformers-tutorials", "full_name": "abhimishra91/transformers-tutorials", "description": "Github repo with tutorials to fine tune transformers for diff NLP tasks", "created": "2020-05-04 06:37:14", "language": "Jupyter Notebook", "type": "User", "username": "abhimishra91", "stars": 585, "forks": 130, "subscribers": 10, "open_issues": 14, "topics": ["transformers", "nlp", "natural-language-processing", "deep-learning", "bert", "distilbert", "pytorch", "pytorch-tutorial", "classification", "named-entity-recognition", "t5", "wandb"]}, {"id": 183828644, "repo_name": "pytorch_advanced", "full_name": "YutaroOgawa/pytorch_advanced", "description": "\u66f8\u7c4d\u300c\u3064\u304f\u308a\u306a\u304c\u3089\u5b66\u3076! PyTorch\u306b\u3088\u308b\u767a\u5c55\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u300d\u306e\u5b9f\u88c5\u30b3\u30fc\u30c9\u3092\u914d\u7f6e\u3057\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u3059", "created": "2019-04-27 22:50:30", "language": "Jupyter Notebook", "type": "User", "username": "YutaroOgawa", "stars": 584, "forks": 256, "subscribers": 16, "open_issues": 156, "topics": []}, {"id": 195451555, "repo_name": "torchprof", "full_name": "awwong1/torchprof", "description": "PyTorch layer-by-layer model profiler", "created": "2019-07-05 18:21:30", "language": "Python", "type": "User", "username": "awwong1", "stars": 584, "forks": 41, "subscribers": 11, "open_issues": 0, "topics": []}, {"id": 122381314, "repo_name": "DeepNLP-Course", "full_name": "DanAnastasyev/DeepNLP-Course", "description": "Deep NLP Course", "created": "2018-02-21 19:15:38", "language": "Jupyter Notebook", "type": "User", "username": "DanAnastasyev", "stars": 584, "forks": 156, "subscribers": 24, "open_issues": 4, "topics": ["nlp", "deep-learning", "pytorch", "keras", "colab-notebook"]}, {"id": 84792081, "repo_name": "python-tutorial", "full_name": "shibing624/python-tutorial", "description": "Python\u5b9e\u7528\u6559\u7a0b\uff0c\u5305\u62ec\uff1aPython\u57fa\u7840\uff0cPython\u9ad8\u7ea7\u7279\u6027\uff0c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff0c\u591a\u7ebf\u7a0b\uff0c\u6570\u636e\u5e93\uff0c\u6570\u636e\u79d1\u5b66\uff0cFlask\uff0c\u722c\u866b\u5f00\u53d1\u6559\u7a0b\u3002", "created": "2017-03-13 06:35:18", "language": "Jupyter Notebook", "type": "User", "username": "shibing624", "stars": 582, "forks": 181, "subscribers": 16, "open_issues": 0, "topics": ["python", "python-tutorial", "numpy", "scipy", "pytorch", "scikit-learn", "pandas"]}, {"id": 225873074, "repo_name": "efficientdet", "full_name": "signatrix/efficientdet", "description": "(Pretrained weights provided) EfficientDet: Scalable and Efficient Object Detection implementation by Signatrix GmbH", "created": "2019-12-04 13:24:06", "language": "Python", "type": "Organization", "username": "signatrix", "stars": 582, "forks": 150, "subscribers": 32, "open_issues": 56, "topics": ["efficientdet", "object-detection", "pytorch", "deep-learning", "neural-network", "efficientnet", "coco-dataset"]}, {"id": 147308488, "repo_name": "wenzheng", "full_name": "chenghuige/wenzheng", "description": "ai challenger 2018\u7ec6\u7c92\u5ea6\u60c5\u611f\u5206\u7c7b\u7b2c\u4e00\u540d\u89e3\u51b3\u65b9\u6848, A training framework itegrating tensorflow and pytorch", "created": "2018-09-04 07:50:22", "language": "Jupyter Notebook", "type": "User", "username": "chenghuige", "stars": 582, "forks": 219, "subscribers": 20, "open_issues": 2, "topics": []}, {"id": 142701935, "repo_name": "pytorch_sparse", "full_name": "rusty1s/pytorch_sparse", "description": "PyTorch Extension Library of Optimized Autograd Sparse Matrix Operations", "created": "2018-07-28 18:46:53", "language": "Python", "type": "User", "username": "rusty1s", "stars": 581, "forks": 80, "subscribers": 10, "open_issues": 30, "topics": ["pytorch", "sparse", "sparse-matrices", "autograd"]}, {"id": 162770838, "repo_name": "C-3-Framework", "full_name": "gjy3035/C-3-Framework", "description": "An open-source PyTorch code for crowd counting", "created": "2018-12-22 01:02:21", "language": "Python", "type": "User", "username": "gjy3035", "stars": 581, "forks": 186, "subscribers": 23, "open_issues": 68, "topics": ["crowd-counting", "crowd-analysis", "computer-vision", "deep-learning"]}, {"id": 243806106, "repo_name": "blitz-bayesian-deep-learning", "full_name": "piEsposito/blitz-bayesian-deep-learning", "description": "A simple and extensible library to create Bayesian Neural Network layers on PyTorch.", "created": "2020-02-28 16:26:38", "language": "Python", "type": "User", "username": "piEsposito", "stars": 579, "forks": 77, "subscribers": 12, "open_issues": 23, "topics": ["pytorch", "pytorch-implementation", "pytorch-tutorial", "bayesian-layers", "bayesian-deep-learning", "bayesian-neural-networks"]}, {"id": 183037548, "repo_name": "Attention-Augmented-Conv2d", "full_name": "leaderj1001/Attention-Augmented-Conv2d", "description": "Implementing Attention Augmented Convolutional Networks using Pytorch", "created": "2019-04-23 14:53:21", "language": "Python", "type": "User", "username": "leaderj1001", "stars": 578, "forks": 102, "subscribers": 16, "open_issues": 18, "topics": ["attention-augmented-conv", "pytorch"]}, {"id": 163140695, "repo_name": "BMSG-GAN", "full_name": "akanimax/BMSG-GAN", "description": "[MSG-GAN] Any body can GAN! Highly stable and robust architecture. Requires little to no hyperparameter tuning. Pytorch Implementation", "created": "2018-12-26 05:41:09", "language": "Python", "type": "User", "username": "akanimax", "stars": 577, "forks": 101, "subscribers": 19, "open_issues": 23, "topics": ["gan", "msg-gan", "image-synthesis", "deep-learning", "computer-vision", "artificial-intelligence"]}, {"id": 328007342, "repo_name": "trankit", "full_name": "nlp-uoregon/trankit", "description": "Trankit is a Light-Weight Transformer-based Python Toolkit for Multilingual Natural Language Processing", "created": "2021-01-08 20:39:14", "language": "Python", "type": "User", "username": "nlp-uoregon", "stars": 577, "forks": 70, "subscribers": 22, "open_issues": 17, "topics": ["nlp", "natural-language-processing", "pytorch", "language-model", "xlm-roberta", "machine-learning", "deeplearning", "artificial-intelligence", "universal-dependencies", "multilingual", "adapters", "sentence-segmentation", "tokenization", "part-of-speech-tagging", "morphological-tagging", "dependency-parsing", "lemmatization"]}, {"id": 252658410, "repo_name": "fsgan", "full_name": "YuvalNirkin/fsgan", "description": " FSGAN - Official PyTorch Implementation", "created": "2020-04-03 07:12:09", "language": "Jupyter Notebook", "type": "User", "username": "YuvalNirkin", "stars": 576, "forks": 129, "subscribers": 28, "open_issues": 57, "topics": ["face", "swapping", "reenactment", "segmentation"]}, {"id": 78841620, "repo_name": "functional-zoo", "full_name": "szagoruyko/functional-zoo", "description": "PyTorch and Tensorflow functional model definitions", "created": "2017-01-13 10:57:07", "language": "Jupyter Notebook", "type": "User", "username": "szagoruyko", "stars": 576, "forks": 94, "subscribers": 24, "open_issues": 4, "topics": ["pytorch", "tensorflow", "pretrained-models"]}, {"id": 89270920, "repo_name": "NAS-Bench-201", "full_name": "D-X-Y/NAS-Bench-201", "description": "NAS-Bench-201 API and Instruction", "created": "2017-04-24 17:58:32", "language": "Python", "type": "User", "username": "D-X-Y", "stars": 576, "forks": 113, "subscribers": 18, "open_issues": 0, "topics": ["nas", "automl", "dataset", "pytorch", "nas-bench-201"]}, {"id": 211150874, "repo_name": "onepanel", "full_name": "onepanelio/onepanel", "description": "The open source, end-to-end computer vision platform. Label, build, train, tune, deploy and automate in a unified platform that runs on any cloud and on-premises.", "created": "2019-09-26 17:59:42", "language": "Go", "type": "Organization", "username": "onepanelio", "stars": 576, "forks": 52, "subscribers": 27, "open_issues": 91, "topics": ["deeplearning", "pipelines", "machinelearning", "jupyterlab", "tensorflow", "pytorch", "tensorboard", "computer-vision", "mlops", "workflows", "aiops", "annotation", "hyperparameter-tuning", "inference", "training", "labeling", "ai", "etl"]}, {"id": 225821098, "repo_name": "BBN", "full_name": "Megvii-Nanjing/BBN", "description": "The official PyTorch implementation of paper BBN: Bilateral-Branch Network with Cumulative Learning for Long-Tailed Visual Recognition", "created": "2019-12-04 08:50:37", "language": "Python", "type": "Organization", "username": "Megvii-Nanjing", "stars": 575, "forks": 86, "subscribers": 12, "open_issues": 19, "topics": []}, {"id": 179097519, "repo_name": "learn-to-cluster", "full_name": "yl-1993/learn-to-cluster", "description": "Learning to Cluster Faces (CVPR 2019, CVPR 2020)", "created": "2019-04-02 14:37:56", "language": "Python", "type": "User", "username": "yl-1993", "stars": 575, "forks": 135, "subscribers": 16, "open_issues": 34, "topics": ["face-clustering", "face-recognition", "pytorch", "gcn", "cvpr2019", "cvpr2020"]}, {"id": 352746057, "repo_name": "simsiam", "full_name": "facebookresearch/simsiam", "description": "PyTorch implementation of SimSiam https//arxiv.org/abs/2011.10566", "created": "2021-03-29 18:31:03", "language": "Python", "type": "Organization", "username": "facebookresearch", "stars": 574, "forks": 95, "subscribers": 12, "open_issues": 3, "topics": []}, {"id": 119862040, "repo_name": "ssds.pytorch", "full_name": "ShuangXieIrene/ssds.pytorch", "description": "Repository for Single Shot MultiBox Detector and its variants, implemented with pytorch, python3.", "created": "2018-02-01 16:27:31", "language": "Python", "type": "User", "username": "ShuangXieIrene", "stars": 572, "forks": 175, "subscribers": 23, "open_issues": 37, "topics": ["ssd", "rfb", "fssd", "pytorch", "mobilenet", "vgg", "yolo", "darknet"]}, {"id": 407194526, "repo_name": "cresset", "full_name": "cresset-template/cresset", "description": "Template repository to build PyTorch projects from source on any version of PyTorch/CUDA/cuDNN.", "created": "2021-09-16 14:22:59", "language": "Dockerfile", "type": "Organization", "username": "cresset-template", "stars": 572, "forks": 38, "subscribers": 7, "open_issues": 0, "topics": ["pytorch", "docker", "python", "deep-learning", "wheel", "source", "source-python", "deep-learning-tutorial", "build", "cuda", "docker-compose", "makefile", "template", "template-repository", "mlops", "machine-learning", "mlops-template"]}, {"id": 333624050, "repo_name": "bottleneck-transformer-pytorch", "full_name": "lucidrains/bottleneck-transformer-pytorch", "description": "Implementation of Bottleneck Transformer in Pytorch", "created": "2021-01-28 02:36:02", "language": "Python", "type": "User", "username": "lucidrains", "stars": 571, "forks": 68, "subscribers": 16, "open_issues": 6, "topics": ["artificial-intelligence", "deep-learning", "transformers", "attention-mechanism", "image-classification", "vision"]}, {"id": 256463281, "repo_name": "k2", "full_name": "k2-fsa/k2", "description": "FSA/FST algorithms, differentiable, with PyTorch compatibility.", "created": "2020-04-17 09:44:05", "language": "Cuda", "type": "Organization", "username": "k2-fsa", "stars": 571, "forks": 132, "subscribers": 75, "open_issues": 50, "topics": []}, {"id": 148169964, "repo_name": "notebooks", "full_name": "dataflowr/notebooks", "description": "code for deep learning courses", "created": "2018-09-10 14:40:17", "language": "Jupyter Notebook", "type": "Organization", "username": "dataflowr", "stars": 571, "forks": 206, "subscribers": 19, "open_issues": 0, "topics": ["deep-learning", "pytorch", "tutorials", "hacktob", "hacktoberfest"]}, {"id": 148780606, "repo_name": "deeplabv3plus-pytorch", "full_name": "YudeWang/deeplabv3plus-pytorch", "description": "Here is a pytorch implementation of deeplabv3+ supporting ResNet(79.155%) and Xception(79.945%). Multi-scale & flip test and COCO dataset interface has been finished.", "created": "2018-09-14 11:40:35", "language": "Python", "type": "User", "username": "YudeWang", "stars": 569, "forks": 108, "subscribers": 8, "open_issues": 9, "topics": []}, {"id": 123290257, "repo_name": "SMPL", "full_name": "CalciferZh/SMPL", "description": "NumPy, TensorFlow and PyTorch implementation of human body SMPL model and infant body SMIL model.", "created": "2018-02-28 13:40:45", "language": "Python", "type": "User", "username": "CalciferZh", "stars": 569, "forks": 117, "subscribers": 28, "open_issues": 0, "topics": ["graphics", "graphics-3d", "smpl", "pose", "body"]}, {"id": 277270178, "repo_name": "Msnhnet", "full_name": "msnh2012/Msnhnet", "description": "\ud83d\udd25 (yolov3 yolov4 yolov5 unet ...)A mini pytorch inference framework which inspired from darknet.", "created": "2020-07-05 09:31:24", "language": "C++", "type": "User", "username": "msnh2012", "stars": 569, "forks": 112, "subscribers": 21, "open_issues": 1, "topics": ["yolov3", "yolov4", "yolov5", "pytorch", "inference-engine", "darknet", "jetson-nx", "mobilenetv2", "mobilenetyolo"]}, {"id": 179720496, "repo_name": "d2-net", "full_name": "mihaidusmanu/d2-net", "description": "D2-Net: A Trainable CNN for Joint Description and Detection of Local Features", "created": "2019-04-05 16:48:58", "language": "Jupyter Notebook", "type": "User", "username": "mihaidusmanu", "stars": 569, "forks": 141, "subscribers": 27, "open_issues": 3, "topics": ["cvpr2019", "local-features", "visual-localization", "cnn", "pytorch"]}, {"id": 248813772, "repo_name": "CascadePSP", "full_name": "hkchengrex/CascadePSP", "description": "[CVPR2020] CascadePSP: Toward Class-Agnostic and Very High-Resolution Segmentation via Global and Local Refinement", "created": "2020-03-20 17:25:15", "language": "Python", "type": "User", "username": "hkchengrex", "stars": 568, "forks": 70, "subscribers": 15, "open_issues": 0, "topics": ["segmentation", "deep-learning", "pytorch", "cvpr2020", "computer-vision", "segmentation-refinement", "refinement-network", "high-resolution"]}, {"id": 228891845, "repo_name": "torchdistill", "full_name": "yoshitomo-matsubara/torchdistill", "description": "A coding-free framework built on PyTorch for reproducible deep learning studies. \ud83c\udfc620 knowledge distillation methods presented at CVPR, ICLR, ECCV, NeurIPS, ICCV, etc are implemented so far. \ud83c\udf81 Trained models, training logs and configurations are available for ensuring the reproducibiliy and benchmark.", "created": "2019-12-18 17:40:32", "language": "Python", "type": "User", "username": "yoshitomo-matsubara", "stars": 568, "forks": 56, "subscribers": 17, "open_issues": 0, "topics": ["knowledge-distillation", "pytorch", "image-classification", "imagenet", "object-detection", "coco", "semantic-segmentation", "cifar10", "cifar100", "colab-notebook", "google-colab", "pascal-voc", "nlp", "natural-language-processing", "transformer", "glue"]}, {"id": 101801388, "repo_name": "mtcnn-pytorch", "full_name": "TropComplique/mtcnn-pytorch", "description": "Joint Face Detection and Alignment using Multi-task Cascaded Convolutional Networks", "created": "2017-08-29 19:57:03", "language": "Jupyter Notebook", "type": "User", "username": "TropComplique", "stars": 567, "forks": 157, "subscribers": 12, "open_issues": 14, "topics": ["convolutional-neural-networks", "pytorch", "face-detection"]}, {"id": 192298972, "repo_name": "dl-on-flink", "full_name": "flink-extended/dl-on-flink", "description": "Deep Learning on Flink aims to integrate Flink and deep learning frameworks (e.g. TensorFlow, PyTorch, etc) to enable distributed deep learning training and inference on a Flink cluster.", "created": "2019-06-17 07:44:14", "language": "Java", "type": "Organization", "username": "flink-extended", "stars": 567, "forks": 179, "subscribers": 37, "open_issues": 17, "topics": ["flink", "tensorflow", "pytorch", "python", "deep-learning"]}, {"id": 83001980, "repo_name": "attention-networks-for-classification", "full_name": "EdGENetworks/attention-networks-for-classification", "description": "Hierarchical Attention Networks for Document Classification in PyTorch", "created": "2017-02-24 04:42:00", "language": "Jupyter Notebook", "type": "Organization", "username": "EdGENetworks", "stars": 566, "forks": 136, "subscribers": 26, "open_issues": 8, "topics": ["pytorch", "deep-learning", "nlp", "hierarchical-attention-networks", "document-classification", "lstm"]}, {"id": 198271320, "repo_name": "3DMPPE_POSENET_RELEASE", "full_name": "mks0601/3DMPPE_POSENET_RELEASE", "description": "Official PyTorch implementation of \"Camera Distance-aware Top-down Approach for 3D Multi-person Pose Estimation from a Single RGB Image\", ICCV 2019", "created": "2019-07-22 17:26:12", "language": "Python", "type": "User", "username": "mks0601", "stars": 566, "forks": 128, "subscribers": 29, "open_issues": 21, "topics": ["3d-human-pose", "human-pose-estimation", "pytorch", "iccv2019", "deep-learning", "computer-vision"]}, {"id": 84277315, "repo_name": "vnet.pytorch", "full_name": "mattmacy/vnet.pytorch", "description": "A PyTorch implementation for V-Net: Fully Convolutional Neural Networks for Volumetric Medical Image Segmentation", "created": "2017-03-08 04:13:12", "language": "Python", "type": "User", "username": "mattmacy", "stars": 563, "forks": 191, "subscribers": 23, "open_issues": 24, "topics": ["pytorch", "convolutional-neural-networks", "semantic-segmentation", "fully-convolutional-networks", "lung-segmentation"]}, {"id": 113905209, "repo_name": "pytorch-pose-hg-3d", "full_name": "xingyizhou/pytorch-pose-hg-3d", "description": "PyTorch implementation for 3D human pose estimation", "created": "2017-12-11 20:28:36", "language": "Python", "type": "User", "username": "xingyizhou", "stars": 563, "forks": 145, "subscribers": 15, "open_issues": 35, "topics": []}, {"id": 189508830, "repo_name": "centerNet-deep-sort", "full_name": "kimyoon-young/centerNet-deep-sort", "description": "realtime multiple people tracking (centerNet based person detector + deep sort algorithm with pytorch)", "created": "2019-05-31 01:49:28", "language": "Python", "type": "User", "username": "kimyoon-young", "stars": 563, "forks": 142, "subscribers": 17, "open_issues": 29, "topics": []}, {"id": 121335845, "repo_name": "robot-surgery-segmentation", "full_name": "ternaus/robot-surgery-segmentation", "description": "Wining solution and its improvement for MICCAI 2017 Robotic Instrument Segmentation Sub-Challenge", "created": "2018-02-13 03:50:23", "language": "Jupyter Notebook", "type": "User", "username": "ternaus", "stars": 563, "forks": 196, "subscribers": 23, "open_issues": 11, "topics": ["medical-imaging", "robot-assisted-surgery", "computer-vision", "image-segmentation", "deep-learning", "python", "pytorch"]}, {"id": 181716606, "repo_name": "OctaveConv_pytorch", "full_name": "lxtGH/OctaveConv_pytorch", "description": "Pytorch implementation of newly added convolution", "created": "2019-04-16 15:25:18", "language": "Python", "type": "User", "username": "lxtGH", "stars": 562, "forks": 90, "subscribers": 17, "open_issues": 11, "topics": []}, {"id": 168424712, "repo_name": "disentangling-vae", "full_name": "YannDubs/disentangling-vae", "description": "Experiments for understanding disentanglement in VAE latent representations", "created": "2019-01-30 22:21:55", "language": "Python", "type": "User", "username": "YannDubs", "stars": 562, "forks": 120, "subscribers": 15, "open_issues": 7, "topics": ["beta-vae", "factor-vae", "vae", "variational-autoencoder", "unsupervised-learning", "celeba", "dsprites", "beta-tcvae", "disentangled-representations", "chairs-dataset", "mnist", "fashion-mnist", "representation-learning", "reproducible-research", "deep-learning", "pytorch", "disentanglement"]}, {"id": 83158675, "repo_name": "mushroom-rl", "full_name": "MushroomRL/mushroom-rl", "description": "Python library for Reinforcement Learning.", "created": "2017-02-25 19:59:57", "language": "Python", "type": "Organization", "username": "MushroomRL", "stars": 561, "forks": 101, "subscribers": 26, "open_issues": 3, "topics": ["reinforcement-learning", "deep-reinforcement-learning", "deep-learning", "openai-gym", "atari", "rl", "pytorch", "mujoco", "dqn", "ddpg", "trpo", "qlearning", "pybullet", "sac"]}, {"id": 349544221, "repo_name": "torchsort", "full_name": "teddykoker/torchsort", "description": "Fast, differentiable sorting and ranking in PyTorch", "created": "2021-03-19 20:12:28", "language": "Python", "type": "User", "username": "teddykoker", "stars": 560, "forks": 22, "subscribers": 6, "open_issues": 3, "topics": ["pytorch", "sort", "ranking", "cuda-kernel"]}, {"id": 124268491, "repo_name": "detectorch", "full_name": "ignacio-rocco/detectorch", "description": "Detectorch - detectron for PyTorch", "created": "2018-03-07 17:08:40", "language": "Jupyter Notebook", "type": "User", "username": "ignacio-rocco", "stars": 559, "forks": 72, "subscribers": 27, "open_issues": 11, "topics": ["pytorch", "detectron", "object-detection", "object-segmentation", "instance-segmentation", "python"]}, {"id": 114098658, "repo_name": "TextClassificationBenchmark", "full_name": "wabyking/TextClassificationBenchmark", "description": "A Benchmark of Text Classification in PyTorch", "created": "2017-12-13 09:08:33", "language": "Python", "type": "User", "username": "wabyking", "stars": 559, "forks": 139, "subscribers": 30, "open_issues": 19, "topics": ["text-classification", "benchmark", "lstm", "pytorch", "capusle", "cnn", "cnn-classification", "lstm-sentiment-analysis", "attention-is-all-you-need", "rcnn", "crnn", "quantum"]}, {"id": 142129096, "repo_name": "FOTS.PyTorch", "full_name": "jiangxiluning/FOTS.PyTorch", "description": "FOTS Pytorch Implementation", "created": "2018-07-24 08:31:45", "language": "C++", "type": "User", "username": "jiangxiluning", "stars": 558, "forks": 181, "subscribers": 29, "open_issues": 70, "topics": ["ocr", "scene-text-recognition", "cvpr2018"]}, {"id": 161051174, "repo_name": "EverybodyDanceNow_reproduce_pytorch", "full_name": "yanx27/EverybodyDanceNow_reproduce_pytorch", "description": "Everybody dance now reproduced in pytorch", "created": "2018-12-09 15:05:37", "language": "Python", "type": "User", "username": "yanx27", "stars": 558, "forks": 166, "subscribers": 23, "open_issues": 58, "topics": ["pytorch", "pix2pixhd", "openpose", "everybody-dance-now", "pose2pose"]}, {"id": 279795687, "repo_name": "I2L-MeshNet_RELEASE", "full_name": "mks0601/I2L-MeshNet_RELEASE", "description": "Official PyTorch implementation of \"I2L-MeshNet: Image-to-Lixel Prediction Network for Accurate 3D Human Pose and Mesh Estimation from a Single RGB Image\", ECCV 2020", "created": "2020-07-15 07:19:44", "language": "Python", "type": "User", "username": "mks0601", "stars": 558, "forks": 117, "subscribers": 25, "open_issues": 32, "topics": []}, {"id": 196689396, "repo_name": "aster.pytorch", "full_name": "ayumiymk/aster.pytorch", "description": "ASTER in Pytorch", "created": "2019-07-13 06:56:34", "language": "Python", "type": "User", "username": "ayumiymk", "stars": 557, "forks": 156, "subscribers": 13, "open_issues": 24, "topics": ["ocr", "text-recognition", "scene-text", "computer-vision", "text-rectification", "aster", "pytorch"]}, {"id": 385408663, "repo_name": "torchrec", "full_name": "pytorch/torchrec", "description": "Pytorch domain library for recommendation systems", "created": "2021-07-12 23:15:48", "language": "Python", "type": "Organization", "username": "pytorch", "stars": 557, "forks": 43, "subscribers": 14, "open_issues": 12, "topics": []}, {"id": 353968278, "repo_name": "PatrickStar", "full_name": "Tencent/PatrickStar", "description": "PatrickStar enables Larger, Faster, Greener Pretrained Models for NLP and democratizes AI for everyone.", "created": "2021-04-02 09:17:36", "language": "Python", "type": "Organization", "username": "Tencent", "stars": 555, "forks": 43, "subscribers": 13, "open_issues": 11, "topics": ["nlp", "pretrained-models", "gpt", "bert", "pytorch"]}, {"id": 349084040, "repo_name": "NN-CUDA-Example", "full_name": "godweiyang/NN-CUDA-Example", "description": "Several simple examples for popular neural network toolkits calling custom CUDA operators.", "created": "2021-03-18 13:27:51", "language": "Python", "type": "User", "username": "godweiyang", "stars": 555, "forks": 76, "subscribers": 5, "open_issues": 7, "topics": ["pytorch", "tensorflow", "cuda", "cpp", "python", "neural-network"]}, {"id": 97265277, "repo_name": "seqGAN", "full_name": "suragnair/seqGAN", "description": "A simplified PyTorch implementation of \"SeqGAN: Sequence Generative Adversarial Nets with Policy Gradient.\" (Yu, Lantao, et al.)", "created": "2017-07-14 19:10:58", "language": "Python", "type": "User", "username": "suragnair", "stars": 554, "forks": 142, "subscribers": 13, "open_issues": 2, "topics": ["deep-learning", "generative-adversarial-network", "seqgan", "policy-gradient", "nlp", "generative-model", "gan", "natural-language-processing", "natural-language-understanding"]}, {"id": 153941786, "repo_name": "HowToTrainYourMAMLPytorch", "full_name": "AntreasAntoniou/HowToTrainYourMAMLPytorch", "description": "The original code for the paper \"How to train your MAML\" along with a replication of the original \"Model Agnostic Meta Learning\" (MAML) paper in Pytorch.", "created": "2018-10-20 19:39:44", "language": "Python", "type": "User", "username": "AntreasAntoniou", "stars": 554, "forks": 113, "subscribers": 12, "open_issues": 25, "topics": []}, {"id": 151902445, "repo_name": "ChineseNRE", "full_name": "buppt/ChineseNRE", "description": "\u4e2d\u6587\u5b9e\u4f53\u5173\u7cfb\u62bd\u53d6\uff0cpytorch\uff0cbilstm+attention", "created": "2018-10-07 03:23:23", "language": "Python", "type": "User", "username": "buppt", "stars": 552, "forks": 165, "subscribers": 10, "open_issues": 22, "topics": ["relation-extraction", "nre", "pytorch", "chinese", "bilstm-attention", "bilstm", "attention"]}, {"id": 179437464, "repo_name": "Efficient-3DCNNs", "full_name": "okankop/Efficient-3DCNNs", "description": "PyTorch Implementation of \"Resource Efficient 3D Convolutional Neural Networks\", codes and pretrained models.", "created": "2019-04-04 06:42:05", "language": "Python", "type": "User", "username": "okankop", "stars": 552, "forks": 119, "subscribers": 13, "open_issues": 13, "topics": []}, {"id": 161999774, "repo_name": "meta-transfer-learning", "full_name": "yaoyao-liu/meta-transfer-learning", "description": "TensorFlow and PyTorch implementation of \"Meta-Transfer Learning for Few-Shot Learning\" (CVPR2019)", "created": "2018-12-16 12:40:27", "language": "Python", "type": "User", "username": "yaoyao-liu", "stars": 552, "forks": 115, "subscribers": 22, "open_issues": 34, "topics": ["few-shot-learning", "meta-learning", "transfer-learning", "mini-imagenet", "tiered-imagenet", "fewshot-cifar100"]}, {"id": 157933925, "repo_name": "Federated-Learning-PyTorch", "full_name": "AshwinRJ/Federated-Learning-PyTorch", "description": "Implementation of Communication-Efficient Learning of Deep Networks from Decentralized Data", "created": "2018-11-16 23:51:14", "language": "Python", "type": "User", "username": "AshwinRJ", "stars": 551, "forks": 246, "subscribers": 7, "open_issues": 19, "topics": ["federated-learning", "distributed-computing", "deep-learning", "pytorch", "python"]}, {"id": 167957054, "repo_name": "LaneDetection_End2End", "full_name": "wvangansbeke/LaneDetection_End2End", "description": "End-to-end Lane Detection for Self-Driving Cars (ICCV 2019 Workshop)", "created": "2019-01-28 12:15:49", "language": "Python", "type": "User", "username": "wvangansbeke", "stars": 551, "forks": 199, "subscribers": 27, "open_issues": 6, "topics": ["lane-detection", "end-to-end", "pytorch", "computer-vision", "deep-learning", "least-squares", "self-driving-cars"]}, {"id": 200436955, "repo_name": "Grad-CAM.pytorch", "full_name": "yizt/Grad-CAM.pytorch", "description": "pytorch\u5b9e\u73b0Grad-CAM\u548cGrad-CAM++,\u53ef\u4ee5\u53ef\u89c6\u5316\u4efb\u610f\u5206\u7c7b\u7f51\u7edc\u7684Class Activation Map (CAM)\u56fe,\u5305\u62ec\u81ea\u5b9a\u4e49\u7684\u7f51\u7edc;\u540c\u65f6\u4e5f\u5b9e\u73b0\u4e86\u76ee\u6807\u68c0\u6d4bfaster r-cnn\u548cretinanet\u4e24\u4e2a\u7f51\u7edc\u7684CAM\u56fe;\u6b22\u8fce\u8bd5\u7528\u3001\u5173\u6ce8\u5e76\u53cd\u9988\u95ee\u9898...", "created": "2019-08-04 01:30:34", "language": "Python", "type": "User", "username": "yizt", "stars": 550, "forks": 156, "subscribers": 10, "open_issues": 47, "topics": ["cam", "grad-cam", "guided-backpropagation", "model-interpretability", "faster-r-cnn-grad-cam", "retinanet-grad-cam"]}, {"id": 152091887, "repo_name": "Pytorch-SiamFC", "full_name": "rafellerc/Pytorch-SiamFC", "description": "Pytorch implementation of \"Fully-Convolutional Siamese Networks for Object Tracking\"", "created": "2018-10-08 14:15:42", "language": "Python", "type": "User", "username": "rafellerc", "stars": 550, "forks": 133, "subscribers": 25, "open_issues": 16, "topics": ["siamese-network", "tracking", "deep-learning", "computer-vision", "pytorch"]}, {"id": 78624950, "repo_name": "Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks", "full_name": "weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks", "description": "experiments on Paper <Bag of Tricks for Image Classification with Convolutional Neural Networks> and other useful tricks to improve CNN acc", "created": "2017-01-11 09:46:47", "language": "Python", "type": "User", "username": "weiaicunzai", "stars": 550, "forks": 96, "subscribers": 17, "open_issues": 8, "topics": ["pytorch", "image-classification"]}, {"id": 165645094, "repo_name": "cdQA", "full_name": "cdqa-suite/cdQA", "description": "\u26d4 [NOT MAINTAINED] An End-To-End Closed Domain Question Answering System.", "created": "2019-01-14 10:51:31", "language": "Python", "type": "Organization", "username": "cdqa-suite", "stars": 550, "forks": 178, "subscribers": 38, "open_issues": 57, "topics": ["reading-comprehension", "question-answering", "deep-learning", "natural-language-processing", "information-retrieval", "bert", "artificial-intelligence", "nlp", "pytorch", "transformers"]}, {"id": 207291691, "repo_name": "Graph_Transformer_Networks", "full_name": "seongjunyun/Graph_Transformer_Networks", "description": "Graph Transformer Networks (Authors' PyTorch implementation for the NeurIPS 19 paper)", "created": "2019-09-09 11:18:13", "language": "Jupyter Notebook", "type": "User", "username": "seongjunyun", "stars": 549, "forks": 112, "subscribers": 12, "open_issues": 7, "topics": []}, {"id": 281817032, "repo_name": "deepsvg", "full_name": "alexandre01/deepsvg", "description": "[NeurIPS 2020] Official code for the paper \"DeepSVG: A Hierarchical Generative Network for Vector Graphics Animation\". Includes a PyTorch library for deep learning with SVG data.", "created": "2020-07-23 01:07:04", "language": "Jupyter Notebook", "type": "User", "username": "alexandre01", "stars": 549, "forks": 45, "subscribers": 15, "open_issues": 15, "topics": ["deep-learning", "pytorch", "svg", "svg-animations", "transformer", "library", "python", "deep-svg", "machine-learning", "autoencoder", "sketches", "sketch-rnn", "svg-vae"]}, {"id": 330914717, "repo_name": "ivy", "full_name": "unifyai/ivy", "description": "The Unified Machine Learning Framework", "created": "2021-01-19 08:37:25", "language": "Python", "type": "Organization", "username": "unifyai", "stars": 548, "forks": 309, "subscribers": 7, "open_issues": 242, "topics": ["python", "machine-learning", "deep-learning", "neural-network", "gpu", "autograd", "ivy", "abstraction", "template", "tensorflow", "pytorch", "mxnet", "numpy", "jax"]}, {"id": 321584367, "repo_name": "pytorch_tabular", "full_name": "manujosephv/pytorch_tabular", "description": "A standard framework for modelling Deep Learning Models for tabular data", "created": "2020-12-15 07:17:03", "language": "Python", "type": "User", "username": "manujosephv", "stars": 547, "forks": 57, "subscribers": 7, "open_issues": 16, "topics": ["tabular-data", "deep-learning", "pytorch", "pytorch-lightning", "hacktoberfest", "machine-learning"]}, {"id": 152329750, "repo_name": "gluoncv-torch", "full_name": "StacyYang/gluoncv-torch", "description": "PyTorch API for GluonCV Models", "created": "2018-10-09 22:26:33", "language": "Python", "type": "User", "username": "StacyYang", "stars": 547, "forks": 62, "subscribers": 20, "open_issues": 17, "topics": []}, {"id": 108854678, "repo_name": "PyTorch-progressive_growing_of_gans", "full_name": "github-pengge/PyTorch-progressive_growing_of_gans", "description": "PyTorch implementation of Progressive Growing of GANs for Improved Quality, Stability, and Variation.", "created": "2017-10-30 13:27:55", "language": "Python", "type": "User", "username": "github-pengge", "stars": 547, "forks": 95, "subscribers": 24, "open_issues": 28, "topics": ["pytorch", "gan", "pggan"]}, {"id": 260530884, "repo_name": "A-Hackers-AI-Voice-Assistant", "full_name": "LearnedVector/A-Hackers-AI-Voice-Assistant", "description": "A hackers AI voice assistant, built using Python and PyTorch.", "created": "2020-05-01 18:30:24", "language": "Python", "type": "User", "username": "LearnedVector", "stars": 547, "forks": 219, "subscribers": 51, "open_issues": 38, "topics": []}]