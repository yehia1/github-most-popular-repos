[{"id": 843222, "repo_name": "scikit-learn", "full_name": "scikit-learn/scikit-learn", "description": "scikit-learn: machine learning in Python", "created": "2010-08-17 09:43:38", "language": "Python", "type": "Organization", "username": "scikit-learn", "stars": 49184, "forks": 22700, "subscribers": 2197, "open_issues": 2420, "topics": ["machine-learning", "python", "statistics", "data-science", "data-analysis"]}, {"id": 139824423, "repo_name": "100-Days-Of-ML-Code", "full_name": "Avik-Jain/100-Days-Of-ML-Code", "description": "100 Days of ML Coding", "created": "2018-07-05 09:11:43", "language": null, "type": "User", "username": "Avik-Jain", "stars": 34745, "forks": 8757, "subscribers": 2396, "open_issues": 60, "topics": ["machine-learning", "machine-learning-algorithms", "infographics", "tutorial", "siraj-raval-challenge", "siraj-raval", "implementation", "100-days-of-code-log", "100daysofcode", "python", "logistic-regression", "naive-bayes-classifier", "linear-regression", "svm", "linear-algebra", "scikit-learn", "support-vector-machines", "deep-learning"]}, {"id": 65388917, "repo_name": "PythonDataScienceHandbook", "full_name": "jakevdp/PythonDataScienceHandbook", "description": "Python Data Science Handbook: full text in Jupyter Notebooks", "created": "2016-08-10 14:24:36", "language": "Jupyter Notebook", "type": "User", "username": "jakevdp", "stars": 33296, "forks": 14909, "subscribers": 1743, "open_issues": 175, "topics": ["scikit-learn", "numpy", "python", "jupyter-notebook", "matplotlib", "pandas"]}, {"id": 83119431, "repo_name": "ailearning", "full_name": "apachecn/ailearning", "description": "AiLearning\uff1a\u6570\u636e\u5206\u6790+\u673a\u5668\u5b66\u4e60\u5b9e\u6218+\u7ebf\u6027\u4ee3\u6570+PyTorch+NLTK+TF2", "created": "2017-02-25 08:53:02", "language": "Python", "type": "Organization", "username": "apachecn", "stars": 32767, "forks": 10758, "subscribers": 1710, "open_issues": 2, "topics": ["fp-growth", "apriori", "mahchine-leaning", "naivebayes", "svm", "adaboost", "kmeans", "svd", "pca", "logistic", "regression", "recommendedsystem", "sklearn", "scikit-learn", "nlp", "deeplearning", "python", "dnn", "lstm", "rnn"]}, {"id": 343965132, "repo_name": "ML-For-Beginners", "full_name": "microsoft/ML-For-Beginners", "description": "12 weeks, 26 lessons, 52 quizzes, classic Machine Learning for all", "created": "2021-03-03 01:34:05", "language": "Jupyter Notebook", "type": "Organization", "username": "microsoft", "stars": 29238, "forks": 6035, "subscribers": 579, "open_issues": 11, "topics": ["ml", "data-science", "machine-learning", "machine-learning-algorithms", "machinelearning", "python", "machinelearning-python", "scikit-learn", "scikit-learn-python", "r", "education"]}, {"id": 51863547, "repo_name": "handson-ml", "full_name": "ageron/handson-ml", "description": "A series of Jupyter notebooks that walk you through the fundamentals of Machine Learning and Deep Learning in python using Scikit-Learn and TensorFlow.", "created": "2016-02-16 19:48:39", "language": "Jupyter Notebook", "type": "User", "username": "ageron", "stars": 24086, "forks": 12704, "subscribers": 1099, "open_issues": 131, "topics": ["tensorflow", "scikit-learn", "machine-learning", "python", "deep-learning", "neural-network", "ml", "distributed", "jupyter-notebook"]}, {"id": 29749635, "repo_name": "data-science-ipython-notebooks", "full_name": "donnemartin/data-science-ipython-notebooks", "description": "Data science Python notebooks: Deep learning (TensorFlow, Theano, Caffe, Keras), scikit-learn, Kaggle, big data (Spark, Hadoop MapReduce, HDFS), matplotlib, pandas, NumPy, SciPy, Python essentials, AWS, and various command lines.", "created": "2015-01-23 19:38:29", "language": "Python", "type": "User", "username": "donnemartin", "stars": 22524, "forks": 6995, "subscribers": 1640, "open_issues": 22, "topics": ["python", "machine-learning", "deep-learning", "data-science", "big-data", "aws", "tensorflow", "theano", "caffe", "scikit-learn", "kaggle", "spark", "mapreduce", "hadoop", "matplotlib", "pandas", "numpy", "scipy", "keras"]}, {"id": 164554832, "repo_name": "handson-ml2", "full_name": "ageron/handson-ml2", "description": "A series of Jupyter notebooks that walk you through the fundamentals of Machine Learning and Deep Learning in Python using Scikit-Learn, Keras and TensorFlow 2.", "created": "2019-01-08 03:49:07", "language": "Jupyter Notebook", "type": "User", "username": "ageron", "stars": 19672, "forks": 9684, "subscribers": 575, "open_issues": 154, "topics": []}, {"id": 175276495, "repo_name": "Virgilio", "full_name": "virgili0/Virgilio", "description": "Your new Mentor for Data Science E-Learning.", "created": "2019-03-12 18:45:36", "language": "Jupyter Notebook", "type": "Organization", "username": "virgili0", "stars": 13262, "forks": 2502, "subscribers": 787, "open_issues": 18, "topics": ["tensorflow", "machine-learning", "machine-vision", "datascience", "scikit-learn", "python", "guide", "guidelines", "path", "study", "studypath", "learning", "learning-python", "computer-vision", "nlp", "statistics", "business-intelligence", "data-science", "virgilio", "hacktoberfest"]}, {"id": 102692863, "repo_name": "onnx", "full_name": "onnx/onnx", "description": "Open standard for machine learning interoperability", "created": "2017-09-07 04:53:45", "language": "C++", "type": "Organization", "username": "onnx", "stars": 12121, "forks": 2472, "subscribers": 430, "open_issues": 519, "topics": ["deep-learning", "deep-neural-networks", "neural-network", "onnx", "pytorch", "mxnet", "tensorflow", "keras", "scikit-learn", "ml", "machine-learning", "dnn"]}, {"id": 40380094, "repo_name": "python-machine-learning-book", "full_name": "rasbt/python-machine-learning-book", "description": "The \"Python Machine Learning (1st edition)\"  book code repository and info resource", "created": "2015-08-07 20:39:29", "language": "Jupyter Notebook", "type": "User", "username": "rasbt", "stars": 11490, "forks": 4381, "subscribers": 825, "open_issues": 10, "topics": ["machine-learning", "machine-learning-algorithms", "logistic-regression", "data-science", "data-mining", "python", "scikit-learn", "neural-network"]}, {"id": 28782747, "repo_name": "dask", "full_name": "dask/dask", "description": "Parallel computing with task scheduling", "created": "2015-01-04 18:50:00", "language": "Python", "type": "Organization", "username": "dask", "stars": 9612, "forks": 1450, "subscribers": 228, "open_issues": 744, "topics": ["dask", "python", "pydata", "numpy", "pandas", "scikit-learn", "scipy", "hacktoberfest"]}, {"id": 45495679, "repo_name": "tpot", "full_name": "EpistasisLab/tpot", "description": "A Python Automated Machine Learning tool that optimizes machine learning pipelines using genetic programming.", "created": "2015-11-03 21:08:40", "language": "Python", "type": "Organization", "username": "EpistasisLab", "stars": 8462, "forks": 1458, "subscribers": 293, "open_issues": 244, "topics": ["machine-learning", "python", "data-science", "automl", "automation", "scikit-learn", "hyperparameter-optimization", "model-selection", "parameter-tuning", "automated-machine-learning", "random-forest", "gradient-boosting", "feature-engineering", "xgboost"]}, {"id": 83286964, "repo_name": "mlcourse.ai", "full_name": "Yorko/mlcourse.ai", "description": "Open Machine Learning Course", "created": "2017-02-27 08:32:20", "language": "Python", "type": "User", "username": "Yorko", "stars": 8093, "forks": 5345, "subscribers": 597, "open_issues": 3, "topics": ["machine-learning", "data-analysis", "data-science", "pandas", "algorithms", "numpy", "scipy", "matplotlib", "seaborn", "plotly", "scikit-learn", "kaggle-inclass", "vowpal-wabbit", "python", "ipynb", "docker", "math"]}, {"id": 81413897, "repo_name": "python-machine-learning-book-2nd-edition", "full_name": "rasbt/python-machine-learning-book-2nd-edition", "description": "The \"Python Machine Learning (2nd edition)\" book code repository and info resource", "created": "2017-02-09 05:45:15", "language": "Jupyter Notebook", "type": "User", "username": "rasbt", "stars": 6466, "forks": 2741, "subscribers": 380, "open_issues": 32, "topics": ["machine-learning", "deep-learning", "python", "scikit-learn", "tensorflow", "data-science"]}, {"id": 317029148, "repo_name": "best-of-ml-python", "full_name": "ml-tooling/best-of-ml-python", "description": "\ud83c\udfc6 A ranked list of awesome machine learning Python libraries. Updated weekly.", "created": "2020-11-29 19:41:36", "language": "Python", "type": "Organization", "username": "ml-tooling", "stars": 6319, "forks": 868, "subscribers": 235, "open_issues": 2, "topics": ["best-of", "awesome", "python", "machine-learning", "data-science", "awesome-list", "nlp", "data-visualization", "tensorflow", "pytorch", "scikit-learn", "keras", "python-library", "data-visualizations", "deep-learning"]}, {"id": 156939672, "repo_name": "onnxruntime", "full_name": "microsoft/onnxruntime", "description": "ONNX Runtime: cross-platform, high performance ML inferencing and training accelerator", "created": "2018-11-10 02:22:53", "language": "C++", "type": "Organization", "username": "microsoft", "stars": 6310, "forks": 1469, "subscribers": 194, "open_issues": 894, "topics": ["deep-learning", "onnx", "neural-networks", "machine-learning", "ai-framework", "hardware-acceleration", "pytorch", "tensorflow", "scikit-learn", "hacktoberfest"]}, {"id": 58616850, "repo_name": "machinelearning", "full_name": "ljpzzz/machinelearning", "description": "My blogs and code for machine learning. http://cnblogs.com/pinard", "created": "2016-05-12 07:06:34", "language": "Jupyter Notebook", "type": "User", "username": "ljpzzz", "stars": 6227, "forks": 3251, "subscribers": 294, "open_issues": 10, "topics": ["machinelearning", "algorithms", "scikit-learn", "reinforcementlearning"]}, {"id": 38441254, "repo_name": "auto-sklearn", "full_name": "automl/auto-sklearn", "description": "Automated Machine Learning with scikit-learn", "created": "2015-07-02 15:38:10", "language": "Python", "type": "Organization", "username": "automl", "stars": 6060, "forks": 1126, "subscribers": 213, "open_issues": 105, "topics": ["automl", "scikit-learn", "automated-machine-learning", "hyperparameter-optimization", "hyperparameter-tuning", "hyperparameter-search", "bayesian-optimization", "metalearning", "meta-learning", "smac"]}, {"id": 102908804, "repo_name": "featuretools", "full_name": "alteryx/featuretools", "description": "An open source python library for automated feature engineering", "created": "2017-09-08 22:15:17", "language": "Python", "type": "Organization", "username": "alteryx", "stars": 6002, "forks": 792, "subscribers": 156, "open_issues": 163, "topics": ["feature-engineering", "machine-learning", "data-science", "automated-machine-learning", "automl", "python", "scikit-learn", "automated-feature-engineering"]}, {"id": 156401841, "repo_name": "sktime", "full_name": "alan-turing-institute/sktime", "description": "A unified framework for machine learning with time series", "created": "2018-11-06 15:08:24", "language": "Python", "type": "Organization", "username": "alan-turing-institute", "stars": 5004, "forks": 772, "subscribers": 109, "open_issues": 356, "topics": ["time-series", "machine-learning", "scikit-learn", "time-series-classification", "time-series-regression", "forecasting", "time-series-analysis", "data-science", "data-mining"]}, {"id": 184704903, "repo_name": "interpret", "full_name": "interpretml/interpret", "description": "Fit interpretable models. Explain blackbox machine learning. ", "created": "2019-05-03 05:47:52", "language": "C++", "type": "Organization", "username": "interpretml", "stars": 4604, "forks": 582, "subscribers": 148, "open_issues": 97, "topics": ["machine-learning", "interpretability", "gradient-boosting", "blackbox", "scikit-learn", "xai", "interpretml", "interpretable-machine-learning", "machine-learning-interpretability", "interpretable-ai", "transparency", "iml", "interpretable-ml", "explainable-ml", "explainability", "bias", "ai", "artificial-intelligence", "explainable-ai", "differential-privacy"]}, {"id": 104967369, "repo_name": "sklearn-doc-zh", "full_name": "apachecn/sklearn-doc-zh", "description": ":book: [\u8bd1] scikit-learn\uff08sklearn\uff09 \u4e2d\u6587\u6587\u6863", "created": "2017-09-27 03:25:03", "language": "CSS", "type": "Organization", "username": "apachecn", "stars": 4567, "forks": 1415, "subscribers": 207, "open_issues": 13, "topics": ["python", "scikit-learn", "documentation", "machine-learning"]}, {"id": 97533515, "repo_name": "skorch", "full_name": "skorch-dev/skorch", "description": "A scikit-learn compatible neural network library that wraps PyTorch", "created": "2017-07-18 00:13:54", "language": "Jupyter Notebook", "type": "Organization", "username": "skorch-dev", "stars": 4389, "forks": 309, "subscribers": 82, "open_issues": 56, "topics": ["scikit-learn", "pytorch", "machine-learning"]}, {"id": 199509705, "repo_name": "autogluon", "full_name": "awslabs/autogluon", "description": "AutoGluon: AutoML for Image, Text, and Tabular Data", "created": "2019-07-29 18:51:24", "language": "Python", "type": "Organization", "username": "awslabs", "stars": 4176, "forks": 557, "subscribers": 82, "open_issues": 134, "topics": ["automl", "machine-learning", "data-science", "deep-learning", "ensemble-learning", "image-classification", "computer-vision", "natural-language-processing", "structured-data", "object-detection", "gluon", "mxnet", "transfer-learning", "pytorch", "automated-machine-learning", "scikit-learn", "autogluon", "tabular-data", "neural-architecture-search", "hyperparameter-optimization"]}, {"id": 38730494, "repo_name": "pipeline", "full_name": "PipelineAI/pipeline", "description": "PipelineAI Kubeflow Distribution", "created": "2015-07-08 03:49:23", "language": "Jsonnet", "type": "Organization", "username": "PipelineAI", "stars": 4143, "forks": 983, "subscribers": 351, "open_issues": 1, "topics": ["machine-learning", "artificial-intelligence", "tensorflow", "kubernetes", "cassandra", "spark", "kafka", "airflow", "docker", "redis", "neural-network", "gpu", "pipelineai", "tfx", "keras", "kubeflow", "pytorch", "scikit-learn"]}, {"id": 59121694, "repo_name": "yellowbrick", "full_name": "DistrictDataLabs/yellowbrick", "description": "Visual analysis and diagnostic tools to facilitate machine learning model selection.", "created": "2016-05-18 14:12:17", "language": "Python", "type": "Organization", "username": "DistrictDataLabs", "stars": 3521, "forks": 515, "subscribers": 106, "open_issues": 88, "topics": ["machine-learning", "visual-analysis", "model-selection", "visualization", "scikit-learn", "visualizer", "matplotlib", "python", "estimator", "anaconda"]}, {"id": 33462633, "repo_name": "scikit-learn-videos", "full_name": "justmarkham/scikit-learn-videos", "description": "Jupyter notebooks from the scikit-learn video series", "created": "2015-04-06 02:08:42", "language": "Jupyter Notebook", "type": "User", "username": "justmarkham", "stars": 3324, "forks": 2414, "subscribers": 345, "open_issues": 1, "topics": ["scikit-learn", "machine-learning", "data-science", "jupyter-notebook", "tutorial", "python"]}, {"id": 8357227, "repo_name": "orange3", "full_name": "biolab/orange3", "description": "\ud83c\udf4a :bar_chart: :bulb: Orange: Interactive data analysis", "created": "2013-02-22 12:52:56", "language": "Python", "type": "Organization", "username": "biolab", "stars": 3308, "forks": 784, "subscribers": 170, "open_issues": 74, "topics": ["data-mining", "data-science", "machine-learning", "data-visualization", "orange", "python", "scikit-learn", "numpy", "scipy", "pandas", "decision-trees", "clustering", "visualization", "orange3", "random-forest", "plotting", "classification", "regression", "visual-programming"]}, {"id": 46443613, "repo_name": "skflow", "full_name": "tensorflow/skflow", "description": "Simplified interface for TensorFlow (mimicking Scikit Learn) for Deep Learning", "created": "2015-11-18 19:55:34", "language": "Python", "type": "Organization", "username": "tensorflow", "stars": 3202, "forks": 467, "subscribers": 167, "open_issues": 4, "topics": []}, {"id": 190687137, "repo_name": "python-machine-learning-book-3rd-edition", "full_name": "rasbt/python-machine-learning-book-3rd-edition", "description": "The \"Python Machine Learning (3rd edition)\" book code repository", "created": "2019-06-07 04:19:59", "language": "Jupyter Notebook", "type": "User", "username": "rasbt", "stars": 3044, "forks": 1335, "subscribers": 139, "open_issues": 14, "topics": ["machine-learning", "deep-learning", "tensorflow", "scikit-learn"]}, {"id": 97159209, "repo_name": "Artificial-Intelligence-Deep-Learning-Machine-Learning-Tutorials", "full_name": "TarrySingh/Artificial-Intelligence-Deep-Learning-Machine-Learning-Tutorials", "description": "A comprehensive list of Deep Learning / Artificial Intelligence and Machine Learning tutorials - rapidly expanding into areas of AI/Deep Learning / Machine Vision / NLP and industry specific areas such as Climate / Energy, Automotives, Retail, Pharma, Medicine, Healthcare, Policy, Ethics and more.", "created": "2017-07-13 19:46:01", "language": "Python", "type": "User", "username": "TarrySingh", "stars": 3032, "forks": 1499, "subscribers": 320, "open_issues": 111, "topics": ["machine-learning", "deep-learning", "tensorflow", "python", "pytorch", "keras", "lua", "matplotlib", "aws", "kaggle", "pandas", "scikit-learn", "torch", "artificial-intelligence", "neural-network", "convolutional-neural-networks", "tensorflow-tutorials", "python-data", "ipython-notebook", "capsule-network"]}, {"id": 290879784, "repo_name": "igel", "full_name": "nidhaloff/igel", "description": "a delightful machine learning tool that allows you to train, test, and use models without writing code", "created": "2020-08-27 20:54:59", "language": "Python", "type": "User", "username": "nidhaloff", "stars": 2975, "forks": 150, "subscribers": 63, "open_issues": 5, "topics": ["machine-learning", "machinelearning", "machine-learning-algorithms", "machine-learning-library", "artificial-intelligence", "neural-network", "neural-networks", "sklearn", "scikit-learn", "scikitlearn-machine-learning", "data-science", "data-analysis", "preprocessing", "automation", "automl", "automl-experiments", "hacktoberfest", "hacktoberfest2021"]}, {"id": 246924744, "repo_name": "hummingbird", "full_name": "microsoft/hummingbird", "description": "Hummingbird compiles trained ML models into tensor computation for faster inference.", "created": "2020-03-12 20:27:03", "language": "Python", "type": "Organization", "username": "microsoft", "stars": 2758, "forks": 214, "subscribers": 48, "open_issues": 52, "topics": ["machine-learning", "neural-networks", "scikit-learn", "pytorch", "tensor-computation"]}, {"id": 68256277, "repo_name": "eli5", "full_name": "TeamHG-Memex/eli5", "description": "A library for debugging/inspecting machine learning classifiers and explaining their predictions", "created": "2016-09-15 01:04:57", "language": "Jupyter Notebook", "type": "Organization", "username": "TeamHG-Memex", "stars": 2505, "forks": 321, "subscribers": 70, "open_issues": 157, "topics": ["scikit-learn", "machine-learning", "xgboost", "lightgbm", "crfsuite", "inspection", "explanation", "nlp", "data-science", "python"]}, {"id": 188880197, "repo_name": "ml-workspace", "full_name": "ml-tooling/ml-workspace", "description": "\ud83d\udee0 All-in-one web-based IDE specialized for machine learning and data science.", "created": "2019-05-27 16:55:15", "language": "Jupyter Notebook", "type": "Organization", "username": "ml-tooling", "stars": 2439, "forks": 339, "subscribers": 64, "open_issues": 7, "topics": ["machine-learning", "deep-learning", "data-science", "docker", "jupyter", "jupyter-lab", "python", "anaconda", "tensorflow", "pytorch", "neural-networks", "data-analysis", "scikit-learn", "r", "gpu", "jupyter-notebook", "kubernetes", "data-visualization", "vscode", "nlp"]}, {"id": 18031064, "repo_name": "hmmlearn", "full_name": "hmmlearn/hmmlearn", "description": "Hidden Markov Models in Python, with scikit-learn like API", "created": "2014-03-23 10:33:09", "language": "Python", "type": "Organization", "username": "hmmlearn", "stars": 2438, "forks": 688, "subscribers": 113, "open_issues": 58, "topics": []}, {"id": 160543708, "repo_name": "mars", "full_name": "mars-project/mars", "description": "Mars is a tensor-based unified framework for large-scale data computation which scales numpy, pandas, scikit-learn and Python functions.", "created": "2018-12-05 16:04:03", "language": "Python", "type": "Organization", "username": "mars-project", "stars": 2367, "forks": 298, "subscribers": 85, "open_issues": 174, "topics": ["python", "numpy", "tensor", "pandas", "machine-learning", "scikit-learn", "tensorflow", "pytorch", "xgboost", "lightgbm", "ray", "statsmodels", "joblib", "dataframe", "dask"]}, {"id": 54340642, "repo_name": "scikit-optimize", "full_name": "scikit-optimize/scikit-optimize", "description": "Sequential model-based optimization with a  `scipy.optimize` interface", "created": "2016-03-20 21:10:54", "language": "Python", "type": "Organization", "username": "scikit-optimize", "stars": 2300, "forks": 442, "subscribers": 66, "open_issues": 248, "topics": ["bayesopt", "optimization", "scientific-computing", "machine-learning", "hyperparameter", "bayesian-optimization", "binder", "scikit-learn", "hyperparameter-optimization", "hyperparameter-tuning", "hyperparameter-search", "sequential-recommendation", "hacktoberfest", "scientific-visualization", "visualization"]}, {"id": 97429942, "repo_name": "Machine-Learning-with-Python", "full_name": "tirthajyoti/Machine-Learning-with-Python", "description": "Practice and tutorial-style notebooks  covering wide variety of machine learning techniques", "created": "2017-07-17 03:06:13", "language": "Jupyter Notebook", "type": "User", "username": "tirthajyoti", "stars": 2277, "forks": 1448, "subscribers": 145, "open_issues": 2, "topics": ["numpy", "statistics", "pandas", "matplotlib", "regression", "scikit-learn", "classification", "clustering", "decision-trees", "random-forest", "dimensionality-reduction", "neural-network", "deep-learning", "artificial-intelligence", "data-science", "machine-learning", "k-nearest-neighbours", "naive-bayes", "pytest", "flask"]}, {"id": 99190133, "repo_name": "NLP-with-Python", "full_name": "susanli2016/NLP-with-Python", "description": "Scikit-Learn, NLTK, Spacy, Gensim, Textblob and more", "created": "2017-08-03 04:18:42", "language": "Jupyter Notebook", "type": "User", "username": "susanli2016", "stars": 2249, "forks": 1796, "subscribers": 158, "open_issues": 29, "topics": []}, {"id": 80898688, "repo_name": "scikit-plot", "full_name": "reiinakano/scikit-plot", "description": "An intuitive library to add plotting functionality to scikit-learn objects.", "created": "2017-02-04 06:22:59", "language": "Python", "type": "User", "username": "reiinakano", "stars": 2179, "forks": 262, "subscribers": 65, "open_issues": 24, "topics": ["scikit-learn", "visualization", "machine-learning", "data-science", "plotting", "plot"]}, {"id": 410249461, "repo_name": "machine_learning_complete", "full_name": "Nyandwi/machine_learning_complete", "description": "A comprehensive repository containing 30+ notebooks on learning machine learning!", "created": "2021-09-25 11:02:35", "language": "Jupyter Notebook", "type": "User", "username": "Nyandwi", "stars": 2155, "forks": 245, "subscribers": 42, "open_issues": 0, "topics": ["machine-learning", "deep-learning", "data-science", "neural-networks", "computer-vision", "nlp", "tensorflow", "keras", "scikit-learn", "pandas", "matplotlib", "seaborn", "python"]}, {"id": 144636984, "repo_name": "dtreeviz", "full_name": "parrt/dtreeviz", "description": "A python library for decision tree visualization and model interpretation.", "created": "2018-08-13 21:45:15", "language": "Jupyter Notebook", "type": "User", "username": "parrt", "stars": 2040, "forks": 261, "subscribers": 48, "open_issues": 24, "topics": ["machine-learning", "scikit-learn", "python", "data-science", "xgboost", "decision-trees", "visualization", "random-forest", "model-interpretation"]}, {"id": 165457814, "repo_name": "m2cgen", "full_name": "BayesWitnesses/m2cgen", "description": "Transform ML models into a native code (Java, C, Python, Go, JavaScript, Visual Basic, C#, R, PowerShell, PHP, Dart, Haskell, Ruby, F#, Rust) with zero dependencies", "created": "2019-01-13 02:32:55", "language": "Python", "type": "Organization", "username": "BayesWitnesses", "stars": 2025, "forks": 178, "subscribers": 44, "open_issues": 22, "topics": ["machine-learning", "scikit-learn", "statistical-learning", "xgboost", "lightgbm", "java", "python", "c", "javascript", "go", "csharp", "php", "r", "dartlang", "statsmodels", "lightning", "haskell", "ruby", "rust"]}, {"id": 98725685, "repo_name": "practical-machine-learning-with-python", "full_name": "dipanjanS/practical-machine-learning-with-python", "description": "Master the essential skills needed to recognize and solve complex real-world problems with Machine Learning and Deep Learning by leveraging the highly popular Python Machine Learning Eco-system.", "created": "2017-07-29 10:31:36", "language": "Jupyter Notebook", "type": "User", "username": "dipanjanS", "stars": 1894, "forks": 1541, "subscribers": 165, "open_issues": 14, "topics": ["machine-learning", "deep-learning", "python", "classification", "clustering", "natural-language-processing", "computer-vision", "spacy", "nltk", "scikit-learn", "prophet", "time-series-analysis", "convolutional-neural-networks", "tensorflow", "keras", "statsmodels", "pandas", "jupyter", "notebook", "jupyter-notebook"]}, {"id": 33015554, "repo_name": "benchm-ml", "full_name": "szilard/benchm-ml", "description": "A minimal benchmark for scalability, speed and accuracy of commonly used open source implementations (R packages, Python scikit-learn, H2O, xgboost, Spark MLlib etc.) of the top machine learning algorithms for binary classification (random forests, gradient boosted trees, deep neural networks etc.).", "created": "2015-03-28 00:34:18", "language": "R", "type": "User", "username": "szilard", "stars": 1833, "forks": 337, "subscribers": 151, "open_issues": 10, "topics": ["machine-learning", "data-science", "r", "python", "gradient-boosting-machine", "random-forest", "deep-learning", "xgboost", "h2o", "spark"]}, {"id": 156218203, "repo_name": "mljar-supervised", "full_name": "mljar/mljar-supervised", "description": "Python package for AutoML on Tabular Data with Feature Engineering, Hyper-Parameters Tuning, Explanations and Automatic Documentation", "created": "2018-11-05 12:58:04", "language": "Python", "type": "Organization", "username": "mljar", "stars": 1812, "forks": 254, "subscribers": 34, "open_issues": 76, "topics": ["automl", "machine-learning", "automatic-machine-learning", "mljar", "data-science", "scikit-learn", "hyperparameter-optimization", "feature-engineering", "xgboost", "random-forest", "neural-network", "lightgbm", "catboost", "ensemble", "tuning-algorithm", "models-tuning", "hyper-parameters", "decision-tree", "shap", "automated-machine-learning"]}, {"id": 289107293, "repo_name": "FLAML", "full_name": "microsoft/FLAML", "description": "A fast library for AutoML and tuning.", "created": "2020-08-20 20:46:11", "language": "Python", "type": "Organization", "username": "microsoft", "stars": 1774, "forks": 234, "subscribers": 39, "open_issues": 28, "topics": ["automl", "hyperparam", "automated-machine-learning", "machine-learning", "data-science", "python", "jupyter-notebook", "hyperparameter-optimization", "random-forest", "scikit-learn", "deep-learning", "natural-language-processing", "natural-language-generation", "timeseries-forecasting", "classification", "regression", "tuning", "finetuning", "tabular-data"]}, {"id": 35460879, "repo_name": "pbpython", "full_name": "chris1610/pbpython", "description": "Code, Notebooks and Examples from Practical Business Python", "created": "2015-05-12 02:01:20", "language": "Jupyter Notebook", "type": "User", "username": "chris1610", "stars": 1758, "forks": 926, "subscribers": 189, "open_issues": 13, "topics": ["python", "pandas", "datascience", "scikit-learn", "data-analysis", "data-visualization"]}, {"id": 83605108, "repo_name": "python-cheat-sheet", "full_name": "juliangaal/python-cheat-sheet", "description": "Python Cheat Sheet NumPy, Matplotlib", "created": "2017-03-01 21:47:55", "language": "Python", "type": "User", "username": "juliangaal", "stars": 1745, "forks": 219, "subscribers": 73, "open_issues": 5, "topics": ["numpy", "python-cheat-sheets", "data-science", "python", "pandas", "scikit-learn"]}, {"id": 91879775, "repo_name": "DeepLearn", "full_name": "GauravBh1010tt/DeepLearn", "description": "Implementation of research papers on Deep Learning+ NLP+ CV in Python using Keras, Tensorflow and Scikit Learn.", "created": "2017-05-20 09:46:28", "language": "Python", "type": "User", "username": "GauravBh1010tt", "stars": 1732, "forks": 372, "subscribers": 113, "open_issues": 14, "topics": ["deep-learning", "nlp", "computer-vision", "audio-processing"]}, {"id": 163244728, "repo_name": "Data-science-best-resources", "full_name": "tirthajyoti/Data-science-best-resources", "description": "Carefully curated resource links for data science in one place", "created": "2018-12-27 03:51:46", "language": null, "type": "User", "username": "tirthajyoti", "stars": 1650, "forks": 662, "subscribers": 101, "open_issues": 0, "topics": ["data-science", "statistics", "machine-learning", "deep-learning", "neural-network", "python", "scikit-learn", "analytics", "aws", "data-wrangling", "visualization", "artificial-intelligence", "r", "sql", "database", "api", "reinforcement-learning", "online-course", "cheatsheet", "linux"]}, {"id": 110697473, "repo_name": "modAL", "full_name": "modAL-python/modAL", "description": "A modular active learning framework for Python", "created": "2017-11-14 14:01:15", "language": "Python", "type": "Organization", "username": "modAL-python", "stars": 1624, "forks": 236, "subscribers": 42, "open_issues": 71, "topics": ["scikit-learn", "machine-learning", "python", "active-learning", "machine-learning-library", "machine-learning-algorithms", "machine-learning-api", "active-learning-module", "bayesian-optimization"]}, {"id": 7549981, "repo_name": "parallel_ml_tutorial", "full_name": "ogrisel/parallel_ml_tutorial", "description": "Tutorial on scikit-learn and IPython for parallel machine learning", "created": "2013-01-10 22:31:26", "language": "Jupyter Notebook", "type": "User", "username": "ogrisel", "stars": 1575, "forks": 612, "subscribers": 182, "open_issues": 4, "topics": []}, {"id": 65155092, "repo_name": "auto_ml", "full_name": "ClimbsRocks/auto_ml", "description": "[UNMAINTAINED] Automated machine learning for analytics & production", "created": "2016-08-07 21:35:08", "language": "Python", "type": "User", "username": "ClimbsRocks", "stars": 1564, "forks": 306, "subscribers": 95, "open_issues": 187, "topics": ["machine-learning", "data-science", "automated-machine-learning", "gradient-boosting", "scikit-learn", "python", "machine-learning-pipelines", "machine-learning-library", "production-ready", "automl", "lightgbm", "analytics", "feature-engineering", "hyperparameter-optimization", "deep-learning", "xgboost", "keras", "deeplearning", "tensorflow", "artificial-intelligence"]}, {"id": 42127722, "repo_name": "sklearn_tutorial", "full_name": "jakevdp/sklearn_tutorial", "description": "Materials for my scikit-learn tutorial", "created": "2015-09-08 17:23:32", "language": "Jupyter Notebook", "type": "User", "username": "jakevdp", "stars": 1550, "forks": 883, "subscribers": 101, "open_issues": 7, "topics": []}, {"id": 40339399, "repo_name": "DAT8", "full_name": "justmarkham/DAT8", "description": "General Assembly's 2015 Data Science course in Washington, DC", "created": "2015-08-07 03:35:51", "language": "Jupyter Notebook", "type": "User", "username": "justmarkham", "stars": 1520, "forks": 1016, "subscribers": 113, "open_issues": 0, "topics": ["data-science", "machine-learning", "scikit-learn", "data-analysis", "pandas", "jupyter-notebook", "python", "course", "linear-regression", "logistic-regression", "model-evaluation", "naive-bayes", "natural-language-processing", "decision-trees", "ensemble-learning", "clustering", "regular-expressions", "web-scraping", "data-visualization", "data-cleaning"]}, {"id": 250267976, "repo_name": "scikit-learn-tips", "full_name": "justmarkham/scikit-learn-tips", "description": ":robot::zap: 50 scikit-learn tips", "created": "2020-03-26 13:36:57", "language": "Jupyter Notebook", "type": "User", "username": "justmarkham", "stars": 1464, "forks": 369, "subscribers": 113, "open_issues": 0, "topics": ["scikit-learn", "machine-learning", "python", "data-science", "data-school"]}, {"id": 153575541, "repo_name": "Hands-on-Machine-Learning", "full_name": "DeqianBai/Hands-on-Machine-Learning", "description": "A series of Jupyter notebooks with Chinese comment that walk you through the fundamentals of Machine Learning and Deep Learning in python using Scikit-Learn and TensorFlow.", "created": "2018-10-18 06:40:16", "language": "Jupyter Notebook", "type": "User", "username": "DeqianBai", "stars": 1418, "forks": 437, "subscribers": 72, "open_issues": 5, "topics": []}, {"id": 66331305, "repo_name": "mleap", "full_name": "combust/mleap", "description": "MLeap: Deploy ML Pipelines to Production", "created": "2016-08-23 03:51:03", "language": "Scala", "type": "Organization", "username": "combust", "stars": 1356, "forks": 292, "subscribers": 73, "open_issues": 89, "topics": ["scikit-learn", "spark", "data-pipelines", "transformers", "tensorflow", "scala", "python"]}, {"id": 69185281, "repo_name": "text-analytics-with-python", "full_name": "dipanjanS/text-analytics-with-python", "description": "Learn how to process, classify, cluster, summarize, understand syntax, semantics and sentiment of text data with the power of Python! This repository contains code and datasets used in my book, \"Text Analytics with Python\" published by Apress/Springer. ", "created": "2016-09-25 19:19:02", "language": "Jupyter Notebook", "type": "User", "username": "dipanjanS", "stars": 1346, "forks": 718, "subscribers": 117, "open_issues": 1, "topics": ["text-analytics", "text-summarization", "text-classification", "python", "natural-language", "natural-language-processing", "clustering", "sentiment", "semantic", "sentiment-analysis", "nltk", "stanford-nlp", "spacy", "pattern", "scikit-learn", "gensim"]}, {"id": 84231689, "repo_name": "xcessiv", "full_name": "reiinakano/xcessiv", "description": "A web-based application for quick, scalable, and automated hyperparameter tuning and stacked ensembling in Python.", "created": "2017-03-07 18:18:25", "language": "Python", "type": "User", "username": "reiinakano", "stars": 1264, "forks": 111, "subscribers": 54, "open_issues": 22, "topics": ["machine-learning", "ensemble-learning", "stacked-ensembles", "scikit-learn", "data-science", "hyperparameter-optimization", "automated-machine-learning"]}, {"id": 148876755, "repo_name": "data-science-complete-tutorial", "full_name": "edyoda/data-science-complete-tutorial", "description": "For extensive instructor led learning", "created": "2018-09-15 06:37:32", "language": "Jupyter Notebook", "type": "Organization", "username": "edyoda", "stars": 1257, "forks": 587, "subscribers": 64, "open_issues": 10, "topics": ["machine-learning", "scikit-learn", "linear-regression", "nearest-neighbors", "feature-selection", "decision-trees", "numpy", "pandas", "pipeline"]}, {"id": 114992691, "repo_name": "awesome-python-data-science", "full_name": "krzjoa/awesome-python-data-science", "description": "Probably the best curated list of data science software in Python.", "created": "2017-12-21 10:17:53", "language": null, "type": "User", "username": "krzjoa", "stars": 1249, "forks": 224, "subscribers": 51, "open_issues": 1, "topics": ["awesome", "awesome-list", "awesome-python", "scikit-learn", "python", "deep-learning", "machine-learning", "data-science", "data-visualization", "data-analysis", "statistics"]}, {"id": 146321178, "repo_name": "hyperlearn", "full_name": "danielhanchen/hyperlearn", "description": "Waiting hours for a future prediction is unacceptable. Hyperlearn makes AI and ML algorithms 50% faster, use 90% less memory and doesn't require you to use new hardware! ML Algorithms like PCA, Linear Regression, NMF are all faster!", "created": "2018-08-27 16:00:47", "language": "Jupyter Notebook", "type": "User", "username": "danielhanchen", "stars": 1237, "forks": 112, "subscribers": 82, "open_issues": 16, "topics": ["machine-learning", "python", "statistics", "scikit-learn", "statsmodels", "pytorch", "deep-learning", "data-science", "data-analysis", "regression-models", "econometrics", "tensor", "neural-network", "gpu", "research", "optimization"]}, {"id": 14063354, "repo_name": "metric-learn", "full_name": "scikit-learn-contrib/metric-learn", "description": "Metric learning algorithms in Python", "created": "2013-11-02 08:29:47", "language": "Python", "type": "Organization", "username": "scikit-learn-contrib", "stars": 1215, "forks": 224, "subscribers": 49, "open_issues": 53, "topics": ["python", "metric-learning", "scikit-learn", "machine-learning"]}, {"id": 403254193, "repo_name": "Some-Many-Books", "full_name": "Dujltqzv/Some-Many-Books", "description": "\u4e2a\u4eba\u6536\u85cf\u4e66\u7c4d\u5217\u8868\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 \u3000 \u3000 \u3000 \u3000 \u3000 \u3000 \u3000 \u3000 \u3000 \u3000 PDF\u4e0b\u8f7d \u767e\u5ea6\u4e91 \u7535\u5b50\u4e66\u4e0b\u8f7d =\u5a77\u9e3f\u90ed\u602a\u89cc\u75ae\u81fb\u70f7\u96c4\u814a\u5a03\u5404\u7095\u56dd\u3016\u7610\u7272\u80e1\u8fd0\u543e\u5480\u795e\u8b8a\u9d77\u60a0\u5162\u9976\u5df3\u8909\u8365\u94db\u634c\u52ad\u5e18\u6d78\u96f0\u5d4e\u681d\u8f97\u65a0\u5478\u8b96\u5ca3\u99a8\u59a8\u7eff\u945b\u9a09\u8be5\u51dd\u5588\u6f5b\u899c\u8d4b\u60df\u9aa4\u7f2a\u886e\u300d\u6143\u4e52\u699c\u216b\u9a83\u5f27\u9748\u9293\u9685\u5657\u5206\u52ab\u8ba8\u8ba9\u680b\u5040\u6591\u5b7a\u9a98\u5315\u6585\u57fa\u5881\u9526\u70e9\u7c95\u8110\u83f2\u500c\u7a91\u5a1f\u8eaf\u65d7\u579b\u8367\u57ad\u30d5\u7edb\u9c90\u30e7\u5434\u80b1\u68a6\u75e7\u82b6\u68d0\u80a1\u6289\u98d1\u62d0\u82ef\u79fd\u6669\u75ea\u8680\u5bb9\u4e73\u72cd\u4e1f\u78c9\u6d32\u59d4\u519b\u8c79\u774e\u8214\u041a\u9765\u6349\u93de\u52e4\u5c82\u8bd9\u6d6f\u039c\u79ed\u916c\u7cb5\u7250\u786e\u6f19\u742f\u7a0e\u658b\u70ed\u8d34\u6b3e\u73e0\u62d6\u7968\u88dc\u300b\u816d\u6015\u4e03\u7a42\u87be\u5f69\u8a45\u819b\u4e1d\u5bbe\u836b\u67f3\u629b\u5e45\u9634\u80c0\u7d71\u5e7d\u6897\u9517\u6877\u8693\u6593\u8c01\u94bd\u9882\u8fa3\u5f9b\u6cbf\u6b79\u64c5\u6db4\u903e\u532e\u60f3\u9669\u6355\u7d20\u0435\u6d39\u5582\u627d\u6028\u653b\u6050\u9c8d\u6f29\u3055\u81c2\u8272\u58eb\u817b\u7ccd\u949c\u53ea\u7a4d\u7d43\u6787\u6572\u52a9\u72ac\u7aef\u702c\u53c8\u9996\u94e6\u5631\u765c\u6496\u6d60\u4f63\u6630\u8b83\u8d3a\u8be4\u8e2a\u52fe\u7998\u7c7d\u563f\u9593\u7bc4\u9e5c\u859c\u62a5\u5591\u5367\u8ba5\u5e48\u9642\u4f19\u8585\u555f\u5cd9\u9ab6\u8fb1\u94ba\u86af\u577a\u9354\u7a83uf020\u6cd7\u777d\u98d2\u5da7\u9a97\u8c0b\u6539\u640f\u84c2\u6ea6\u764c\u89c2\u593a\u60f6\u6f3b\u8be1\u51a8\u9c24\u5f64\u9580\u7cec\u7d00\u7228\u6e3a\u5b58\u6851\u5c7e\u8ff5\u8ff8\u52a3\u85d5\u8349\u8bec\u7e87\u651d\u67c3\u80db\u5224\u4e81\u6939\u838e\u4e2d\u6f62\u3002\u5243\u256e\u5c0a\u504e\u8b07\u7696Y\u6d12\u5495\u6e66\u9b4d\u7960\u7f38\u61ba\u4f20\u5d3d\u7136\u8718\u94a8\u830e\u711a\u9fa2\u9ca2\u537f\u5eb8\u84e6\u729f\u5fb9\u9668\u56b4\u7cd5\u5428\u54cf\u5848\u7405\u8dd7\u548f\u8bcf\u53c9\u6771\u5ad6\u2166\u51db\u0418\u6b86\u57a4\u653f\u6620== \u300axDSL\u5bbd\u5e26\u63a5\u5165\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u97e9\u73b2/\u66fe\u5fd7\u6c11\u7b49\u7f16,\u300aPKPM\u5efa\u7b51\u7ed3\u6784\u8bbe\u8ba1\u8f6f\u4ef62008\u7248\u65b0\u529f\u80fd\u7965\u89e3A404 A407\u300bPDF\u4e0b\u8f7d_\u4e2d\u56fd\u5efa\u7b51\u79d1\u5b66\u7814\u7a76\u9662PKPMCAD\u5de5\u7a0b\u90e8,\u300aB\u7ec4\u592a\u76d1\u63a7\u8bbe\u8ba1\u4e0e\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u59da\u7acb\u6ce2\u4e3b\u7f16,\u300aC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1-\u7cbe\u9009\u8303\u4f8b\u89e3\u6790\u4e0e\u4e60\u9898\u300bPDF\u4e0b\u8f7d_\u989c\u6656,\u300aPhotoshop CS4\u4e2d\u6587\u7248\u5b9e\u8bad\u6807\u51c6\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u8bb8\u8389.\u4e8e\u8f89\u4e3b\u7f16,\u300a\u7f51\u9875\u8272\u5f69\u642d\u914d\u8bbe\u8ba1\u5e08\u5fc5\u5907\u5b9d\u5178\u300bPDF\u4e0b\u8f7d_\u5f20\u6653\u666f,\u300aPHP5.5\u4ece\u96f6\u5f00\u59cb\u5b66-(\u89c6\u9891\u6559\u5b66\u7248)\u300bPDF\u4e0b\u8f7d_\u5218\u589e\u6770,\u300aPhotoshop CC\u5e73\u9762\u8bbe\u8ba1\u5165\u95e8\u4e0e\u5b9e\u6218\u7ecf\u5178-(\u9644DVD1\u5f20.\u542b\u89c6\u9891\u8bb2\u89e3\u7d20\u6750\u6548\u679c\u56fe.\u914d\u5957\u5b66\u4e60\u8d44\u6e90\u7b49)\u300bPDF\u4e0b\u8f7d_\u552f\u7f8e\u6620\u50cf,\u300a\u5d4c\u5165\u5f0fARM\u5f00\u53d1\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\u5170\u5e03\u91cc\u5947,\u300a\u64cd\u4f5c\u7cfb\u7edf\u539f\u7406\u300bPDF\u4e0b\u8f7d_\u738b\u8fe4\u5189,\u300a3ds Max 2014+Vray\u6548\u679c\u56fe\u5236\u4f5c\u5165\u95e8\u4e0e\u5b9e\u6218\u7ecf\u5178-(\u9644DVD1\u5f20.\u542b\u89c6\u9891\u8bb2\u89e3\u7d20\u6750\u6548\u679c\u56fe.\u914d\u5957\u5b66\u4e60\u8d44\u6e90\u7b49)\u300bPDF\u4e0b\u8f7d_\u552f\u7f8e\u6620\u50cf,\u300a\u6570\u636e\u5206\u6790\u4e4b\u56fe\u7b97\u6cd5 \u57fa\u4e8eSpark\u548cNeo4j\u300bPDF\u4e0b\u8f7d_[\u82f1]\u9a6c\u514b\u00b7\u5c3c\u8fbe\u59c6\uff08M,\u300a\u4e91\u8ba1\u7b97SaaS\u670d\u52a1\u6f14\u5316\u300bPDF\u4e0b\u8f7d_\u4f55\u4fca,\u300aWord/Excel/PPT\u529e\u516c\u5e94\u7528\u6559\u7a0b\u4ece\u5165\u95e8\u5230\u7cbe\u901a\u300bPDF\u4e0b\u8f7d_\u8c22\u529b,\u300aMAYA\u5361\u901a\u52a8\u753b\u89d2\u8272\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u57fa\u601d\u00b7\u5965\u65af\u672c,\u300a\u6307\u6325\u4fe1\u606f\u7f51\u7edc\u300bPDF\u4e0b\u8f7d_\u674e\u6d77\u9f99\u4e3b\u7f16,\u300a\u5c0f\u578b\u5c40\u57df\u7f51\u7ec4\u5efa\u4e0e\u7ef4\u62a4(\u4fee\u8ba2\u7248)\u300bPDF\u4e0b\u8f7d_\u8d3e\u6c11\u653f,\u300a\u7f51\u7edc\u4e92\u8054\u6280\u672f\u4e0e\u5b9e\u8bad(\u4fee\u8ba2\u7248)\u300bPDF\u4e0b\u8f7d_\u6682\u65e0,\u300aAjax in pracfice jax\u5b9e\u6218\u5b9e\u4f8b\u8be6\u89e3\u300bPDF\u4e0b\u8f7d_\u683c\u96f7\u6069,\u300a\u4f1a\u8ba1\u7535\u7b97\u5316\u6848\u4f8b\u5b9e\u8bad\u300bPDF\u4e0b\u8f7d_\u5f20\u8000\u6b66,\u300a\u8ba1\u7b97\u673a\u5e94\u7528\u57fa\u7840\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u674e\u8d3a\u6c5f,\u300aPhotoshop CS4\u6570\u7801\u7167\u7247\u5904\u7406\u4e0e\u8bbe\u8ba1\u7ecf\u5178208\u4f8b-\u4e2d\u6587\u7248-(\u542b2DVD)\u300bPDF\u4e0b\u8f7d_\u9e93\u5c71\u6587\u5316,\u300aC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u8d3e\u5b97\u749e\uff0c\u8bb8\u5408\u5229\u8457,\u300aAutoCAD 2010\u4e2d\u6587\u7248\u5ba4\u5185\u88c5\u6f62\u8bbe\u8ba1-\u7b2c3\u7248-(\u542bDVD)\u300bPDF\u4e0b\u8f7d_\u80e1\u4ec1\u559c,\u300a\u4e8c\u7ef4\u52a8\u753b\u5236\u4f5c\u6280\u6cd5\u300bPDF\u4e0b\u8f7d_\u4e07\u5efa\u56fd,\u300aMAYA\u6750\u8d28-\u5b8c\u7f8e\u52a8\u529b\u5f71\u89c6\u52a8\u753b\u8bfe\u7a0b\u5b9e\u5f55-(\u542b2DVD)\u300bPDF\u4e0b\u8f7d_\u5b8c\u7f8e\u52a8\u529b\u7f16\u8457,\u300aMAYA\u52a8\u529b\u5b66-\u5b8c\u7f8e\u52a8\u529b\u5f71\u89c6\u52a8\u753b\u8bfe\u7a0b\u5b9e\u5f55-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u5b8c\u7f8e\u52a8\u529b\u8457,\u300a2012~2013-\u7535\u8111\u5e94\u7528\u7cbe\u534e\u672c-(1CD+\u624b\u518c)\u300bPDF\u4e0b\u8f7d_\u9ec4\u56fd\u8000,\u300a\u5317\u4eac\u5de5\u4e1a\u5927\u5b66\u7814\u7a76\u751f\u521b\u65b0\u6559\u80b2\u7cfb\u5217\u6559\u6750\u5d4c\u5165\u5f0f\u8f6f\u4ef6\u5f00\u53d1\u6280\u672f:\u5317\u4eac\u5de5\u4e1a\u5927\u5b66\u7814\u7a76\u751f\u521b\u65b0\u6559\u80b2\u7cfb\u5217\u8457\u4f5c\u300bPDF\u4e0b\u8f7d_\u4f55\u575a,\u300a\u57fa\u4e8e\u7f51\u7edc\u6587\u672c\u6316\u6398\u7684\u6295\u8d44\u8005\u60c5\u7eea\u5bf9\u80a1\u7968\u5e02\u573a\u98ce\u9669\u7684\u9884\u8b66\u7814\u7a76\u300bPDF\u4e0b\u8f7d_\u5f90\u5c0f\u9633\uff0c\u6768\u5ce5\u5d58\uff0c\u8def\u660e\u6167\u8457,\u300aVisual FoxPro\u6570\u636e\u5e93\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b/\u7ae0\u4f1f\u300bPDF\u4e0b\u8f7d_\u7ae0\u4f1f,\u300aSPSS\u7edf\u8ba1\u5206\u6790\u4e0e\u884c\u4e1a\u5e94\u7528\u6848\u4f8b\u8be6\u89e3-(\u7b2c\u4e09\u7248)-(\u57fa\u4e8eSPSS 22.0\u7248\u672c.\u4ea6\u9002\u752817.0-21.0\u7248\u672c)-DVD\u300bPDF\u4e0b\u8f7d_\u6768\u7ef4\u5fe0,\u300aCorelDRAW\u5e73\u9762\u89c6\u89c9\u521b\u610f300\u4f8b\u300bPDF\u4e0b\u8f7d_\u6768\u8def\u5e73,\u300a\u4e2d\u6587\u7248Photoshop CC\u56fe\u50cf\u5904\u7406\u5b9e\u7528\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5f20\u851a,\u300aCubase\u4e0eNuendo\u7535\u8111\u97f3\u4e50\u5236\u4f5c\u4ece\u5165\u95e8\u5230\u7cbe\u901a-(\u56fe\u89e3\u89c6\u9891\u7248 \u7b2c2\u7248)-\u9644DVD1\u5f20\u300bPDF\u4e0b\u8f7d_\u8881\u6dd1\u654f,\u300aDreamweaver CC\u7f51\u9875\u8bbe\u8ba1\u8fd9\u6837\u5b66\u5c31\u4f1a\u768414\u4e2a\u4ea4\u4e92\u8868\u5355+\u5b57\u4f53\u7f8e\u5316+CSS\u6837\u5f0f+HTML\u7f16\u8f91\u5173\u952e\u79d8\u6280\u300bPDF\u4e0b\u8f7d_\u90d1\u82d1\u51e4,\u300a\u4e2d\u6587\u7248After Effects CC\u827a\u672f\u8bbe\u8ba1\u5b9e\u8bad\u6848\u4f8b\u6559\u7a0b:\u5168\u5f69\u7248\u300bPDF\u4e0b\u8f7d_\u5d14\u70b3\u5fb7\u7f16\u8457,\u300aWord\u00b7Excel\u00b7PPT\u73b0\u4ee3\u5546\u52a1\u529e\u516c\u4ece\u65b0\u624b\u5230\u9ad8\u624b:\u7545\u9500\u5347\u7ea7\u7248:2013\u5168\u5f69\u5370\u5237\u300bPDF\u4e0b\u8f7d_\u5fb7\u80dc\u4e66\u574a\u7f16\u8457,\u300a\u57fa\u4e8e\u9879\u76ee\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7b80\u660e\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u4f55\u6587\u5b66[\u7b49]\u7f16\u8457,\u300a\u5de5\u4e1a\u7bc7-3DS MAX 2012\u6a21\u578b\u5236\u4f5c\u57fa\u7840\u4e0e\u6848\u4f8b-(\u542b1CD)\u300bPDF\u4e0b\u8f7d_\u6768\u9662\u9662,\u300a\u4fe1\u606f\u6280\u672f\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u6556\u5efa\u534e,\u300a\u4e2d\u6587\u7248PHOTOSHOP CS6\u5168\u80fd\u4e00\u672c\u901a\u300bPDF\u4e0b\u8f7d_\u7f57\u6653\u7433,\u300aPROJECT 2019\u4e2d\u6587\u7248\u9879\u76ee\u7ba1\u7406\u4ece\u5165\u95e8\u5230\u7cbe\u901a\u300bPDF\u4e0b\u8f7d_\u5f20\u82b3\u82b3,\u300a\u62d2\u7edd\u4f4e\u6548:\u9006\u88ad\u5427,WORD\u83dc\u9e1f/WORD\u8fd9\u6837\u7528\u6700\u9ad8\u6548\u300bPDF\u4e0b\u8f7d_\u674e\u73c9,\u300a\u6df1\u5ea6\u5b66\u4e60\u7cfb\u5217\u7cbe\u901aTENSORFLOW\u300bPDF\u4e0b\u8f7d_[\u7f8e]\u963f\u66fc\u591a\u00b7\u51e1\u4e39\u6208\uff08ArmandoF,\u300a\u5927\u5b66\u8ba1\u7b97\u673a\u57fa\u7840\u6848\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u6731\u4f1f\u534e,\u300a\u73b0\u4ee3CAD\u57fa\u7840\u4e0e\u5e94\u7528\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u5218\u5b50\u5efa\uff0c\u53f6\u5357\u6d77\u7f16\u8457,\u300aC++\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u674e\u5170//\u4efb\u51e4\u534e//\u548c\u6e29,\u300a\u822a\u7a7a\u822a\u5929\u7cbe\u54c1\u7cfb\u5217\u81ea\u52a8\u63a7\u5236\u539f\u7406\u300bPDF\u4e0b\u8f7d_\u674e\u9053\u6839\u4e3b\u7f16,\u300a\u73b0\u4ee3\u63a7\u5236\u7406\u8bba\u53ca\u5176MATLAB\u5b9e\u73b0\u300bPDF\u4e0b\u8f7d_\u97e9\u81f4\u4fe1,\u300aJava\u865a\u62df\u673a\u89c4\u8303-(Java SE 8\u7248)\u300bPDF\u4e0b\u8f7d_\u6797\u970d\u5c14\u59c6,\u300a\u8ba1\u7b97\u673a\u63a7\u5236\u6280\u672f \u7b2c2\u7248\u300bPDF\u4e0b\u8f7d_\u7f57\u4e91\u6797,\u300aUG NX 5.0\u5de5\u7a0b\u5e94\u7528\u7cbe\u89e3\u4e1b\u4e66:UG NX 5.0\u6a21\u5177\u8bbe\u8ba1\u5b9e\u4f8b\u7cbe\u89e3\u300bPDF\u4e0b\u8f7d_\u6682\u65e0,\u300a\u9ad8\u7b49\u5b66\u6821\u8ba1\u7b97\u673a\u57fa\u7840\u6559\u6750:\u7f51\u9875\u8bbe\u8ba1\u4e0e\u5236\u4f5c\u5b9e\u8bad\u4e0e\u8003\u8bd5\u6307\u5bfc\u300bPDF\u4e0b\u8f7d_\u674e\u4eac\u6587\u4e3b\u7f16,\u300a\u8ba1\u7b97\u673a\u8f85\u52a9\u7ffb\u8bd1\u300bPDF\u4e0b\u8f7d_\u94b1\u591a\u79c0\u4e3b\u7f16,\u300aAcutoCAD 2011\u673a\u68b0\u8bbe\u8ba1\u5b8c\u5168\u81ea\u5b66\u624b\u518c-\u542b1DVD\u300bPDF\u4e0b\u8f7d_\u674e\u6ce2\u7b49\u7f16\u8457,\u300a\u65b0\u624b\u6613\u5b66\u7535\u8111\u529e\u516c-\u5168\u5f69\u5370\u5237\u7248-\u6d53\u7f29\u7cbe\u534e\u672c-\u9644\u5149\u76d8\u300bPDF\u4e0b\u8f7d_\u6682\u65e0,\u300a\u6570\u636e\u91c7\u96c6\u4e0e\u5904\u7406\u6280\u672f-(\u7b2c3\u7248)\u300bPDF\u4e0b\u8f7d_\u9a6c\u660e\u5efa,\u300aAutoCAD 2012\u4e2d\u6587\u7248\u5165\u95e8.\u8fdb\u9636.\u7cbe\u901a-\u7b2c2\u7248-\u542b1CD\u300bPDF\u4e0b\u8f7d_\u949f\u65e5\u94ed\u7b49\u7f16\u8457,\u300a\u4ece\u7b97\u6cd5\u5230\u7a0b\u5e8f-\u7834\u89e3\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u5965\u79d8\u300bPDF\u4e0b\u8f7d_\u5f90\u5b50\u73ca\u8457,\u300a51\u5355\u7247\u673a\u5e94\u7528\u5f00\u53d125\u4f8b-\u57fa\u4e8eProteus\u4eff\u771f\u300bPDF\u4e0b\u8f7d_\u5f20\u65b0\uff0c\u9648\u8dc3\u7434\u7f16\u8457,\u300aAndroid \u8f6f\u4ef6\u5b89\u5168\u4e0e\u9006\u5411\u5206\u6790\u300bPDF\u4e0b\u8f7d_\u4e30\u751f\u5f3a\u8457,\u300a\u9a6f\u72ee\u8bb0\u2014\u2014Mac OS X 10.8 Mountain Lion\u4f7f\u7528\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u9648\u660e\uff0c\u5f20\u94ee\uff0c\u9a6c\u7389\u9f99\u7f16\u8457,\u300aPhotoshop CS6\u4e2d\u6587\u7248\u56fe\u50cf\u5904\u7406(\u914d\u5149\u76d8)(\u65b0\u8d77\u70b9\u7535\u8111\u6559\u7a0b)\u300bPDF\u4e0b\u8f7d_\u6587\u6770\u4e66\u9662,\u300a\u591a\u5a92\u4f53\u6280\u672f\u53ca\u5e94\u7528  \u5341\u4e00\u4e94\u300bPDF\u4e0b\u8f7d_\u8d75\u82f1\u826f,\u300a\u5c3c\u5eb7D600\u6570\u7801\u5355\u53cd\u6444\u5f71\u4ece\u5165\u95e8\u5230\u7cbe\u901a\u300bPDF\u4e0b\u8f7d_\u795e\u9f99,\u300a\u7b11\u8c08\u8f6f\u4ef6\u5de5\u7a0b:\u70fd\u70df\u4e2d\u7684\u654f\u6377\u300bPDF\u4e0b\u8f7d_\u9648\u5efa\u6751,\u300a\u7f51\u9875\u7a0b\u5e8f\u8bbe\u8ba1 HTML\u3001JavaScript\u3001CSS\u3001XHTML\u3001Ajax(\u7b2c\u4e09\u7248)(\u914d\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u9648\u60e0\u8d1e,\u300aWindows Server2008\u7f51\u7edc\u4e92\u8054\u548c\u7f51\u7edc\u8bbf\u95ee\u4fdd\u62a4\u53c2\u8003\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u4faf\u5f65\u5a25,\u300a\u73a9\u8f6c\u7535\u5546\u7cfb\u7edf-\u6df1\u5165\u5256\u6790\u667a\u6167\u7535\u5546\u5e73\u53f0\u300bPDF\u4e0b\u8f7d_\u97e9\u519b,\u300a\u7f51\u7edc\u5927\u4e8b\u8bb0\u7bc7-\u4e2d\u56fd\u4e92\u8054\u7f5120\u5e74\u300bPDF\u4e0b\u8f7d_\u56fd\u5bb6\u4e92\u8054\u7f51\u4fe1\u606f\u529e\u516c\u5ba4,\u300a\u7f51\u7edc\u63a7\u5236\u4e0e\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u5f20\u6167\u7965,\u300a\u6570\u636e\u4ed3\u5e93\u4e0e\u6570\u636e\u6316\u6398\u6559\u7a0b(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u9648\u6587\u4f1f,\u300a\u5927\u5b66\u8ba1\u7b97\u673a\u300bPDF\u4e0b\u8f7d_\u738b\u79fb\u829d,\u300aPHP\u7a0b\u5e8f\u8bbe\u8ba1\u6848\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u90dd\u5f3a,\u300a\u534e\u4e3a\u4ea4\u6362\u673a \u5b66\u4e60\u6307\u5357 (\u7b2c\u4e8c\u7248)\u300bPDF\u4e0b\u8f7d_\u738b\u8fbe,\u300a\u5168\u56fd\u5927\u5b66\u751f\u79fb\u52a8\u5e94\u7528\u8bbe\u8ba1\u7ade\u8d5b\u6307\u5357\u300bPDF\u4e0b\u8f7d_\u949f\u5143\u751f,\u300a\u8ba1\u7b97\u673a\u5e94\u7528\u57fa\u7840(Windows 7 + Office 2010) \u7b2c2\u7248\u300bPDF\u4e0b\u8f7d_\u5f20\u6210\u53d4,\u300a\u7f51\u7ad9\u5efa\u8bbe\u4e0e\u7f51\u9875\u8bbe\u8ba1\u6848\u4f8b\u6559\u7a0b-(\u542b1CD)\u300bPDF\u4e0b\u8f7d_\u6768\u6d77,\u300a\u529e\u516c\u81ea\u52a8\u5316\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u674e\u5f3a\u534e,\u300aC51\u5355\u7247\u673a\u9879\u76ee\u8bbe\u8ba1\u5b9e\u8df5\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u9093\u67f3\uff0c\u9648\u5349\u4e3b\u7f16,\u300a\u8ba1\u7b97\u673a\u901a\u4fe1\u6280\u672f21\u4e16\u7eaa\u9ad8\u7b49\u9662\u6821\u4fe1\u606f\u4e0e\u901a\u4fe1\u5de5\u7a0b\u89c4\u5212\u6559\u6750\u300bPDF\u4e0b\u8f7d_\u5f20\u73ba\u541b\u7b49\u7f16\u8457,\u300a\u96f6\u57fa\u7840\u5b66AutoCAD2012\u7535\u6c14\u5236\u56fe\u5de5\u7a0b\u5e94\u7528-\u5149\u76d8\u5185\u542b\u8d85\u503c\u6e90\u6587\u4ef6\u548c\u64cd\u4f5c\u89c6\u9891\u300bPDF\u4e0b\u8f7d_\u5f20\u7acb\u5bcc,\u300aDreamweaver CS5+ASP\u52a8\u6001\u7f51\u7ad9\u5efa\u8bbe\u4ece\u5165\u95e8\u5230\u7cbe\u901a-\u7b2c2\u7248-\u542b1CD\u300bPDF\u4e0b\u8f7d_\u9648\u76ca\u624d,\u300a\u6c49\u5b57\u5f55\u5165\u4e0e\u7f16\u8f91\u6280\u672f(\u7b2c5\u7248)\u300bPDF\u4e0b\u8f7d_\u738b\u5f0f\u6770\uff0c\u90dd\u5065\uff0c\u859b\u70b3\u6960\u7f16,\u300a3dx Max\u5f71\u89c6\u5305\u88c5\u6750\u8d28\u6e32\u67d3\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u7cbe\u9e70\u4f20\u5a92,\u300aAdobe Acrobat X1\u7ecf\u5178\u6559\u7a0b-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_Adobe\u516c\u53f8,\u300a\u8ba9\u4e91\u843d\u5730\u4e91\u8ba1\u7b97\u670d\u52a1\u6a21\u5f0f-(SaaS.PaaS\u548claaS)\u8bbe\u8ba1\u51b3\u7b56\u300bPDF\u4e0b\u8f7d_\u51ef\u7ef4\u65af,\u300a21\u5929\u5b66\u901aVisual Basic-\u7b2c4\u7248-(\u542bDVD\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u9a6c\u519b,\u300a21\u5929\u5b66\u901aC\u8bed\u8a00-\u7b2c4\u7248-(\u542bDVD\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u5218\u857e,\u300aFPGA\u8bbe\u8ba1\u6280\u5de7\u4e0e\u6848\u4f8b\u5f00\u53d1\u8be6\u89e3-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u97e9\u5f6c,\u300a21\u5929\u5b66\u901aVisual C++-\u7b2c4\u7248-(\u542bDVD\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u5f20\u6606,\u300a\u5c0f\u767d\u5b66SAS\u300bPDF\u4e0b\u8f7d_\u51af\u56fd\u53cc,\u300a\u7a81\u7834\u5e73\u9762:\u6570\u7801\u6444\u5f71\u4e0e\u6444\u50cf\u6280\u672f\u5256\u6790\u300bPDF\u4e0b\u8f7d_\u5b89\u5c0f\u9f99,\u300aSAS\u9ad8\u7ea7\u7edf\u8ba1\u5206\u6790\u6559\u7a0b-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u80e1\u826f\u5e73,\u300aR\u8bed\u8a00\u6570\u636e\u53ef\u89c6\u5316\u4e4b\u7f8e:\u4e13\u4e1a\u56fe\u8868\u7ed8\u5236\u6307\u5357(\u589e\u5f3a\u7248)\u300bPDF\u4e0b\u8f7d_\u5f20\u6770,\u300a\u8865\u5929\u7cfb\u5217\u4e1b\u4e66\u535a\u5f08\u7cfb\u7edf\u8bba:\u5ba2\u884c\u4e3a\u9884\u6d4b\u4e0e\u7ba1\u7406\u300bPDF\u4e0b\u8f7d_\u6768\u4e49\u5148,\u300a\u5343\u91d1\u826f\u65b9:MYSQL\u6027\u80fd\u4f18\u5316\u91d1\u5b57\u5854\u6cd5\u5219\u300bPDF\u4e0b\u8f7d_\u674e\u6625,\u300a\u5927\u5b66\u8ba1\u7b97\u673a\u57fa\u7840/\u79e6\u6d77\u7389/\u666e\u901a\u9ad8\u7b49\u6559\u80b2\u89c4\u5212\u6559\u6750\u300bPDF\u4e0b\u8f7d_\u79e6\u6d77\u7389,\u300a\u4e2d\u8001\u5e74\u4eba\u5b66\u89c6\u9891\u7f16\u8f91-\u4f1a\u58f0\u4f1a\u5f71X7\u5168\u7a0b\u56fe\u89e3\u89c6\u9891\u6559\u7a0b-(\u5168\u5f69)-(\u542bDVD\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u5f20\u5fc3,\u300a\u7cbe\u54c1\u6559\u7a0b AUTO CAD \u88c5\u4fee\u65bd\u5de5\u56fe\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u674e\u79c0\u5a1f,\u300aH5\u521b\u610f\u4e0e\u5e7f\u544a\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u6559\u80b2\u90e8\u6559\u80b2\u7ba1\u7406\u4fe1\u606f\u4e2d\u5fc3\u7ec4\u7f16\u5f6d\u6f8e,\u300a\u6db2\u51b7\u9769\u547d\u300bPDF\u4e0b\u8f7d_\u674e\u6d01\u7b49,\u300aPHOTOSHOP CS6/ILLUSTRATOR CS6/CORELDRAW X7/INDESIGN CS6\u6807\u51c6\u57f9\u8bad\u6559\u300bPDF\u4e0b\u8f7d_\u6570\u5b57\u827a\u672f\u6559\u80b2\u7814\u7a76\u5ba4,\u300a\u7f51\u7edc/\u5b89\u5168PHP\u5b89\u5168\u4e4b\u9053 \u9879\u76ee\u5b89\u5168\u7684\u67b6\u6784.\u6280\u672f\u4e0e\u5b9e\u8df5\u300bPDF\u4e0b\u8f7d_\u683e\u6d9b,\u300a\u7f51\u7edc\u5b89\u5168\u7406\u8bba\u53ca\u5b9e\u6218\u7814\u7a76\u300bPDF\u4e0b\u8f7d_\u5c1a\u7389\u83b2\u8457,\u300a\u6587\u672c\u4fe1\u606f\u5904\u7406\u300bPDF\u4e0b\u8f7d_\u5f20\u4e16\u535a\u8457,\u300aAI.\u672a\u6765\u300bPDF\u4e0b\u8f7d_\u674e\u5f00\u590d,\u300a\u7f51\u7edc\u5a92\u4f53\u7bc7-\u4e2d\u56fd\u4e92\u8054\u7f5120\u5e74\u300bPDF\u4e0b\u8f7d_\u56fd\u5bb6\u4e92\u8054\u7f51\u4fe1\u606f\u529e\u516c\u5ba4,\u300aPro/ENGINEER\u4e2d\u6587\u91ce\u706b\u72485.0\u66f2\u9762\u8bbe\u8ba1\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u8a79\u53cb\u521a\u4e3b\u7f16,\u300aR\u8bed\u8a00\u5e02\u573a\u7814\u7a76\u5206\u6790\u300bPDF\u4e0b\u8f7d_\u514b\u91cc\u65af.\u67e5\u666e\u66fc,\u300aFlash CS6 \u52a8\u753b\u5236\u4f5c\u300bPDF\u4e0b\u8f7d_\u4e25\u78ca,\u300a\u5c0f\u6bd4\u7279\u7684\u4e09\u7ef4\u6253\u5370\u5386\u9669\u8bb0\u300bPDF\u4e0b\u8f7d_\u6768\u6653\u54f2,\u300a2016-Autodesk Inventor\u4e2d\u6587\u7248\u5b9e\u64cd\u5b9e\u7ec3\u300bPDF\u4e0b\u8f7d_\u80e1\u4ec1\u559c,\u300aARM Cortex-M4+Wi-Fi MCU\u5e94\u7528\u6307\u5357-CC3200IAD\u57fa\u7840\u7bc7\u300bPDF\u4e0b\u8f7d_\u90ed\u4e66\u519b,\u300a\u6e38\u620f\u5b89\u5168-\u624b\u6e38\u5b89\u5168\u6280\u672f\u5165\u95e8\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u4e09\u7ef4\u6e38\u620f\u5f15\u64ce\u8bbe\u8ba1\u4e0e\u5b9e\u73b0-(\u542b\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u803f\u536b\u4e1c,\u300aAndroid\u5e94\u7528\u5f00\u53d1\u63ed\u79d8\u300bPDF\u4e0b\u8f7d_\u6768\u4e30\u76db\u8457,\u300a\u5d4c\u5165\u5f0f\u5fae\u63a7\u5236\u5668\u4e0e\u5904\u7406\u5668\u8bbe\u8ba1(\u82f1\u6587\u7248)\u300bPDF\u4e0b\u8f7d_\uff08\u7f8e\uff09\u5965\u65af\u672c\u8457,\u300aWindows Vista\u5b8c\u5168\u5b66\u4e60\u624b\u518c:\u4e2d\u6587\u7248\u300bPDF\u4e0b\u8f7d_\u6770\u8bda\u6587\u5316\u7f16\u8457,\u300aSolid Works2007\u673a\u68b0\u5efa\u6a21\u4e0e\u5de5\u7a0b\u5b9e\u4f8b\u5206\u6790-(\u9644\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u9093\u529b,\u300a\u5bb9\u8fdf\u7f51\u7edc\u4e2d\u7684\u8def\u7531\u7b97\u6cd5\u300bPDF\u4e0b\u8f7d_\u674e\u5efa\u6ce2,\u300aAndroid\u7cfb\u7edf\u5b89\u5168\u4e0e\u653b\u9632\u300bPDF\u4e0b\u8f7d_\u675c\u8d1d,\u300a\u7528\u5b9e\u4f8b\u8bf4\u8bdd\u8be6\u89e3UG NX9.0\u6807\u51c6\u6559\u7a0b-(\u542bDVD\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u5218\u660c\u4e3d,\u300aAutoCAD2016\u4e2d\u6587\u7248\u5ba4\u5185\u8bbe\u8ba1\u5b9e\u4f8b\u6559\u7a0b-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u80e1\u4ec1\u559c,\u300a\u591a\u5a92\u4f53\u5b9e\u7528\u6280\u672f-(\u7b2c3\u7248)\u300bPDF\u4e0b\u8f7d_\u5f20\u5c0f\u5ddd,\u300aFlash\u52a8\u753b\u5236\u4f5c\u7efc\u5408\u5b9e\u4f8b-(\u542b\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u5218\u6d01,\u300aC\u6307\u9488-\u57fa\u672c\u6982\u5ff5.\u6838\u5fc3\u6280\u672f\u53ca\u6700\u4f73\u5b9e\u8df5\u300bPDF\u4e0b\u8f7d_\u62d3\u5965\u666e,\u300aLinux\u64cd\u4f5c\u7cfb\u7edf\u6848\u4f8b\u6559\u7a0b-\u7b2c2\u7248\u300bPDF\u4e0b\u8f7d_\u5f6d\u82f1\u6167,\u300a\u81ea\u7136\u8bed\u8a00\u5904\u7406\u539f\u7406\u4e0e\u6280\u672f\u5b9e\u73b0\u300bPDF\u4e0b\u8f7d_\u7f57\u521a,\u300a\u65b0\u624b\u5b66Flash CS6\u4e2d\u6587\u7248\u52a8\u753b\u5236\u4f5c\u5b8c\u5168\u81ea\u5b66\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u6587\u6770\u4e66\u9662,\u300aSaItStack\u8fd0\u7ef4\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\u5218\u82f1\u6770,\u300aReact\u7cbe\u9ad3\u300bPDF\u4e0b\u8f7d_\u8d39\u591a\u8036\u592b,\u300a\u7075\u52a8\u6f14\u7ece-\u6e38\u620f\u52a8\u753b\u8bbe\u8ba1\u6307\u5357\u300bPDF\u4e0b\u8f7d_\u9ea6\u534e\u4e1c,\u300a\u673a\u5668\u5b66\u4e60\u5b9e\u6218-\u57fa\u4e8eScikit-Learn\u548cTensorFlow\u300bPDF\u4e0b\u8f7d_\u5965\u96f7\u5229\u5b89.\u6770\u9f99,\u300aPro/ENGINEER Wildfire\u6a21\u5177\u8bbe\u8ba1\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u6d2a\u4eae\u4e3b\u7f16,\u300aMAYA\u6a21\u578b.\u6e32\u67d3.\u52a8\u753b.\u7279\u6548\u5b8c\u5168\u57f9\u8bad\u8bb2\u5ea7-\u667a\u6167\u56fe\u4e6615(\u542b4DVD)\u300bPDF\u4e0b\u8f7d_\u5218\u7545,\u300a\u4ecePrinavere(P3e/c)\u5b66\u4e60\u9879\u76ee\u7ba1\u7406\u300bPDF\u4e0b\u8f7d_\u4f55\u4e30,\u300aInternet\u6280\u672f\u4e0e\u5e94\u7528\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5c1a\u6653\u822a,\u300a\u5b9e\u7528\u5316\u5b66\u4fe1\u606f\u5b66\u300bPDF\u4e0b\u8f7d_\u4ed8\u4e91\u829d\u4e3b\u7f16,\u300a\u4e92\u8054\u7f51\u6276\u8d2b\u4e66\u300bPDF\u4e0b\u8f7d_\u4e92\u52a8\u767e\u79d1\u4e3b\u7f16,\u300a\u4fe1\u606f\u5b89\u5168\u98ce\u9669\u8bc4\u4f30\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5434\u6653\u5e73\uff0c\u4ed8\u94b0\u7f16\u8457,\u300aPremiere Pro CS5\u89c6\u9891\u7f16\u8f91\u526a\u8f91\u5236\u4f5c\u7cbe\u7cb9208\u4f8b-(\u914d2\u5f20DVD\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u725f\u8273\u971e\u7b49\u7f16\u8457,\u300a\u4fe1\u606f\u6280\u672f\u53ca\u5176\u5e94\u7528(\u7b2c\u4e09\u7248)(\u516c\u5171\u7ba1\u7406\u7855\u58eb(MPA)\u7cfb\u5217\u6559\u6750)\u300bPDF\u4e0b\u8f7d_\u5f20\u7ef4\u660e\u4e3b\u7f16,\u300a\u4eba\u5de5\u667a\u80fd\u53ca\u5176\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u8521\u81ea\u5174,\u300a\u8ba1\u7b97\u673a\u5e94\u7528\u57fa\u7840(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u9648\u6377,\u300a\u8ba1\u7b97\u673a\u79d1\u5b66\u5bfc\u8bba\u5b66\u4e60\u6307\u5bfc\u4e0e\u4e60\u9898\u89e3\u7b54\u300bPDF\u4e0b\u8f7d_\u96f7\u8bfa\u5179(CarlReynolds),\u300a\u8ba1\u7b97\u673a\u529e\u516c\u81ea\u52a8\u5316\u5b9e\u7528\u6559\u7a0b-(Windows XP+Office 2007)\u300bPDF\u4e0b\u8f7d_\u5218\u5c0f\u8c6b,\u300aMapInfo6.0\u5e94\u7528\u5f00\u53d1\u6307\u5357\u300bPDF\u4e0b\u8f7d_\u4e09\u5473\u5de5\u4f5c\u5ba4,\u300aPhotoshop CS5\u6807\u51c6\u6559\u7a0b-(\u914d1\u5f20DVD\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u96f7\u6ce2,\u300aJava\u7a0b\u5e8f\u8bbe\u8ba1-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u6731\u559c\u798f,\u300a\u591a\u5a92\u4f53\u6280\u672f\u6559\u7a0b-\u7b2c2\u7248\u300bPDF\u4e0b\u8f7d_\u6731\u6d01\u7b49\u7f16\u8457,\u300aVisual C++\u5f00\u53d1\u5de5\u5177\u5b9e\u7528\u6307\u5357\u300bPDF\u4e0b\u8f7d_\u3014\u7f8e\u3015\u96f7\u90a3\u514b\u8457,\u300a\u7cbe\u901aFrontPage2000\u4e2d\u6587\u7248\u300bPDF\u4e0b\u8f7d_\u4f55\u5065\u8f89\u7f57\u6636\u8463\u65b9\u9e4f,\u300aExcel\u7684\u4e00\u5343\u96f6\u4e00\u591c-(\u4e00)\u300bPDF\u4e0b\u8f7d_\u4e00\u5b8f,\u300aWEB\u5353\u8d8a\u5de5\u7a0b\u5e08\u6848\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u6c34\u5229\u6c34\u7535\u51fa\u7248\u793e,\u300a3ds Max&Vray\u5ba4\u5185\u6e32\u67d3\u706b\u661f\u8bfe\u5802-\u7b2c3\u7248-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u706b\u661f\u65f6\u4ee3,\u300a\u4f20\u611f\u5668\u539f\u7406\u53ca\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u8def\u656c\u794e\u4e3b\u7f16,\u300a\u6570\u636e\u79d1\u5b66\u5b9e\u6218\u901f\u67e5\u8868(\u7b2c1\u8f91)\u300bPDF\u4e0b\u8f7d_\u6b27\u9ad8\u708e\uff0c\u664f\u6653\u4e1c\uff0c\u9ad8\u626c,\u300a\u9ad8\u6548\u80fd\u4eba\u58eb\u90fd\u5728\u7528\u7684\u5de5\u4f5c\u6cd5-Excel\u4f1a\u8ba1\u4e0e\u8d22\u52a1\u804c\u573a\u5b9e\u8df5\u6280\u6cd5\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aReact Native\u8de8\u5e73\u53f0\u79fb\u52a8\u5e94\u7528\u5f00\u53d1\u300bPDF\u4e0b\u8f7d_\u9619\u559c\u6d9b,\u300a\u5927\u6570\u636e\u5206\u6790\u65b9\u6cd5\u9879\u76ee\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\u5929\u6d25\u6ee8\u6d77\u8fc5\u817e\u79d1\u6280\u96c6\u56e2\u6709\u9650\u516c\u53f8,\u300a\u5927\u6570\u636e\u7efc\u5408\u5e94\u7528\u9879\u76ee\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\u5929\u6d25\u6ee8\u6d77\u8fc5\u817e\u79d1\u6280\u96c6\u56e2\u6709\u9650\u516c\u53f8,\u300aAuto CAD\u5efa\u7b51\u7ed8\u56fe\u4e0e\u5929\u6b63\u5efa\u7b51\u5b9e\u4f8b\u6559\u7a0b-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u8d75\u6b66,\u300aExcel\u516c\u5f0f\u4e0e\u51fd\u6570\u5927\u8f9e\u5178-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u5b8b\u7fd4,\u300a\u4eba\u56e0\u5de5\u7a0b\u5b66\u300bPDF\u4e0b\u8f7d_\u5415\u6770\u950b\u4e3b\u7f16,\u300aAutoCAD2010\u4e2d\u6587\u7248\u4ece\u5165\u95e8\u5230\u7cbe\u901a(\u7b2c\u4e8c\u7248)(\u7535\u8111\u5165\u95e8\u5230\u7cbe\u901a\u7cfb\u5217\u4e1b\u4e66)\u300bPDF\u4e0b\u8f7d_\u6587\u6770\u4e66\u9662,\u300aFlash5\u5b9e\u4f8b\u4e0e\u64cd\u4f5c\u300bPDF\u4e0b\u8f7d_\u8d75\u5065\u658c,\u300aASP+SQLServer\u6570\u636e\u5e93\u5f00\u53d1\u4e0e\u5b9e\u4f8b\u300bPDF\u4e0b\u8f7d_\u5468\u5174\u534e,\u300a\u52a8\u529bCAXA\u5236\u9020\u5de5\u7a0b\u5e08\u57fa\u7840\u7406\u8bba\u53ca\u7ecf\u5178\u6848\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u9c81\u541b\u5c1a,\u300a\u9053\u8def\u666f\u89c2\u89c4\u5212\u8bbe\u8ba1\u8f6f\u4ef6\u2014\u2014UC-win/Road \u5b9e\u7528\u6559\u7a0b(\u542b\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u9a6c\u667a\u4eae\uff0c\uff08\u65e5\uff09\u4f0a\u85e4\u88d5\u4e8c\uff0c\uff08\u65e5\uff09\u6b66\u4e95\u5343\u96c5\u5b50\u8457,\u300aAutoCAD 2010\u4e2d\u6587\u7248 \u5e02\u653f\u56ed\u6797\u65bd\u5de5\u56fe\u5341\u65e5\u901a(\u542b\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u5218\u5b81\uff0c\u80e1\u4ec1\u559c\uff0c\u5218\u660c\u4e3d\u8457,\u300aMCS-51\u5355\u7247\u673a\u7cfb\u7edf\u7684\u5e94\u7528\u4e0e\u5b9e\u8df5\u300bPDF\u4e0b\u8f7d_\u65b9\u73ae,\u300a\u65e0\u7ebf\u5c40\u57df\u7f51\u5e94\u7528\u6280\u672f(\u573a\u666f\u9879\u76ee\u5f0f)/\u9ec4\u541b\u7fa1\u7b49\u300bPDF\u4e0b\u8f7d_\u9ec4\u541b\u7fa1\u6c6a\u53cc\u9876,\u300aC#\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b/\u9648\u5a1c\u7b49\u300bPDF\u4e0b\u8f7d_\u9648\u5a1c\u4ed8\u6c9b,\u300aSQL Server2008\u6570\u636e\u5e93\u5e94\u7528\u4e0e\u5f00\u53d1\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u9c81\u5927\u6797,\u300aUnrealEngin4\u53ef\u89c6\u5316\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_Shannon,\u300a\u7f51\u7edc\u4fe1\u606f\u4f53\u7cfb\u6784\u5efa\u65b9\u6cd5\u548c\u63a2\u7d22\u5b9e\u8df5\u300bPDF\u4e0b\u8f7d_\u4e2d\u56fd\u7535\u5b50\u79d1\u6280\u96c6\u56e2\u516c\u53f8\u53d1\u5c55\u6218\u7565\u7814\u7a76\u4e2d\u5fc3,\u300abash\u7f51\u7edc\u5b89\u5168\u8fd0\u7ef4\u300bPDF\u4e0b\u8f7d_Paul,\u300a\u5927\u8bdd\u4e07\u7269\u611f\u77e5:\u4ece\u4f20\u611f\u5668\u5230\u7269\u8054\u7f51\u300bPDF\u4e0b\u8f7d_\u738b\u632f\u4e16,\u300a\u533a\u5757\u94fe\u667a\u80fd\u5408\u7ea6\u4e0eDApp\u5e94\u7528\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\u674e\u5347\u66be,\u300aVERICUT 8.2\u6570\u63a7\u4eff\u771f\u5e94\u7528\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5f20\u952e,\u300aNOdejs+EXpress+VUEJS\u9879\u76ee\u5f00\u53d1\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\u5f20\u65ed,\u300a\u5927\u6570\u636e\u9690\u79c1\u4fdd\u62a4\u6280\u672f\u4e0e\u6cbb\u7406\u673a\u5236\u7814\u7a76\u300bPDF\u4e0b\u8f7d_\u6bdb\u5178\u8f89,\u300a\u8f6f\u4ef6\u5f00\u53d1\u5fae\u89c6\u9891\u8bb2\u5802C#\u4ece\u5165\u95e8\u5230\u7cbe\u901a(\u5fae\u89c6\u9891\u7cbe\u7f16\u7248)\u300bPDF\u4e0b\u8f7d_\u660e\u65e5\u79d1\u6280,\u300a\u8f6f\u4ef6\u5f00\u53d1\u89c6\u9891\u5927\u8bb2\u5802VISUAL C++\u4ece\u5165\u95e8\u5230\u7cbe\u901a(\u7b2c5\u7248)\u300bPDF\u4e0b\u8f7d_\u660e\u65e5\u79d1\u6280,\u300a\u7f51\u7ad9\u5f00\u53d1\u6848\u4f8b\u8bfe\u5802CSS3+DIV\u7f51\u9875\u6837\u5f0f\u4e0e\u5e03\u5c40\u6848\u4f8b\u8bfe\u5802(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u5218\u6625\u8302,\u300a\u673a\u5668\u4eba\u7231\u597d\u8005 \u7b2c7\u8f91\u300bPDF\u4e0b\u8f7d_SERVO\u6742\u5fd7,\u300aPROTEL 99SE\u7535\u8def\u8bbe\u8ba1\u5b9e\u4f8b\u6559\u7a0b(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u5218\u5fd7\u53cb\u3001\u6c64\u56ed\u56ed\u3001\u9ad8\u5cf0\u3001\u5218\u5764,\u300aVISUAL C#\u4ece\u5165\u95e8\u5230\u7cbe\u901a(\u7b2c9\u7248)\u300bPDF\u4e0b\u8f7d_[\u82f1]\u7ea6\u7ff0\u00b7\u590f\u666e\uff08JohnSharp\uff09,\u300a\u6e05\u534e\u8ba1\u7b97\u673a\u56fe\u4e66\u8bd1\u4e1b\u8ba1\u7b97\u673a\u5b89\u5168(\u7b2c4\u7248)\u300bPDF\u4e0b\u8f7d_\uff08\u7f8e\uff09\u5170\u8fea\u00b7\u535a\u4f0a\u5c14\uff08RandyJ.,\u300aWINDOWS SERVER 2012\u7f51\u7edc\u64cd\u4f5c\u7cfb\u7edf\u4f01\u4e1a\u5e94\u7528\u6848\u4f8b\u8be6\u89e3\u300bPDF\u4e0b\u8f7d_\u6768\u4e91,\u300aJSP\u5e94\u7528\u4e0e\u5f00\u53d1\u6280\u672f(\u7b2c3\u7248)\u300bPDF\u4e0b\u8f7d_\u9a6c\u5efa\u7ea2\u3001\u674e\u5b66\u76f8\u3001\u97e9\u9896\u3001\u738b\u745e\u5a1f\u3001\u5f20\u6657,\u300aMINECRAFT\u6211\u7684\u4e16\u754c:PE\u624b\u673a\u7248\u5b8c\u5168\u653b\u7565\u300bPDF\u4e0b\u8f7d_\u3010\u65e5\u3011KK\u7f16\u8f91\u7ec4,\u300a\u4e2d\u6587\u7248CINEMA 4D R18 \u5b9e\u7528\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u4efb\u5a9b\u5a9b,\u300a\u6838\u5fc3\u6280\u672f\u5185\u5e55\u786c\u4ef6\u8bbe\u5907\u4e0e\u7f51\u7edc\u63a5\u53e3\u6280\u672f\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u8ba1\u7b97\u673a\u6280\u672f\u5f00\u53d1\u4eba\u5458\u5b9d\u5178\u4e1b\u4e66\u7f16\u59d4\u4f1a,\u300a\u79cb\u6c34\u4f0a\u4eba-\u552f\u7f8e\u53e4\u98ceCG\u63d2\u753b\u6280\u6cd5\u300bPDF\u4e0b\u8f7d_\u871c\u6843\u8001\u5e08,\u300aTomcat\u4e0eJavaWeb\u5f00\u53d1\u6280\u672f\u8be6\u89e3\u300bPDF\u4e0b\u8f7d_\u5b59\u536b\u7434,\u300a\u6838\u5fc3\u6280\u672f\u5185\u5e55\u9ad8\u7ea7\u7528\u6237\u548c\u7cfb\u7edf\u7ba1\u8def\u5458\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u8ba1\u7b97\u673a\u6280\u672f\u5f00\u53d1\u4eba\u5458\u5b9d\u5178\u4e1b\u4e66\u7f16\u59d4\u4f1a,\u300aDIy2001\u7b2c\u4e09\u53ea\u773c\u4e70\u7535\u8111\u300bPDF\u4e0b\u8f7d_\u8d56\u4f1f\u627f,\u300aHope3DR3.0\u9ad8\u7ea7\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5e0c\u671b\u8f6f\u4ef6\u90e8,\u300a\u4e09\u7ef4\u601d\u60f3\u4e0e\u521b\u610f\u300bPDF\u4e0b\u8f7d_\u94c1\u725b,\u300a\u73e0\u8054\u74a7\u5408\u5b8c\u5168\u5236\u4f5c\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u5f20\u52b2\u5e73,\u300a\u6570\u636e\u6316\u6398       \u7b2c2\u7248\u300bPDF\u4e0b\u8f7d_\u6731\u660e\u7f16\u8457,\u300a\u7f51\u7edc\u7efc\u5408\u5e03\u7ebf(\u5168\u56fd\u5e94\u7528\u578b\u4eba\u624d\u57f9\u517b\u5de5\u7a0b\u6307\u5b9a\u6559\u6750)\u300bPDF\u4e0b\u8f7d_\u6768\u5803,\u300aVisualBasic\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u675c\u79cb\u534e\u4e3b\u7f16,\u300aCoreIDRAW  X3\u4e2d\u6587\u7248\u56fe\u5f62\u5236\u4f5c\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u90ed\u4e07\u519b,\u300aIAR EWARM V5\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5e94\u7528\u7f16\u7a0b\u4e0e\u5f00\u53d1(\u542b\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u5f90\u7231\u94a7,\u300a\u5b8c\u7f8e\u98ce\u66b43DSMAX/VRAY\u5ba4\u5185\u6548\u679c\u56fe\u6e32\u67d3\u6280\u672f\u7cbe\u7cb9\u300bPDF\u4e0b\u8f7d_\u738b\u6653\u5149,\u300a\u8f6f\u4ef6\u9879\u76ee\u7ba1\u7406(\u7b2c\u4e8c\u7248)\u300bPDF\u4e0b\u8f7d_\u8983\u5f81,\u300aCX5625\u4e2d\u6587\u7248Photoshop CS4\u6570\u7801\u7167\u7247\u5904\u7406\u4ece\u65b0\u624b\u5230\u9ad8\u624b(\u542b\u76d8)\u300bPDF\u4e0b\u8f7d_\u601d\u7ef4\u6570\u7801,\u300acx5480\u4e2d\u6587\u7248InDesignCS3\u7248\u5f0f\u8bbe\u8ba1\u5165\u95e8\u4e0e\u63d0\u9ad8\u300bPDF\u4e0b\u8f7d_\u9648\u67cf\u6da6,\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u5e94\u7528\u6280\u672f2010\u7248-\u5ba1\u8ba1\u7f72\u8ba1\u7b97\u673a\u5ba1\u8ba1\u4e2d\u7ea7\u57f9\u8bad\u7cfb\u5217\u6559\u6750\u300bPDF\u4e0b\u8f7d_\u8d75\u5b87,\u300a\u5927\u5b66\u4fe1\u606f\u5316\u4e0e\u8d44\u6e90\u8ba1\u5212\u7ba1\u7406\u300bPDF\u4e0b\u8f7d_\u5f20\u5e73\u4f1f,\u300a\u6570\u636e\u5e93\u539f\u7406\u53ca\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u738b\u96ef,\u300a\u6570\u5b57\u5316\u8bbe\u8ba1\u4e0e\u5236\u9020-\u7b2c2\u7248\u300bPDF\u4e0b\u8f7d_\u82cf\u6625\u4e3b\u7f16,\u300a\u591a\u5a92\u4f53\u8bbe\u8ba1\u827a\u672f\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u5f20\u96ea\u8389\u4e3b\u7f16,\u300a3D\u6e38\u620f\u8bbe\u8ba1\u4e0e\u5f00\u53d1\u300bPDF\u4e0b\u8f7d_\u5434\u541b\u80dc\uff0c\u7f57\u4f1f\uff0c\u90b1\u8d5e\u626c\u4e3b\u7f16,\u300aPro/ENGINEER\u6a21\u5177\u8bbe\u8ba1\u6559\u7a0b-(2001\u4e2d\u6587\u7248)(\u542b1CD)\u300bPDF\u4e0b\u8f7d_\u8a79\u53cb\u521a,\u300a\u5c0f\u7a0b\u5e8f,\u5de7\u5e94\u7528-\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u5f00\u53d1\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\u718a\u666e\u6c5f,\u300a\u56fe\u5f62\u56fe\u50cf\u5904\u7406(CORELDRAW X8)/\u5305\u4e4b\u660e\u300bPDF\u4e0b\u8f7d_\u7f16\u8005:\u5305\u4e4b\u660e,\u300aAI\u8fdb\u5316\u8bba:\u89e3\u7801\u4eba\u5de5\u667a\u80fd\u5546\u4e1a\u573a\u666f\u4e0e\u6848\u4f8b\u300bPDF\u4e0b\u8f7d_\u7f16\u8005:\u4ebf\u6b27\u667a\u5e93,\u300a\u52a8\u6001\u8d1d\u53f6\u65af\u7f51\u7edc\u667a\u80fd\u4fe1\u606f\u5904\u7406\u53ca\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u8096\u79e6\u7428\uff0c\u9ad8\u5d69\u7f16\u8457,\u300a\u4e2d\u6587\u7248Photoshop\u4ece\u96f6\u5f00\u59cb\u5b8c\u5168\u7cbe\u901a\u300bPDF\u4e0b\u8f7d_\u6881\u4e3a\u6c11\uff0c\u67cf\u677e\u4e3b\u7f16,\u300a\u7cbe\u901aMONGODB 3.X\u300bPDF\u4e0b\u8f7d_[\u7f8e]\u4e9a\u5386\u514b\u65af\u00b7\u5409\u739b\u65af\u8457\u9648\u51ef,\u300a\u8f6f\u4ef6\u5f00\u53d1\u89c6\u9891\u5927\u8bb2\u5802VISUAL BASIC\u4ece\u5165\u95e8\u5230\u7cbe\u901a(\u7b2c5\u7248)\u300bPDF\u4e0b\u8f7d_\u660e\u65e5\u79d1\u6280,\u300a\u4e2d\u6587\u7248LabVIEW 2018\u4ece\u5165\u95e8\u5230\u7cbe\u901a:\u5b9e\u6218\u6848\u4f8b\u7248\u300bPDF\u4e0b\u8f7d_\u5929\u5de5\u5728\u7ebf\u7f16\u8457,\u300a\u4e2d\u6587\u7248UG NX8\u673a\u68b0\u4e0e\u4ea7\u54c1\u9020\u578b\u8bbe\u8ba1\u5b9e\u4f8b\u7cbe\u8bb2\u300bPDF\u4e0b\u8f7d_\u9e93\u5c71\u79d1\u6280\u7f16\u8457,\u300a\u7f51\u7edc\u6848\u4f8b\u300bPDF\u4e0b\u8f7d_\u9648\u5175,\u300a\u8ba1\u7b97\u673a\u5e94\u7528\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u6797\u609f,\u300aAutoCAD\u4e2d\u6587\u7248\u57fa\u7840\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u8d75\u5251\u6ce2,\u300a\u8ba1\u7b97\u673a\u7f51\u7edc:\u7406\u8bba\u4e0e\u5b9e\u9a8c\u300bPDF\u4e0b\u8f7d_\u6f58\u4f1f[\u7b49]\u7f16\u8457,\u300aPerform-3D\u5728\u6297\u9707\u5f39\u5851\u6027\u5206\u6790\u4e0e\u7ed3\u6784\u6027\u80fd\u8bc4\u4f30\u4e2d\u7684\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u5218\u535a\u6587[\u7b49]\u7f16\u8457,\u300a\u4eff\u751f\u81ea\u7ec4\u7ec7\u673a\u5668\u4eba\u7cfb\u7edf\u300bPDF\u4e0b\u8f7d_(\u7f8e)\u5b5f\u8273\uff0c(\u5fb7)\u91d1\u8000\u521d\u4e3b\u7f16,\u300a\u5fae\u9605\u8bfb1+1\u5de5\u7a0b:\u884c\u8d70\u7684\u623f\u5b50\u300bPDF\u4e0b\u8f7d_\u9648\u67f3\u91d1,\u300a\u79fb\u52a8\u4e92\u8054\u7f51\u4e4b\u8def-HTML5+CSS3+jQuery Mobile APP\u4e0e\u79fb\u52a8\u7f51\u7ad9\u8bbe\u8ba1\u4ece\u5165\u95e8\u5230\u7cbe\u901a-DVD-ROM\u300bPDF\u4e0b\u8f7d_\u674e\u6653\u658c,\u300aHibernate\u5b9e\u6218-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u514b\u91cc\u65af\u8482\u5b89.\u9c8d\u5c14,\u300a\u79fb\u52a8\u4e92\u8054\u7f51\u4e4b\u8def-Axure RP8.0\u7f51\u7ad9\u4e0eAPP\u539f\u578b\u8bbe\u8ba1\u4ece\u5165\u95e8\u5230\u7cbe\u901a-DVD-ROM\u300bPDF\u4e0b\u8f7d_\u6768\u9633,\u300a\u5b9e\u6218\u9700\u6c42\u5206\u6790\u300bPDF\u4e0b\u8f7d_\u6768\u957f\u6625,\u300aC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u5b9e\u8bad\u300bPDF\u4e0b\u8f7d_\u6768\u653f\u548c,\u300a\u73b0\u573a\u603b\u7ebf\u6280\u672f\u53ca\u5176\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u7518\u6c38\u6885,\u300a51\u5355\u7247\u673aC\u8bed\u8a00\u7f16\u7a0b\u4ece\u5165\u95e8\u5230\u7cbe\u901a\u300bPDF\u4e0b\u8f7d_\u8521\u674f\u5c71\u4e3b\u7f16,\u300aPHOTOSHOP\u56fe\u50cf\u5904\u7406\u9ad8\u7ea7\u5e94\u7528/\u7fdf\u79cb\u83ca\u300bPDF\u4e0b\u8f7d_\u7fdf\u79cb\u83ca\u3001\u5b8b\u6587\u5cf0\u4e3b\u7f16,\u300a\u7f51\u7edc\u7ecf\u6d4e:\u5185\u751f\u7ed3\u6784\u7684\u590d\u6742\u6027\u7ecf\u6d4e\u5b66\u5206\u6790\u300bPDF\u4e0b\u8f7d_\u59dc\u5947\u5e73,\u300aC/C++\u5e38\u7528\u7b97\u6cd5\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u9648\u9ece\u5a1f\u7f16\u8457,\u300aWeb UI\u524d\u7aef\u6846\u67b6\u5e94\u7528\u4e0e\u5f00\u53d1\u2014\u2014JQuery+BootStrap\u300bPDF\u4e0b\u8f7d_\u6768\u6653\u5149\u4e3b\u7f16,\u300a3ds Max\u89d2\u8272\u8bbe\u8ba1\u5b9e\u4f8b\u7cbe\u8bb2\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u9648\u8d3b\u54c1\uff0c\u5321\u6210\u5b9d\u7f16\u8457,\u300aSQLServer2005\u62a5\u8868\u670d\u52a1\u4ece\u5165\u95e8\u5230\u7cbe\u901a\u300bPDF\u4e0b\u8f7d_\u7c73\u65af\u52d2,\u300aANSYS\u5de5\u7a0b\u5206\u6790\u8fdb\u9636\u5b9e\u4f8b-\u4fee\u8ba2\u7248\u300bPDF\u4e0b\u8f7d_\u9648\u6d2a\u519b,\u300a\u5929\u6b63\u5efa\u7b51Tarch 2014\u5b8c\u5168\u5b9e\u6218\u6280\u672f\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u9648\u5fd7\u6c11,\u300a\u79fb\u52a8\u4e92\u8054\u7f51\u4e4b\u8def-APP\u4ea4\u4e92\u52a8\u753b\u8bbe\u8ba1\u4ece\u5165\u95e8\u5230\u7cbe\u901a-After Effects\u7bc7-DVD-ROM\u300bPDF\u4e0b\u8f7d_\u674e\u4e07\u519b,\u300a\u79fb\u52a8\u4e92\u8054\u7f51\u4e4b\u8def-APP UI\u8bbe\u8ba1\u4ece\u5165\u95e8\u5230\u7cbe\u901a-Photoshop\u7bc7-DVD-ROM\u300bPDF\u4e0b\u8f7d_\u5f20\u6653\u666f,\u300a\u5e73\u9762\u8bbe\u8ba1\u5e08\u804c\u4e1a\u6559\u7a0b-(IIIustrator\u6280\u80fd\u5b9e\u8bad)\u300bPDF\u4e0b\u8f7d_\u6768\u529b,\u300a\u5b8c\u5168\u7cbe\u901aNuendo\u7535\u8111\u97f3\u4e50\u53ca\u97f3\u9891\u5236\u4f5c\u7cbe\u7ec6\u64cd\u4f5c\u4e0e\u5b9e\u8df5\u6307\u5357\u300bPDF\u4e0b\u8f7d_\u949f\u91d1\u864e,\u300a\u8ddf\u7740Apple\u53d1\u5e03\u4f1a\u5b66\u505aKeynote\u6f14\u793a\u300bPDF\u4e0b\u8f7d_iMike,\u300aCocoa\u548cObjective-C\u6784\u5efa\u548c\u8fd0\u884c\u300bPDF\u4e0b\u8f7d_(\u7f8e)\u53f2\u8482\u6587\u68ee,\u300a\u8ba1\u7b97\u673a\u5b9e\u7528\u57fa\u7840-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u5f20\u4e16\u9f99\uff0c\u5218\u653f\u5b87\u4e3b\u7f16,\u300a\u7a0b\u5e8f\u5458\u9762\u8bd5\u7b14\u8bd5\u771f\u9898\u4e0e\u89e3\u6790\u300bPDF\u4e0b\u8f7d_\u4f55\u660a,\u300aExcel\u4f1a\u8ba1\u4e0e\u8d22\u52a1\u5b9e\u6218\u6280\u5de7\u7cbe\u7cb9\u8f9e\u5178(\u5168\u65b0\u591a\u5a92\u4f53GIF\u7248)\u300bPDF\u4e0b\u8f7d_\u5fb7\u80dc\u4e66\u574a,\u300aWord/Excel\u5b9e\u6218\u6280\u5de7\u7cbe\u7cb9\u8f9e\u5178(\u5168\u65b0\u591a\u5a92\u4f53GIF\u7248)\u300bPDF\u4e0b\u8f7d_\u5fb7\u80dc\u4e66\u574a,\u300a\u4e2d\u6587\u7248AutoCAD\u8f85\u52a9\u8bbe\u8ba1\u6848\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u6bdb\u749e,\u300a\u4e2d\u6587\u7248CorelDRAW X7\u5e73\u9762\u8bbe\u8ba1\u6848\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u6bdb\u749e,\u300a\u4e2d\u6587\u7248Photoshop CS6\u6848\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u738b\u5b87,\u300aUG NX 11.0\u6570\u63a7\u52a0\u5de5\u5b9e\u4f8b\u7cbe\u89e3\u300bPDF\u4e0b\u8f7d_\u5317\u4eac\u5146\u8fea\u79d1\u6280\u6709\u9650\u516c\u53f8,\u300aCDMA2000\u65e0\u7ebf\u7f51\u7edc\u89c4\u5212\u4e0e\u4f18\u5316\u300bPDF\u4e0b\u8f7d_\u59da\u7f8e\u83f1\u3001\u5434\u84ec\u52c3\u3001\u5f20\u661f\u4e3b\u7f16,\u300a\u6df1\u5ea6\u89e3\u6790Oracle-\u5b9e\u6218\u4e0e\u63d0\u9ad8\u300bPDF\u4e0b\u8f7d_\u4ed8\u57f9\u5229,\u300aASp\u7f16\u7a0b\u9ad8\u624b\u300bPDF\u4e0b\u8f7d_\u7f16\u7a0b\u9ad8\u624b\u5de5\u4f5c\u5ba4,\u300a\u5b9e\u7528\u57fa\u672c\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u64cd\u4f5c\u6280\u80fd\u57f9\u8bad\u6559\u6750,\u300aCX5432\u4e2d\u6587\u7248DreamweaverCS3\u5b9e\u6218\u5b66\u4e60119\u4f8b\u300bPDF\u4e0b\u8f7d_\u601d\u7f16\u6570\u7801,\u300a\u8ba1\u7b97\u673a\u53ca\u5916\u8bbe\u7ec4\u88c5\u7ef4\u4fee\u6559\u7a0b\u4e0e\u5b9e\u8bad\u300bPDF\u4e0b\u8f7d_\u9b4f\u671d\u9633,\u300a\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u5b9e\u8df5\u6559\u7a0b(VisualC++\u7248)\u300bPDF\u4e0b\u8f7d_\u5b54\u4ee4\u5fb7,\u300a\u529e\u516c\u81ea\u52a8\u5316\u8bd5\u9898\u6c47\u7f16\u300bPDF\u4e0b\u8f7d_\u8d75\u4e1c\u65ed\u4e3b\u7f16,\u300a\u6570\u636e\u7ed3\u6784\u5b9e\u9a8c\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u4e25\u51b0,\u300aSolidWorks 2012\u4e2d\u6587\u7248\u5de5\u7a0b\u8bbe\u8ba1\u901f\u5b66\u901a-\u542b1DVD\u300bPDF\u4e0b\u8f7d_\u738b\u654f,\u300aUG NX 8.0\u4e2d\u6587\u7248\u5de5\u7a0b\u8bbe\u8ba1\u901f\u5b66\u901a-\u542b1CD\u300bPDF\u4e0b\u8f7d_\u738b\u654f,\u300aHadoop\u5b9e\u6218-\u7b2c2\u7248\u300bPDF\u4e0b\u8f7d_\u9646\u5609\u6052,\u300aWindows 8 \u4ece\u5165\u95e8\u5230\u7cbe\u901a\u300bPDF\u4e0b\u8f7d_\u6052\u76db\u6770\u8d44\u8baf\u8457,\u300a\u65b0\u7f16\u4e2d\u6587\u72483ds Max 2013\u6807\u51c6\u6559\u7a0b-(\u542b1CD)\u300bPDF\u4e0b\u8f7d_\u718a\u6625\u7f16\u8457,\u300a\u6570\u636e\u4e4b\u7f8e-\u4e00\u672c\u4e66\u5b66\u4f1a\u53ef\u89c6\u5316\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u90b1\u5357\u68ee,\u300aAutoCAD2006\u5efa\u7b51\u5236\u56fe\u5b9e\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u738b\u82b3,\u300aC++\u7a0b\u5e8f\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u4e01\u4e9a\u6d9b,\u300aPremiere Pro CS3\u4ece\u5165\u95e8\u5230\u7cbe\u901a-(\u9644\u8d601DVD.\u542b\u8bed\u97f3\u89c6\u9891\u6559\u5b66)\u300bPDF\u4e0b\u8f7d_\u5c16\u5cf0\u79d1\u6280\u7f16\u8457,\u300aPhotoshop CS3\u5e73\u9762\u5e7f\u544a\u8bbe\u8ba1-(\u9644\u8d601CD.\u542b\u8bed\u97f3\u89c6\u9891\u6559\u5b66)\u300bPDF\u4e0b\u8f7d_\u90ed\u8513\u8513\u7f16\u8457,\u300a\u7535\u5b50\u5546\u52a1\u6982\u8bba\u300bPDF\u4e0b\u8f7d_\u674e\u6d2a\u5fc3,\u300aAdobe Illustrator \u56fe\u5f62\u8bbe\u8ba1\u4e0e\u5236\u4f5c\u6807\u51c6\u5b9e\u8bad\u6559\u7a0b-(CS6\u4fee\u8ba2\u7248)\u300bPDF\u4e0b\u8f7d_\u674e\u971c,\u300a\u65b0\u624b\u5b66Word/Excel/PowerPoint\u529e\u516c\u5e94\u7528-\u8d85\u503c\u7545\u9500\u7248-(\u9644\u8d60DVD\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u535a\u667a\u4e66\u82d1,\u300a\u8ba1\u7b97\u673a\u7ec4\u88c5\u4e0e\u7ef4\u62a4\u300bPDF\u4e0b\u8f7d_\u9648\u56fd\u5148\u4e3b\u7f16,\u300a\u96c6\u6563\u63a7\u5236\u4e0e\u73b0\u573a\u603b\u7ebf-\u7b2c2\u7248\u300bPDF\u4e0b\u8f7d_\u5218\u56fd\u6d77\u4e3b\u7f16,\u300a\u5fae\u578b\u8ba1\u7b97\u673a\u539f\u7406\u53ca\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u8bb8\u7acb\u6893\u7b49\u7f16,\u300a\u6a21\u5177CAD\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u738b\u4e49\u6797\u4e3b\u7f16,\u300a\u6e38\u620f\u5f15\u64ce\u67b6\u6784(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\uff08\u7f8e\uff09JasonGregory\uff08\u6770\u68ee\u00b7,\u300aOffice\u529e\u516c\u4e13\u5bb6\u4ece\u5165\u95e8\u5230\u7cbe\u901a-(\u9644\u8d60DVD\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u67cf\u677e,\u300a\u6570\u636e\u7ed3\u6784(Java\u8bed\u8a00\u63cf\u8ff0)\u3010\u7b2c\u4e8c\u7248\u3011\u300bPDF\u4e0b\u8f7d_\u5e93\u6ce2,\u300aPHP\u57fa\u7840\u6848\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u9a86\u534e\uff0c\u5f90\u8f89\uff0c\u80e1\u715c\u4e3b\u7f16,\u300a\u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb\u5217\u6559\u6750PASCAL\u7a0b\u5e8f\u8bbe\u8ba1(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u90d1\u542f\u534e,\u300a\u8ba1\u7b97\u673a\u8f85\u52a9\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u9ec4\u60e0\u5ec9\u4e3b\u7f16,\u300a\u5355\u7247\u673a\u539f\u7406\u53ca\u5178\u578b\u5e94\u7528\u63a5\u53e3\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u5218\u752b\uff0c\u9648\u5065\u7f8e\u7f16\u8457,\u300aAutoCAD\u7ed8\u56fe\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u6682\u65e0,\u300aPhotoshop\u6570\u7801\u7167\u7247\u5904\u7406\u5b8c\u5168\u81ea\u5b66\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u80d6\u9e1f\u5de5\u4f5c\u5ba4,\u300a\u4e2d\u6587\u7248Photoshop CC\u5b9e\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5f20\u4e15\u519b,\u300a\u4ea7\u54c1\u8bbe\u8ba1\u8ba1\u7b97\u673a\u5feb\u901f\u8868\u8fbe-Photoshop.SAI\u53ca\u6570\u4f4d\u677f-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u5f20\u84d3\u84d3,\u300a\u5b89\u5353\u7f16\u7a0b\u6307\u5357\u53ca\u7269\u8054\u7f51\u5f00\u53d1\u5b9e\u8df5\u300bPDF\u4e0b\u8f7d_\u9648\u5fd7\u5fb7,\u300aPython\u7edd\u6280-\u8fd0\u7528Python\u6210\u4e3a\u9876\u7ea7\u9ed1\u5ba2\u300bPDF\u4e0b\u8f7d_\u5965\u79d1\u7f57,\u300aMATLAB\u6570\u503c\u5206\u6790\u300bPDF\u4e0b\u8f7d_\u5f20\u5fb7\u4e30,\u300aPhotoshop CS6\u56fe\u5f62\u56fe\u50cf\u5904\u7406-\u5fae\u8bfe\u7248\u300bPDF\u4e0b\u8f7d_\u5468\u5efa\u56fd,\u300aPowerPoint 2013\u73b0\u4ee3\u5546\u52a1\u529e\u516c\u6848\u4f8b\u7cbe\u8bb2-(\u542b\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u80e1\u56fd\u950b,\u300a\u5730\u533a\u7ec4\u7ec7\u7f51\u7edc\u5b89\u5168\u6cbb\u7406\u300bPDF\u4e0b\u8f7d_\u8096\u83b9\u83b9\u8457,\u300a\u6c34\u6587\u7edf\u8ba1\u4e2d\u7684EXCEL VBA\u300bPDF\u4e0b\u8f7d_\u7ae5\u6d77\u6ee8[\u7b49]\u7f16\u8457,\u300aWeb\u5e94\u53d8\u4e4b\u9053\u300bPDF\u4e0b\u8f7d_\u62c9\u5c14\u68ee,\u300aArduino\u521b\u5ba2\u4e4b\u8def\u2014\u2014\u667a\u80fd\u611f\u77e5\u6280\u672f\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u5218\u4f1f\u5584,\u300a\u9ad8\u6548\u529e\u516c\u4e0d\u6c42\u4eba-169\u62db\u8f7b\u677e\u73a9\u8f6cWord/Excel/PPT\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u4e2d\u6587\u7248Photoshop CC\u5b8c\u5168\u81ea\u5b66\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u51e4\u51f0\u9ad8\u65b0\u6559\u80b2,\u300aOffice 2013\u9ad8\u6548\u529e\u516c\u6848\u4f8b\u7cbe\u8bb2-(\u542b\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u66f9\u6c38\u534e,\u300aSwift\u5f00\u53d1\u624b\u518c\u6280\u5de7\u4e0e\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\u9648\u521a,\u300aExcel 2013\u516c\u53f8\u4e0e\u8d22\u52a1\u7ba1\u7406\u6848\u4f8b\u7cbe\u8bb2-(\u542b\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u7530\u5cf0,\u300a\u57fa\u7840\u77e5\u8bc6-Java\u6838\u5fc3\u6280\u672f-\u4e0a-\u5377I(\u4e0a.\u4e0b\u518c)-(\u7b2c10\u7248.\u82f1\u6587\u7248)\u300bPDF\u4e0b\u8f7d_\u970d\u65af\u7279\u66fc,\u300aWeb \u7a0b\u5e8f\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u5409\u6839\u6797,\u300aVisual FoxPro\u5b9e\u7528\u6559\u7a0b-(\u7b2c3\u7248)\u300bPDF\u4e0b\u8f7d_\u90d1\u963f\u5947,\u300aRSS AND Atom IN ACTION-(\u4e2d\u6587\u7248)\u300bPDF\u4e0b\u8f7d_\u7ea6\u7ff0\u900a,\u300aADOBE AFTER EFFECTS CS4\u6807\u51c6\u57f9\u8bad\u6559\u6750\u300bPDF\u4e0b\u8f7d_\u5218\u5f3a,\u300aC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1(\u7b2c\u4e09\u7248)\u300bPDF\u4e0b\u8f7d_\u4e01\u4e9a\u6d9b,\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u674e\u4e91\u5cf0,\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840\u5b9e\u8bad\u300bPDF\u4e0b\u8f7d_\u674e\u4e91\u5cf0,\u300aFlash\u52a8\u753b\u57fa\u7840\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u9ad8\u8273,\u300aVisualFoxPro\u7a0b\u5e8f\u8bbe\u8ba1(\u7b2c\u4e8c\u7248)\u300bPDF\u4e0b\u8f7d_\u738b\u6c38\u56fd,\u300a\u6570\u636e\u5e93\u6280\u672f\u4e0e\u5e94\u7528-SQL server 2005\u300bPDF\u4e0b\u8f7d_\u5218\u536b\u56fd.\u718a\u62e5\u519b\u4e3b\u7f16,\u300aPC\u5b9e\u7528\u4e4b\u9053 \u88c5\u673a\u5723\u624b\u300bPDF\u4e0b\u8f7d_\u8042\u5efa\u80e4,\u300aPhotoshop CS4\u56fe\u5f62\u56fe\u50cf\u5904\u7406\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u738b\u745e\u8389,\u300aSolidWorks 2009\u5b9e\u7528\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u738b\u559c\u4ed3,\u300alllustratorCS4\u8df3\u8df3\u8df3\u300bPDF\u4e0b\u8f7d_\u53f6\u534e,\u300aAutoCAD2010\u673a\u68b0\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u4e91\u6770\u6f2b\u6b65\u79d1\u6280CAX\u8bbe\u8ba1\u5ba4,\u300a\u5355\u7247\u673a\u5e94\u7528\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u66fe\u5e86\u6ce2,\u300a\u7cbe\u5f69\u8bbe\u8ba1\u96f6\u8ddd\u79bb_3ds max9\u4e2d\u6587\u7248\u57fa\u7840\u4e0e\u5178\u578b\u8303\u4f8b\u300bPDF\u4e0b\u8f7d_\u5f20\u51e1,\u300a\u975e\u51e1\u89c6\u89c9\u609f(\u5546\u4e1a\u6548\u679c\u56fe\u8868\u73b0\u6280\u6cd5)\u300bPDF\u4e0b\u8f7d_\u718a\u7ecd\u8f89,\u300aFinal Cut Pro 6(Professionas Editing in Final Cut Studio 2)\u300bPDF\u4e0b\u8f7d_\u9b4f\u5357\u5fb7(DianaWeynand),\u300a\u7ed3\u6784\u5206\u6790\u8ba1\u7b97\u7535\u5b50\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u738b\u4eba\u9e4f\uff0c\u94b1\u82e5\u519b\u8457,\u300a\u5927\u6570\u636e\u65f6\u4ee3\u7684\u4e91\u8ba1\u7b97\u654f\u6377\u7ea2\u5229\u300bPDF\u4e0b\u8f7d_\u5f20\u793c\u7acb\u7f16\u8457,\u300aC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u8861\u519b\u5c71\uff0c\u90b5\u519b\u4e3b\u7f16,\u300a\u6570\u636e\u7ed3\u6784-(Java\u7248)\u300bPDF\u4e0b\u8f7d_\u5b59\u7433,\u300aAccess\u6570\u636e\u5e93\u5e94\u7528\u5b66\u4e60\u4e0e\u5b9e\u9a8c\u6307\u5bfc\u300bPDF\u4e0b\u8f7d_\u9ad8\u7231\u56fd\uff0c\u674e\u8000\u6210\u4e3b\u7f16,\u300a\u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406\u4e0e\u7cfb\u7edf\u7ed3\u6784\u300bPDF\u4e0b\u8f7d_\u7518\u5c9a\uff0c\u5218\u7f8e\u9999\uff0c\u9648\u81ea\u521a\u4e3b\u7f16,\u300aWeb\u7a0b\u5e8f\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u4e01\u632f\u51e1\u7f16\u8457,\u300aMaya/After Effects \u5f71\u89c6\u5236\u4f5c\u5b9e\u4f8b\u8868\u73b0\u6280\u6cd5\u300bPDF\u4e0b\u8f7d_\u4f55\u6210\u6218\uff0c\u5ed6\u7199\u4e30\u4e3b\u7f16,\u300a\u5efa\u7b51\u7ec6\u90e8CAD\u56fe\u96c6\u300bPDF\u4e0b\u8f7d_ThinkArchit\u5de5\u4f5c\u5ba4\u4e3b\u7f16,\u300a\u4fe1\u606f\u5b89\u5168\u57f9\u8bad\u6559\u7a0b(\u5b9e\u9a8c\u7bc7)\u300bPDF\u4e0b\u8f7d_\u674e\u5251,\u300a\u6e38\u620f\u89d2\u8272\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u7fc1\u5b50\u626c,\u300a\u6e38\u620f\u573a\u666f\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u7fc1\u5b50\u626c,\u300a\u8ba1\u7b97\u673a\u6784\u578b\u8bbe\u8ba1\u53ca\u7ed8\u56fe\u5b9e\u9a8c\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u674e\u8679\uff0c\u9a6c\u6625\u751f\u7b49\u7f16\u8457,\u300aPhotoshop CC/Flash CC/Dreamwerver CC\u7f51\u9875\u8bbe\u8ba1\u4ece\u5165\u95e8\u5230\u7cbe\u901a\u300bPDF\u4e0b\u8f7d_\u5b8b\u53ef,\u300a\u4e2d\u6587\u7248AutoCAD\u670d\u88c5\u8bbe\u8ba1\u8bfe\u5802\u5b9e\u5f55-DVD\u300bPDF\u4e0b\u8f7d_\u9648\u5fd7\u6c11,\u300aUnity Shader\u5165\u95e8\u7cbe\u8981\u300bPDF\u4e0b\u8f7d_\u51af\u4e50\u4e50,\u300aVmware Vsphere 6.0\u865a\u62df\u5316\u67b6\u6784\u5b9e\u6218\u6307\u5357\u300bPDF\u4e0b\u8f7d_\u4f55\u5764\u6e90,\u300aAndroid\u4f20\u611f\u5668\u5f00\u53d1\u4e0e\u667a\u80fd\u8bbe\u5907\u6848\u4f8b\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\u6731\u5143\u6ce2,\u300aRevitRevit Structure 2020\u4e2d\u6587\u7248 \u5efa\u7b51\u7ed3\u6784\u8bbe\u8ba1\u4ece\u5165\u95e8\u5230\u7cbe\u901a\u300bPDF\u4e0b\u8f7d_\u80e1\u4ec1\u559c\u5218\u660c\u4e3d,\u300aPhotoshop\u65b0\u7f16 \u4e2d\u6587\u7248Photoshop\u5e73\u9762\u8bbe\u8ba1\u5165\u95e8\u4e0e\u63d0\u9ad8(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u738b\u6d2a\u6c5f,\u300a\u8fb9\u505a\u8fb9\u5b66/CorelDRAW X6\u56fe\u5f62\u8bbe\u8ba1\u6848\u4f8b\u6559\u7a0b(\u7b2c2\u7248)(\u5fae\u8bfe\u7248)\u300bPDF\u4e0b\u8f7d_\u5468\u5efa\u56fd,\u300a\u7f51\u7edc\u7f16\u8f91:\u5185\u5bb9\u89c4\u5212 \u6587\u6848\u521b\u4f5c \u8fd0\u8425\u63a8\u5e7f\u300bPDF\u4e0b\u8f7d_\u5b8b\u5915\u4e1c,\u300a\u7f51\u4e0a\u521b\u4e1a(\u5fae\u8bfe\u7248)\u300bPDF\u4e0b\u8f7d_\u8d75\u7231\u9999\u6842\u82b3\u6615\u94b1\u84dd\u8521\u5efa\u6ce2,\u300a\u7535\u5b50\u5546\u52a1\u6848\u4f8b\u5206\u6790\u4e0e\u521b\u65b0\u5e94\u7528(\u5fae\u8bfe\u7248)\u300bPDF\u4e0b\u8f7d_\u9648\u6653\u9e23\u845b\u9752\u9f99\u674e\u6e29\u4e50\u67f3\u6587\u9f99,\u300aPremiere Pro CS6\u89c6\u9891\u7f16\u8f91\u9879\u76ee\u6559\u7a0b(\u9879\u76ee\u6559\u5b66)(\u7b2c2\u7248)(\u5fae\u8bfe\u7248)\u300bPDF\u4e0b\u8f7d_\u859b\u5fd7\u7ea2,\u300aPython Web\u7f16\u7a0b\u300bPDF\u4e0b\u8f7d_\u8096\u777f\u8521\u660e\u7ae5\u7ea2\u5175,\u300a\u65b0\u5a92\u4f53\u521b\u4e1a:\u6982\u5ff5\u3001\u5de5\u5177\u3001\u65b9\u6cd5\u300bPDF\u4e0b\u8f7d_\u4f55\u6d77\u971e,\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840\u53ca\u5e94\u7528\u6848\u4f8b\u6559\u7a0b(\u5fae\u8bfe\u7248)\u300bPDF\u4e0b\u8f7d_\u674e\u81fb\u738b\u8273\u5218\u6811\u8d85,\u300a\u6570\u636e\u5e93\u539f\u7406\u53ca\u5e94\u7528(SQL Server)\u5b9e\u9a8c\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u53f6\u971e,\u300a\u597d\u7528.Excel\u51fd\u6570\u5e94\u7528\u9ad8\u624b\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u6d77\u6d3e\u5c11\u513fIP\u521b\u65b0\u53d1\u5c55\u7814\u7a76\u300bPDF\u4e0b\u8f7d_\u5218\u5cf0\u8457,\u300a\u96f6\u57fa\u7840\u5b66\u4e60R\u8bed\u8a00\u300bPDF\u4e0b\u8f7d_\u8d75\u9e4f,\u300a\u897f\u95e8\u5b50 S7-200 PLC\u7f16\u7a0b\u53ca\u5e94\u7528\u6848\u4f8b\u7cbe\u9009-\u7b2c2\u7248-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u5218\u534e\u6ce2,\u300aCorelDRAW\u65b0\u7f16 \u4e2d\u6587\u7248CorelDRAW X8\u5165\u95e8\u4e0e\u63d0\u9ad8\u300bPDF\u4e0b\u8f7d_\u65f6\u4ee3\u5370\u8c61,\u300aMySQL\u7a0b\u5e8f\u5458\u9762\u8bd5\u7b14\u8bd5\u5b9d\u5178\u300bPDF\u4e0b\u8f7d_\u733f\u5a9b\u4e4b\u5bb6\u674e\u534e\u8363\u7b49,\u300a\u6a21\u7cca\u591a\u5c5e\u6027\u51b3\u7b56\u65b9\u6cd5\u53ca\u5e94\u7528/\u8521\u5efa\u5cf0\u300bPDF\u4e0b\u8f7d_\u8521\u5efa\u5cf0\u5218\u7ea2\u5f6c\u738b\u6653\u4e1c,\u300a\u666e\u901a\u9ad8\u7b49\u6559\u80b2\u4eba\u5de5\u667a\u80fd\u4e0e\u5927\u6570\u636e\u7cfb\u5217\u6559\u6750\u6a21\u5f0f\u8bc6\u522b/\u5434\u9648\u300bPDF\u4e0b\u8f7d_\u5434\u9648,\u300a\u666e\u901a\u9ad8\u7b49\u6559\u80b2\u8ba1\u7b97\u673a\u7c7b\u7cfb\u5217\u6559\u6750Web\u524d\u7aef\u6280\u672f:HTML5+CSS3+\u54cd\u5e94\u5f0f\u8bbe\u8ba1/\u674e\u8212\u4eae\u300bPDF\u4e0b\u8f7d_\u674e\u8212\u4eae,\u300a\u9ad8\u7b49\u804c\u4e1a\u6559\u80b2\u7cfb\u5217\u6559\u6750\u4e2d\u6587\u72483ds Max\u6848\u4f8b\u4e0e\u5b9e\u8bad\u6559\u7a0b/\u5d14\u4e39\u4e39\u300bPDF\u4e0b\u8f7d_\u5d14\u4e39\u4e39,\u300aOffice\u5b66\u7535\u8111\u4ece\u65b0\u624b\u5230\u9ad8\u624b(Windows 10+Office 2019\u7248)\u300bPDF\u4e0b\u8f7d_\u9f99\u9a6c\u9ad8\u65b0\u6559\u80b2,\u300aExcelExcel 2019\u4ece\u65b0\u624b\u5230\u9ad8\u624b\u300bPDF\u4e0b\u8f7d_\u9f99\u9a6c\u9ad8\u65b0\u6559\u80b2,\u300aC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u5e38\u96ea\u7434\uff0c\u53f6\u5f97\u5b66\u4e3b\u7f16,\u300a\u6df1\u5ea6\u5b66\u4e60\u4e4bTensorFlow\u5165\u95e8.\u539f\u7406\u4e0e\u8fdb\u9636\u5b9e\u6218-\u8d60\u9001\u8d85\u503c\u5b66\u4e60\u8d44\u6599\u300bPDF\u4e0b\u8f7d_\u674e\u91d1\u6d2a,\u300a\u5d4c\u5165\u5f0f\u7cfb\u7edf-\u786c\u4ef6.\u8f6f\u4ef6\u53ca\u8f6f\u786c\u4ef6\u534f\u540c-\u539f\u4e66\u7b2c2\u7248\u300bPDF\u4e0b\u8f7d_\u5854\u7c73.\u8bfa\u5c14\u52a0\u5fb7,\u300a\u7f16\u8bd1\u539f\u7406\u53ca\u5b9e\u8df5\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u9ec4\u8d24\u82f1,\u300a\u8d28\u901f\u53cc\u51683ds Max+VRay\u5ba4\u5185\u6548\u679c\u56fe\u8868\u73b0\u6258\u6280\u6cd5\u300bPDF\u4e0b\u8f7d_\u9b54\u65b9\u7a7a\u95f4,\u300aExce \u8d22\u4f1a\u5e94\u7528\u8303\u4f8b\u300bPDF\u4e0b\u8f7d_\u8499\u8bc4,\u300a\u5b9e\u9a8c\u4e0e\u4e60\u9898\u89e3\u7b54-\u5fae\u578b\u8ba1\u7b97\u673a\u539f\u7406\u53ca\u5e94\u7528(\u7b2c\u4e8c\u7248)\u300bPDF\u4e0b\u8f7d_\u4f55\u8d85,\u300ac\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u9ec4\u7ef4\u901a,\u300a\u6570\u636e\u5e93\u7cfb\u7edf\u5b9e\u9a8c\u6307\u5bfc\u6559\u7a0b(\u7b2c\u4e8c\u7248)\u300bPDF\u4e0b\u8f7d_\u6c64\u5a1c,\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u5e94\u7528\u57fa\u7840\u9898\u89e3\u4e0e\u4e0a\u673a\u6307\u5bfc\u300bPDF\u4e0b\u8f7d_\u9648\u6770\u534e,\u300a\u5bf9\u7b49\u8d44\u6e90\u53d1\u73b0\u6280\u672f\u7814\u7a76\u300bPDF\u4e0b\u8f7d_\u6768\u5cf0,\u300a\u6df1\u5ea6\u89e3\u6790After Effects\u300bPDF\u4e0b\u8f7d_\u5d14\u897f(TrishMeyer),\u300aAuto CAD 2011\u5b9e\u7528\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5f20\u5b89\u5065\u8457,\u300aSQL Server 2008\u6570\u636e\u5e93\u5e94\u7528\u4e0e\u5f00\u53d1\u6559\u7a0b(\u7b2c\u4e8c\u7248)(\u9ad8\u7b49\u5b66\u6821\u8ba1\u7b97\u673a\u5e94\u7528\u89c4\u5212\u6559\u6750)\u300bPDF\u4e0b\u8f7d_\u536b\u7433\u4e3b\u7f16,\u300aSpss\u6570\u636e\u7edf\u8ba1\u4e0e\u5206\u6790\u300bPDF\u4e0b\u8f7d_\u9a86\u65b9\uff0c\u5218\u7ea2\u4e91\uff0c\u9ec4\u5d11\u7f16\u8457,\u300a\u6570\u636e\u4ed3\u5e93\u4e0e\u6570\u636e\u6316\u6398\u6280\u672f(\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u4e13\u4e1a\u5b9e\u8df5\u7cfb\u5217\u6559\u6750)\u300bPDF\u4e0b\u8f7d_\u5f20\u5174\u4f1a\u7f16\u8457,\u300aVisual C\u7a0b\u5e8f\u8bbe\u8ba1\u9879\u76ee\u6848\u4f8b\u6559\u7a0b(\u9ad8\u804c\u9ad8\u4e13\u8ba1\u7b97\u673a\u4efb\u52a1\u9a71\u52a8\u6a21\u5f0f\u6559\u6750)\u300bPDF\u4e0b\u8f7d_\u90d1\u4f1f,\u300aSiruts2Web\u5f00\u53d1\u5b66\u4e60\u5b9e\u5f55\u300bPDF\u4e0b\u8f7d_\u6768\u5c11\u654f\u3001\u6a0a\u53cc\u7075,\u300aHADOOP\u6743\u5a01\u6307\u5357\u300bPDF\u4e0b\u8f7d_(\u7f8e)\u6000\u7279(White,T.)\u8457\uff0c\u5468\u654f\u5947\uff0c\u94b1\u536b\u5b81\uff0c\u91d1\u6f88\u6e05\uff0c\u738b\u6653\u73b2\u8bd1.,\u300aASP.NET\u6848\u4f8b\u6559\u7a0b(\u4fee\u8ba2\u672c)(21\u4e16\u7eaa\u9ad8\u7b49\u5b66\u6821\u7535\u5b50\u4fe1\u606f\u7c7b\u4e13\u4e1a\u89c4\u5212\u6559\u6750)\u300bPDF\u4e0b\u8f7d_\u6797\u83f2\uff0c\u5b59\u52c7\u7f16\u8457,\u300a\u8ba1\u7b97\u673a\u7ec4\u6210\u4e0e\u4f53\u7cfb\u7ed3\u6784(\u7b2c2\u7248)(21\u4e16\u7eaa\u5927\u5b66\u672c\u79d1\u8ba1\u7b97\u673a\u4e13\u4e1a\u7cfb\u5217\u6559\u6750)\u300bPDF\u4e0b\u8f7d_\u738b\u8bda\u3001\u5b8b\u4f73\u5174,\u300a\u6570\u636e\u5e93\u6280\u672f\u53ca\u5e94\u7528(\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u7cfb\u5217\u6559\u6750 \u4fe1\u606f\u6280\u672f\u65b9\u5411)\u300bPDF\u4e0b\u8f7d_\u6682\u65e0,\u300aiphone\u6e38\u620f\u5f00\u53d1\u5165\u95e8\u7ecf\u5178\u2014\u4e5f\u662f\u7528\u4e0eipad\u300bPDF\u4e0b\u8f7d_\uff08\u7f8e\uff09\u5df4\u54c8\u96f7\u592b\uff0c\uff08\u7f8e\uff09\u5361\u5e03\u96f7\u62c9\u7b49\u8457\uff0c\u90d1\u601d\u9065\u8bd1,\u300aASP.NET3.5\u7a0b\u5e8f\u8bbe\u8ba1\u4e0e\u9879\u76ee\u5b9e\u8df5\u300bPDF\u4e0b\u8f7d_\u5f20\u8054\u950b,\u300aRed Hat Enterprise Linux 6.0\u7cfb\u7edf\u7ba1\u7406\u300bPDF\u4e0b\u8f7d_\u66f9\u6c5f\u534e\uff0c\u6768\u6653\u52c7\uff0c\u6797\u6377\u7f16\u8457,\u300aJava\u7f16\u7a0b\u65b0\u624b\u81ea\u5b66\u624b\u518c-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u8c2d\u8d1e\u519b,\u300a\u529e\u516c\u81ea\u5316\u57fa\u7840\u6559\u7a0b(\u4e2d\u7b49\u804c\u4e1a\u5b66\u6821\u8ba1\u7b97\u673a\u7cfb\u5217\u6559\u6750)\u300bPDF\u4e0b\u8f7d_\u5f20\u5e73,\u300aPhotoshop\u6570\u7801\u76f8\u7247\u8c03\u8272\u5b9d\u5178\u300bPDF\u4e0b\u8f7d_\u5f20\u4f1f\u7f16\u8457,\u300a\u6d77\u91cf\u4fe1\u606f\u5b58\u50a8\u5b89\u5168\u6280\u672f\u53ca\u5176\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u90b5\u5fc5\u6797\uff0c\u8fb9\u6839\u5e86\u7b49\u8457,\u300a\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00-C++(\u7b2c\u4e8c\u7248)\u300bPDF\u4e0b\u8f7d_\u9648\u5fd7\u6cca,\u300a\u8ba1\u7b97\u673a\u56fe\u5f62\u5236\u4f5c\u57fa\u7840CoreIDRAW12\u4e2d\u6587\u7248\u2014\u2014\u4e2d\u7b49\u804c\u4e1a\u5b66\u6821\u8ba1\u7b97\u673a\u7cfb\u5217\u6559\u6750\u300bPDF\u4e0b\u8f7d_\u8d75\u535a\u827e\u840d,\u300aPLC\u5e94\u7528\u6280\u672f-(\u7b2c\u4e8c\u7248)\u300bPDF\u4e0b\u8f7d_\u5f2d\u6d2a\u6d9b,\u300a\u6570\u636e\u7ed3\u6784\u300bPDF\u4e0b\u8f7d_\u5b97\u5927\u534e,\u300aVisual C++ 6.0\u57fa\u7840\u4e0e\u5b9e\u4f8b\u6559\u7a0b-(\u542b1CD)\u300bPDF\u4e0b\u8f7d_\u4e3b\u7f16\u9ec4\u91d1\u660e,\u300a\u9762\u5411\u5feb\u901f\u4ea4\u4ed8\u7684\u8f6f\u4ef6\u5f00\u53d1\u300bPDF\u4e0b\u8f7d_\u7fdf\u5b8f\u5b9d\uff0c\u949f\u7ecd\u806a\uff0c\u91d1\u6208\u7f16\u8457,\u300a\u75af\u72c2iOS\u8bb2\u4e49-(\u57fa\u7840\u7bc7)-(\u542b\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u674e\u521a,\u300aCadence\u9ad8\u901fPCB\u8bbe\u8ba1\u5b9e\u6218\u653b\u7565-(\u542b\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u674e\u589e,\u300aPhotoshop UI\u4ea4\u4e92\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u5f20\u6668\u8d77,\u300aPhotoshop\u79fb\u52a8UI\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u5f20\u6668\u8d77,\u300a\u8ba1\u7b97\u673a\u8bfe\u7a0b\u8bbe\u8ba1\u4e0e\u7efc\u5408\u5b9e\u8df5\u89c4\u5212\u6559\u6750:SQLServer\u5b9e\u9a8c\u6307\u5bfc(\u7b2c3\u7248)\u300bPDF\u4e0b\u8f7d_\u9a6c\u6653\u6885,\u300a\u4ea7\u54c1\u8bbe\u8ba1\u6280\u80fd\u57f9\u8bad:UG\u4e2d\u6587\u7248\u300bPDF\u4e0b\u8f7d_\u5f20\u559c\u751f,\u300aAdobe InDesign\u4e2d\u6587\u7248\u4ece\u5165\u95e8\u5230\u7cbe\u901a(\u9002\u5408CS3\u3001CS4\u3001CS5\u7248\u672c)(\u914d\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u738b\u9752,\u300aPhotoshop  cs4 \u6807\u51c6\u57f9\u8bad\u6559\u7a0b(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u66f9\u5929\u4f51,\u300aAdobe Illustrator CS5\u4e2d\u6587\u7248\u7ecf\u5178\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_Adobe\u516c\u53f8,\u300a\u8d85\u4eba\u6c14\u7f51\u7ad9\u662f\u8fd9\u6837\u5efa\u6210\u7684\u300bPDF\u4e0b\u8f7d_\u4f2f\u683c(PaulBoag),\u300a\u865a\u62df\u73b0\u5b9e\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u5218\u5149\u7136,\u300a\u4ece\u96f6\u5f00\u59cb:AutoCAD 2010\u4e2d\u6587\u7248\u673a\u68b0\u5236\u56fe\u57fa\u7840\u57f9\u8bad\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u59dc\u52c7,\u300aC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u738b\u65b0\u840d,\u300a\u4fe1\u606f\u7f51\u7edc\u7ec4\u7ec7\u4e0e\u4f53\u7cfb\u7ed3\u6784\u300bPDF\u4e0b\u8f7d_\u9676\u6d0b,\u300a\u8ba1\u7b97\u673a\u8f85\u52a9\u5e73\u9762\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u6f58\u6587\u7965\uff0c\u674e\u519b\u7f16\u8457,\u300aPremiere Pro CS5\u4ece\u5165\u95e8\u5230\u7cbe\u901a-\u4e2d\u6587\u7248-\u9644\u8d601DVD.\u542b\u89c6\u9891\u53ca\u6d77\u91cf\u7d20\u6750\u300bPDF\u4e0b\u8f7d_\u9b4f\u654f\u7b49\u7f16\u8457,\u300aiPhone 4\u4e0eiPad\u5f00\u53d1\u57fa\u7840\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_(\u7f8e)\u9a6c\u514b\uff0c(\u7f8e)\u7eb3\u4e01\uff0c(\u7f8e)\u62c9\u9a6c\u8d6b\u8457\uff0c\u6f06\u632f\u7b49\u8bd1,\u300a\u4e09\u7ef4\u52a8\u753b\u5236\u4f5c3DS MAX9\u6848\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5411\u534e\u4e3b\u7f16,\u300aKH10356\u4e2d\u8001\u5e74\u4eba\u5b66\u7535\u8111\u4ece\u65b0\u624b\u5230\u9ad8\u624b\u300bPDF\u4e0b\u8f7d_\u524d\u6cbf\u6587\u5316\u7f16\u8457,\u300aKH10346\u5b66\u7535\u8111\u5165\u95e8\u7bc7 \u4ece\u65b0\u624b\u5230\u9ad8\u624b\u300bPDF\u4e0b\u8f7d_\u524d\u6cbf\u6587\u5316\u7f16\u8457,\u300aVisual C++\u4ece\u5165\u95e8\u5230\u7cbe\u901a-(\u7b2c4\u7248)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aVisual C# 2013\u4ece\u96f6\u5f00\u59cb\u5b66\u300bPDF\u4e0b\u8f7d_\u674e\u99a8,\u300aJava\u4e2d\u6587\u6587\u672c\u4fe1\u606f\u5904\u7406-\u4ece\u6d77\u91cf\u5230\u7cbe\u51c6\u300bPDF\u4e0b\u8f7d_\u7f57\u521a,\u300aUG NX 11.0\u4e2d\u6587\u7248\u4ece\u5165\u95e8\u5230\u7cbe\u901a\u300bPDF\u4e0b\u8f7d_\u9e93\u5c71\u6587\u5316,\u300aCitrix XenServer\u4f01\u4e1a\u8fd0\u7ef4\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\u6210\u676d,\u300ascikit-learn\u673a\u5668\u5b66\u4e60-\u5e38\u7528\u7b97\u6cd5\u539f\u7406\u53ca\u7f16\u7a0b\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\u9ec4\u6c38\u660c,\u300a(2017-2018)\u4e92\u8054\u7f51\u57fa\u7840\u8d44\u6e90\u6280\u672f\u4e0e\u5e94\u7528\u53d1\u5c55\u6001\u52bf\u300bPDF\u4e0b\u8f7d_\u66fe\u5b87,\u300a\u591a\u5a92\u4f53\u6280\u672f\u4e0e\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u83ab\u793c\u5e73,\u300a\u9ad8\u7b49\u804c\u4e1a\u6559\u80b2\u8ba1\u7b97\u673a\u7c7b\u4e13\u4e1a\u7cfb\u5217\u6559\u6750Java\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1/\u8d75\u666f\u8f89\u300bPDF\u4e0b\u8f7d_\u8d75\u666f\u8f89\u5b59\u8389\u5a1c,\u300a\u666e\u901a\u9ad8\u7b49\u6559\u80b2\u4eba\u5de5\u667a\u80fd\u4e0e\u5927\u6570\u636e\u7cfb\u5217\u6559\u6750\u6570\u636e\u6316\u6398\u539f\u7406\u4e0e\u5e94\u7528/\u845b\u4e1c\u65ed\u300bPDF\u4e0b\u8f7d_\u845b\u4e1c\u65ed,\u300a\u666e\u901a\u9ad8\u7b49\u6559\u80b2\u4eba\u5de5\u667a\u80fd\u4e0e\u5927\u6570\u636e\u7cfb\u5217\u6559\u6750\u63a8\u8350\u7cfb\u7edf/\u5218\u5b8f\u5fd7\u300bPDF\u4e0b\u8f7d_\u5218\u5b8f\u5fd7,\u300a\u804c\u4e1a\u6559\u80b2\u4fe1\u606f\u5b89\u5168\u6280\u672f\u4e13\u4e1a\u7cfb\u5217\u6559\u6750Windows\u670d\u52a1\u5668\u914d\u7f6e\u4e0e\u5b89\u5168\u7ba1\u7406/\u534e\u9a70\u300bPDF\u4e0b\u8f7d_\u534e\u9a70\u5b8b\u8d85,\u300a\u666e\u901a\u9ad8\u7b49\u6559\u80b2\u7cfb\u5217\u6559\u6750\u57fa\u4e8eWeX5\u7684HTML5 App\u79fb\u52a8\u5e94\u7528\u5f00\u53d1/\u590f\u8f89\u300bPDF\u4e0b\u8f7d_\u590f\u8f89\u5f20\u4e66\u950b\u6768\u4f1f\u5409,\u300a\u666e\u901a\u9ad8\u7b49\u6559\u80b2\u8ba1\u7b97\u673a\u4e13\u4e1a\u7cfb\u5217\u6559\u6750\u673a\u5668\u5b66\u4e60\u7b80\u660e\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u6c6a\u8363\u8d35,\u300a\u539f\u5473\u7cbe\u54c1\u4e66\u7cfb\u7a0b\u5e8f\u5458\u4fee\u70bc\u4e4b\u9053:\u4ece\u5c0f\u5de5\u5230\u4e13\u5bb6(20\u5468\u5e74\u7eaa\u5ff5\u7248)(\u7b2c2\u7248)(\u82f1\u6587\u7248)\u300bPDF\u4e0b\u8f7d_(\u7f8e\uff09DavidThomas\uff08\u5927\u536b\u00b7\u6258,\u300aPWA\u5165\u95e8\u4e0e\u5b9e\u8df5\u300bPDF\u4e0b\u8f7d_\u738b\u4e50\u5e73,\u300a\u6e38\u620f\u5f00\u53d1\u4e0e\u8bbe\u8ba1\u6280\u672f\u4e1b\u4e66Unity\u865a\u62df\u73b0\u5b9e\u5f00\u53d1\u5b9e\u6218(\u539f\u4e66\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\uff08\u7f8e\uff09\u4e54\u7eb3\u68ee\u00b7\u6797\u8bfa\u7ef4\u65af\uff08Jonathan,\u300a\u9ad8\u7b49\u804c\u4e1a\u6559\u80b2\u7cfb\u5217\u6559\u6750\u4eba\u5de5\u667a\u80fd\u63a7\u5236\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u5173\u666f\u65b0\u9ad8\u5065\u5f20\u4e2d\u6d32,\u300a\u666e\u901a\u9ad8\u7b49\u6559\u80b2\u7cfb\u5217\u6559\u6750HTML5\u57fa\u7840\u4e0e\u5b9e\u8df5\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5415\u4e91\u7fd4\u5218\u731b\u731b\u6b27\u9633\u690d\u660a\u7b49,\u300aC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u7406\u8bba\u4e0e\u6559\u5b66\u65b9\u6cd5\u7814\u7a76\u300bPDF\u4e0b\u8f7d_\u5434\u7fd4,\u300a\u8f6f\u4ef6\u6d4b\u8bd5\u6548\u7387\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u8d75\u632f\u9ad8\u6768\u674e\u6cfd,\u300aELASTIC STACK\u5e94\u7528\u5b9d\u5178\u300bPDF\u4e0b\u8f7d_\u7530\u96ea\u677e,\u300a\u4eba\u4eba\u53ef\u61c2\u7684\u6570\u636e\u79d1\u5b66\u300bPDF\u4e0b\u8f7d_\uff08\u7231\u5c14\u5170\uff09\u7ea6\u7ff0D\u00b7\u51ef\u83b1\u8d6bJohnD.,\u300aCISA\u590d\u4e60\u8003\u9898\u53ca\u89e3\u7b54\u624b\u518c(\u7b2c12\u7248)\u300bPDF\u4e0b\u8f7d_\uff08\u7f8e\uff09InformationSyste,\u300a\u4e2d\u6587\u7248PHOTOSHOP CC 2018\u5b9e\u7528\u6559\u7a0b(\u5fae\u8bfe\u89c6\u9891\u7248)\u300bPDF\u4e0b\u8f7d_\u9648\u5065\u9ad8\u5929\u5b87\u7f16\u8457,\u300aQT5\u7f16\u7a0b\u5165\u95e8(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u970d\u4e9a\u98de\u7a0b\u6881,\u300a\u8ba1\u7b97\u673a\u5e94\u7528\u57fa\u7840\u5b9e\u8bad\u6559\u7a0b/\u738b\u8499\u7530/\u9ad8\u7b49\u804c\u4e1a\u6559\u80b2\u5341\u4e09\u4e94\u89c4\u5212\u6559\u6750\u300bPDF\u4e0b\u8f7d_\u4e3b\u7f16\u738b\u8499\u7530\u674e\u536b\u661f,\u300aPPT\u804c\u573a\u5e94\u7528\u5b9e\u6218\u7cbe\u7cb9\u300bPDF\u4e0b\u8f7d_\u4e0a\u6d77\u804c\u9886\u7f51\u7edc\u79d1\u6280\u6709\u9650\u516c\u53f8,\u300a\u9ad8\u7b49\u804c\u4e1a\u6559\u80b2\u673a\u68b0\u7c7b\u4e13\u4e1a\u89c4\u5212\u6559\u6750UG NX 12.0\u6570\u63a7\u7f16\u7a0b\u6559\u7a0b/\u5c55\u8fea\u4f18\u300bPDF\u4e0b\u8f7d_\u5c55\u8fea\u4f18,\u300a\u79fb\u52a8UI\u8bbe\u8ba1\u4e09\u5927\u5229\u5668:PHOTOSHOP+ILLUSTRATOR+SKETCH\u300bPDF\u4e0b\u8f7d_\u4f18\u9038\u5ba2\u79d1\u6280\u6709\u9650\u516c\u53f8,\u300a\u9ad8\u804c\u9ad8\u4e13\u201c\u5de5\u4f5c\u8fc7\u7a0b\u5bfc\u5411\u201d\u65b0\u7406\u5ff5\u6559\u6750\u2014\u2014\u8ba1\u7b97\u673a\u7cfb\u5217MYSQL\u6570\u636e\u5e93\u5e94\u7528\u9879\u76ee\u6559\u7a0b/\u94b1\u51ac\u4e91\u300bPDF\u4e0b\u8f7d_\u94b1\u51ac\u4e91\u3001\u6f58\u76ca\u5a77\u3001\u5434\u521a\u3001\u8d75\u9759\u9759,\u300a\u7f51\u7edc\u5e03\u7ebf\u4e0e\u5c0f\u578b\u5c40\u57df\u7f51\u642d\u5efa\u300bPDF\u4e0b\u8f7d_\u6682\u65e0,\u300a\u5730\u7406\u4fe1\u606f\u6280\u672f\u5b9e\u8bad\u7cfb\u5217\u6559\u7a0bGIS\u5e94\u7528\u578b\u4eba\u624d\u57f9\u517b\u6559\u5b66\u4e1b\u4e66\u521d\u8bc6\u5730\u7406\u4fe1\u606f\u7cfb\u7edf/\u738b\u6625\u300bPDF\u4e0b\u8f7d_\u738b\u6625.\u987e\u7559\u7897.\u674e\u4f1f\u6d9b,\u300aSolidworks2010\u4e2d\u6587\u7248\u5b8c\u5168\u81ea\u5b66\u4e00\u672c\u901a\u300bPDF\u4e0b\u8f7d_\u9ec4\u6210,\u300aPro/Engineer  Wildfire5.0 \u4e2d\u6587\u7248\u5b8c\u5168\u81ea\u5b66\u4e00\u672c\u901a\u300bPDF\u4e0b\u8f7d_\u4e91\u6770\u6f2b\u6b65\u79d1\u6280CAX\u8bbe\u8ba1\u5ba4,\u300a\u6570\u5b57\u65f6\u4ee3\u7684\u4fe1\u606f\u7cfb\u7edf:\u6280\u672f\u3001\u7ba1\u7406\u3001\u6311\u6218\u53ca\u5bf9\u7b56(\u7b2c3\u7248)\u300bPDF\u4e0b\u8f7d_\u6770\u745f\u666e(LeonardJessup),\u300a\u7ec4\u5408\u5939\u5177\u624b\u518c\u4e0e\u4e09\u7ef4\u56fe\u5e93-UG NX\u7248-\u542b1CD-ROM\u300bPDF\u4e0b\u8f7d_\u66f9\u5ca9,\u300a\u7a0b\u5e8f\u54582014\u7cbe\u534e\u672c\u300bPDF\u4e0b\u8f7d_\u7a0b\u5e8f\u5458\u7f16\u8f91\u90e8\u7f16,\u300aMaya\u4e09\u7ef4\u52a8\u753b\u5236\u4f5c\u6848\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u738b\u5a01\u8457,\u300aJava\u7a0b\u5e8f\u8bbe\u8ba1\u5b9e\u7528\u6559\u7a0b\u5b9e\u9a8c\u6307\u5bfc.\u5b9e\u8bad\u4e0e\u4e60\u9898\u89e3\u6790-(\u8d601CD)\u300bPDF\u4e0b\u8f7d_\u8d75\u6b22,\u300aAutoCAD 2009\u6848\u4f8b\u6559\u7a0b-\u4e2d\u6587\u7248\u5efa\u7b51\u5236\u56fe\u300bPDF\u4e0b\u8f7d_\u82cf\u5fd7\u540c,\u300a\u793e\u4f1a\u5de5\u7a0b-\u9632\u8303\u9493\u9c7c\u6b3a\u8bc8-(\u53773)\u300bPDF\u4e0b\u8f7d_\u6d77\u5fb7\u7eb3\u5409,\u300a\u8fdb\u5316-\u4ece\u5b64\u80c6\u6781\u5ba2\u5230\u9ad8\u6548\u56e2\u961f\u300bPDF\u4e0b\u8f7d_\u5e03\u83b1\u6069.\u83f2\u8328\u5e15\u7279\u91cc\u514b,\u300a\u6570\u636e\u53ef\u89c6\u5316\u5e94\u7528\u4e0e\u5b9e\u8df5\u300bPDF\u4e0b\u8f7d_\u4f55\u51b0,\u300a\u6e38\u620f\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u6768\u957f\u5f3a,\u300a\u73b0\u4ee3TCP/IP\u7f51\u7edc\u8be6\u89e3\u300bPDF\u4e0b\u8f7d_\u6208\u62c9\u5c14\u65af\u57fa,\u300aC++\u4e0d\u518d\u96be\u5b66-\u968f\u8001\u9e1f\u5feb\u901f\u901a\u5173\u300bPDF\u4e0b\u8f7d_\u7ba1\u7693,\u300a\u5fae\u578b\u8ba1\u7b97\u673a\u539f\u7406\u4e0e\u63a5\u53e3\u6280\u672f\u6559\u5b66\u8f85\u5bfc-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u90b9\u9022\u5174,\u300aExcel+2013\u516c\u5f0f.\u51fd\u6570.\u56fe\u8868\u5e94\u7528\u4e0e\u6570\u636e\u5206\u6790\u4ece\u65b0\u624b\u5230\u9ad8\u624b-(\u56fe\u89e3\u89c6\u9891\u7248)-(\u968f\u4e66\u8d60\u9001\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aWindows 7\u7248\u4e2d\u8001\u5e74\u5b66\u7535\u8111\u4ece\u65b0\u624b\u5230\u9ad8\u624b-(\u968f\u4e66\u8d60\u9001\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u7f51\u7ad9\u914d\u8272\u4e0e\u5e03\u5c40-\u597d\u7f51\u7ad9.\u8981\u51fa\u5f69!\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aHTML5\u5e03\u5c40\u4e4b\u8def\u300bPDF\u4e0b\u8f7d_\u5218\u56fd\u5229,\u300aHTML5\u7f51\u9875\u524d\u7aef\u8bbe\u8ba1\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\u5468\u6587\u6d01,\u300a\u4e92\u8054\u7f51+\u90a3\u4e9b\u4e8b\u513f\u300bPDF\u4e0b\u8f7d_\u90ce\u4e3a\u6c11,\u300aHTML5+CSS3\u4ece\u5165\u95e8\u5230\u7cbe\u901a:\u5168\u65b0\u7cbe\u534e\u7248\u300bPDF\u4e0b\u8f7d_\u5f90\u98de\uff0c\u674e\u6052\u7f16\u8457,\u300a\u65b0\u624b\u5b66\u7535\u8111\u4ece\u5165\u95e8\u5230\u7cbe\u901a\u300bPDF\u4e0b\u8f7d_\u674e\u65ed\uff0c\u674e\u6d2a\u6d9b\u7f16\u8457,\u300a\u9ed1\u5ba2\u653b\u9632\u4ece\u5165\u95e8\u5230\u7cbe\u901a:\u5168\u65b0\u7cbe\u534e\u7248\u300bPDF\u4e0b\u8f7d_\u521b\u5ba2\u8bda\u54c1\u7f16\u8457,\u300a\u65f6\u4ee3\u4e4b\u5dc5:\u4e92\u8054\u7f51\u601d\u7ef4\u4e0b\u7684\u65b0\u8425\u9500\u6784\u5efa\u300bPDF\u4e0b\u8f7d_\u6768\u6bc5,\u300a\u7269\u8054\u7f51\u7684\u6280\u672f\u5f00\u53d1\u4e0e\u5e94\u7528\u7814\u7a76\u300bPDF\u4e0b\u8f7d_\u7533\u65f6\u51ef,\u300aAPP\u667a\u80fd\u624b\u518cUI\u521b\u610f\u7f8e\u5316\u8bbe\u8ba1-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u738b\u7ea2\u536b,\u300a\u672a\u6765\u7684\u622a\u9762\u300bPDF\u4e0b\u8f7d_\u674e\u5728\u6c38,\u300aWord/Excel/PowerPoint\u529e\u516c\u5e94\u7528\u6280\u5de7\u5927\u5168-\u9ad8\u6548\u529e\u516c\u4e0d\u6c42\u4eba-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aSpark\u5927\u6570\u636e\u5206\u6790\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\u9ad8\u5f66\u6770,\u300aWord\u529e\u516c\u5e94\u7528\u6280\u5de7\u5927\u5168-\u9ad8\u6548\u529e\u516c\u4e0d\u6c42\u4eba-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u4ea4\u4e92\u5f0f\u7cfb\u7edf\u8bbe\u8ba1-HCI.UX\u548c\u4ea4\u4e92\u8bbe\u8ba1\u6307\u5357-\u539f\u4e66\u7b2c3\u7248\u300bPDF\u4e0b\u8f7d_\u8d1d\u5c3c\u6602,\u300aOffice 2016\u5546\u52a1\u529e\u516c\u5e94\u7528\u4ece\u5165\u95e8\u5230\u7cbe\u901a-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aIT\u53d1\u6761-\u90a3\u4e9b\u8ba9\u4f60\u5fc3\u52a8\u7684\u79d1\u6280\u4ea7\u54c1\u300bPDF\u4e0b\u8f7d_\u97e9\u78ca,\u300a\u4e2d\u6587\u7248PTC Creo 4.0\u5b8c\u5168\u5b9e\u6218\u6280\u672f\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u5468\u654f,\u300aWord 2010\u9ad8\u7ea7\u5e94\u7528\u6848\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u6768\u4e45\u5a77,\u300aJava\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b-\u7b2c3\u7248\u300bPDF\u4e0b\u8f7d_\u65bd\u971e\u840d,\u300a\u7ec4\u5408\u5939\u5177\u624b\u518c\u4e0e\u4e09\u7ef4\u56fe\u5e93-Solidworks\u7248-\u96441DVD-ROM\u300bPDF\u4e0b\u8f7d_\u66f9\u5ca9,\u300a\u90a3\u4e9b\u5e74.\u6211\u4eec\u62ff\u4e0b\u4e86FPGA\u300bPDF\u4e0b\u8f7d_\u82cf\u9633\uff0c\u848b\u94f6\u576a\uff0c\u90a2\u57f9\u98de\u7f16\u8457,\u300aARM\u5d4c\u5165\u5f0f\u7cfb\u7edf\u57fa\u7840\u4e0e\u9879\u76ee\u5f00\u53d1\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u9646\u6e0a\u7ae0,\u300a\u667a\u80fdWeb\u7b97\u6cd5\u300bPDF\u4e0b\u8f7d_\u739b\u8bfa\u66fc\u5c3c\u65af,\u300aVisual FoxPro\u7a0b\u5e8f\u8bbe\u8ba1\u5b9e\u9a8c\u6307\u5bfc\u300bPDF\u4e0b\u8f7d_\u5f20\u6587\u7965,\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u5b89\u5168\u6280\u672f\u4e0e\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u5f6d\u65b0\u5149,\u300aSIMATIC\u53ef\u7f16\u7a0b\u5e8f\u63a7\u5236\u5668\u53ca\u5e94\u7528(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u5b59\u6d77\u7ef4,\u300a\u79d1\u6280\u4f60\u751f\u6d3b\u300bPDF\u4e0b\u8f7d_\u963f\u5b5c\u53e4\u4e3d.\u543e\u62c9\u6728,\u300aCloudStack\u6280\u672f\u6307\u5357\u300bPDF\u4e0b\u8f7d_\u5218\u632f\u5b87,\u300a\u975e\u771f\u5b9e\u611f\u827a\u672f\u98ce\u683c\u7ed8\u5236(\u7b2c\u4e8c\u7248)\u300bPDF\u4e0b\u8f7d_\u94b1\u6587\u534e\uff0c\u5f90\u4e39,\u300a\u4fe1\u606f\u79d1\u5b66\u6280\u672f\u5b66\u672f\u8457\u4f5c\u4e1b\u4e66\u91cf\u5b50\u8ba1\u7b97\u6570\u8bba\u300bPDF\u4e0b\u8f7d_\uff08\u82f1\uff09\u989c\u677e\u8fdc\u8457\uff1b\u6bb5\u4e7e\u6052\u7b49\u8bd1,\u300a\u7edf\u8ba1\u4e0e\u6570\u636e\u79d1\u5b66\u4e1b\u4e661\u667a\u80fd\u8ba1\u7b97\u4e2d\u7684\u7b97\u6cd5,\u539f\u7406\u548c\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u6c88\u4e16\u9552,\u300a\u7528\u56fe\u8868\u8bf4\u8bdd\u00b7Excel\u8f6f\u4ef6\u7bc7\u300bPDF\u4e0b\u8f7d_\u6770\u8bda\u6587\u5316,\u300a\u65b0\u7f16\u4e2d\u6587\u7248Office 2003\u4e09\u5408\u4e00\u300bPDF\u4e0b\u8f7d_\u90ed\u5f3a,\u300aPowerPoint 2003\u5728\u6559\u5b66\u4e2d\u7684\u6df1\u5ea6\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u9a6c\u4e5d\u514b\u8457,\u300a\u65b0\u7f16\u4e2d\u6587\u7248CorelDRAW X6\u6807\u51c6\u6559\u7a0b-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u5434\u9882\u5fd7,\u300aPro/ENGINEER Wildfire 5.0\u4e2d\u6587\u7248\u5b9e\u7528\u6559\u7a0b-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u5b59\u5c0f\u635e,\u300a\u547d\u4ee4\u884c\u4e2d\u7684\u6570\u636e\u79d1\u5b66\u300bPDF\u4e0b\u8f7d_\u8a79\u68ee\u65af,\u300a\u79fb\u52a8\u4e92\u8054\u65f6\u4ee3\u7684\u529e\u516c\u6548\u7387\u662f\u8fd9\u4e48\u63d0\u5347\u7684-\u9ad8\u6548\u80fd\u4eba\u58eb\u7684\u8f6f\u4ef6\u5e94\u7528\u4e4b\u9053\u300bPDF\u4e0b\u8f7d_\u4f0f\u94f6\u604b,\u300aC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6848\u4f8b\u6559\u7a0b\u5b66\u4e60\u8f85\u5bfc\u300bPDF\u4e0b\u8f7d_\u4e8e\u5ef6,\u300aDreamweaver CC\u4ece\u5165\u95e8\u5230\u7cbe\u901a-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aExcel \u529e\u516c\u9ad8\u624b\u5e94\u7528\u6280\u5de7500\u4f8b-2010\u7248-2010\u7248-(\u968f\u4e66\u8d60\u9001\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u67cf\u677e,\u300a\u4fe1\u606f\u4e0e\u7f16\u7801\u7406\u8bba\u300bPDF\u4e0b\u8f7d_\u6768\u6653\u840d,\u300aFlash CS6\u52a8\u753b\u5236\u4f5c\u6848\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u738b\u82b3,\u300a\u673a\u68b0\u5de5\u4e1a\u51fa\u7248\u793e\u4f01\u4e1a\u7ea7\u5927\u6570\u636e\u5e73\u53f0\u6784\u5efa:\u67b6\u6784\u4e0e\u5b9e\u73b0\u300bPDF\u4e0b\u8f7d_\u6731\u51ef,\u300a\u7f51\u7edc\u7a7a\u95f4\u5b89\u5168\u6280\u672f\u4e1b\u4e66\u6e17\u900f\u6d4b\u8bd5\u57fa\u7840:\u53ef\u9760\u6027\u5b89\u5168\u5ba1\u8ba1\u5b9e\u8df5\u6307\u5357\u300bPDF\u4e0b\u8f7d_[\u7f8e]\u67e5\u514b\u00b7\u4f0a\u65af\u7279\u59c6\uff08ChuckEa,\u300aScratchJr\u8da3\u5473\u7f16\u7a0b\u7cbe\u5f69\u5b9e\u4f8b\u300bPDF\u4e0b\u8f7d_\u7801\u9ad8\u5c11\u513f\u7f16\u7a0b\u7f16\u8457,\u300aScratch 3.0\u8da3\u5473\u7f16\u7a0b\u7cbe\u5f69\u5b9e\u4f8b\u300bPDF\u4e0b\u8f7d_\u7801\u9ad8\u5c11\u513f\u7f16\u7a0b\u7f16\u8457,\u300a\u57fa\u4e8e\u6587\u672c\u6316\u6398\u7684\u672c\u4f53\u5b66\u4e60\u65b9\u6cd5\u7814\u7a76\u300bPDF\u4e0b\u8f7d_\u4e8e\u5a1f,\u300a\u8ba1\u7b97\u673a\u5e94\u7528\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u4f55\u90a6\u8d22,\u300aC++\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1(\u9ad8\u804c\u9ad8\u4e13\u8ba1\u7b97\u673a\u7cfb\u5217\u6559\u6750\u3002)\u300bPDF\u4e0b\u8f7d_\u7530\u950b\u793e,\u300a21\u4e16\u7eaa\u9ad8\u7b49\u9662\u6821\u97f3\u4e50\u4e13\u4e1a\u6559\u6750\u7535\u8111\u97f3\u4e50\u7406\u8bba\u4e0e\u5e94\u7528(\u914dCD)21\u4e16\u7eaa\u9ad8\u7b49\u9662\u6821\u97f3\u4e50\u4e13\u4e1a\u6559\u6750\u914dCD\u5149\u76d8\u4e00\u5f20\u300bPDF\u4e0b\u8f7d_\u9648\u542f\u4e91,\u300a\u8de8\u5927\u897f\u6d0b\u6570\u636e\u4fdd\u62a4\u5b9e\u8df5\u300bPDF\u4e0b\u8f7d_(\u745e\u58eb)\u7f57\u5c14\u592b\u00b7H.\u97e6\u4f2f(RolfH.,\u300a\u5e73\u9762\u8bbe\u8ba1\u7efc\u5408\u5b9e\u8bad\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u90d1\u8273\uff0c\u6768\u96c1\u4e3b\u7f16,\u300aSolidWorks 2016\u57fa\u7840\u4e0e\u5b9e\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u90d1\u8d1e\u5e73\uff0c\u5f20\u5c0f\u7ea2\u4e3b\u7f16,\u300a\u6709\u9650\u5143\u5206\u6790\u5e38\u7528\u6750\u6599\u53c2\u6570\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u8f9b\u6625\u4eae[\u7b49]\u7f16\u8457,\u300a\u6211\u7684\u8054\u60f3\u5c81\u6708\u300bPDF\u4e0b\u8f7d_\u9a6c\u5e05,\u300a\u7845\u8c37\u4e4b\u706b:\u4e2a\u4eba\u8ba1\u7b97\u673a\u7684\u8bde\u751f\u4e0e\u8870\u843d(\u7b2c3\u7248)\u300bPDF\u4e0b\u8f7d_[\u7f8e]\u8fc8\u514b\u5c14\u00b7\u65af\u97e6\u56e0\uff08MichaelS,\u300a\u4e2d\u6587\u7248Word 2010 \u884c\u653f/\u6587\u79d8\u529e\u516c\u5fc5\u5907\u624b\u518c-(\u542b1CD)\u300bPDF\u4e0b\u8f7d_\u718a\u6021,\u300aAutoCAD\u4ece\u96f6\u5f00\u59cb\u5b8c\u5168\u7cbe\u901a-\u4e2d\u6587\u7248-(\u968f\u4e66\u8d60\u9001\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u67cf\u677e,\u300a\u4e2d\u6587\u7248Excel 2016\u9ad8\u7ea7VBA\u7f16\u7a0b\u5b9d\u5178-(\u7b2c8\u7248)\u300bPDF\u4e0b\u8f7d_\u9ea6\u514b\u5c14.\u4e9a\u5386\u5c71\u5927,\u300aPHP\u4ece\u5165\u95e8\u5230\u7cbe\u901a-(\u7b2c4\u7248)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u5e38\u7528\u5de5\u5177\u8f6f\u4ef6\u9879\u76ee\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u738b\u82b3,\u300a\u8ba1\u7b97\u673a\u8f85\u52a9\u5236\u9020\u300bPDF\u4e0b\u8f7d_\u6731\u5f64,\u300aMATLAB\u4f7f\u7528\u8be6\u89e3\u300bPDF\u4e0b\u8f7d_\u8463\u9716\u7f16\u8457,\u300aInternet\u4e0e\u7f51\u9875\u5236\u4f5c\u5b9e\u7528\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u845b\u7ea2\u7f8e\uff0c\u9ad8\u4e3d\u8363\u4e3b\u7f16,\u300a\u666f\u89c2(\u56ed\u6797)\u8bbe\u8ba1\u4e13\u4e1a-\u56ed\u6797\u8bbe\u8ba1CAD\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5f20\u4fca\u73b2\uff0c\u674e\u5f66\u96ea\uff0c\u80e1\u8fdc\u4e1c\u7f16\u8457,\u300aExcel2007\u516c\u5f0f\u3001\u51fd\u6570\u4e0e\u56fe\u8868\u8303\u4f8b\u5e94\u7528(\u542b\u76d8)\u300bPDF\u4e0b\u8f7d_\u6770\u8bda\u6587\u5316,\u300aUnity  3D  \u624b\u673a\u6e38\u620f\u5f00\u53d1\u300bPDF\u4e0b\u8f7d_\u91d1\u73ba\u66fe\u7f16\u8457,\u300a2013CAXA\u7535\u5b50\u56fe\u7248\u6807\u51c6\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u8bb8\u73a2,\u300aXML\u57fa\u7840\u6559\u7a0b\u4e0e\u5b9e\u9a8c\u6307\u5bfc\u300bPDF\u4e0b\u8f7d_\u5b8b\u6b66,\u300a\u64cd\u4f5c\u7cfb\u7edf\u539f\u7406\u4e0e\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u738b\u80b2\u52e4,\u300a\u79fb\u52a8\u7ec8\u7aef\u5b89\u5168\u5173\u952e\u6280\u672f\u4e0e\u5e94\u7528\u5206\u6790\u300bPDF\u4e0b\u8f7d_\u5f20\u6ee8,\u300aMongoDB \u5165\u95e8\u7ecf\u5178\u300bPDF\u4e0b\u8f7d_\u6234\u5229,\u300a\u8ba1\u7b97\u673a\u662f\u600e\u6837\u8dd1\u8d77\u6765\u7684\u300bPDF\u4e0b\u8f7d_\u77e2\u6cfd\u4e45\u96c4,\u300aAdobe\u521b\u610f\u5927\u5b66After Effects CS5\u4ea7\u54c1\u4e13\u5bb6\u8ba4\u8bc1\u6807\u51c6\u6559\u6750\u300bPDF\u4e0b\u8f7d_\u5218\u6167,\u738b\u5915\u52c7\u7f16\u8457,\u300a\u6570\u636e\u5e93\u7cfb\u7edf\u539f\u7406\u6559\u7a0b(\u9ad8\u6821\u4fe1\u606f\u4e13\u4e1a\u6559\u6750)\u300bPDF\u4e0b\u8f7d_\u738b\u73ca\u7b49\u7f16,\u300a\u8ba1\u7b97\u673a\u6587\u5316\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u5218\u83b9.\u8463\u4e00\u82ac\u4e3b\u7f16,\u300aAutoCAD 2009\u5de5\u7a0b\u7ed8\u56fe\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u8983\u56fd\u840d.\u79b9\u6587\u9f99\u4e3b\u7f16,\u300a\u6570\u636e\u5e93\u7cfb\u7edf\u539f\u7406\u4e0e\u5e94\u7528-(\u7b2c\u4e8c\u7248)\u300bPDF\u4e0b\u8f7d_\u5218\u6df3\u4e3b\u7f16,\u300a\u8ba1\u7b97\u673a\u5916\u90e8\u8bbe\u5907\u4f7f\u7528\u4e0e\u7ef4\u62a4\u300bPDF\u4e0b\u8f7d_\u6731\u5b9a\u5584.\u9648\u6b8a\u4e3b\u7f16,\u300a\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u674e\u5584\u5e73.\u5b63\u6c5f\u6c11.\u5c39\u5eb7\u51ef\u7f16\u8457,\u300a\u4fe1\u606f\u5b89\u5168\u666e\u53ca\u8bfb\u672c-(\u666e\u53ca\u7248)\u300bPDF\u4e0b\u8f7d_\u6682\u65e0,\u300a\u8ba1\u7b97\u673a\u7ec4\u88c5\u4e0e\u7ef4\u62a4\u300bPDF\u4e0b\u8f7d_\u6731\u8d35\u5baa,\u300a\u5927\u9053PHP:LAMP+Zend+\u5f00\u6e90\u6846\u67b6\u6574\u5408\u5f00\u53d1\u4e0e\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\u4e09\u626c\u79d1\u6280,\u300aOffice 2010 \u5b9e\u6218\u6280\u5de7\u7cbe\u7cb9\u8f9e\u5178528\u79d8\u7b08\u5927\u5168\u300bPDF\u4e0b\u8f7d_\u738b\u56fd\u80dc\u4e3b\u7f16,\u300a\u5185\u5b58\u6570\u636e\u7ba1\u7406 \u7b2c2\u7248\u300bPDF\u4e0b\u8f7d_\uff08\u5fb7\uff09\u666e\u62c9\u7279\u7eb3\uff0c\uff08\u5fb7\uff09\u8521\u5c14\u8457\uff0cSAP\u8bd1,\u300aautocad 2012\u5b8c\u5168\u5b66\u4e60\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u4e01\u91d1\u6ee8\u7f16\u8457,\u300aAUTODESK 3DS MAX 2012\u6807\u51c6\u57f9\u8bad\u5b9e\u6218\u624b\u518cII\u300bPDF\u4e0b\u8f7d_\u738b\u7426\u4e3b\u7f16\uff0c\u706b\u661f\u65f6\u4ee3\u7f16\u8457,\u300a\u7f16\u7a0bing:\u4eba\u4eba\u90fd\u80fd\u5b66\u4f1a\u7a0b\u5e8f\u8bbe\u8ba1(\u5168\u5f69\u300bPDF\u4e0b\u8f7d_\u8521\u5b66\u955b\u8457,\u300aUGNX8.0\u5b8c\u5168\u81ea\u5b66\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u5218\u660c\u4e3d\uff0c\u5468\u8fdb\u7f16\u8457,\u300aASP.NET\u52a8\u6001\u7f51\u7ad9\u8bbe\u8ba1\u4e0e\u5b9e\u73b0:\u4ee5\u4e00\u4e2a\u771f\u5b9e\u8fd0\u884c\u7684\u7f51\u7ad9\u4e3a\u6848\u4f8b\u300bPDF\u4e0b\u8f7d_\u4e01\u6842\u829d\uff0c\u5f20\u81fb\u7f16\u8457,\u300aWindwos \u6e38\u620f\u7f16\u7a0b\u5927\u5e08\u6280\u5de7-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u62c9\u83ab\u65af,\u300a\u5353\u8d8a\u7a0b\u5e8f\u5458\u5bc6\u7801\u300bPDF\u4e0b\u8f7d_\u5f20\u5bb6\u4e3a,\u300a\u7cbe\u901aHTML5+CSS3+JAVASCRIPT\u7f51\u9875\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u5218\u589e\u6770\u7b49\u7f16\u8457,\u300a\u5d4c\u5165\u5f0f\u6280\u672f\u9879\u76ee\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5434\u632f\u82f1,\u300a\u8ba1\u7b97\u673a\u6587\u5316\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u5218\u7b71\u51ac,\u300a\u7ecf\u5178\u5b9e\u4f8b\u5b66\u8bbe\u8ba1-AutoCAD 2016\u5ba4\u5185\u8bbe\u8ba1\u4ece\u5165\u95e8\u5230\u7cbe\u901a-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u9a6c\u52ad\u78ca,\u300aPhotoshop\u6241\u5e73\u5316\u5e73\u9762\u8bbe\u8ba1\u624b\u518c-(\u542b\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u9ad8\u91d1\u5c71,\u300a\u89e6\u52a8\u4eba\u5fc3\u7684\u624b\u673a\u7aef\u9875\u9762\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u6797\u743c,\u300a\u4e2d\u6587\u7248Photoshop CS3\u6848\u4f8b\u6807\u51c6\u6559\u7a0b(\u542b\u76d8)\u300bPDF\u4e0b\u8f7d_\u5468\u6653,\u300a3ds max/VRay\u5367\u5ba4\u6548\u679c\u56fe\u5236\u4f5c\u73b0\u573a(\u542b\u76d8)\u300bPDF\u4e0b\u8f7d_\u90d1\u5e86\u8363,\u300aDREAMWEAVER  CS4+ASP\u52a8\u6001\u7f51\u7ad9\u5efa\u8bbe\u4ece\u5165\u95e8\u5230\u7cbe\u901a\u300bPDF\u4e0b\u8f7d_\u9648\u76ca\u6750,\u300aC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1-(\u7b2c\u4e09\u7248)\u300bPDF\u4e0b\u8f7d_\u5ed6\u96f7,\u300aVisual Basic\u7a0b\u5e8f\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u674e\u4e66\u7434\uff0c\u851a\u7ee7\u627f\u4e3b\u7f16,\u300a\u56fe\u50cf\u5904\u7406-\u56fe\u50cf\u5de5\u7a0b-(\u4e0a\u518c)-(\u7b2c4\u7248)\u300bPDF\u4e0b\u8f7d_\u7ae0\u6bd3\u664b,\u300aREDIS 4.X COOKBOOK\u4e2d\u6587\u7248\u300bPDF\u4e0b\u8f7d_\u9ec4\u9e4f\u7a0b//\u738b\u5de6\u975e,\u300aSOLIDWORKS\u5de5\u7a0b\u8bbe\u8ba1\u4e0e\u5f00\u53d1\u7cfb\u5217OLIDWORKS2016\u4e2d\u6587\u7248\u6a21\u5177\u8bbe\u8ba1\u4ece\u5165\u95e8\u5230\u7cbe\u901a\u300bPDF\u4e0b\u8f7d_\u7f16\u8005:\u80e1\u4ec1\u559c//\u5218\u660c\u4e3d,\u300aOReilly\u7cbe\u54c1\u56fe\u4e66\u7cfb\u5217\u589e\u5f3a\u4eba\u7c7b:\u6280\u672f\u5982\u4f55\u5851\u9020\u65b0\u7684\u73b0\u5b9e\u300bPDF\u4e0b\u8f7d_(\u7f8e)\u6d77\u4f26\uff1f\u5e15\u5e15\u626c\u5c3c\u65af,\u300a\u673a\u68b0\u5de5\u4e1a\u51fa\u7248\u793eAUTOCAD 2018\u5ba4\u5185\u8bbe\u8ba1\u5168\u5957\u56fe\u7eb8\u7ed8\u5236\u5927\u5168\u300bPDF\u4e0b\u8f7d_\u7f16\u8005:\u9e93\u5c71\u6587\u5316,\u300a\u667a\u5a92\u4f53\u300bPDF\u4e0b\u8f7d_\u674e\u9e4f,\u300aBOOTSTRAP\u4ece\u5165\u95e8\u5230\u9879\u76ee\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\u674e\u7231\u73b2,\u300a\u9ad8\u804c\u9ad8\u4e13\u8ba1\u7b97\u673a\u4efb\u52a1\u9a71\u52a8\u6a21\u5f0f\u6559\u6750DREAMWEAVER CC\u7f51\u9875\u8bbe\u8ba1\u4e0e\u5236\u4f5c/\u6e38\u742a\u300bPDF\u4e0b\u8f7d_\u6e38\u742a\u3001\u5f20\u5e7f\u4e91\u3001\u90ed\u6c38\u73b2\u3001\u9676\u7ea2\u4e3d\u3001\u53f6\u73ab,\u300aUNREAL ENGINE 4\u7279\u6548\u8bbe\u8ba1\u5fc5\u4fee\u8bfe\u300bPDF\u4e0b\u8f7d_UEGOOD\u8212\u8f89,\u300a\u6570\u636e\u7ed3\u6784(C\u8bed\u8a00\u7248)\u300bPDF\u4e0b\u8f7d_\u79e6\u950b\u4e3b\u7f16,\u300a\u548c\u5c0f\u732b\u4e00\u8d77\u5b66\u7f16\u7a0b:\u8d85\u597d\u73a9\u7684SCRATCH 3.0(\u5fae\u8bfe\u7248)\u300bPDF\u4e0b\u8f7d_\u65b9\u5176\u6842\u4e3b\u7f16\u3001\u9ece\u6c99\u3001\u5f20\u5c0f\u9f99\u526f\u4e3b\u7f16,\u300aPhotoshop CS6\u5b8c\u5168\u5b66\u4e60\u624b\u518c(\u4e2d\u6587\u7248)(\u9644DVD\u5149\u76d81\u5f20) [\u5e73\u88c5]\u300bPDF\u4e0b\u8f7d_\u674e\u8389\uff0c\u6768\u97f6\u8f89\uff0c\u859b\u7ea2\u5a1c\u8457,\u300aPOWERPOINT\u5b8c\u7f8e\u521b\u610f\u8bbe\u8ba12\u300bPDF\u4e0b\u8f7d_\u738b\u56fd\u80dc\u7b49\u7f16\u8457,\u300aPHOTOSHOP CS6 \u4ece\u5165\u95e8\u5230\u7cbe\u901a-\u4e2d\u6587\u7248-(\u9644\u8d602DVD+1\u5b66\u4e60\u624b\u518c)\u300bPDF\u4e0b\u8f7d_\u4e01\u4f1f,\u300aAutoCAD 2013\u4ece\u5165\u95e8\u5230\u7cbe\u901a-\u4e2d\u6587\u7248-(\u9644\u8d601\u5149\u76d8.\u542b\u6559\u5b66\u89c6\u9891\u4e0e\u6d77\u91cf\u7d20\u6750)\u300bPDF\u4e0b\u8f7d_\u90ed\u514b\u666f,\u300a\u96f6\u70b9\u8d77\u98de\u5b66Protel DXP 2004\u539f\u7406\u4e0ePCB\u8bbe\u8ba1-DVD\u300bPDF\u4e0b\u8f7d_\u8bb8\u5411\u8363,\u300a\u7a81\u7834\u5e73\u9762Maya\u5efa\u6a21\u6750\u8d28\u6e32\u67d3\u6df1\u5ea6\u5256\u6790-\u5168\u5f69\u5370\u5237-2DVD\u300bPDF\u4e0b\u8f7d_\u6768\u5e86\u948a,\u300a\u96f6\u70b9\u8d77\u98de\u5b66SolidWorks 2013\u8f85\u52a9\u8bbe\u8ba1-CD\u300bPDF\u4e0b\u8f7d_\u66f9\u7acb\u6587,\u300a\u7cbe\u901aC# 4.0\u7a0b\u5e8f\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u6731\u4ed8\u4fdd,\u300aColdFusion 8\u6807\u51c6\u6307\u5357\u7b2c3\u5377:\u9ad8\u7ea7\u5e94\u7528\u5f00\u53d1\u300bPDF\u4e0b\u8f7d_\uff08\u7f8e\uff09\u4f0f\u7279\uff08Forta.B.\uff09\u8457,\u300aiLike\u804c\u573aPhotoshop CS4\u6570\u7801\u8bbe\u8ba1\u6280\u6cd5\u7cbe\u7cb9\u300bPDF\u4e0b\u8f7d_\u66f9\u6c38\u8273\u7f16\u8457,\u300aC\u4ece\u5165\u95e8\u5230\u5b9e\u8df5(\u914d\u5149\u76d8)(\u5b66\u7f16\u7a0b\u4ece\u5165\u95e8\u5230\u5b9e\u8df5)\u300bPDF\u4e0b\u8f7d_\u90d1\u8000\u4e1c\u7b49\u7f16\u8457,\u300aAutoCAD2010\u57fa\u7840\u6559\u7a0b\u4e0e\u5e94\u7528\u5b9e\u4f8b\u300bPDF\u4e0b\u8f7d_\u6f58\u82cf\u84c9,\u300aPhotoshopCS4\u4e2d\u6587\u7248\u6807\u51c6\u6559\u7a0b(1CD)\u300bPDF\u4e0b\u8f7d_\u96f7\u6ce2,\u300aERP\u6c99\u76d8\u7ecf\u8425\u6a21\u62df\u5b9e\u8bad\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u91d1\u6d2a\u56fd,\u300a\u7f51\u7edc\u4fe1\u606f\u5b89\u5168\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u5468\u660e\u5168,\u300a\u5de5\u4e1a\u673a\u5668\u4eba\u5e94\u7528\u7cfb\u7edf\u4e09\u7ef4\u5efa\u6a21\u300bPDF\u4e0b\u8f7d_\u90dc\u6d77\u8d85,\u300a\u6559\u80b2\u7814\u7a76\u4e2d\u5b9a\u91cf\u6570\u636e\u7684\u7edf\u8ba1\u4e0e\u5206\u6790-\u57fa\u4e8eSPSS\u7684\u5e94\u7528\u6848\u4f8b\u89e3\u6790-\u57fa\u4e8eSPSS\u7684\u5e94\u7528\u6848\u4f8b\u89e3\u6790-(\u542b\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u5f20\u5c79,\u300aWord/Excel/PPT 2016\u4e09\u5408\u4e00\u529e\u516c\u5e94\u7528\u5b9e\u6218\u4ece\u5165\u95e8\u5230\u7cbe\u901a -\u8d85\u503c\u7248-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u5546\u52a1\u7f51\u9875\u8bbe\u8ba1\u4e0e\u5236\u4f5c\u300bPDF\u4e0b\u8f7d_\u65b9\u73b2\u7389,\u300a21\u5929\u5b66\u901aHTML+CSS+JavaScript Web\u5f00\u53d1-(\u7b2c7\u7248)\u300bPDF\u4e0b\u8f7d_\u52b3\u62c9.\u83b1\u6885,\u300aC#\u7ecf\u5178\u5b9e\u4f8b-\u7b2c4\u7248\u300bPDF\u4e0b\u8f7d_\u6770\u4f0a.\u5e0c\u5c14\u4e9a\u5fb7,\u300a\u8bbe\u8ba1\u4e5f\u5e7d\u9ed8-\u5e73\u9762\u8bbe\u8ba1\u5e08\u7684\u5e7d\u9ed8\u6307\u5357\u300bPDF\u4e0b\u8f7d_\u5e0c\u745f.\u5e03\u62c9\u5fb7\u5229,\u300a\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784-\u6311\u6218\u7a0b\u5e8f\u8bbe\u8ba1\u7ade\u8d5b-2\u300bPDF\u4e0b\u8f7d_\u6e21\u90e8\u6709\u9686,\u300a\u5d4c\u5165\u5f0fLinux\u5f00\u53d1\u6559\u7a0b-(\u4e0b\u518c)\u300bPDF\u4e0b\u8f7d_\u5468\u7acb\u529f,\u300a\u5355\u7247\u673a\u539f\u7406\u4e0e\u5e94\u7528\u5b9e\u4f8b\u4eff\u771f-(\u7b2c3\u7248)\u300bPDF\u4e0b\u8f7d_\u674e\u6cc9\u6eaa,\u300a\u51f8\u4f18\u5316\u7b97\u6cd5\u300bPDF\u4e0b\u8f7d_\u535a\u585e\u5361\u65af,\u300a\u7cbe\u901aIos\u6846\u67b6-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u91cc\u514b\u7279,\u300aJava\u8bfe\u7a0b\u8bbe\u8ba1\u6848\u4f8b\u7cbe\u7f16-(\u7b2c3\u7248)\u300bPDF\u4e0b\u8f7d_\u5f20\u5efa\u519b,\u300aOffice \u9ad8\u6548\u529e\u516c\u5e94\u7528\u6280\u5de7500\u4f8b-2010\u7248-(\u968f\u4e66\u8d60\u9001\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u67cf\u677e,\u300a\u5e7f\u8054\u8fbe\u5de5\u7a0b\u9020\u4ef7\u7c7b\u8f6f\u4ef6\u5b9e\u8bad\u6559\u7a0b\u6848\u4f8b\u56fe\u96c6(\u7b2c\u4e8c\u7248)\u300bPDF\u4e0b\u8f7d_\u5e7f\u8054\u8fbe\u8f6f\u4ef6\u80a1\u4efd\u6709\u9650\u516c\u53f8,\u300a\u5927\u5b66\u8ba1\u7b97\u673a\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u6c88\u56fd\u8363,\u300aJava\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u4e0e\u9879\u76ee\u5b9e\u8bad\u300bPDF\u4e0b\u8f7d_\u6587\u4e1c,\u300aJavaScript\u7a0b\u5e8f\u8bbe\u8ba1\u5b9e\u4f8b\u6559\u7a0b \u7b2c2\u7248\u300bPDF\u4e0b\u8f7d_\u7a0b\u4e50\u90d1\u4e3d\u840d\u5218\u4e07\u8f89,\u300a\u8ba1\u7b97\u673a\u7cfb\u7edf\u5b89\u5168\u539f\u7406\u4e0e\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u9648\u6ce2\uff0c\u4e8e\u6ce0\u7f16\u8457,\u300a\u4eba\u5de5\u667a\u80fd\u5bfc\u8bba\u300bPDF\u4e0b\u8f7d_\u5468\u82cf\uff0c\u5f20\u6cf3\u4e3b\u7f16,\u300a\u6570\u636e\u5e93\u7cfb\u7edf\u539f\u7406\u53ca\u5e94\u7528\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u82d7\u96ea\u5170\uff0c\u5218\u745e\u65b0\uff0c\u5b8b\u6b4c\u4e3b\u7f16,\u300aPhotoshop CC2015\u4e2d\u6587\u7248\u5b9e\u7528\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5f20\u51e1\u7b49\u7f16\u8457,\u300a\u5b9e\u7528\u504f\u5fae\u5206\u65b9\u7a0b\u300bPDF\u4e0b\u8f7d_(\u7f8e)\u7406\u67e5\u5fb7\u00b7\u54c8\u4f2f\u66fc(RichardH,\u300a\u6570\u5b57\u56fe\u50cf\u5904\u7406\u4e0e\u5206\u6790\u300bPDF\u4e0b\u8f7d_\u5f20\u5f18\uff0c\u674e\u5609\u950b\u4e3b\u7f16,\u300aJava EE\u67b6\u6784\u8bbe\u8ba1\u4e0e\u5f00\u53d1\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u65b9\u5dcd\u4e3b\u7f16,\u300a\u6301\u7eed\u4ea4\u4ed8\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_(\u5fb7)\u57c3\u4f2f\u54c8\u5fb7\u00b7\u6c83\u5c14\u592b(Eberhard,\u300a\u67b6\u6784\u5e08\u5e94\u8be5\u77e5\u9053\u768437\u4ef6\u4e8b\u300bPDF\u4e0b\u8f7d_(\u7f8e)\u683c\u96f7\u6208\u5c14\u00b7\u970d\u57f9(GregorHo,\u300a\u6570\u5b66\u4e4b\u7f8e\u300bPDF\u4e0b\u8f7d_\u5434\u519b\u8457,\u300a\u6469\u767b\u521b\u5ba2:\u4e0e\u667a\u80fd\u624b\u673a\u548c\u5e73\u677f\u7535\u8111\u5171\u821e\u300bPDF\u4e0b\u8f7d_(\u5fb7)\u514b\u52b3\u65af\u00b7\u767b\u535a\u592b\u65af\u57fa\u8457,\u300a\u96f6\u57fa\u7840\u5b66Python-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u5f20\u5fd7\u5f3a,\u300aCATIA V5-6 R2014\u6a21\u5177\u8bbe\u8ba1\u6559\u7a0b-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aAutoCAD\u81ea\u5b66\u5b9d\u5178-(2015\u4e2d\u6587\u7248)-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aAutoCAD\u673a\u68b0\u8bbe\u8ba1\u5165\u95e8\u4e0e\u63d0\u9ad8-(2015\u7248)-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aAVR\u5355\u7247\u673aC\u8bed\u8a00\u8f7b\u677e\u5b66-(\u914d\u89c6\u9891\u6559\u7a0b)-(\u542bCD\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u4e25\u96e8,\u300aWeb\u524d\u7aef\u8bbe\u8ba1\u4e0e\u5f00\u53d1-HTML+CSS+JavaScript+HTML 5+jQuery\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u5b89\u9632\u89c6\u9891\u76d1\u63a7\u5b9e\u8bad\u6559\u7a0b-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u9093\u6cfd\u56fd,\u300a3D\u5efa\u6a21\u4e0e3D\u6253\u5370\u6280\u672f\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u9ec4\u6587\u607a,\u300a\u673a\u5668\u667a\u80fd\u300bPDF\u4e0b\u8f7d_\u674e\u857e,\u300aOCP\u8ba4\u8bc1\u8003\u8bd5\u6307\u5357(1Z0-063)-Oracle Database 12c\u9ad8\u7ea7\u7ba1\u7406\u300bPDF\u4e0b\u8f7d_\u5e03\u83b1\u62c9,\u300aPHP 7\u5b9e\u6218\u6307\u5357-020\u7f51\u7ad9\u4e0eApp\u540e\u53f0\u5f00\u53d1\u300bPDF\u4e0b\u8f7d_\u9648\u5c0f\u9f99,\u300a\u7ed9\u60f3\u5f53\u7a0b\u5e8f\u5458\u7684\u4f60-\u7a0b\u5e8f\u5458\u9762\u8bd5\u5b9d\u5178\u4e0e\u8fdb\u9636\u79d8\u7b08\u300bPDF\u4e0b\u8f7d_\u90d1\u840c,\u300aC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u6234\u5f66\u7fa4,\u300a\u8ba1\u7b97\u673a\u7ed8\u56fe\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u5468\u4f73\u65b0,\u300aAndroid\u9879\u76ee\u5f00\u53d1\u5b9e\u6218\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u8bb8\u8d85,\u300a\u8f6f\u4ef6\u6d4b\u8bd5\u5b9e\u8df5\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u8def\u6653\u4e3d,\u300aJavaScript\u4ece\u5165\u95e8\u5230\u7cbe\u901a-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u91cd\u70b9\u5927\u5b66\u8ba1\u7b97\u673a\u4e13\u4e1a\u7cfb\u5217\u6559\u6750\u591a\u5a92\u4f53\u6280\u672f\u4e0e\u7f51\u9875\u8bbe\u8ba1\u7b2c2\u7248CD\u5149\u76d81\u5f20\u300bPDF\u4e0b\u8f7d_\u9648\u65b0\u9f99\u4e3b\u7f16,\u300aArcGIS\u57fa\u7840\u5b9e\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u7530\u6d2a\u9635,\u300a\u7f51\u7edc\u4e0e\u4fe1\u606f\u5b89\u5168\u95ee\u9898\u7814\u7a76\u300bPDF\u4e0b\u8f7d_\u848b\u5e73,\u300aAndroid\u5f00\u53d1\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u8bb8\u8d85,\u300a\u8ba1\u7b97\u673a\u652f\u6301\u7684\u5b66\u4e60\u2014\u2014\u534f\u540c\u77e5\u8bc6\u5efa\u6784\u4e0e\u53ef\u89c6\u5316\u89c6\u91ce\u300bPDF\u4e0b\u8f7d_\u4efb\u5251\u950b\u8457,\u300a\u56fd\u9645\u5927\u5b66\u751f\u7a0b\u5e8f\u8bbe\u8ba1\u7ade\u8d5b\u4e2d\u5c71\u5927\u5b66\u5185\u90e8\u9009\u62d4\u771f\u9898\u89e3(\u4e00)\u300bPDF\u4e0b\u8f7d_\u90ed\u5d69\u5c71\u7b49\u8457,\u300a\u7535\u6c14CAD\u5b9e\u4f8b\u6559\u7a0b(AutoCAD010\u4e2d\u6587\u7248)\u300bPDF\u4e0b\u8f7d_\u5de6\u6609\uff0c\u80e1\u4ec1\u559c\u7b49\u7f16\u8457,\u300a\u7f51\u7edc\u52a8\u753b\u7f16\u8f91\u300bPDF\u4e0b\u8f7d_\u9ad8\u5c71\u51b0,\u300a\u6570\u5b57\u5a92\u4f53\u4ea4\u4e92\u5143\u7d20\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u5218\u59b9\u94ed,\u300aSQL Server 2014\u6570\u636e\u5e93\u5e94\u7528\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5d14\u8fde\u548c,\u300aAutoCAD\u673a\u68b0\u8bbe\u8ba1\u5b9e\u4f8b\u7cbe\u89e3-(2015\u4e2d\u6587\u7248)-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aExcel\u5728\u7269\u6d41\u7ba1\u7406\u4e2d\u7684\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u8d75\u6dd1\u7fa4,\u300aArduino \u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u9648\u5415\u6d32,\u300a\u673a\u5668\u4eba\u5236\u4f5c\u5165\u95e8-\u7b2c3\u7248\u300bPDF\u4e0b\u8f7d_\u81e7\u6d77\u6ce2,\u300aOracle\u6027\u80fd\u8bca\u65ad\u827a\u672f-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u5b89\u6258\u5c3c\u5c3c,\u300a2015\u5e74-\u4e2d\u56fd\u4e92\u8054\u7f51\u7f51\u7edc\u5b89\u5168\u62a5\u544a\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u63a7\u5236\u5de5\u7a0b\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u4f55\u7433\u7433\uff0c\u8bb8\u4e3d\u4f73\u4e3b\u7f16,\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u5b89\u5168\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u6f58\u745c,\u300a\u666e\u901a\u9ad8\u6821\u672c\u79d1\u8ba1\u7b97\u673a\u4e13\u4e1a\u7279\u8272\u6559\u6750\u7cbe\u9009\u00b7\u7b97\u6cd5\u4e0e\u7a0b\u5e8f\u8bbe\u8ba1C++\u5b9e\u9a8c\u6307\u5bfc\u4e66\u300bPDF\u4e0b\u8f7d_\u6731\u91d1\u4ed8\u4e3b\u7f16,\u300a\u8ba1\u7b97\u673a\u8f85\u52a9\u5316\u5de5\u8bbe\u8ba1\u6848\u4f8b\u5206\u6790\u300bPDF\u4e0b\u8f7d_\u5218\u8d85\u950b,\u300a\u673a\u5668\u4eba\u7f16\u7a0b\u4e0e\u64cd\u4f5c\u300bPDF\u4e0b\u8f7d_\u97e6\u4f1f\u677e,\u300aJava\u67b6\u6784\u5e08\u6307\u5357\u300bPDF\u4e0b\u8f7d_\u738b\u6ce2,\u300a\u201c\u7b28\u529e\u6cd5\u201d\u5b66Python 3\u300bPDF\u4e0b\u8f7d_\u6cfd\u5fb7,\u300aSpark\u9ad8\u7ea7\u6570\u636e\u5206\u6790\u300bPDF\u4e0b\u8f7d_\u6851\u8fea\u00b7\u91cc\u624eSandy,\u300aUG NX 9.0\u6a21\u5177\u8bbe\u8ba1\u5b8c\u5168\u5b66\u4e60\u624b\u518c-(\u542b2DVD)\u300bPDF\u4e0b\u8f7d_\u673a\u68b0\u5de5\u4e1a\u51fa\u7248\u793e,\u300a\u63a7\u5236\u6280\u672f\u4e0e\u7cfb\u7edf-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u9ec4\u60df\u4e00\u3001\u80e1\u751f\u6e05/\u56fd\u522b\uff1a\u4e2d\u56fd\u5927\u9646,\u300a\u5927\u5b66\u8ba1\u7b97\u673a\u57fa\u7840\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u59dc\u7ee7\u5ff1,\u300aC\u5f15\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u590f\u5b9d\u5c9a,\u300aC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u674e\u654f,\u300a\u8f66\u8054\u7f51\u300bPDF\u4e0b\u8f7d_\u5f90\u6653\u9f50,\u300aIllustrator \u5165\u95e8\u7ea7\u5546\u4e1a\u5e7f\u544a\u8bbe\u8ba1-UI\u8bbe\u8ba1\u5e08\u6210\u957f\u7b2c\u4e00\u6b65\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u79fb\u52a8\u7aef UI \u8bbe\u8ba1\u53ca\u89c4\u8303-\u5206\u5206\u949f\u641e\u5b9aApp UI\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u6df1\u5165\u7406\u89e3Elasticsearch-(\u539f\u4e66\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u62c9\u6590\u5c14.\u9177\u5947,\u300a\u9ad8\u7b49\u5b66\u6821\u673a\u7535\u5de5\u7a0b\u7c7b\u5341\u4e8c\u4e94\u89c4\u5212\u6559\u6750\u673a\u68b0CAD/CAM\u5b9e\u9a8c\u6307\u5bfc\u7b2c2\u7248\u5149\u76d81\u5f20\u300bPDF\u4e0b\u8f7d_\u9ec4\u6653\u5cf0,\u300a\u9ad8\u7b49\u9662\u6821\u4fe1\u606f\u6280\u672f\u8bfe\u7a0b\u5b66\u4e60\u8f85\u5bfc\u4e1b\u4e66Visual FoxPro\u5b66\u4e60\u8f85\u5bfc\u4e0e\u4e0a\u673a\u5b9e\u9a8c\u300bPDF\u4e0b\u8f7d_\u859b\u78ca,\u6768\u4e9a\u5357,\u6731\u5bb6\u7fa4\u7b49\u7f16\u8457,\u300a\u9ad8\u7b49\u5b66\u6821\u8ba1\u7b97\u673a\u4e13\u4e1a\u89c4\u5212\u6559\u6750\u6570\u636e\u5e93\u6280\u672f\u4e0e\u5e94\u7528SQL server2005\u5e94\u7528\u7bc7\u300bPDF\u4e0b\u8f7d_\u9646\u7433,\u5218\u6842\u6797\u4e3b\u7f16,\u300aOffice\u529e\u516c\u8f6f\u4ef6\u5b9e\u7528\u6848\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u8463\u5919\u6167\uff0c\u5c39\u632f\u9e64\u4e3b\u7f16,\u300a\u5e73\u9762\u8bbe\u8ba1\u7ecf\u5178\u6848\u4f8b\u6559\u7a0b:CorelDRAW X6\u300bPDF\u4e0b\u8f7d_\u674e\u5929\u98de\uff0c\u9ec4\u8ba1\u60e0\u4e3b\u7f16,\u300a\u6570\u636e\u5e93\u5b89\u5168\u300bPDF\u4e0b\u8f7d_\u5218\u6656\uff0c\u5f6d\u667a\u52c7\u4e3b\u7f16\uff0c\u6797\u6b23\uff0c\u674e\u77f3\u541b\uff0c\u71d5\u5f69\u84c9\u526f\u4e3b\u7f16,\u300aVHDL\u6570\u5b57\u7535\u8def\u8bbe\u8ba1\u5b9e\u7528\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5468\u6da6\u666f,\u300aANSYS \u6709\u9650\u5143\u5206\u6790\u5e94\u7528\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u8d75\u6676,\u300a\u6dd8\u5b9d\u7f51\u5e97-\u7f8e\u5de5\u65b0\u624b\u4e00\u672c\u901a-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aAutoCAD 2016\u5ba4\u5185\u88c5\u6f62\u65bd\u5de5\u56fe\u8bbe\u8ba1\u4ece\u5165\u95e8\u5230\u7cbe\u901a-\u7b2c2\u7248-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u674e\u6ce2,\u300a\u5efa\u7b51\u5de5\u7a0b\u6846\u67b6\u7ed3\u6784\u8f6f\u4ef6\u7b97\u91cf\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5f20\u5411\u519b,\u300a\u610f\u5411\u6027\u4e0e\u4eba\u5de5\u667a\u80fd\u300bPDF\u4e0b\u8f7d_\u9ad8\u65b0\u6c11,\u300a\u7528\u6237\u4f53\u9a8c\u53ca Axure \u4ea4\u4e92\u8bbe\u8ba1-\u4e0d\u61c2\u4ea4\u4e92\u7684\u8bbe\u8ba1\u5e08\u4e0d\u662f\u597d\u8bbe\u8ba1\u5e08!\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u6210\u4e3a\u6570\u636e\u5206\u6790\u5e08:6\u6b65\u7ec3\u5c31\u6570\u636e\u601d\u7ef4\u300bPDF\u4e0b\u8f7d_(\u7f8e)\u6258\u9a6c\u65af\u00b7\u8fbe\u6587\u6ce2\u7279(ThomasH,\u300aANSYS AQWA\u8f6f\u4ef6\u5165\u95e8\u4e0e\u63d0\u9ad8\u300bPDF\u4e0b\u8f7d_\u9ad8\u5dcd\u4e3b\u7f16,\u300aAccess\u6570\u636e\u5e93\u6848\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5e94\u7ea2\u4e3b\u7f16,\u300a\u4e2d\u6587\u7248 3ds Max 2016\u5b9e\u7528\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u65f6\u4ee3\u5370\u8c61,\u300a\u7236\u4e0e\u5b50\u7684\u7f16\u7a0b\u4e4b\u65c5:\u4e0e\u7238\u7238\u4e00\u8d77\u5b66Scratch\u300bPDF\u4e0b\u8f7d_\u5218\u9e3f\u57ce,\u300a\u6d4b\u63a7\u8ba1\u7b97\u673a\u7cfb\u7edf\u5de5\u7a0b\u300bPDF\u4e0b\u8f7d_\u738b\u5b97\u9676,\u300aEssential C++\u4e2d\u6587\u7248\u300bPDF\u4e0b\u8f7d_Stanley,\u300aProteus\u8f85\u52a9\u7684\u5355\u7247\u673a\u539f\u7406\u5b9e\u8df5-\u57fa\u7840\u8bbe\u8ba1.\u8bfe\u7a0b\u8bbe\u8ba1\u548c\u6bd5\u4e1a\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u8d75\u5e7f\u5143,\u300a\u673a\u68b0\u5de5\u7a0b\u5e08\u4e4b\u8def-SolidWorks 2013\u9ad8\u624b\u901f\u6210\u624b\u518c-(\u9644\u8d601\u5149\u76d8.\u542b\u89c6\u9891\u6559\u5b66)\u300bPDF\u4e0b\u8f7d_\u5f20\u5fe0\u5c06,\u300a\u6811\u4e4b\u793c\u8d5e-\u4fe1\u606f\u53ef\u89c6\u5316\u65b9\u6cd5\u4e0e\u6848\u4f8b\u89e3\u6790\u300bPDF\u4e0b\u8f7d_\u5229\u9a6c,\u300a\u7535\u8111\u8f6f\u786c\u4ef6\u7ef4\u4fee\u4ece\u5165\u95e8\u5230\u7cbe\u901a-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u738b\u7ea2\u519b,\u300a3ds Max 2015/Vray\u6548\u679c\u56fe\u5236\u4f5c\u5b8c\u5168\u81ea\u5b66\u4e00\u672c\u901a-(\u542b\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u8303\u666f\u6cfd,\u300a\u57fa\u4e8eSPSS Modeler\u7684\u6570\u636e\u6316\u6398-(\u7b2c\u4e8c\u7248)\u300bPDF\u4e0b\u8f7d_\u859b\u8587,\u300aAutoCAD 2016\u4e2d\u6587\u7248\u4ece\u5165\u95e8\u5230\u7cbe\u901a-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aAutoCAD 2016\u4e2d\u6587\u7248\u673a\u68b0\u7ed8\u56fe\u5b9e\u4f8b\u6559\u7a0b-\u7545\u9500\u5347\u7ea7\u7248-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u8ff7\u4eba\u76848051\u5355\u7247\u673a\u300bPDF\u4e0b\u8f7d_\u9ad8\u663e\u751f,\u300a\u7535\u7b97\u4f1a\u8ba1\u5b9e\u8bad\u6559\u7a0b-\u7b2c\u4e8c\u7248-\u914d\u5149\u76d8\u300bPDF\u4e0b\u8f7d_\u674e\u6625\u53cb,\u300aOracle11g\u4e2d\u6587\u7248\u6570\u636e\u5e93\u7ba1\u7406\u5e94\u7528\u4e0e\u5f00\u53d1\u6807\u51c6\u6559\u7a0b(\u542b\u76d8)\u300bPDF\u4e0b\u8f7d_\u8bb8\u52c7,\u300aCX5604 3ds Max/VRay\u7167\u7247\u7ea7\u5bb6\u88c5\u6548\u679c\u56fe\u8868\u73b0\u6280\u6cd5(\u542b\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u6c88\u6bc5,\u300a\u4e92\u8054\u7f51\u4e2d\u670d\u52a1\u8d28\u91cf\u4e0e\u591a\u64ad\u8def\u7531\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u989c\u6615\u8457,\u300a\u804c\u4e1a\u6280\u672f\u6559\u80b2\u89c4\u5212\u6559\u6750;\u56fd\u5bb6\u4e2d\u3001\u4e0d\u9519\u5236\u56fe\u5458\u8d44\u683c\u8ba4\u8bc1\u5b9e\u8bad\u6559\u6750CAXA\u7535\u5b50\u56fe\u677f2005\u5b9e\u8bad\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u80e1\u5efa\u751f,\u6c6a\u6b63\u4fca\u7b49\u7f16\u8457,\u300aJSF\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\uff08\u7f8e\uff09\u66fc\u8457\uff0c\u94c1\u624b\u7b49\u8bd1,\u300aGame\u4e09\u7ef4\u6e38\u620f\u8bbe\u8ba1\u4e0e\u5236\u4f5c\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u623f\u6653\u6eaa\u7f16\u8457,\u300a\u65e0\u7ebf\u4f20\u611f\u5668\u7f51\u7edc\u540c\u6b65\u6280\u672f-(\u5f71\u5370\u7248)\u300bPDF\u4e0b\u8f7d_\uff08\u7f8e\uff09\u585e\u4f69\u4e01\u7b49\u8457,\u300a\u4e0d\u5b8c\u5168\u4fe1\u606f\u4e0bXML\u6570\u636e\u5e93\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u90dd\u5fe0\u5b5d\u8457,\u300a\u7f51\u7edc\u4e2d\u5fc3\u5316\u8054\u5408\u4f5c\u6218\u4f53\u7cfb-\u4f5c\u6218\u80fd\u529b\u6781\u5176\u8ba1\u7b97\u300bPDF\u4e0b\u8f7d_\u84dd\u7fbd\u77f3,\u300a\u8ba1\u7b97\u673a\u8d22\u52a1\u7ba1\u7406-Excel\u7bc7\u300bPDF\u4e0b\u8f7d_\u6731\u5e86\u987b,\u300aProfibus \u73b0\u573a\u603b\u7ebf\u63a7\u5236\u7cfb\u7edf\u7684\u8bbe\u8ba1\u4e0e\u5f00\u53d1-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u6881\u6d9b\uff0c\u6768\u5f6c\uff0c\u5cb3\u5927\u4e3a\u7f16\u8457,\u300a\u5d4c\u5165\u5f0fC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1-\u57fa\u4e8eSTC15W4K32S4\u7cfb\u5217\u5355\u7247\u673a\u300bPDF\u4e0b\u8f7d_\u4e01\u5411\u8363,\u300aWindows Server 2008\u670d\u52a1\u5668\u7ba1\u7406\u4e0e\u914d\u7f6e\u300bPDF\u4e0b\u8f7d_\u90ed\u5fb7\u4ec1,\u300a\u6570\u636e\u5e93\u6280\u672f\u53ca\u5e94\u7528\u9879\u76ee\u5f0f\u6559\u7a0b-(SQL Server 2008)\u300bPDF\u4e0b\u8f7d_\u9648\u5c27\u5983,\u300aATmega16\u5355\u7247\u673a\u9879\u76ee\u9a71\u52a8\u6559\u7a0b-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u6768\u6c38,\u300a\u5355\u7247\u673a\u6280\u672f\u4e0e\u5e94\u7528\u6d59\u6c5f\u7701\u5341\u4e00\u4e94\u91cd\u70b9\u5efa\u8bbe\u6559\u6750-(C\u8bed\u8a00\u7248)\u300bPDF\u4e0b\u8f7d_\u6731\u84c9,\u300a51\u5355\u7247\u673aC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u7ecf\u5178\u5b9e\u4f8b-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u4faf\u7389\u5b9d,\u300a\u8ba1\u7b97\u673a\u7ec4\u88c5\u4e0e\u7ef4\u4fee\u5b66\u4e60\u6307\u5bfc\u4e0e\u7ec3\u4e60-(\u7b2c3\u7248)\u300bPDF\u4e0b\u8f7d_\u4e8e\u666f\u8f89,\u300a\u6570\u5b57\u97f3\u9891\u4e0e\u89c6\u9891\u7f16\u8f91\u6280\u672f-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u6c5f\u6c38\u6625,\u300aUnity \u6e38\u620f\u5f00\u53d1\u5b9e\u4f8b\u6307\u5357\u300bPDF\u4e0b\u8f7d_RyanHensonCreighto,\u300a\u4e2d\u6587\u7248AutoCAD 2016\u5ba4\u5185\u88c5\u6f62\u8bbe\u8ba1\u5b9e\u4f8b\u6559\u7a0b-\u7545\u9500\u5347\u7ea7\u7248-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u6df1\u5165\u6d45\u51fa\u73a9\u8f6cFPGA-\u7b2c3\u7248\u300bPDF\u4e0b\u8f7d_\u5434\u539a,\u300a\u65b0\u4e09\u5bfc\u4e1b\u4e66\u6570\u636e\u7ed3\u6784(C\u8bed\u8a00\u7248)\u5bfc\u6559\u00b7\u5bfc\u5b66\u00b7\u5bfc\u8003\u7b2c2\u7248\u300bPDF\u4e0b\u8f7d_\u590f\u6e05\u56fd,\u59da\u7fa4\u7f16,\u300a\u6570\u636e\u5e93\u7cfb\u7edf\u8bfe\u7a0b\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u8def\u6e38,\u300aPainter & photoshop CG \u63d2\u56fe\u6280\u6cd5-(\u542b1CD)\u300bPDF\u4e0b\u8f7d_\u9648\u60df,\u300a\u52a8\u6001\u7f51\u7ad9\u6784\u5efa\u5b9e\u7528\u6559\u7a0b-\u542b\u5149\u76d8\u300bPDF\u4e0b\u8f7d_\u5b59\u5efa\u534e\u7b49\u7f16\u8457,\u300aCAD/CAM/CAE\u5165\u95e8\u4e0e\u63d0\u9ad8\u7cfb\u5217\u4e1b\u4e66ANSYS 19.0\u571f\u6728\u5de5\u7a0b\u6709\u9650\u5143\u5206\u6790\u5165\u95e8\u4e0e\u63d0\u9ad8\u300bPDF\u4e0b\u8f7d_CAD/CAM/CAE\u6280\u672f\u8054\u76df,\u300a\u767d\u8bdd\u804aExcel\u51fd\u6570\u5e94\u7528100\u4f8b\u300bPDF\u4e0b\u8f7d_ExcelHome,\u300aExcel\u529e\u516c\u79d8\u6280360\u62db-\u7545\u9500\u5347\u7ea72013\u8d85\u503c\u5168\u5f69\u7248-(\u9644\u8d601DVD.\u542b\u89c6\u9891\u6559\u5b66+\u529e\u516c\u6a21\u677f)\u300bPDF\u4e0b\u8f7d_\u77e5\u884c\u79d1\u6280,\u300aFlash CS5\u52a8\u753b\u8bbe\u8ba1\u6848\u4f8b\u6559\u7a0b-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u4e8e\u6c38\u5ff1\uff0c\u4f0d\u798f\u519b\u4e3b\u7f16,\u300a\u4e94\u7b14\u6253\u5b57+\u7535\u8111\u529e\u516c-\u8d85\u503c\u5168\u5f69\u7545\u9500\u5347\u7ea7\u7248-\u8d85\u503cDVD 4.5G\u300bPDF\u4e0b\u8f7d_W\uff0eZ\u79d1\u666e\u8054\u76df\u7f16\u8457,\u300aPhotoshop CC\u81ea\u5b66\u9b54\u6cd5\u4e66-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u674e\u8587,\u300a\u5fae\u4fe1\u516c\u4f17\u5e73\u53f0\u5f00\u53d1\u5b9e\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u6311\u6218\u7f16\u7a0b\u6280\u80fd-57\u9053\u7a0b\u5e8f\u5458\u529f\u529b\u6d4b\u8bd5\u9898\u300bPDF\u4e0b\u8f7d_\u5e03\u83b1\u6069.\u970d\u6839,\u300a\u4e2d\u6587\u7248Premiere Pro CC\u5b9e\u6218\u89c6\u9891\u6559\u7a0b-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u89c6\u56fe\u66f4\u65b0\u4e0e\u5173\u7cfb\u6570\u636e\u5e93\u7406\u8bba\u300bPDF\u4e0b\u8f7d_\u8fbe\u7279,\u300aJava Web\u7a0b\u5e8f\u8bbe\u8ba1\u4efb\u52a1\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u56fe\u89e3\u6027\u80fd\u4f18\u5316\u300bPDF\u4e0b\u8f7d_\u5c0f\u7530\u572d\u4e8c,\u300a\u8ba1\u7b97\u673a\u79d1\u5b66\u6982\u8bba-\u7b2c12\u7248\u300bPDF\u4e0b\u8f7d_J.\u683c\u4f26.\u5e03\u9c81\u514b,\u300aExcel 2016\u9ad8\u6548\u529e\u516c\u5b9e\u6218\u5e94\u7528\u4e0e\u6280\u5de7\u5927\u5168\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u8fb9\u505a\u8fb9\u5b66AutoCAD 2014\u7535\u6c14\u5de5\u7a0b\u5236\u56fe\u7acb\u4f53\u5316\u5b9e\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u738b\u7d20\u73cd,\u300a\u5d4c\u5165\u5f0f\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u7efc\u5408\u6559\u7a0b-\u5fae\u8bfe\u7248\u300bPDF\u4e0b\u8f7d_\u738b\u5efa\u79cb,\u300a\u7269\u8054\u7f51\u5d4c\u5165\u5f0f\u5f00\u53d1\u300bPDF\u4e0b\u8f7d_\u90dd\u81ea\u52c9,\u300aRESTful Web APIs\u4e2d\u6587\u7248\u300bPDF\u4e0b\u8f7d_\u7406\u67e5\u5fb7\u68ee,\u300a\u7f51\u9875\u5236\u4f5c\u4e0e\u8bbe\u8ba1\u6559\u7a0b-(\u7b2c\u4e8c\u7248)\u300bPDF\u4e0b\u8f7d_\u6768\u957f\u5174,\u300a\u673a\u68b0\u5236\u56fe\u4e0eCAD\u4e60\u9898\u96c6\u300bPDF\u4e0b\u8f7d_\u6682\u65e0,\u300aC++\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u9898\u89e3\u4e0e\u4e0a\u673a\u6307\u5bfc\u300bPDF\u4e0b\u8f7d_\u8c2d\u6d69\u5f3a,\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u5411\u9685\u7b49\u7f16\u8457,\u300a\u6570\u636e\u7ed3\u6784\u6559\u7a0b(C++\u7248)\u300bPDF\u4e0b\u8f7d_\u9648\u660e\u7f16\u8457,\u300a\u6570\u636e\u79d1\u5b66\u5165\u95e8(\u7b2c2\u7248)(\u5f71\u5370\u7248)\u300bPDF\u4e0b\u8f7d_JoelGrus,\u300a\u6bd4\u7279\u5e01\u7a0b\u5e8f\u8bbe\u8ba1(\u5f71\u5370\u7248)\u300bPDF\u4e0b\u8f7d_JimmySong,\u300a\u5927\u8bdd\u8f6f\u4ef6\u5de5\u7a0b:\u9700\u6c42\u5206\u6790\u4e0e\u8f6f\u4ef6\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u674e\u9e3f\u541b,\u300aExcel\u5728\u4eba\u529b\u8d44\u6e90\u548c\u884c\u653f\u7ba1\u7406\u4e2d\u7684\u5e94\u7528-Excel 2016\u7248\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aVisual Basic\u5178\u578b\u4f8b\u9898\u89e3\u6790\u4e0e\u4e60\u9898\u89e3\u7b54\u300bPDF\u4e0b\u8f7d_\u5468\u5143\u6662.\u4e54\u5e73\u5b89\u7f16\u8457,\u300a\u7ba1\u7406\u4fe1\u606f\u7cfb\u7edf\u6848\u4f8b:\u5e94\u7528\u8f6f\u4ef6\u8f85\u52a9\u51b3\u7b56(\u7b2c3\u7248)\u300bPDF\u4e0b\u8f7d_\uff08\u7f8e\uff09\u7c73\u52d2\u8457,\u300a\u8ba1\u7b97\u673a\u5e94\u7528\u57fa\u7840:Linux\u7a0b\u5e8f\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u5e7f\u4e1c\u7701\u6559\u5b66\u6559\u6750\u7814\u7a76\u5ba4\u7f16,\u300a\u8ba1\u7b97\u673a\u7ed8\u56fe\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u8bb8\u56fd\u7389,\u300a\u8239\u8236CAD/CAM\u4e0e\u751f\u4ea7\u8bbe\u8ba1\u5b9e\u8bad\u300bPDF\u4e0b\u8f7d_\u5f6d\u8f89,\u300a\u672a\u6765\u7248\u56fe \u5168\u7403\u806a\u660e\u516c\u53f8\u7684\u79d1\u6280\u521b\u65b0\u8d8b\u52bf\u548c\u5546\u4e1a\u5316\u8def\u5f84\u300bPDF\u4e0b\u8f7d_\u9ebb\u7701\u7406\u5de5\u79d1\u6280\u8bc4\u8bba,\u300a\u7f51\u6784\u8f6f\u4ef6\u6f14\u5316\u6280\u672f-\u9762\u5411\u591a\u5c42\u67b6\u6784\u300bPDF\u4e0b\u8f7d_\u97e6\u6b63\u73b0,\u300a3Dmax\u5ba4\u5185\u6548\u679c\u56fe\u5236\u4f5c\u300bPDF\u4e0b\u8f7d_\u675c\u5a1f,\u300aPhotoshop \u57fa\u7840\u4e0e\u5b9e\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u9a6c\u840d\u840d,\u300a\u8ba1\u7b97\u673a\u4eff\u771f\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u5434\u65ed\u5149\uff0c\u725b\u4e91\uff0c\u6768\u60e0\u73cd\u7f16\u8457,\u300aWindows\u9a71\u52a8\u5f00\u53d1\u300bPDF\u4e0b\u8f7d_\u9648\u5fd7\u8fdc,\u300a\u4e94\u7b14\u5b57\u578b\u5e38\u7528\u5b57\u8bcd\u901f\u67e5\u5b57\u5178-86/98\u65b0\u4e16\u7eaa\u7248\u5408\u8ba2\u672c\u300bPDF\u4e0b\u8f7d_\u5e38\u6797\u864e,\u300aUG NX 8.5\u4e2d\u6587\u7248\u673a\u68b0\u8bbe\u8ba1\u4ece\u96f6\u5f00\u59cb-(\u914d\u6559\u5b66\u89c6\u9891)-(\u542bDVD\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u4efb\u671d\u519b,\u300aSiemens NX\u8f6f\u4ef6\u4ea7\u54c1\u52a0\u5de5\u5b9e\u4f8b\u6559\u7a0b-(\u542b\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u9676\u6ce2,\u300aAutoCAD 2015\u4e2d\u6587\u7248\u5feb\u6377\u547d\u4ee4-\u6743\u5a01\u6388\u6743\u7248\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aIT\u6c49\u8bed\u4e0e\u4e2d\u6587\u7535\u8111\u64cd\u4f5c\u300bPDF\u4e0b\u8f7d_\u5f20\u4ed5\u6d77,\u300a\u4e2d\u6587\u7248AutoCAD 2015\u4ece\u5165\u95e8\u5230\u7cbe\u901a-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u9648\u5fd7\u6c11,\u300aWindows8\u4e2d\u6587\u7248\u4ece\u65b0\u624b\u5230\u9ad8\u624b-\u8d60\u9001\u8d85\u503cDVD\u300bPDF\u4e0b\u8f7d_\u65b0\u5947e\u65cf,\u300a\u94a3\u91d1\u5c55\u5f00\u5b9e\u7528\u6280\u672f\u624b\u518cSolidWorks-2014\u7248-(\u96442\u5f20DVD)\u300bPDF\u4e0b\u8f7d_\u5317\u4eac\u5146\u8fea\u79d1\u6280\u6709\u9650\u516c\u53f8,\u300a\u4e92\u8054\u7f51\u91d1\u878d\u300bPDF\u4e0b\u8f7d_\u96f6\u58f9\u8d22\u7ecf,\u300aExcel\u6548\u7387\u624b\u518c\u65e9\u505a\u5b8c.\u4e0d\u52a0\u73ed-(\u7cbe\u534e\u7248 \u900f\u89c6\u8868\u7bc7)\u300bPDF\u4e0b\u8f7d_\u9648\u9521\u5362,\u300aKali Linux\u6e17\u900f\u6d4b\u8bd5\u6280\u672f\u8be6\u89e3\u300bPDF\u4e0b\u8f7d_\u6768\u6ce2,\u300aPHP+MySQL\u52a8\u6001\u7f51\u7ad9\u5f00\u53d1\u6848\u4f8b\u8bfe\u5802-DVD\u300bPDF\u4e0b\u8f7d_\u5218\u7389\u7ea2,\u300aAndroid\u5e94\u7528\u5f00\u53d1\u5b8c\u5168\u5b66\u4e60\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u9ec4\u6c38\u4e3d,\u300aExcel\u5c31\u8be5\u8fd9\u4e48\u5b66\u300bPDF\u4e0b\u8f7d_\u6768\u9633,\u300a\u79fb\u52a8\u7ec8\u7aef\u5e94\u7528\u8f6f\u4ef6\u5f00\u53d1\u5b9e\u6218-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u6881\u67cf\u9752,\u300aExcel 2010\u8868\u683c\u5236\u4f5c\u4e0e\u6570\u636e\u5904\u7406\u5b8c\u5168\u5e94\u7528\u624b\u518c-(\u542b1DVD\u4ef7\u683c)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aExcel 2010\u4f1a\u8ba1\u4e0e\u8d22\u52a1\u7ba1\u7406\u5b8c\u5168\u5e94\u7528\u624b\u518c-\u804c\u573a\u65e0\u5fe7-(\u542b1CD\u4ef7\u683c)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u9879\u76ee\u5316\u5b66\u4e60\u6307\u5357\u300bPDF\u4e0b\u8f7d_\u5218\u6210\u5c27,\u300a\u6570\u5b57\u56fe\u50cf\u5904\u7406\u4e0e\u5206\u6790-(\u7b2c3\u7248)\u300bPDF\u4e0b\u8f7d_\u6768\u5e06,\u300a\u6b27\u59c6\u9f99CP1H\u7cfb\u5217PLC\u5b8c\u5168\u81ea\u5b66\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u9648\u5fe0\u5e73,\u300aR\u8bed\u8a00\u6570\u636e\u5206\u6790\u300bPDF\u4e0b\u8f7d_\u9053\u7f57\u9f50,\u300a\u60c5\u611f\u673a\u5668\u300bPDF\u4e0b\u8f7d_(\u7f8e)\u9a6c\u6587\u00b7\u660e\u65af\u57fa(MarvinMin,\u300a\u5927\u6570\u636e\u524d\u6cbf\u6280\u672f\u4e0e\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u4f55\u514b\u6676\uff0c\u9633\u4e49\u5357\u7f16\u8457,\u300a\u6e05\u534e\u793e\u201c\u89c6\u9891\u5927\u8bb2\u5802\u201d\u5927\u7cfbCAD/CAM/CAE\u6280\u672f\u89c6\u9891\u5927\u8bb2\u5802Revit 2020\u4e2d\u6587\u7248\u5efa\u7b51\u8bbe\u8ba1\u4ece\u5165\u95e8\u5230\u7cbe\u901a\u300bPDF\u4e0b\u8f7d_CAD/CAM/CAE\u6280\u672f\u8054\u76df,\u300aOracle\u5b9e\u7528\u6559\u7a0b(\u7b2c5\u7248)(Oracle 11g\u7248)(\u542b\u89c6\u9891\u6559\u5b66)/\u90d1\u963f\u5947\u300bPDF\u4e0b\u8f7d_\u90d1\u963f\u5947,\u300aLinux\u670d\u52a1\u5668\u914d\u7f6e\u4e0e\u7ba1\u7406/\u674e\u5fd7\u6770\u300bPDF\u4e0b\u8f7d_\u674e\u5fd7\u6770,\u300a\u5927\u6570\u636e\u5730\u7406\u4fe1\u606f\u7cfb\u7edf:\u539f\u7406.\u6280\u672f\u4e0e\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u949f\u8033\u987a\u5b8b\u5173\u798f\u6c64\u56fd\u5b89\u7b49\u8457,\u300a\u4ece\u65b0\u624b\u5230\u9ad8\u624bDreamweaver+jQuery\u79fb\u52a8\u7f51\u9875\u8bbe\u8ba1\u4ece\u65b0\u624b\u5230\u9ad8\u624b\u300bPDF\u4e0b\u8f7d_\u5218\u7433\u5f20\u96ea\u73b2,\u300a\u51b3\u7b56\u4e0e\u534f\u540c:\u57fa\u4e8e\u5927\u6570\u636e\u7684\u516c\u5171\u5b89\u5168\u6218\u7565\u300bPDF\u4e0b\u8f7d_\u9a6c\u5fb7\u8f89,\u300a\u521b\u5ba2\u6559\u80b2\u548c\u7238\u7238\u4e00\u8d77\u5b66Scratch\u300bPDF\u4e0b\u8f7d_\u674e\u4f1f.\u8d3e\u7693\u4e91,\u300a\u6e05\u534e\u793e\u201c\u89c6\u9891\u5927\u8bb2\u5802\u201d\u5927\u7cfbCAD/CAM/CAE\u6280\u672f\u89c6\u9891\u5927\u8bb2\u5802ADAMS 2018\u52a8\u529b\u5b66\u5206\u6790\u4e0e\u4eff\u771f\u4ece\u5165\u95e8\u5230\u7cbe\u901a\u300bPDF\u4e0b\u8f7d_CAD/CAM/CAE\u6280\u672f\u8054\u76df,\u300a\u6e05\u534e\u5f00\u53d1\u8005\u4e66\u5e93Flutter\u5b9e\u6218\u6307\u5357\u300bPDF\u4e0b\u8f7d_\u674e\u6960,\u300aJS\u5168\u4e66:JavaScript  Web\u524d\u7aef\u5f00\u53d1\u6307\u5357\u300bPDF\u4e0b\u8f7d_\u9ad8\u9e4f,\u300a\u5927\u8bddC\u8bed\u8a00\u300bPDF\u4e0b\u8f7d_\u8521\u82cf\u5317.\u8303\u5fd7\u519b,\u300a\u91cf\u5b50\u8ba1\u7b97\u7f16\u7a0b\u5b9e\u6218:\u57fa\u4e8eIBM QX\u91cf\u5b50\u8ba1\u7b97\u5e73\u53f0\u300bPDF\u4e0b\u8f7d_[\u7f8e]\u514b\u91cc\u65af\u4e01\u00b7\u79d1\u6bd4\u7279\u00b7\u83ab,\u300aLinux GNU C \u7a0b\u5e8f\u89c2\u5bdf\u300bPDF\u4e0b\u8f7d_\u7f57\u79cb\u660e,\u300a\u91cf\u5b50\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1(\u5f71\u5370\u7248)\u300bPDF\u4e0b\u8f7d_EricR.Johnston\u7b49,\u300a\u73b0\u4ee3\u6570\u636e\u5e73\u53f0\u67b6\u6784(\u5f71\u5370\u7248)\u300bPDF\u4e0b\u8f7d_JanKunigk\u7b49,\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u6280\u672f\u7684\u6df1\u5165\u5256\u6790\u300bPDF\u4e0b\u8f7d_\u90b9\u7434\u7434\uff0c\u738b\u4e45\u5b8f\uff0c\u674e\u654f\u4e3b\u7f16,\u300a\u571f\u6728\u4e0e\u5efa\u7b51\u7c7bCAD\u6280\u80fd1\u7ea7\u4e8c\u7ef4\u8ba1\u7b97\u673a\u7ed8\u56feAUTOCAD\u57f9\u8bad\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u6768\u8c06\u4e3b\u7f16,\u300a\u57fa\u4e8ePMBOK\u7684\u8f6f\u4ef6\u9879\u76ee\u7ba1\u7406\u65b9\u6cd5\u7814\u7a76\u300bPDF\u4e0b\u8f7d_\u5468\u8d3a\u6765\u8457,\u300a\u7406\u8bba\u4e0e\u65b9\u6cd5/\u9762\u5411\u5bf9\u8c61\u9ad8\u53ef\u4fe1SAR\u6570\u636e\u5904\u7406(\u4e0a\u518c)\u300bPDF\u4e0b\u8f7d_\u5f20\u7ee7\u8d24\u7b49,\u300a\u7cfb\u7edf\u4e0e\u5e94\u7528/\u9762\u5411\u5bf9\u8c61\u9ad8\u53ef\u4fe1SAR\u6570\u636e\u5904\u7406(\u4e0b\u518c)\u300bPDF\u4e0b\u8f7d_\u5f20\u7ee7\u8d24\u7b49,\u300aVisual Foxpro\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5f20\u5c0f\u8389\u4e3b\u7f16,\u300a\u4e2d\u5c0f\u5b66\u6559\u5e08\u4fe1\u606f\u6280\u672f\u57f9\u8bad\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u94b1\u6653\u83c1,\u300a\u5355\u7247\u673a\u539f\u7406\u53ca\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u66f9\u8587,\u300a\u5999\u54c9!Excel\u6570\u636e\u5206\u6790\u4e0e\u5904\u7406\u5c31\u8be5\u8fd9\u4e48\u5b66\u300bPDF\u4e0b\u8f7d_\u6768\u9633,\u300a\u533b\u9662\u4fe1\u606f\u7cfb\u7edf\u5b9e\u7528\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u51af\u5929\u4eae\uff0c\u5c1a\u6587\u521a\u4e3b\u7f16,\u300aJava\u9762\u5411\u5bf9\u8c61\u9879\u76ee\u5316\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5f20\u96ea\u677e,\u300a\u8ba1\u7b97\u673a\u6587\u5316\u57fa\u7840\u4e0e\u5b9e\u9a8c\u6307\u5bfc\u300bPDF\u4e0b\u8f7d_\u4f1e\u9896,\u300a\u667a\u80fd\u63a7\u5236\u7406\u8bba\u53ca\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u738b\u8000\u5357\u7b49\u7f16\u8457,\u300a\u7f51\u9875\u8bbe\u8ba1\u4e0e\u5236\u4f5c\u6848\u4f8b\u6559\u7a0b-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u9648\u627f\u6b22\u7f16\u8457,\u300a\u4eba\u6c11\u90ae\u7535\u51fa\u7248\u793e\u9752\u5c11\u5e74\u7f16\u7a0b\u96f6\u57fa\u7840\u5b66SCRATCH(\u56fe\u6587\u7248)\u300bPDF\u4e0b\u8f7d_(\u7f8e)\u4f0a\u5a03\uff1f\u970d\u5170//\u514b\u91cc\u65af\uff1f\u660e\u5c3c\u514b,\u300a\u4eba\u6c11\u90ae\u7535\u51fa\u7248\u793e\u673a\u5668\u5b66\u4e60\u4e0e\u4f18\u5316\u300bPDF\u4e0b\u8f7d_(\u610f)\u7f57\u4f2f\u6258\uff1f\u5df4\u8482\u8482//\u6bdb\u7f57\uff1f\u5e03\u9c81\u7eb3\u6258,\u300a\u4eba\u6c11\u90ae\u7535\u51fa\u7248\u793e\u56fe\u89e3\u6df1\u5ea6\u5b66\u4e60\u300bPDF\u4e0b\u8f7d_(\u65e5)\u5c71\u4e0b\u9686\u4e49,\u300aSQL Server 2008\u6570\u636e\u5e93\u5e94\u7528\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u9648\u4f5b\u654f\uff0c\u9648\u535a\u4e3b\u7f16,\u300aPhotoshop CC\u4e2d\u6587\u7248\u4ece\u5165\u95e8\u5230\u7cbe\u901a(\u5b9e\u4f8b\u7248)\u300bPDF\u4e0b\u8f7d_\u4ebf\u745e\u8bbe\u8ba1\u7f16\u8457,\u300a\u6570\u636e\u5e93\u539f\u7406\u4e0e\u5e94\u7528(SQL Server 2016\u7248\u672c)\u300bPDF\u4e0b\u8f7d_\u9093\u7acb\u56fd\uff0c\u4f5f\u5f3a\u4e3b\u7f16,\u300a\u5927\u6570\u636e\u65f6\u4ee3\u4e0b\u534a\u573a:\u6570\u636e\u6cbb\u7406\u3001\u9a71\u52a8\u4e0e\u53d8\u73b0\u300bPDF\u4e0b\u8f7d_(\u5fb7)\u7f57\u7eb3\u5fb7\u00b7\u5df4\u8d6b\u66fc\uff0c(\u5fb7)\u5409\u591a\u00b7\u80af\u73c0\uff0c,\u300a\u8d1d\u53f6\u65af\u7f51\u7edc\u5728\u5f71\u50cf\u89e3\u8bd1\u4e2d\u7684\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u865e\u6b23,\u300a\u6570\u63a7\u5b8f\u7a0b\u5e8f\u7f16\u7a0b\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u675c\u519b,\u300a\u9ed1\u5ba2\u653b\u9632\u4ece\u5165\u95e8\u5230\u7cbe\u901a-(\u667a\u80fd\u7ec8\u7aef\u7248)\u300bPDF\u4e0b\u8f7d_\u6b66\u65b0\u534e,\u300aInformatida Powercenter\u6743\u5a01\u6307\u5357\u300bPDF\u4e0b\u8f7d_\u675c\u7ecd\u68ee,\u300a\u7535\u5b50\u5546\u52a1\u7f51\u5e97\u63a8\u5e7f\u4e0e\u8425\u9500\u300bPDF\u4e0b\u8f7d_\u66f9\u660e\u5143,\u300aJava\u7a0b\u5e8f\u8bbe\u8ba1\u4e0e\u5b9e\u4f8b\u300bPDF\u4e0b\u8f7d_\u5f20\u6587\u80dc,\u300aCocos 2d-x\u6e38\u620f\u7f16\u7a0b-C++\u7bc7-\u542bCD\u5149\u76d81\u5f20\u300bPDF\u4e0b\u8f7d_\u5f90\u98de,\u300a3ds Max\u57fa\u7840\u53ca\u7ecf\u5178\u6848\u4f8b\u300bPDF\u4e0b\u8f7d_\u5f6d\u5ddd,\u300aCATIA V5-6 R2014\u66f2\u9762\u8bbe\u8ba1\u5b9e\u4f8b\u7cbe\u89e3\u300bPDF\u4e0b\u8f7d_\u673a\u68b0\u5de5\u4e1a\u51fa\u7248\u793e,\u300a\u6570\u5b66\u8f6f\u4ef6\u53ca\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u9ad8\u5fb7\u5b9d,\u300a\u8ba9\u8bfe\u5802\u66f4\u7cbe\u5f69!-\u7cbe\u901aPPT\u8bfe\u4ef6\u8bbe\u8ba1\u4e0e\u5236\u4f5c\u300bPDF\u4e0b\u8f7d_\u7f2a\u4eae,\u300aAutoCAD 2014\u5ba4\u5185\u88c5\u6f62\u8bbe\u8ba1\u81ea\u5b66\u89c6\u9891\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_CAE\u6280\u672f\u8054\u76df,\u300a\u96f6\u70b9\u8d77\u98de\u5b66Word\u4e0eExcel\u9ad8\u6548\u529e\u516c\u5b9e\u6218\u4e0e\u6280\u5de7\u300bPDF\u4e0b\u8f7d_\u6768\u8bda,\u300a\u7b14\u8bb0\u672c\u7535\u8111\u7ef4\u4fee\u4ece\u5165\u95e8\u5230\u7cbe\u901a-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u9ad8\u5b8f\u6cfd,\u300a\u7f16\u5199\u9ad8\u8d28\u91cf\u4ee3\u7801\u6539\u5584Objective-C\u7a0b\u5e8f\u768461\u4e2a\u5efa\u8bae\u300bPDF\u4e0b\u8f7d_\u5218\u4e00\u9053,\u300a\u575f\u7b97\u673a\u5e94\u7528\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u674e\u5e0c\u52c7,\u300aHTML5\u57fa\u7840\u77e5\u8bc6.\u6838\u5fc3\u6280\u672f\u4e0e\u524d\u6cbf\u6848\u4f8b\u300bPDF\u4e0b\u8f7d_\u5218\u6b22,\u300aLabVIEW 2015\u865a\u62df\u4eea\u5668\u4e2d\u6587\u7248\u4ece\u5165\u95e8\u5230\u7cbe\u901a-(\u542b1DVD)\u300bPDF\u4e0b\u8f7d_\u5468\u6653\u4e1c,\u300a\u7269\u6d41\u4fe1\u606f\u6280\u672f\u4e0e\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u66f9\u5149\u6c42,\u300a\u79d1\u6280\u4e4b\u5dc5-\u9ebb\u7701\u7406\u5de5\u79d1\u6280\u8bc4\u8bba50\u5927\u5168\u7403\u7a81\u7834\u6027\u6280\u672f\u6df1\u5ea6\u5256\u6790\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aDocker\u7ecf\u5178\u5b9e\u4f8b\u300bPDF\u4e0b\u8f7d_\u6208\u963f\u5188,\u300a\u9ed1\u5ba2\u653b\u9632\u4ece\u5165\u95e8\u5230\u7cbe\u901a-\u9ed1\u5ba2\u4e0e\u53cd\u9ed1\u5de5\u5177\u7bc7.\u5168\u65b0\u5347\u7ea7\u7248\u300bPDF\u4e0b\u8f7d_\u683e\u94ed\u658c,\u300aExcel 2010\u5728 \u8d22\u52a1\u4f1a\u8ba1\u4e2d\u7684\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u8c37\u5c0f\u57ce,\u300a\u8f6f\u4ef6\u5b9a\u4e49\u6570\u636e\u4e2d\u5fc3-Windows Server SDDC\u6280\u672f\u4e0e\u5b9e\u8df5\u300bPDF\u4e0b\u8f7d_\u9ec4\u5229\u519b,\u300a\u7535\u8111\u7ec4\u88c5\u4e0e\u7ef4\u4fee\u4ece\u5165\u95e8\u5230\u7cbe\u901a-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u738b\u7ea2\u519b,\u300aPhotoshop\u524d\u7aef\u8bbe\u8ba1\u6848\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u90b1\u96f7,\u300aMysQL\u6570\u636e\u5e93\u6280\u672f(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u5468\u5fb7\u4f1f,\u300a\u591a\u79cd\u7ea6\u675f\u9879\u76ee\u7f51\u7edc\u673a\u52a8\u65f6\u95f4\u7279\u6027\u7406\u8bba\u53ca\u5176\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u674e\u661f\u6885,\u300a\u5927\u5b66\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840-(C\u8bed\u8a00)\u300bPDF\u4e0b\u8f7d_\u5f20\u957f\u6d77.\u8d75\u5927\u9e4f.\u9648\u5a1f\u7f16\u8457,\u300aCorelDRAW\u8bbe\u8ba1\u5e7b\u60f3-I-\u542b\u914d\u5957\u89c6\u9891\u5149\u76d8\u300bPDF\u4e0b\u8f7d_\u6851\u632f\u8457,\u300aAutoCAD2010\u5ba4\u5185\u88c5\u6f62\u8bbe\u8ba1\u5b9e\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u9648\u5fd7\u6c11\u4e3b\u7f16,\u300a\u670d\u52a1\u5668\u914d\u7f6e\u4e0e\u7ba1\u7406(Windows)-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u674e\u6587\u6c60,\u300a\u4e00\u672c\u4e66\u8bfb\u61c2\u8fb9\u7f18\u8ba1\u7b97\u300bPDF\u4e0b\u8f7d_\u53f2\u7693\u5929,\u300aC++\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u9ec4\u5b9d\u8d35,\u300aC\u8bed\u8a00\u7f16\u7a0b\u5b9e\u4f8b\u300bPDF\u4e0b\u8f7d_\u738b\u742a,\u300a\u4fe1\u606f\u9690\u85cf\u6280\u672f\u5b9e\u9a8c\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u738b\u4e3d\u5a1c[\u7b49]\u7f16\u8457,\u300aMATLAB N\u4e2a\u5b9e\u7528\u6280\u5de7-MATLAB\u4e2d\u6587\u8bba\u575b\u7cbe\u534e\u603b\u7ed3-(\u7b2c2\u7248)\u300bPDF\u4e0b\u8f7d_\u5218\u7115\u8fdb,\u300a\u7f51\u7edc\u5b89\u5168\u9884\u8b66\u9632\u5fa1\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u59da\u6dd1\u840d,\u300a\u591a\u5a92\u4f53\u65b0\u8bfe\u5802 macromedia Authorware5.1\u9ad8\u300bPDF\u4e0b\u8f7d_\u9b4f\u5efa\u534e,\u300aDirector 8.0\u901f\u6210\u6559\u7a0b \u542b\u76d8\u300bPDF\u4e0b\u8f7d_\u5c39\u4f1f\u5947,\u300a\u7f51\u7edc\u653b\u51fb\u8ffd\u8e2a\u6eaf\u6e90\u300bPDF\u4e0b\u8f7d_\u795d\u4e16\u96c4,\u300a\u4e2d\u56fd\u7f51\u7edc\u6587\u5316\u53d1\u5c55\u4e8c\u5341\u5e74:1994-2014:\u6d3b\u52a8\u4e8b\u4ef6\u7f16\u300bPDF\u4e0b\u8f7d_\u5510\u4e9a\u9633\u4e1b\u4e66\u4e3b\u7f16,\u300a\u7f51\u7edc\u8bbe\u5907\u914d\u7f6e\u4e0e\u7ba1\u7406\u5b9e\u8df5\u300bPDF\u4e0b\u8f7d_\u5468\u4f1f[\u7b49]\u4e3b\u7f16,\u300a\u4f20\u611f\u5668\u4e0e\u68c0\u6d4b\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u8463\u6625\u5229,\u300a\u4e2d\u6587Office XP \u5b8c\u5168\u4f7f\u7528\u624b\u518c  \u542b\u76d8\u300bPDF\u4e0b\u8f7d_\u5f20\u5a01,\u300aMicrosoft C#\u5b9e\u7528\u7f16\u7a0b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u6768\u7ade\u9510,\u300aVisual Basic \u7f16\u7a0b\u9ad8\u624b\u300bPDF\u4e0b\u8f7d_\u7f16\u7a0b\u9ad8\u624b\u5de5\u4f5c\u5ba4,\u300a\u56e0\u7279\u7f51Internet \u9ad8\u7ea7\u7f16\u7a0b  \u7f16\u7a0b\u5b9d\u51782002\u76d8\u300bPDF\u4e0b\u8f7d_\u4f46\u660e\u5929,\u300a3ds max 4 \u57fa\u7840\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5f20\u9896,\u300a\u591a\u5a92\u4f53\u7cbe\u5f69\u8303\u4f8b\u8bbe\u8ba1Authorware ..\u73b0\u573a\u5b9e\u4f5c\u300bPDF\u4e0b\u8f7d_\u8463\u4fdd\u4e1c,\u300a\u5343\u79a7MTV\u89d2\u8272\u52a8\u753b\u5927\u5236\u4f5c  \u7ae5\u5e74\u7684\u6545\u4e8b \u542b\u76d8\u300bPDF\u4e0b\u8f7d_\u9648\u82cf,\u300aLOGO\u7cbe\u9009\u300bPDF\u4e0b\u8f7d_\u5468\u5efa\u4e2d,\u300aC\u7a0b\u5e8f\u8bbe\u8ba1\u5b9e\u7528\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5f20\u6653\u857e\u4e3b\u7f16,\u300aSOPC\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5b9e\u8df5\u300bPDF\u4e0b\u8f7d_\u738b\u6653\u8fea,\u300aExcel2007\u8d22\u52a1\u7ba1\u7406\u8303\u4f8b\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u6770\u8bda\u6587\u5316,\u300a3dsmas&VRay&Photoshop\u6781\u81f4\u8868\u73b0\u2014\u2014\u5ba4\u5185\u5bb6\u5c45\u7bc7(\u542bDVD)\u300bPDF\u4e0b\u8f7d_\u805a\u5149\u6570\u7801\u79d1\u6280,\u300aVisualFoxPro\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5218\u752b\u8fce,\u300a\u5b8c\u5168\u8bad\u7ec3Illustrator CS4\u7cbe\u534e\u6559\u7a0b-DVD\u5149\u76d8\u4e00\u5f20\u300bPDF\u4e0b\u8f7d_\u6682\u65e0,\u300a\u5b8c\u5168\u8bad\u7ec3CorelDRAW X4\u7cbe\u534e\u6559\u7a0b-\u542bDVD\u5149\u76d8\u4e00\u5f20\u300bPDF\u4e0b\u8f7d_\u6682\u65e0,\u300aPro/ENGINEER\u91ce\u706b\u72485.0\u5e94\u7528\u901f\u6210\u6807\u51c6\u6559\u7a0b-(\u542b\u591a\u5a92\u4f53DVD\u5149\u76d82\u5f20)\u300bPDF\u4e0b\u8f7d_\u67ef\u6613\u8fbe,\u300aLab VIEW for PAC\u53ef\u7f16\u7a0b\u81ea\u52a8\u63a7\u5236\u5668\u5e94\u7528\u6280\u80fd\u5b9e\u8bad\u300bPDF\u4e0b\u8f7d_\u8096\u660e\u8000,\u300a\u65b0\u4e00\u4ee3\u7f51\u7edc\u5a92\u4f53\u6280\u672f\u53ca\u5e94\u7528\u7814\u7a76\u300bPDF\u4e0b\u8f7d_\u5f20\u8273\u82b3,\u300aAltium Designer Winter 09\u7535\u8def\u8bbe\u8ba1\u4e0e\u4eff\u771f\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u674e\u79c0\u971e,\u300aLab VIEW for ARM\u5d4c\u5165\u5f0f\u63a7\u5236\u5e94\u7528\u6280\u80fd\u5b9e\u8bad\u300bPDF\u4e0b\u8f7d_\u8096\u660e\u8000,\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840\u4e0e\u5b9e\u8bad-(\u7b2c\u4e8c\u7248)\u300bPDF\u4e0b\u8f7d_\u65b9\u98ce\u6ce2,\u300a\u600e\u6837\u5728Internet\u4e0a\u67e5\u627e\u56fe\u50cf\u300bPDF\u4e0b\u8f7d_\u50a8\u8377\u5a77,\u300aVisual   C++\u5b9e\u7528\u6559\u7a0b\u3010\u672c\u79d1\u6559\u6750\u3011\u300bPDF\u4e0b\u8f7d_\u5f20\u8363\u6885,\u300aDIGITAL DESIGN-\u6570\u7801\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u5927\u536b.\u6234\u535a\u7eb3,\u300a\u6570\u636e\u7ed3\u6784\u7b2c2\u7248(C++\u7248)\u300bPDF\u4e0b\u8f7d_\u738b\u7ea2\u6885,\u300a\u4e92\u8054\u7f51\u4f01\u4e1a\u5bb9\u5668\u6280\u672f\u5b9e\u8df5\u300bPDF\u4e0b\u8f7d_\u9f9a\u66e6\u4e3b\u7f16,\u300a\u7f51\u9875\u7f8e\u672f\u8bbe\u8ba1(\u6559\u80b2\u90e8\u9ad8\u804c\u9ad8\u4e13\u8ba1\u7b97\u673a\u6559\u6307\u59d4\u89c4\u5212\u6559\u6750)\u300bPDF\u4e0b\u8f7d_\u8bb8\u5e7f\u5f64\u7b49\u7f16\u8457,\u300aJava \u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u9879\u76ee\u6559\u7a0b(\u5168\u56fd\u9ad8\u804c\u9ad8\u4e13\u8ba1\u7b97\u673a\u7cfb\u5217\u7cbe\u54c1\u6559\u6750)\u300bPDF\u4e0b\u8f7d_\u73ed\u5a05\u840c\u6b66\u96ea\u82b3,\u300a\u522b\u544a\u8bc9\u6211\u4f60\u61c2PPT\u300bPDF\u4e0b\u8f7d_\u674e\u6cbb\u8457,\u300a\u5927\u5b66\u8ba1\u7b97\u673a\u57fa\u7840\u5b9e\u8df5\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5f20\u7b60\u8389\u4e3b\u7f16,\u300aSolidWorks 2014\u5e94\u7528\u901f\u6210\u6807\u51c6\u6559\u7a0b-(\u542b\u591a\u5a92\u4f53DVD\u5149\u76d82\u5f20)\u300bPDF\u4e0b\u8f7d_\u6e5b\u8fea\u5f3a,\u300a\u96f6\u70b9\u8d77\u98de\u5b66UG NX 8.5\u8f85\u52a9\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u8c22\u4e3d\u534e,\u300a\u96f6\u70b9\u8d77\u98de\u5b66Excel\u51fd\u6570\u4e0e\u516c\u5f0f\u300bPDF\u4e0b\u8f7d_\u6768\u8bda,\u300a\u4f18\u5316\u4e0e\u51b3\u7b56\u300bPDF\u4e0b\u8f7d_\u738b\u7389\u82f1,\u300a\u4e2d\u6587\u7248Photosho CS6 \u5e73\u9762\u8bbe\u8ba1\u5b9e\u4f8b\u6559\u7a0b-(\u5168\u5f69\u8d85\u503c\u7248)-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u65f6\u4ee3\u5370\u8c61,\u300aMastercam X7\u4e2d\u6587\u7248\u5e94\u7528\u6559\u7a0b-\u542b\u5149\u76d8\u300bPDF\u4e0b\u8f7d_\u738b\u83c1,\u300a\u591a\u6e90\u6570\u636e\u878d\u5408\u548c\u4f20\u611f\u5668\u7ba1\u7406\u300bPDF\u4e0b\u8f7d_\u7f57\u4fca\u6d77,\u300aUG NX8.0\u6570\u63a7\u7f16\u7a0b\u4e0e\u64cd\u4f5c-(\u542b\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u5218\u8521\u4fdd,\u300a\u7535\u8111\u529e\u516c(Windows 10+Office 2016)\u4ece\u65b0\u624b\u5230\u9ad8\u624b-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u4e91\u8ba1\u7b97\u6982\u8bba:\u57fa\u7840.\u6280\u672f.\u5546\u52a1.\u5e94\u7528-\u7b2c\u4e8c\u7248\u300bPDF\u4e0b\u8f7d_\u6c64\u5175\u52c7,\u300aMATLAB\u4e0e\u63a7\u5236\u7cfb\u7edf\u4eff\u771f\u5b9e\u8df5-(\u7b2c3\u7248)\u300bPDF\u4e0b\u8f7d_\u8d75\u5e7f\u5143,\u300a\u5178\u578b\u8ba1\u7b97\u673a\u7b97\u6cd5\u7684\u5206\u6790.\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u300bPDF\u4e0b\u8f7d_\u90ed\u7ea2\u6d9b,\u300aSoftimagelXSI\u89d2\u8272\u52a8\u753b\u5b8c\u5168\u653b\u7565\u300bPDF\u4e0b\u8f7d_\u9a6c\u62c9\u83f2,\u300a\u5355\u7247\u673aC51\u6280\u672f\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u6682\u65e0,\u300aVisual FoxPro\u7a0b\u5e8f\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u4efb\u5c0f\u5eb7\uff0c\u82df\u5e73\u7ae0\u4e3b\u7f16,\u300a21\u4e16\u7eaa\u9ad8\u7b49\u804c\u4e1a\u6559\u80b2\u89c4\u5212\u6559\u6750\u5fae\u578b\u8ba1\u7b97\u673a\u539f\u7406\u53ca\u5176\u5e94\u7528\u7b2c4\u7248\u300bPDF\u4e0b\u8f7d_\u9648\u535c\u9501\u4e3b\u7f16,\u300a\u519b\u7528\u8f6f\u4ef6\u5de5\u7a0b0\u300bPDF\u4e0b\u8f7d_\u9ec4\u9707\u5b87\u7b49,\u300a\u7269\u8054\u7f51\u5f00\u53d1\u4e0e\u5e94\u7528\u4e1b\u4e66\u7269\u8054\u7f51\u7cfb\u7edf\u7efc\u5408\u5f00\u53d1\u4e0e\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u5ed6\u5efa\u5c1a,\u300a\u804c\u4e1a\u6559\u80b2\u201c\u5341\u4e09\u4e94\u201d\u89c4\u5212\u6559\u6750\u2014\u2014\u4fe1\u606f\u5b89\u5168\u6280\u672f\u4e13\u4e1a\u6570\u636e\u5e93\u5e94\u7528\u4e0e\u5b89\u5168\u7ba1\u7406/\u5218\u6609\u300bPDF\u4e0b\u8f7d_\u5218\u6609,\u300aOReilly\u7cbe\u54c1\u56fe\u4e66\u7cfb\u5217\u533a\u5757\u94fe\u7f16\u7a0b\u300bPDF\u4e0b\u8f7d_\u5409\u7c73\u00b7\u5b8b(JimmySong)\u8457,\u300a\u6570\u636e\u5e93\u6280\u672f\u4e1b\u4e66InfluxDB\u539f\u7406\u4e0e\u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\u97e9\u5065,\u300a\u8ba1\u7b97\u673a\u75c5\u6bd2\u539f\u7406\u53ca\u9632\u8303\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u738b\u8def\u7fa4\u4e3b\u7f16,\u300aDreamweaverCS4\u4e2d\u6587\u7248\u5b8c\u5168\u81ea\u5b66\u6559\u7a0b(\u9644DVD\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u529b\u884c\u5de5\u4f5c\u5ba4,\u300aSketchup/3ds max/Piranesi\u5efa\u7b51\u8bbe\u8ba1\u8868\u73b0\u6280\u6cd5\u5b9e\u4f8b\u7cbe\u89e3(\u96442DVD\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u5f90\u6c38\u80dc,\u300a\u6700\u65b0\u70ab\u76eeJAVASCRIPT\u52a8\u6001\u7f51\u9875\u7279\u6548\u5b9e\u6218\u7cbe\u8bb2(\u96441DVD\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u5b59\u519b,\u300a\u4e09\u7ef4\u6e38\u620f\u5f15\u64ce\u8bbe\u8ba1\u6280\u672f\u53ca\u5176\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u5468\u709c,\u300aPhotoshopCS4\u5b8c\u5168\u81ea\u5b66\u6559\u7a0b.\u4e2d\u6587\u7248(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u529b\u884c\u5de5\u4f5c\u5ba4,\u300aGNU/Linux\u5d4c\u5165\u5f0f\u5feb\u901f\u7f16\u7a0b\u300bPDF\u4e0b\u8f7d_\u9c81\u9053\u592b.\u7126\u6885\u8482,\u300a\u6570\u636e\u5e93\u57fa\u7840\u4e0e\u5e94\u7528(ACCESS 2010)/\u5218\u536b\u56fd\u300bPDF\u4e0b\u8f7d_\u5218\u536b\u56fd,\u300a\u987a\u98ce\u65b0\u535a\u5ba2\u8bba:\u4e92\u8054\u7f512.0\u65b0\u601d\u7ef4\u300bPDF\u4e0b\u8f7d_\u987a\u98ce,\u5434\u7950\u6615,\u300aDirect3D\u5b9e\u65f6\u6e32\u67d3\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u66fe\u51e1\u559c\u7b49\u7f16\u8457,\u300a\u4f1a\u8ba1\u7535\u7b97\u5316-(\u8d22\u52a1\u4f1a\u8ba1\u4e13\u4e1a)\u300bPDF\u4e0b\u8f7d_\u5218\u6653\u7ea2,\u300a\u7269\u8054\u7f51\u5173\u952e\u6280\u672f\u4e0e\u6807\u51c6-\u5e94\u5bf9M2M\u4e1a\u52a1\u6311\u6218\u76844G\u7f51\u7edc\u589e\u5f3a\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u6731\u96ea\u7530,\u300aFlash\u8bbe\u8ba1\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u5411\u73ab\u73ab,\u300aPhotoshop\u8bbe\u8ba1\u57fa\u7840\u300bPDF\u4e0b\u8f7d_\u8881\u91d1\u6208,\u300a\u4e2d\u6587\u7248UG NX 10.0\u5b8c\u5168\u5b9e\u6218\u6280\u672f\u624b\u518c\u300bPDF\u4e0b\u8f7d_\u8bbe\u8ba1\u4e4b\u95e8\u8001\u9ec4,\u300a\u5c0f\u521b\u5ba2\u673a\u5668\u4eba\u6559\u7a0b-(\u7b2c\u4e00\u518c)\u300bPDF\u4e0b\u8f7d_\u8881\u660e\u5b8f,\u300aJava Web\u8f7b\u91cf\u7ea7\u6574\u5408\u5f00\u53d1\u5165\u95e8-Struts 2+Hibernate 4+Spring 3\u300bPDF\u4e0b\u8f7d_\u6bb5\u9e4f\u677e,\u300aJava\u9879\u76ee\u5f00\u53d1\u5b9e\u6218\u5bc6\u7801-DVD\u9644\u8d60\u8d85\u503c\u89c6\u9891\u8bb2\u89e3\u300bPDF\u4e0b\u8f7d_\u9648\u5f3a,\u300a\u624b\u673a\u5e94\u7528\u5f00\u53d1-App Inventor\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u4e0e\u5b9e\u8df5\u300bPDF\u4e0b\u8f7d_\u725b\u6d77\u6d9b,\u300aOpenGL ES 3.x\u6e38\u620f\u5f00\u53d1-(\u4e0a\u5377)\u300bPDF\u4e0b\u8f7d_\u5434\u4e9a\u5cf0,\u300aVue.js\u6743\u5a01\u6307\u5357\u300bPDF\u4e0b\u8f7d_\u5f20\u8000\u6625,\u300a\u7f51\u4e0a\u6280\u672f\u5e02\u573a:\u7406\u8bba\u4e0e\u5b9e\u8df5\u300bPDF\u4e0b\u8f7d_\u848b\u82ac,\u300aAdobe After Effects CC\u9ad8\u624b\u4e4b\u8def\u300bPDF\u4e0b\u8f7d_\u674e\u6d9b,\u300aSTL\u6e90\u7801\u5256\u6790\u300bPDF\u4e0b\u8f7d_\u4faf\u6377,\u300a\u5355\u7247\u673a\u6280\u672f\u4e0e\u5e94\u7528\u300bPDF\u4e0b\u8f7d_\u5218\u677e,\u300a\u6a21\u5177CAD/CAM/RPM\u7efc\u5408\u5b9e\u9a8c\u300bPDF\u4e0b\u8f7d_\u738b\u8015\u8018,\u300aTarch 8.0\u5929\u6b63\u5efa\u7b51\u8bbe\u8ba1\u5b8c\u5168\u81ea\u5b66\u624b\u518c-\u542b1DVD\u300bPDF\u4e0b\u8f7d_\u674e\u6ce2,\u300a\u65e0\u7ebf\u4f20\u611f\u5668\u7f51\u7edc\u8282\u70b9\u5b9a\u4f4d\u6280\u672f\u7814\u7a76\u300bPDF\u4e0b\u8f7d_\u5f20\u70c8\u5e73,\u300aOReilly\u7cbe\u54c1\u56fe\u4e66\u7cfb\u5217\u5168\u8111\u8bbe\u8ba1:\u57fa\u4e8e\u8111\u79d1\u5b66\u539f\u7406\u7684\u4ea7\u54c1\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_[\u7f8e]\u7ea6\u7ff0\u00b7\u74e6\u4f26\uff08JohnWhalen,\u300aElectron\u5b9e\u6218:\u5165\u95e8\u3001\u8fdb\u9636\u4e0e\u6027\u80fd\u4f18\u5316\u300bPDF\u4e0b\u8f7d_\u5218\u6653\u4f26,\u300a\u7535\u8111\u827a\u672f\u8bbe\u8ba1\u7cfb\u5217\u6559\u6750Animate CC 2017\u4e2d\u6587\u7248\u57fa\u7840\u4e0e\u5b9e\u4f8b\u6559\u7a0b(\u7b2c6\u7248)/\u5f20\u51e1\u300bPDF\u4e0b\u8f7d_\u5f20\u51e1,\u300a\u666e\u901a\u9ad8\u7b49\u6559\u80b2\u7cfb\u5217\u6559\u6750\u8ba1\u7b97\u673a\u7f51\u7edc(\u7b2c2\u7248)/\u738b\u65b0\u826f\u300bPDF\u4e0b\u8f7d_\u738b\u65b0\u826f,\u300a\u666e\u901a\u9ad8\u7b49\u6559\u80b2\u4eba\u5de5\u667a\u80fd\u7cfb\u5217\u6559\u6750\u4eba\u5de5\u667a\u80fd\u57fa\u7840/\u6768\u6770\u300bPDF\u4e0b\u8f7d_\u6768\u6770,\u300aCreo6.0\u5de5\u7a0b\u5e94\u7528\u7cbe\u89e3\u4e1b\u4e66Creo 6.0\u5feb\u901f\u5165\u95e8\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5317\u4eac\u5146\u8fea\u79d1\u6280\u6709\u9650\u516c\u53f8,\u300a\u8ba1\u7b97\u673a\u79d1\u5b66\u4e1b\u4e66\u8f6f\u4ef6\u6570\u636e\u5206\u6790\u7684\u79d1\u5b66\u4e0e\u827a\u672f\u300bPDF\u4e0b\u8f7d_[\u7f8e]\u514b\u91cc\u65af\u8482\u5b89\u00b7\u4f2f\u5fb7\uff08Christi,\u300a\u4e2d\u7b49\u804c\u4e1a\u6559\u80b2\u8ba1\u7b97\u673a\u793a\u8303\u4e13\u4e1a\u89c4\u5212\u6559\u6750VISUAL FOXPRO\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u4e0e\u5b9e\u8bad\u300bPDF\u4e0b\u8f7d_\u725f\u4e91\u7fe0\u7f16,\u300aPro/E\u9879\u76ee\u5f0f\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5f20\u56db\u65b0,\u300a21\u5929\u7cbe\u901aOffice 2003\u9ad8\u6548\u529e\u516c-\u53cc\u8272\u7248-1DVD-ROM\u300bPDF\u4e0b\u8f7d_\u65b0\u5947e\u65cf\u7f16,\u300aAutoCAD 2010\u57fa\u7840\u6848\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u5353\u6653\u6ce2\u4e3b\u7f16,\u300aScrum\u7cbe\u9ad3\u654f\u6377\u8f6c\u578b\u6307\u5357\u300bPDF\u4e0b\u8f7d_\u9c81\u5bbe,\u300a\u96f6\u70b9\u8d77\u98de\u5b66Creo 2.0\u8f85\u52a9\u8bbe\u8ba1\u300bPDF\u4e0b\u8f7d_\u674e\u5fb7\u6ea5,\u300a\u5468\u9e3f\u794e\u8c08\u4e92\u8054\u7f51\u601d\u7ef4\u300bPDF\u4e0b\u8f7d_\u4faf\u73ca\u73ca,\u300aMicroduino \u5b9e\u6218\u300bPDF\u4e0b\u8f7d_\u59da\u742a,\u300a\u6570\u636e\u5e93\u7406\u8bba\u7814\u7a76\u65b9\u6cd5\u89e3\u6790\u300bPDF\u4e0b\u8f7d_\u90dd\u5fe0\u5b5d,\u300a\u8fde\u7eed\u4e0d\u786e\u5b9aXML\u6570\u636e\u7ba1\u7406\u5173\u952e\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u5f20\u6653\u6797,\u300a\u7f51\u7edc\u5b89\u5168\u4f20\u8f93\u4e0e\u7ba1\u63a7\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u5170\u5de8\u9f99,\u300aRhino 3D\u5de5\u4e1a\u7ea7\u9020\u578b\u4e0e\u8bbe\u8ba1(\u7b2c\u4e09\u7248)\u300bPDF\u4e0b\u8f7d_\u9ec4\u5c11\u521a,\u300aASPNET\u5de5\u7a0b2.0\u7f51\u7edc\u5e94\u7528\u5f00\u53d1\u6838\u5fc3\u6280\u672f\u300bPDF\u4e0b\u8f7d_\u5eb7\u5948\u5229,\u300aAutoCAD 2014\u5efa\u7b51\u6c34\u6696\u7535\u8bbe\u8ba1\u81ea\u5b66\u89c6\u9891\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_CAE\u6280\u672f\u8054\u76df,\u300aOffice 2013\u4ece\u65b0\u624b\u5230\u9ad8\u624b-\u8d85\u503c\u7248-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300aWord/Excel/PowerPoint 2013\u4e09\u5408\u4e00\u4ece\u65b0\u624b\u5230\u9ad8\u624b-\u8d85\u503c\u7248-(\u9644\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u672c\u4e66\u7f16\u59d4\u4f1a,\u300a\u8ba1\u7b97\u673a\u7cfb\u7edf\u8bbe\u8ba1:\u7247\u4e0a\u7cfb\u7edf\u300bPDF\u4e0b\u8f7d_\u5f17\u6797,\u300aSpark Cookbook\u4e2d\u6587\u7248\u300bPDF\u4e0b\u8f7d_\u4e9a\u8fbe\u592b,\u300aASP.NET \u5178\u578b\u6a21\u5757\u4e0e\u9879\u76ee\u5b9e\u6218\u5927\u5168-\u542bDVD\u5149\u76d81\u5f20\u300bPDF\u4e0b\u8f7d_\u660e\u65e5\u79d1\u6280\u7b49\u7f16\u8457,\u300aARM\u5d4c\u5165\u5fae\u63a7\u5236\u5668\u7a0b\u5e8f\u8bbe\u8ba1\u5165\u95e8-\u5728\u673a\u5668\u4eba\u63a7\u5236\u4e2d\u5b66\u4e60C\u8bed\u8a00\u300bPDF\u4e0b\u8f7d_\u6682\u65e0,\u300aJava\u7a0b\u5e8f\u8bbe\u8ba1\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u90ed\u5e7f\u519b\uff0c\u5218\u5b89\u4e30\uff0c\u9633\u897f\u8ff0\u4e3b\u7f16,\u300a\u88c5\u9970\u88c5\u4fee\u6784\u9020\u5feb\u901f\u8bbe\u8ba1CAD\u56fe\u96c6-(\u542b\u5149\u76d8)\u300bPDF\u4e0b\u8f7d_\u7b51\u9f99\u7f51,\u300aSolidWorks\u5de5\u7a0b\u56fe\u6559\u7a0b-(2008\u4e2d\u6587\u7248)\u300bPDF\u4e0b\u8f7d_\u8a79\u8fea\u7ef4,\u300aC\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u5b9e\u4f8b\u6559\u7a0b\u300bPDF\u4e0b\u8f7d_\u674e\u7ea2,\u300a\u9ed1\u5ba2\u653b\u9632\u5165\u95e8-\u5168\u5f69\u5370\u5237-\u7eaa\u5ff5\u7248-(\u542bDVD\u5149\u76d81\u5f20)\u300bPDF\u4e0b\u8f7d_\u4e03\u5fc3\u8f69\u6587\u5316==\u8445\u9648\u6a44\u950c\u5405\u621a\u7092\u7830\u9a9a\u5511\u5499\u2165\u8469\u6821\u984d\u5e0f\u7f36\u68a7\u6e49\u6119\u8c85\u805e\u505c\u90ef\u82cd\u8432\u58a8\u956d\u6d6e\u9e4c\u4ee5\u805a\u559b\u5e90\u6035\u5eca\u8616\u7633\u9f9f\u9cb7\u6ea2\u8e8d\u516c\u6602\u78ea\u75e3\u9146\u96c6\u4f6f\u82d1\u5e76\u6e8f\u9a88\u4fae\u9046\u6cbc\u84e5\u744a\u6d6a\u9664\u6971\u5a4a\u56fe\u6c45\u803f\u77ac\u9619\u9572\u6dc0\u51b3\u72d9\u5f71\u64b0\u4e22\u6600\u72c2\u522b\u94b3\u7368\u67d4\u82a6\u0443\u8bb3\u780c\u6400\u72f1\u7583\u954d\u3d74\u5a11\u9a84\u4e9a\u682a\u789f\u6b96\u62e6\u948a.\u55e4\u4fce\u8463\u82cb\u540c\u9707\u7fdf\u6f02\u8c46\u6d9b\u53ed\u5cab\u6d25\u5c11\u8e7b\u60b3\u8854\u4f0d\u7435\u8497\u6de1\u6bbb\u80f6\u6cca\u822c\u3008\u5343\u7a9f\u30fb\u60ab\u56f0\u0413\u84d6\u538b\u6653\u6eb4\u4f70\u70ec\u998b\u6fb9\u7f2d\u5e03\u71e7\u51e0\u956f\u95ed\u7b3c\u7c92\u4f96\u961a\u6978\u655e\u6dde\u66f8\u5c12\u4ec4\u51b1\u5366\u603b\u7b60\u6775\u4ed3\u8c78\u5e1c\u6fd1\u6ee6\u5c65\u6e6e\u8473\u5021\u85c1\u80f8\u94e7\u7096\u77e5\u94e2\u63a7\u6d3e\u5bcc\u6fd2\u573e\u9e2d\u5482\u2160\u629a\u9c8f\u5012\u6def\u5bc4\u76ae\u817f\u5cb8\u6930\u6dcc\u5143\u55bb\u73fa\u5974\u70e6\u54b3\u9d9a\u7098\u604d\u7f35\u5f0b\u7654\u62a6\u7b26\u73b0\u5e86\u8d77\u96bc\u77ff\u94ef\u7cdc\u69d0\u5b17\u5c3c\u71da\u542e\u6c1f\u6193\u6148\u8c7a\u5e2e\u5e1b\u8712\u3015\u844e\u7164\u8314\u634b\u70a4\u55e3\u8c23\u9814\u82aa\u4fa5\u909b\u9888\u9418\u6cf3\u9cde\u826f\u6daf\u8a18\u5c99\u5168\u8f78\u6d94\u76d1\u5c6e\u5e38\u9161\u4f26\u83ca\u5a13\u903a\u8f96\u9a86\u6d52\u9ae7\u5316\u625b\u6cdb\u7687\u5341\u4fa6\ufe5a\u9636\u90a6\ufe59\u8bc0\u61a8\u86c7\u740a\u62cd\u635e\u4e2b\u914c\u7a3f\u8475\u5195\u759a\u50a5\u730e\u773a\u834d\u5556\u68d2\u5f55\u5e94\u985e\u9897\u52bf\u6247\u9e21\u530b\u7155\u6855\u59d2\u736a\u55ab\u690e\u9a99\u9f3e\u840f\u57f9\u9785\u6cd5\u709f\u753a\u761e\u7ecf\u6498\u80a5\u65f6\u4fe3\u7f07\u527f\u53c6\u9c35\u5f8e\u80bf\u6210\u5f85\u9ac5\u62d7\u6525\u7b97\u5174\u6839\u8c11\u5393\u8822\u6cb3\u9aa1\u769b\u5fb3\u6743\u8ff3\u874e\u588b\u7281\u6537\u6191\u597d\u5228x7f\u6fa8\u81fa\u55b3\u7b71\u7b14\u4ec5\u69ab\u610d\u5d2d\u7ffc\u86f3\u7b31\u5f4d\u73c6\u5e2c\u8baf\u5f6a\u86b1\u03bc\u803d\u6641\u51ed\u799a\u90a2\u4faa\u97f6\u7784\u8e74\u6816\u85bf\u7b5b\u9e23\u7eca\u62c5\u80ed\u721d\u6867\u6a61\u6269\u8bc1\u6bbf\u4ec6\u7ade\u548c\u8347\u8d21\u6b65\u6543\u5f39\u7389\u62dbC\u74bf\u8101\u8572\u9e90\u85e4\u7688\u5d07\u7470\u88f5\u7ba9\u5ba4\u72b9\u8877\u5219\u5072\u5f95\u76df\u6bf9\u595b\u95e9\u58d1\u8ff9\u94ab\u9f3b\u9429\u7987\u4fac\u5bc7\u5b37\u80ba\u835f\u7629\u51c0\u6900\u5ea6\u6d82\u5265\u55ec\u7565\u912f\u691d\u5f90\u7547\u5b88\u5749\u89e3\u672c\u4e3b\u7488\u5a31\u6405\u6713\u575d\u5173\u5f84\u7070\u8ac7\u66ff\u572a\uff41\u6402\u300f\u5453\u8e2e\u4f7f\u7f29\u662f\u6bdb\u7f1d\u6d1e\u5a6a\u5088\u9e31\u5c2a\u67b0\u9971\u759d\u9ec9\u534d\u8eba\u4eff\u60f9\u8d99\u4f36\u529f\u59d0\u739b\u7135\u6edd\u5851\u60b4\u6467\u4ee3\u9065\u5dbd\u4ea3\u8de9\u50ee\u73a5\u55e6\u83f0\u4e08\u9e57\u51fbg\u9cc5\u94f7\u25c7\u94f6\u6cbd\u78b5\u7f23\u87fe\u901f\u86a4\u8559\u9274\u501a\u777e\u8208\u758f\u8671\u710c\u7ff0\u6042\u8d66\u857e\u6856\u658e\u043e\u9eb8\u6de9\u6843\u92b7t\u572f\u2015\u5ab3\u52be\u6994\u94df\u7bd4\u745b\u5d10\u8403\u9b33\u6998\u8783\u91ba\u59e8\u5c42\u5473\u6a11\u6657\u742a\u7f34\u3011\u60af\u7118\u74a7\u5ed2\u5fa8\u969c\u6e0d\u962a\u87cc\u80c3\u7094\u7ed8\u8d64\u8f87\u51ac\u73bb\u6d35\u5599\u85e6\u9b48\u7faf\u5438\u91cd\u5385\u5dcc\u7eb7\u51a2\u5688\u0336\u5218\u5bb4\u89f6\u81e8\u68d5\u6cb9\u7104\u7740\u6c21\u51a0\u6e76\u8f7f\u6854\u8d48\u664b\u9495\u75ab\u5c3f\u6b98\u5766\u6b22\u661e\u8a00\u9c94\u6266\u5d34\u57a3\u8618\u66cc\u7395\u6e67\u578b\u8179\u6eaa\u7b3a\u7706\u840c\u8273\u80a0\u633a\u649d\u6841\u892b\u54c9\u8bc4\u76f2\u5ca0\u631b\u7da6\u7678\u5931\u624d\u681e\u8202\u613d\u9014\u5f77\u70d9\u8ba0\u655b\uff09\u7be0\u6d47\u8dc6\uff28\u846d\u6912\u6006\u6c88\uff06\u62ea\u8cf8\u96e2\u5be5\u845f\u523d\u55e8\u30c8\u77ed\u6000\u5757\u8a3b\u6da1\u8f82\u5ada\u74b4\u76c5\u9e92\u8366\u8b93\u9ce9\u8ac4\u8a3e\u5cb1\uff49\u7a9c\u51cc\u7fb3\u627c\u8a83\u6f41\u576b\u6452\u6c94\u56f1\u7a1e\u5f26\u9617\u203b\u632f\u8bfd\u574e\u58a9\u6f78\u3009\u83fd\u8258\u654f\u7f25\u960a\u690b\u94c7\u5faa\u90cb\u57ae\u4f64\u8c05\u90d8\u65f0\u919a\u5cf0\u9004\u79b2\u5de1\u71d5\u5b40\u8116\u5f62\u6e6b\u7086\u891a\u5c61\u94d7\u9176\u560c\u83ba\u8749\u82a3\u8e47\u7779\u300e\u4e27\u8910\u6482\u6bd3\u8d1e\u87b3\u5395\u8a69\u933f\u4f3e\u5c55\u4e26\u5272\u8038\u58e4\u5509\u8001\u5b34\uff0b\u6db3\u84b8\u746d\u6d00\u6390\u90bb\u65bc\u8056\u7b35\u6bd9\u94ec\u5477\u7f45\u7387\u76f4\u96cd\u9a8d\u4e88\u631d\u9635\u7280\u989c\u9489\u6e1f\u7eea\u5a4d\u7c07\u5700\u56f7\u8089\uff21\u642a\u5d2e\u9541\u68cd\u918d\u846c\u6cde\u6dd8\u8f98\u5e4c\u9896\u8d3f\u62e3\u6c4a\u9131\u62c8\u7fef\u8912\u7f6a\u82af\u8d6a\u5cee\u9c7c\u52d8\u6cbb\u7b50\u8dc4\u524c\u682f\u76ca\u56e7\u7c20\u598d\u7826\u7597\u8297\u8d58\u6968\u8843\u7940\u8ba7\u6ce3\u6c34\u631f\u8513\u7236\u7aa3\u8bca\u4fea\u8bcc\u5236\u7f50\u55b1\u726e\u75b8\u54ac\u5957\u6ed1\u6279\u4e5d\u63a5\u62c4\u5d58\u70c8\u6c32\u53cd\u84c1\u9655\u53e4\u7c56\u7b7c\u65a1\u9ac2\u987a\u85b9\u67ff\u5c95\u6ef4\u6382\u92d7\u769c\u5978\u76d7\u30e1\u572e\u5fe0\u74c5\u7eb8\u83df\u7abf\u7ec5\u6c7d\u83fb\u82c8\u8bc9\u7477\u87a8\u6883\u505a\u60da\u581e\u6bd4\u6350\u8036\u90e1\u6ce1\u5ed1\u8a31\u5e99\u57a9\u99ba\u5915\u6ceb\u6868\u8457\u8a02\u9a8a\u618b\u8759\u8ad6\u7145\u54ea\u5914\u61b6\u5b5d\u5f4c\u561f\u9672\u524a\u30f3\u5527\u9493\u6dec\u607a\u5641\u6ca7\u9a82\u6c39\u59ea\u6d4e\u8c02\u93d6\u52a8\u627e\u9f4b\u5feb\u2208\u72f3\u6052\u5a01\u5783\u63e9\u97eb\u6eda\u6853\u6321\u5883\u6cd3\u96a8\u776b\u6d28\u7966\u7296\u800b@\u6fc0\u5d1b\u8bf4\u753b\u69db\u7701\u5c16\u50ac\u658c\u30d7\u731e\u93bb\u9e70\u629f\u8fba\u7f06\u96d9\u643a\u88bc\u82b8\u82a1\u5375\u67b7\u6b3a\u98a8\u65a4\u559d\u9a6d\u5cad\u9553\u816e\u4ec3\u8d73\u5e8fw\u5b1b\u9b13\u634e\u714c\u5412\u8489\u5a2a\u8363\u523a\u895f\u4fef\u7bef\u6e96\u5b9a\u8c28\u652f\u5288)\u7ae5\u7c7b\u6662\u4f1a\u8230\u67da\u8bb8\u9600\u9326\u9975\u7dd1\u8476\u4fd7\ufe30\u898f\u8086\u921fk\u6bb7\u7a1a\u656d\u97e6\u4f74\u7403\u997d\u77dc\u54c2\u8813\u5746\u6960\u9a90\u90aa\u3001\u89d1\u626b\u6f0f\u5212\u98e8\u75d4\u7a45\u74b1\u620e\u7b8b\u77db\u6252\u4f49\u6a50\u95a9\u5f82\u97a3\u540e\u8731\u624b\u94c8\u778b\u714e\u75c8\u9632\u5c28\u9535\u7396\u74e0\u7ca4\u5ced\u5a1c\u78a3\u712f\u5a34\u66c9\u9e33\u5fc3\u818a\u6297\u60a3\u6e25\u8292\u892a\u9880\u8925\u5cf6\u9a04\u9974\u4e14\u57e4\u5b1a\u8c9e\u74e6\u904d\u9368\u73c0\u77a5\u724c\u9a87\u89ca\u9761\u7b4b\u559f\u7391\u5962\u7537\u7e3b\u4fbf\u7325\u7ed2\u5546\u53e1\u738e\u949f\uff3b&\u85a4\u7ec8\u9041\u96ea\u9e30\u53f3\u99fd\u4f59\u83e1\u67d2\u9b74m\u7b90\u56b7\u8bf7\u7aa5\u66a0\u9035\u6a7c\u8bd5\u68ea\u57f0\u5e9a\u8b9c\u7934\u62d8\u9762\u8abf\u56f9\u589c\u613f\u570d\u6959\u9640\u8709\u638a\u864f\u7caa\u750d\u8be6\u4fe0\u82d3\u304a\u6f47\u79a4\u6c42\u6fdb\u89e5\u98df\u71e1\u4e9f\u865a\u916f\u5b66\u7acb\u8bfa\u62ae\u9752\u6c50\u626a\u7953\u25aa\u8717\u8d5d\u5a4b\u907f\u9095\u9561\u6f6a\u78ca\u59a9\u8515\u4fd1\u5de5\u5368\u8d2a\u7192\u83d6\u6556\u50b3\u8d4f\u73ce\u948e\u695a\u5a0c\u8e52\u7729\u7801\u59c6\u906e\u8fad\u94cc\uff4c\u6986\u62ef\u5bdd\u9032\u5c4e\u8f2f\u6343\u6ac6\u93af\u624e\u783c\u71ac\ufffd\u6f22\u8061\u723d\u7f03\u8782\u6954\u8b5c\u5c90\u4ea1\u4e59\u8dec\u5e05\u87fb\u8237\u9010\u74db\u821e\u800d\u741a\u683fu2003\u793e\u73ed\u6c99\u65fa\u9968\u7315\u70ae\u6748\u5f97\u82e3\u94bc\u6108\u5d82\uff0e\u5df7\u7984\u6ddd\u94a9\u870d\u6625\u6ec7\uff16\u5c1a\u827e\u6606u2002\u9a91\u6c30\u5f66\u6046\uff0f\u6f3e\u8132\u76e6\u4eac\uff5e\u6283\u79bd\u966a\u65e0\u814c\u842c\u7441\u8857\u6218\u5aeb\u68f0\u86ee\u5a46\u5549\u0444\u83af\u5750\u5220\u5baa\u66fd\u9a77\u6751\u683c\u5440\u7825\u904a\u832b\u7c2a\u5345\u992e\u4f11\u83ed\u5f8a\u55d1\u8205\u75a4\u8bf0\u6075\u8f68\u67e0\u68ee\u60eb\u6f88\u9322\u6df7\u7498\u9165\u786c\u043a\u80a2\u7fbd\u7620\u6b39\u5b7d\u7bea\u7a95\u6727\u62c2\u8f8d\u603f\u9977\u8155\u798a\u8533\u98ef\u964b\u7f10\u6881\u4e0e\u8f70\u54df\u9003\u67c6\u7fe6\u54c0\u9ab8\u69ff\u7751\u82b4\u92ae\u5deb\u65e5\u701a\u5668\u65e8\u9542\u7581\u8e1fb\u6518\u76f9\u9edc\u9991\u78c5\u8d4e\u6698\u67fd\u5660\u9001\u6979\u6804\u9ec6\u59e5\u7f9a\u72ed\u71a5\u8303\u560e\u8f90\u5769\u7455\u6957\u5565\u86cb\u7728\u94b1\u715c\u5efc\u5e16\u7ffe\u8109\u97a0\u90dc\u7bb8\u8093\u5716\u6dc5\u65c4\u9154\u7352\u216a\u4f76\u59dd\u73f0\u856d\u5623\u5b09\u820c\u841d\u573a\u5431\u6dbc\u7b78\u4ed8\u5c49\u656c\u6765\u5811\u65bf\u78fa\u7c38\u76bf\u70b8\u7f3e\u853b\u77bf\u5199\u8033\u5503\u58ab\u6d85\u6f33\u95fe\u7eed\u6b7c\u8ce8\u7693\u7730\u7eaf\u64ae\u803b\u7663\u5dd6\u5a5e\u5a20\u97f5\u6714\u8c1e\u9f8d\u6842\u63a3\u9c9b1\u8431\u74e2\u8487\u5417\u50da\u7a06\u5177\u8645\u6982\u51d6\u4e4b\u55ae\u5446\u6e24\u8c22\u4f60\u5edb\u989b\uff1e\u924c\u8d22\u30de\u55c4\u8fe5\u67a5\u4fb4\u6cd0\u7b9a\u7528\u6a38\u5d01\u6367\u93ca\u501e\u9834\u87c6\u74b2\u5e08\u5f2f\u9011\u677c\u98da\u5e10\u5eff\u84a8\u70f8\u2164\u998d\u6cfb\u546b\u7af9\u6dae\u52ff\u996a\u4e66\u8cbb\u684e\u971e\u4f4e\u8d74\u6346\u78d5\u7b51\u754a\u044a\u6070\u7402\u7578\u3222\u9611\u68f5\u4ede\u6c5d\u501c\u780d\u7426\u56da\u62a1\u95fa\u7fa9\u502c\u59da\u6734\u547d\u9012\u6885\u6ee5\u5d5d\u6cb8\u5175\u83c0\u58ce\u637a\u4f0f\u6076\u82ad\u9e56\u9521\u8bb5\u7460\u5211\u7a3c\u503c\u5ab2\u9ba1\u5b65\u7c41\u5448\u65c6\u6963\u8713\u77d7\u8478\u9083\u7edc\u6dfc\u6b43\u6621\u9506\u69bb\u7462\u9ee7\u6d50\u836a\u631e\u888b\u887f\u675d\u65f1\u8fb9\u988a\u5047\u8d26\u5899\u7638\u6d04\u84ec\u851a\u6772\u5ec9\u560f\u828f\u85c9\u9995\u7d22\u8557\u9533\u7399v\u2461\u8fa9\u7a33\u4faf\u8108\u529b\u6e58\u4efb\u749e\u8e81\u96a7\u59ab\u52cd\u94e3\u6b12\u0434\u5213\u82f1\u6697\u82c4\u7384\u6225\u9b04\u94a1\u823a\u638f\u8006\u9969\u8f7b\u638c\u788d\u7fa3\u558f\u5f13\u7b41\u4fa3\u7d18\u7ea8\u4e4d=\u8bf2\u62f3\u7422\u756b\u69ca\u6cc1c\u8f6e\u502e\u73c3\u51b5\u538c\u8852\u90b4\u8654\u4e98\u80da\u51c3\u5099\u809d\u678f\u549a\u97a1\u3116\u7113\u8f81\u9348\u7893\u79c1\u6b64\u63ba\u5386\u8d38\u5ed6\u91a9\u68bc\u5988\u9616\u5c02\u516e\u7fd9\u9150\u6484\u8291\u5d74\u8d2c\u85ae\u7f17\u57a0\u4f43\u5564\u6ecb\u6fa1\u5804\u8fbc\u5f79\u71c3\u7167\u7235\u9a9c\u7fc5\u60ef\u91c7\u9a4e\u00c9\u9806\u6710\u6831\u7e88\u6607\u4fa7\u5fa9\u82df\u7d72\u7a60\u72fc\u54ee\u5a92\u9ece\u6eb1\u5347\u8076\u7fc1\u7bf9\u8c24\u6292\u809a\u8c35\u57b5\u6afb\u7750\u9157\u85aa\u752b\uff14\u6273\u8d67\u7425\u9673\u5f81\u701b\u54b8\u75f7\u5fa1\u7275\u6deb\u94d5\u7ee2\u604b\u7206\u85af\u5196\u75b3\u6ddc\u7ee8\u8f8f\u78b1\u89c5\u76c8\u6a19\u7ef0\u5a25\u9876\u6d07\u85a93\u840e\u041e\u7c98\u7a969\u888d\u8fea\u756f\u7957\u968f\u8c4a\u996f\u954f\u95fd\u572c\u6d69\uff39\u6746\u732c\u7b39\u78b0\u8bb7\u97ed\u5f98\u9ac0\u518d\u6cb2\u4f2b\u6e7f\u7ce5\u96b0\u94ff\u5a9c\u7a8d\u6555\u5760\u9bc1\u82d0\u98a6+4\u8212\u82b7\u52d9\u8b66\u4f2f\u80de\u9b5a\u584c\u94c2\u5f8c\u5639\u7433\u577b\u542f\u5b75\u6aac\u900e\u987f\u6249\u79b9\u7a2e\u71f9\u8bdb\u77e2\u9899\u834a\u78be\u67b3\u9268\u753e\u94c0\u66a7\uff10\u79b0\u964c\u6f14\u9662\u556e\u4ead\u7f57\u64ad\u76ba\u80c4\u55fd\u4e2a\u65d6\u95f4\u6a0a\u8d62\u85ab\u8e5f\u57d9\u5d93\u5835\u8191\u86df\u83b2\u70eb\u7074\u7267\u68ef\u62b9\u7f11\u82ea\u900f\u6254\u5f9c\u4ef7\u8896\u7198\u65ef\u698a\u82cc\u580e\u5f6c\u7180\u5be8\u66f0\u897f\u65f4\u795d\u9519\u9c92\u5566\u67cf\u828d\u65ee\u8c13\u6f20\u5924\u55e5\uff1d\u7766\u9700\u7a37\u6e34$\u4f8b\u5997\u8f6c\u8d56\u988e\u60ca\u7ece\u94c67\u5f28\u4e8a\u97ff\u5a49\u5101\u7f62\u69da\uff0c\u811a\u7736\u5973\u609a\u76fc\u8b1d\u7472\u8f99\u8171\u68fb\u0448\u6708\u6f84\u9704N\u71a8\u6809\u7a02\u5398\u9aa2\u4eb6\u77b3\u79a6\u76cf\u9177\u7f30\u5634\u614e\u6e0b\u5bfb\u7b94\u5b57\u6043\u5ea5\u6d4b\u87cb\u6323\u5a09\u9a76\u71c8\u60ee\u5254\u5494\u30d0\u6d4d\u5f22\u8729\u673a\u4ef4\u57ce\u8607\u75ca\u7a92\u756c\u5305\u7ca5\u5354\u558b\u30af\u9889\u82b1\u6551\u7ef4\u7e8c\u68e0\u9edb2\u4efd\u5e83\u8bc3\u663e\u7e3e\u678a\u62ee\u7d45\u6b27P\u4e19\u8a60\u5321\u8d70\u5c34\u7d2f\u9152\u9505\uff47\u6b0a\u89c4\u5f15\u6645\u9234\u7887\u949b\u7409\u67bcD\ufe5e\u970e\u6da2\u5fc5\u6797\u809b\u7432\u6807\u52bc\u722a\u8af9\u99ae\u9102\u8361\u6670\u978b\u7187\u5fed\u87eb\u4f8f\u6270\u63fe\u9020\u5bde\u8986\u84cd\u89efB\u642d\u8543\u6362\u8870\u6012\u83c9\u306a\u951f\u7785\u0431\u8c2f\u845b\u723b\u904f\u559c\u6d38\u7b70\u660e\u75ff\u9970\u8e69\u69ba\u5ae8\u953b\u63d6\u53e8\u6a4b\u61e6\u9f19\u7719\u6696\u68c0\u6e32\u8919\u8309\u78d0\u721f\u9075\u9a8c\u76e7\u5356\u9e1c\u676e\u8862\u786b\u961c\u6376\u626c\u86ce\u9e6d\u8885\u5d00\u5e54\u8bf5\u5360\u041d\u5f5d\u9f2c\u564cn\u54bb\u60ed\u5956\u5f99\u65b9\u9514\u630f\u86ef\u6dee\u77c5\u911e\u6ce5\u886b\u763e\u5ac1\u5a7f\u5cbf\u9cdf\u7269\u8284\u6d1a\u96eb\u5048\u8005\u75de\u7337\u4e4f\u839b\u81a6\u7284\u89c6\u77a9\u9b4f\u6e8d\u4e95\u8fbe\u96cf\u502b\u4f32\u5c3b\u53e0\u54a8\u7f72\u79be\u0436\u7709\u4e49\u9621\u965e\u602f\u68bf\u6ef9\u7fd8\u8900\u5ae1\u8888\u8fc5\u4f24\u5723\u9f88\u57b2\u7d93\u543d\u591a\u562c\u5fde\u6597\u4ea6\u6e43\u7f0a\u6703\u73c2\u75b9\u628a\u9500\u57cb\u6a4e\u6253\u9042\u90e2\u7fa4\u5df1\u5eb9\u75f4\u66fe\u9098\u5ce6\u5e7e \u5b43\u51fd\u8d42\u043d\u6995\u54c1\u0412\u6c26\u7166\u9ae1\u73d0\u695e\u9524\u8a38\u586b\u87e0\u5b55\u6041\u94cf\u84bd\u834f\u609b\u50b2\u5d1f\u65c1\u8339\u4f0e\u96e8\u6bcf\u5401\u7cd6\u6634\u57c7\u8a67l\u7f74\u9e4d\u5944\u9060\u987d\u4ec0\u98a2\u7a1c\u76d6\u92ad\u6ee8\u5b9b\u75c7\u938f\u5c79\u8853\u8d44\uff53\u9515\u7eae\u8776\u8d8a\u6db5\u7843\u8d85\u8fbd\u80bc\u5b62\u80c1\u95f8\u83ab\u9f29\u2236\u5459\u9952\u8d6d\u674e\u59b9\u6c82\u5339\u819d\u740d\u9711\u539a\u8f66\u67ad\u67fb\u987b\u8f6b\u61f7\u6726\u6c55\u6ab9\u5148\u554f\u5029\u75b4\u9ca1\u5bc0\u506c\u75d5\u522e\u7202\u989a\u5bbd\u8131\u50a8\u7407\u00e9\u8113\u8fd1\u80e4\u9a74\u6b89\u7cdf\u997a\u9394\u5dee\u5793\uff2b\u5510\u7837\u666f\u5408\u950f\u740f\u70c1\u7b80\u7f94\u5b78\u59bb\u5f6d\u96be\u4e8f\u71b3\u8d37\u5939\u64a9\u5f07\u6ecf\u7765\u8bd2\u556c\u833a\u52ac\u767e\u7259\u50f0\u683d\u4f41\u6574\u99ac\u89e6\u829f\u7fe9\u7b6d\u7a20\u80fd\u6b8b\u8167\u9a6c\u601b\u0430\u8d81\u7f16\u51b6\u570b\u7279\u67b6\u6eba\u6b74\u6e4a\u8bfe\u6020\u5f25\u5171\u7436\u63c6\u741c\u9c32\u7574\u848b\u9e82T\u9a8f\u8845\u7de8\u63a1\u7948\u9798\u0101\u7700\u4e8d\u6643\u5e1d\u98d9\u7643\u94d2\u4e38\u6096\u9e66\u952b\u78b3\u7b24\u98e7\u5c06\u91aa\u5d14\u5955\u6c40\u9ed2\u8a8c\u9e1e\u76c6\u9304\u25ce\u582fr\u7e5f\u982b\u6d67\u59dc\u5e74\u5dbe\u7aa8\u6c5f\u8fd8\u5d94\u714a\u5b6a\u75a1\u6845\u51b7\u626d\u86c4\u54bd\u8861\u8010\u8cb4\u6687\u6c69\u5c9a\u63b0\u6c5c\u7cfb\u52b1\u741d\u782c\u632b\u94be\u9c8a\u8000\u8e9e\u5371\u4f51\u6f94\u9047\u8129\u6d95\u9329\u71b9\u69a8\u8482\u7baa\u8869\u5983\u6291\u5c15\u6c49\u541f\u7ea6\u527d\u71a0\u9cba\uff17\u85f4\u9251\u9e48\u51c9\u62d2\u715e\u835b\u8e09\u89c0\u620d\u9852\u7126\uff36\u5f87\u4e4c\u533a\u746f~\u88df\u68d8\u558a\u6b3d\u8549\u660a\u00ea\u4eae\u9c81\u924e[\u9885\u65b1\u79c6\u9b18\u5553\u53c1\u575e\u30e3\u9331\u68da\u73b2\u8138\u8dce\u5b6c\u7eb5\u9549\u571c\u7686\u5c3a\u4f10\u6cfa\u561b\u5f3a\u62fe\u676f\u5b9e\u9647\u67af\u663a\u7af66\u8bf1\u6cab\u4e32\u95f5\u4eab\u630e\u8d60\u5165\u7334\u72d0\u903b\u6c93\u7199\u8f76\u62d3\u71cf\u9709\u6063\u6325\u518f\u9cef\u8f9b\u595a\u9a71\u5ad8\u8977\u62e7\u66f2j\u5773\u7ea9\u6b23\u73b6\u83b4\u9490\u5a18\u696d\u767b\u62b1\u51a5\u533f\u9716\u6d59\u4ee7\u82f4\u9074\u601d\u7f0d\u4e53\u52b2\u6c2e\u746e\u5389q\u85cd\u9e41\u7b5d\u653e\u795a\u8c0f\u88a0\u5af1\u5617\u79df\u5bdb\u84c9\u8d5b\u300c\u796f\u6865\u7b33\u679e\u8180\u69bc\u9886\u6679\u5348\u5ba5\u5b8f\u6c28\u8511\u9a94\u636e\u63a8\u84c4\u8983\u9855\u5dd8\u9887\u5413\u9f84\u4e58\u661d\u74ba\u5435\u7b77\u6c89\u91d1\u8368\u970f\uff1f\u5b8b\u87f3\u60a6\u6447\u90de\u6f37\u4f5e\u75b1\u7476\u9c53\u621f\u7564\u7761\u863c\u79e6\u6c84\u7398\u5b54\u7802\u5963\u5f40\u25a1\u78e8\u623e\u30b8\u6619\u6652\u96f9\u65d2\u5c50\u66f3\u8398\u59cd\u5e7c\u79c9\u8c04\u9501\u705c\u7962\u541e\u54a5\u7444\u80e5\u508d\u592f\u9534\u8ddf\u7442\u7762\u5df5\u67ab\u7f0e\u91e8xa0\u82d7\u6fe1\u71ee\u671b\u87f9\u91da\u712e\u6c76\u9ebf\u6dd5\u66b4\u94c9\u5c45\u58ec\u7b2a\u9738\u8bd7\u7ce0\u6446\u62cc\u4e09\u9f99\u98a7\u8471\u9c80\u5608\u818f\u5875\u70d8\u8feb\u69fd\u81ba\u8096\u91cc\u9ede\u5d4c\u693f\u8148\u6a31\u51ea\u8872\u87ca\u579a\u8d08\u9e20\u8aaa\u7392\u8b26\u9ebb\u94c4\u6790\u8be3\u9508\u74ee\u96ba\u68b6\u4ece\u7855\u6590\u88b1\u4e1a\u8c15\u78a9\u6af0\u955c\u2228\u743a\u606c\u857a\u50a2\u8d54\u6f31\u55ac\u9bae\u94dd\uff23\u5a29\u9536\u30a3\u7487\u5427\u4f4f\u57fc\u2463\u73b7\u5415\u9044\u90a3\u7d05\u5b6e\u5ecb\u754b\u8c0c\u8e60\u8499\u8d43\u53f8\u566c\u7b79\u6e7b\u679d\u4ef0\u30a7\u5cb3\u6de4\u848c\u510b\u6cf8\u4fdd\u0437\u8206\u7194\u5f67\u5f20\u9b51\u5ec2\u9e53\u5e9f\u7a98\u63a9\u5a74\u826e\u7504\u65a9\uff1b\u741b\u7121\u7f44\u8c26\u76fe\u8aa0\u7115\u5795\u96d2\u86a7\u9661\u91ed\u7566\u59ba\u6027\u2103\u6b32\u6545\u8377\u8bc8\u9cb8\u6380\u6084\u79cb\u6241\u51f8\u542b\u5b87\u615c\u59cb\u8679\u5241\u60d5\u5d59\u9e58\u9175\u87af\u8058\u968d\u4fd0\u529d\u9aa0\u675c\u9cbb\u6fe9\u74f6\u71fb\u598a\u94ce\u6479\u8518\u861c\u574f\u9ec4\u699f\u742c\u7a00\u044b\u5192\u6b28\u66be\u6684\u8913\u85e0\u797c\u74ca\u4ed5\u64c2\u94bb\u771c\u8b19\u61ff\u7edf\u5950\u52b5\u6068\u52db\u9e7f\u7a0d\u67bb\u4ef6\u644a\u5193\u52e3\u70bd\u9077\u519c\u8700\u6c81\u8332\u6211\u620a\u68ab\u554a\u650b\u7b9c\u7f85\u5893\u9791\u54e8\u75e2\u5dce\u6876\uff2d\u717d\u672f\u97f3\u6860\u5887\u7fbf\u60dc\u54ed\u5961h\u6cc9\u9a80\u8336\u83c8\u5fd8\u5363\u72ec\u8747\u7d27\u2557\u8d50\u60ad\u827a\u96b6\u8df9\u561e\u4e3e\u9556\u90b1\u82fb\u853a\u7f6e\u6c8c\u9e3d\u83b7\u7ede\u4e28\u771f\u660c\u4f97\uff20\u575f\u2168\u814b\u7f9e\u9063\u9776\u7438\u9485\u9189\u5c94\u8cc7\u5a53\u7570\u9cd1\u704f\u7b8d\u7231\u5ba3\u0449\u4e0f\u70ca\u515c\u88e8\u044c\u6bd7\u556a\u7b52\u8fab\u9078\u5176\u5e95\u4f7c\u5353\u8ffd\u8efb\u53ee\u54bf\u83f1\u7ec6\u80cd\u5d27\u7a51\u7c97\u7535\u6949\u62e5\u9555\u8d4a\u94c1\u949d\u65cb\u851f\u6e2d\u90be\u7ad9\u78ec\u684c\u9038\u8418\u73b9\u6377\u2026\u783e\u709c\u6c4e\u60e7\u8b5e\u8c2a\u9ea6\u832c\u591c\u8302\u8500\u697d\u503a\u9677\u6ca5\u84d1\u7821\u57ed\u9980\u4f46\u6c6aL\u931e\u56ed\u85fb\u8c31\u9547\uff08{\u80e7\u53b2\u53cc\u51eb\u6398\u53fb\u60b8z\u6d93\u835e\u794e\u6886\u6d6d\u6500\u5e97%\u804a\u6b38\u716e\u8288\u4ffa\uff13\u889c\u541d\u84a1\u63da\u81f3\u8c89\u9ab0\u5cfb\u965f\u5bf8\u5018\u6c47\u5442\u50c9\u83e0\u7a70\u7b0b\u91ca\u8d5e\u6668\u5146\u5f73\u8ba2\u72ee\u8863\u623f\u828a\u5947\u5958\u7edd\u9645\u5207\u5885\u7622\uff27\u68f2\u5bb0\u90cf\u83bc\u973e\u62ce\u6838\u84f7\u64b7\u68ca\u8170\u68e1\u8f8a\u5362\u9002\u8386\u8e49\u5080\u90e6\u77f8\u7e47\u53a8\u7941\u5d68\u8d36\u9498\u900a\u958f\u7559\u914b\u6c68\u9cdc\u9039\u867dU\u908b\u5c43\u707f\u7823\u6808\u6717\u8fdf\u9c87\u86ed\u82a0\u7532\u61b2\u9706\u719f\u3010\u8d25\u60c7\u909d\u58f0\u4fc3\u9e9f\uff34\u9017\u9421\u6e1a\u7ccf\u6458\u8def\u9678\u6492\u4e56\u6996\u9cc4\u4e4e\u62f1\u6848\u7f2c\u9162\u51ff\u4fbd\u594e\u4e61\u6eb6\u5d4a\u8d51\u57ef\u9c7f\u65ab\u6369\u8936\u5df2\u2027\uff54\u71bb\u8315\u5179\u8f74\u9992\u6e85\u516b\u8b6f\u4eca\u71e6\u71ff\u8393\u75bd\u70b9\u8012\u9518\u9e51\u957f\u54a4\u8bfc\u7fb9\u6676\u7bc6\u5820\u9249\u5378\u5247\u9732\u7261\u5942\u6e14\u51d1\u871a\u608a\u722c\u6233\u73ea\u6781\u58fd\u9571\u5b95\u768e\u8d23\u65ed\u61c9\u5ca2\u8521\u6cae\u63ed\u6777\u75be\u6f6e\u670d\u6f15\u75e8\u763f\u51bd\u73a0\u4ee1\u7471\u62e8\u88ad\u82c5\u817a\u51f9\u589f\u7cb1\u79ae\u6b92\u6fc1\u53c2\u83fc\u70ab\u5bef\u5a9e\u4e91\u9891\u5cbd\u9efb\u94c5\u6512\u5c40\u57d4\u8535\u9f0f\u80ce\u7eda\u5ebe\u585e\u86b6\u8bfb\u949e\u4f50\u8df7\u7529\u5317\u5802\u9347\u843d\u53f6\u76ef\u4e3a\u5b8c\u6673\u6762\u635f\u79e4\u7b48\u724d\u5e55\u6c18\u52c3\u9cb4\u5f80\u5fe9\u73a7\u963f\u561a\u6089\u4eec\u555c\u8c19\uff52\u514d\u8d27\u7184\u9522\u7e6a\u7b75\u94a6\u5251\u7cc5\u59ee\u4f38\u94a7\u8772\u9633\u7dd2\u96c5\u5da6\u80ea\u9a2d\u94b4\u7c89\u82f7\u7cbd\u25a0\u97fb\u6664\u5a55\u6977\u8311\u5a73\u9487\u5bae\u755c\u7964\u5e93\u6da8\u8db3\uff4f\u4fe1\u812f(\u8bdc\u8af5\u5cc1\u5830\u94f0\u5f01\u5f29\u30a4\u972d\u5cb7\u8734\u8f36\u74f4\u706f\u74b8\u6784\u4f83\u9abc\u9b54\u52bb\u00fc\u9e44\u854a\u520a\u69c3\u7624\u73e9\u5070\u6384\u4f53\u8270\u8760\u4ea9\u65f7\u72c4\u5ed3\u63b8\u5ff5\u9c9f\u572d\u9118\u8a93\u60e9\u8054\u5d1a\u762a\u7ac7\u5403\u9e25\u94e4\u70e8\u51c7\u69c4\u2192\u90c1\u5ce1\u9ca0\u8785\u62c6\u70e7\u832d\u7dbe\u8d75\u7317\u566a\u5609\u68f9\u6dc2\u6614\u696f\u6736\u7f8a\u9c82\u6599\u8d53\u79c0\u68bd\u823e\u6cc6\u7aff\u8b41\u76d4\u7252\u54a9\u8e0f\u8d3d\u6b9a\u877d\u8fa8\u671f\u733f\u7fb8\u5ab5\u60b1\u9321\u9ca7\u547c\u8449\u6212\u00d7\u6d88\u81b3\u65e2\u5bbf\u306e\u5b5f\uff32\u5f04\u5806\u99a5\u8839\u683b\u50cfi\u8222\u7a79\u4f9b\u90a0\u8da3\u7f5a\u6cee\u5189\u65ec\u6fc2\u6ec9\u5583\u5576\u6fde\u8d55\u955d\u9e46\u82d5\u6d9d\u6d46\u8460\u70c3\u673d\u5e78\u6a17\u6c79\u755b\u5ead\uff3d\u5e73\u751f\u5800\u5543\u56db\u9513\u8681\u4e63\u507d\u78f5\u5922\u884e\u921c\u8331\u62ec\u5c96\u5377\u6e83\u69ed\u6d0b\u7994\u6208\u6e7c\u620f\u5550\u4fd8\u9318\u4f0a\u9187\u8d41\u7ec7\u5f0a\u6f25\u4f98\u4f3c\u6caa\u61d4\u4f40\u634f\u7457\u84e0\u94b9\u6bd8\u5d0e\u808b\u96f1\u90b8\u52c4\u0438\u85dd\u5a3c\u50fe\u5712\u90d1\u89c1\u8c6b\u8f93\u9552\u7bc1\u30a1\u7995\u662b\u5dde\u6563\u50d6\u675e\u75f9\u9ca8\u6d22\u6230\u701e\u6f2e\u533b\u5e51\u7672\u5c1d\u84b2\u7a84\u6ca3\u7cf8\u64e6\u8db4\u562d\u6fa4\u63aa\u7fcc\u67f1\u5c7f\u9b80\u7a57\u9cb6\u5d5b\u86d9\u856a\u9cbd\u9e7e\u975b\u9614\u736d\u5555\u6392\u8223\u8c8c\u6b67\u60a2\u781d\u920e\u642c\u4e43\u618e\u905b\u781a\u9b32\u915d\u9890\u9a9d\u9a75\u88f4\u9893\u6559\u7a7f\u95be\u7980\u718a\u664f\u7480\u7497\u61c8\u5eb6\u4eb3\u7478\u738b\u811e\u9e8b\u7440\u7ba7\u5f57\u6c86\u7307\u606a\u5454\u60ea\u8d28\u556d\u5441\u6d31\u92c8\u749f\u749c\u6b59\u5b93\u52a0\u5e9e\u54b1\u70c2\u5c31\u9877\u7cca\u5217\u661f\u3017\u55dc\u94fe\u9a7f\u86d0\u75c5\u567b\u6989\u5580\u5eb5\u8c73\u70cf\u61cb\u5929\u7f13\u9503\u71e5\u5b50\u82b0\u99c9\u5f59\u6902\u7d5b\u6094\u30b1\u6536\u9005\u9ed1\u67a3\u00f3\u9aee\u53d9\u8737\u6311\u94eb\u51c6\u9560K\u5ef7\u68a8\u5420\u6d2f\u0433\u8bbd\u6817\u7f79\u70d3\u8df5\u4e8b\u502d\u6985\u5cd7\u0391\uff11\u90ce\u5d0b\u5170\u6da4\u74e4\u8d76\u6d3b\u997f\u5928\u7075\u765e\u975e\u83dc\u7741\u977a\u5786\u9994\u810f\u5505\u7446\u73d1\u94b0\u6893\u8fc8\u59f9\u6410\u6363\u8c0d\u853c\u521d\u66e3\u7bad\u6682\u8085\u757f\u90a8\u8650\u666e\u8f86\u5106\u8a79\u83b1\u592d\u59ec\u92c9\u9b03\u631a\u7f8c^\u6137\u8102F\u5fe4\u5c0f\u6234\u66e7\u81f4\u94d6\u5d6c\u8e85\u8352\u5c5e\u53ef\u044d\u4e8c\u7b20\u68eb\u53f2\u76db\u8f91\u5824\u8238\u6248\u5c6f\uf9e1\u95f7\u8dcb\u5c81\u866b\u5be6\u8334\u7bf7\u6849\u9f8b\u84df\u6388\u72d7\u5fd9\u4e25\u8bbc\u30ac\u4f5a\u6e44\u513f\u8e29\u7950\u607b\u5e9c\u68d4\u8f60\u6fb3\u043c\u54f2\u8289\u626e\u00ed\u8424\u7599\u5544\u5d20\u73c8\u885e\u5326\u300a\u71ca\u82ae\u689d\u987c\u772d\u690d\u9cd4\u4ed7\u256d\u53d7\u903c\u7b95\u8f72\u33a1\u7540\u7adf\u69c7\u7aaa\u5cd1\u043b\u94a4\u4f57\u63a0\u6ce8\u8bba\uff5c\u5ee8\u64f7\u7eb2\u98ce\u9ab7\u8708\u60c5\u5ad4\u8881\u862d\u6e7e\u8392\u7901\u6df1\u5ce4\u6613\u523b\u6695\u540d\u5c2c\u89ce\u54aa\u80d6\u5efa\u79a7\u6064\u9185\u79bb\u85df\u9109\u611f\u6301\u82cf\u6690\u65e7\u8369\u737e\u56ef\u96c1\u8bd4\u7f31\u9196\u829c\u7992\u5bd8\u5091\u9cf3\u5e14\u57dd\u5055\u5768\u7691\u60e6\u5410\u53cb\u3068\u6e38\u7f26\u6059\u8c10\u582a\u79e9\u6e4d\u8282\u55b9\u545c\u5239\u57dc\u7cb2\u76ec\u94af\u9e67\u83bd\u9ccd\u80b4\u9530\u76e4\u50f3\u553e\u6083\u70fd\u044e\u956b\u798f\u9e36\u5f2b\u7ed5\u6177\u5be4\u68b0\u52a2\u7533\u4ebf\u6151\u71b5\u51ce\u76ce\u59ff\u68b3\u8cfd\u967d\u6beb\u822a\u59ca\u64cd\u50ad\u9884\u4e60\u5785\u676a\u5982\u6381\u78fb\u82d4\u8fd4\u7809\u946b\u8e4a\u5be1\u965d\u6d8c\u7856\u90dd\u97a8\u73b3\u6615\u8d2d\u59d7\u9875\u9646\u7617\u5a06\u7ee9\u63b7\u5ea7\u8c41\u8c2c\uff0d\u7503\u6ce0\u5f89\u9551\u611a\u576a\u64d5\u5238\u6a3d\u8106\u5fc2\u51cb\u77bb\u54c6\u6cf5\u9d3b\u88fe\u728a\u7720\u94ae\u65a5\u55e0\u8305\u96dd\u6609\u73a2\u5364\u7850\u9543\u8bde\u99ea\u5492\u6495\u73c5Z\u55a7\u82ca\u8e0c\u72b6\u948d\u5f2d\u5373\u6782\u305e\u5f70\u0440\u8941\u9265\u64a4\u5693\u915e\u94a5\u8239\u8f9f\u6700\u9676\u521b\u90ca\u9a6e\u820d\u5b69\u534a\u59c3\u89c9\u6ec4\u52c9\u041b\u7e3d\u6371\u8042\u6800\u901d\u5993\u4e9b\u8a55\u8fc7\u71d0\u565c\u7551\u923a\u7560\u7c4d\u94f3\u6c5e\u5e5b\u53f7\u9496\u9c9c\u8bb0\u5a62\u956a\u5854\u5e3d\u61a7\u8bb2\u5180\u9fa0\u6e90\u88d5\u96c0\u5742\u8c37\u9099\u668e\u68c2\u55dd\u88c1\u80be\u9178\u62e2\u937c\u6901\u7a0b-\u6016\u8c03\u4f01\u6f76\u7e23\u7b19\u6756\u7b28\u9cce\u62bd\u62f4\u530f\u7258\u7814\u0426\u6cf1\u6c27\u9a89\u8ff7\u6062\u988d\u9451\u6a84\u8bbf\u585c\u5ff1\u8556\u9e42\u9532\u7bb1\u728d\u9ce2\u6bc5\u9ed8\u6265\u797a\u7c40\u6798\u98de\u852c\u9cc3\u7838\u5471\u5f08\u5ca9\u5bf9\u73a6\u7d78\u55c5\u6d74\u63a2\u5c39\u8865\u5c51\u5632\u67ec\u94e9\u6a47\u7039\u8fce\u5077\u761f\u84d3\u67df\u9e1f\u901e\u4e93\u2019\u75ce\u9ccc\u5584\u9e22\u4ecb\u5acc\u7746\u6f97\u6728\u83cc\u90a1\u90ba\u868a\u9e2e\u6a0b\u917d\u9675\u6c13\u5a60\u5938\u948f\u7bc7\u6469\u6d77H\u60ec\u867b\u6813\u4421\u88d9\u585a\u84e4\u5bec\u800a\u90c4\u8389\u8766\u8043\u79fe\u9b3c\u6f5e\u88f8\u986f\u5481\u5273\u9052\u531c\u7518\u8111\u7e90\u55b7\u5747\u915a\u989e\u916e\u7f19\u539e\u8bc5\u7586\u964f\u686b\u6874\u9986\u5a05\u73e3\u9938\u5507\u6bb3\u8588\u6444\u5fb7\u58f3\u2018\u66e9\u6f4d\u795b\u2167\u5282\u68a2\u9756\u4e92\u4fa9\u6d3c\u62d4\u78cb\u5dfb\u7ef5\u9e6b\u655d\u7fc0\u82be\u59d3\u6454\u88d2\u4f65\u858f\u8427\u8d5a\u8ff4\u91bd\u748e\u62ab\u7600\u9190\u96f7\u7d6e\u79ec\u65ce\u6587\u82de\u5a84\u5858\u614c\u7efc\u6603\u94a2\u5e06\u835a\u52aa\u9ac4\u01ce\u770b\u5919\u5092\u70ad\u98a1\u87ba\u891b\u6966\u70af\u96e3\u8944\u6942\u4e0d\u6846\u6194\u8d3b\u8e6d\u73fd\u706b\u9649\u9022\u5e2d\u65a7\u8f67\u8c06\u69a7\u6da9\u9080\u90e7\u69ad\u94ad\u65fb\u8bc6\u56e0\u7fee\u78d9\u30ea\u5907\u5f8b\u6246\u5409\u69ae\u900c\u8382\u789a\u52fb\u9f10\u0417\u62d9\u6c3f\u8fc0\u50a9\u7ea0\u8358\u73be\u827d\u83aa\u674f\u5857\u6240\u9e5e\u91cb\u7562\u8de1\u5809\u67aa\u6ee2\u6a5a\u6b10\u7f02\u622c\u90f4\u8f9c\u500b\u706d\u977c\u592a\u6983\u5506\u5d06\u77a7\u5ffb\u783a\u6e05\u812b\u8411\u59b2\u4e5c\u756a\u5496\u60e8\u8b0c\u5706\u5567\u2013\u7b08\u88d4\u7afd\u9576\u5468\u4ff3\u5f52\u6d01\u6e21\u9739\u7374\u6f9c\u5892\u6c63\u51cf\u665f\u902f\u867a\u56de\u8de4\u8327\u7c0c\u9604\u6655\u8bf8\u69df\u76c2\u8c98\u51f0\u6e10\u9424\u94d9\u6025\u725f\u9e2a\u7f54\u0441\u54fd\u7c21\u53a2\u96b8!\u5d11\u5416\u53ae\u5bb8\u70e4\u96ce\u517b\u687e\u9ec3\u6da0\u6cea\u5d52\u5c4b\u7c15\u77bd\u5154\u57cf\u54cd\u5cef\u7d50\u5996\u5fe7\u9122\u201c\u788c\u30bb\u7ee7\u5145\u82eb\u91cf\u9b3b\u6610\u74a9\u7360\u536b\u652b\u795f\u56bc\u7ad68\u6d5a\u8a1a\u2570\u810d\u5bb3\u4e8e\u699b\u7548\u906d\u98d3\u873b\u6396\u9f8e\u7737\u3088\u2162\u5ce8\u57c3\u8695\u6dc7\u7834\u4ed6\u879f\u9a70\u94f8\u7726\u6021\u87d2\u6e16\u52c7\u53d4\u87575\u65b0\u7ef7\u60c6\u81fe\u4fc5\u6c83\u8429\u72b8\u9769\u6988\u952d\u77f3V\u4e0c\u5c71\u68e8\u78f7\u7c18\u8e1d\u7981\u7f09\u8401\u9cab\u678b\u5201\u4e5f\u5b6b\u73a1\u5524\u6f5c\u6fdf\u9e45\u5bff\uff55\u743c\u599f\u03a6\u57a2\u8dea\u9539\u7404\u5306\u4edd\u5a6b\u5df4\u8453\u5ad5\u70bb\u7264\u8fb0\u7147\u7f4d\u9057\u4f3d\u6cc5\u79d1\u534e\u2169\u5411\u67d8\u54ab\u8a5e\u7bac\u82e6\u55d2\u7428\u7248\u6b20\u8a8e\u80aa\u5d21\u62ff\u6742\u66d9\u5bf5\u8338\u7dad\u0420,\u535c\u9a85\u7350\u745e\u5200\u8c2d\u6c22\u514b\u9cb5\u5c04\u6df8\u9f39\u305d\u041f\u599e\u5f00\u5a9a\u81ec\u85b0\u53db\u6b49\u90b9\u83c2\u5bd2\u54fc\u2462\u78a7\u60ac\u4e1e\u8f3f\u6674\u51b4\u8d49\u88b7\u5782\u562f\u6e3dy\u831c\u4e70\u7521\u4fed\u8c2b\u836dI\u30eb\u5c18\u5810\u900d\u8b80\u7897\u6761\u6659\u68f1\u7d39\u65f8\u8333\u4a96\u5fd0\u89d2\u622a\u5f1b\u8003\u9984\u9ed0\u533e\u97ea\u83b3\u8c34\u62a4\u9759\u8015\u82ac`\u9c86\u59b8\u9079\u8c3f\u92d2\u9e2f\u8d61\u56d7\u5986\u5ba2\u7486\u88c2\u5a81\u6bcd\u7545\u5b9c\u95f1\u869c\uff03\u7f58\u5141\u79f8\u56fa\u8dda\u8346\u6ca1\u85dc\u7ee1\u7103\u6da7\u6e2f\u73ba\u5c7a\u9550\u552e\u685f\u951c\u6ea5\u5541\u5016\u53be\u739a\u94fc\u4ed4\u9898\u5256\u6f2f\u7bee\u7232\u9605\u5937\u576d\u6114\u8eac\u594f\u65cf\u9601\u54c7\u7287\u4e71\u6f13\u7410\u4eea\u679c\u6f2b\u5c91\u4e00\u58f5\u7fc3\u752d\u694a\u751a\uff4e\u30fc\u3093\u4ea4\u8d8b\u5fd2\u7ead\u9688\u9000\u7efb\u6d89\u6861\u6b77\u6d2e\u4eb2\u6eaf\u8bb4\u4ffe\u632a\u5728\u6127\u5d47\u8e35\u7f2e\u773c\u8425\u9e55\u622e\u575a\u9119\u8c27\u9c91\u7895\u68c9\u55f2\u6263\u61f5\u692a\u8ba3\u6005\u83d8\u606f\u77ad\u6654\u4f6c\u8fbb\u8fe6\u5790\u6124\u7763\u7ea4\u8335\u4fda\u8c47\u65f5_\u5a90\u5450\u2464\u9088\u6294\u6e20\u7ffb\u8340\u5b5b\u9497\u800c\u6cc4\u6e5f\u5f11\u6d2a\u6088\uff33\u9af9\u86c6\u7a3d\u8c12\u5c17\u8451\u9ca4\u7f08\u5e01\u788e\u5589\u9f91\u968e\u83a4\u6a21\u5940\u5784\u4ecd\u912d\u827f\u6c9f\u988b\u66f7\u5cd2\u7cbe\u953a\u8a71\u6635\u9997\u2460\u525c\u737b\u4e36\u7554\u9499\u56cd\u731c\u8ff0\u62df\u5374\u5230\u52a1\u73ca\u8249\u9d7a\u878d\u7efd\u5a59\u6258\u610f\u5bf3\u90b0\u5a9b\u772f\u5636\u9050\u30cb\u958b\u5185\u89cb\u6284\u256f\u7b2c\u69cc\u672d\u71c9\u578c\u6001\u4f69\u7b67\u6844\u8ba4\u663c\u83cf\u5e27\u796d\u65b2\u65e6\u6ec2\u583e\u75f0\u971cW\u8f6d\u5144\u8707\u5f65\u6d66\u9170\u58d5\u9aa5\u88e4\u4fde\u8774\u5e96\u67ef\u8e44\u6109\u6d17\u74d8\u50a3\u6296\u8605\u75d2\u5100\u8046\u5ffe\u6b21\u8f88\u5fb5\u778c\u6666\u85d0\u0442\u7099\u81fc\u6e0c\u53d6\u611b\u5999\u8f8b\u77aa\u9a78\u9ad8\u5a96\u9e6e\u7684\u961f\u5ac9\u5f9e\u4ed9\u5d8b\u7109\u740e\u95fb\u7131\u7cb9\u6934\u6c6d\u62fd\u71a4\u74d2\u9daf\u9e37\u824b\u5f0f\u4f73\u8d3e\u9e6c\u8be2\u593c\u5ab4\u94ee\u5a7a\u4e50\u9cd9\u7406\u7b0f\u69ce\u4ed1\u5708\u6b6a\u82ce\u5ed9\u4f3a\u8a04\u953d\u7eb3\u7ecd\u6e17\u725b\u7525\u8651\u500d\u9091\u6627\u6d91\u72af\u8840\u574a\u5e87\u6750\u54e9\u7ef6\u4f09\u5578\u9e93\u4fdf\u8283\u8fc1\u901b\u793d\u5e62\u79cd\u54d1\u8a13\u82a8\u990a\u8bdd\u78b2\u5f35\u843c\u8bcd\u7511\u641c\u902e\u8523\u550f\u84e3\u918a\u3013\u6548\u859b\u6749\u5319\u6389\u828e\u9b41\u9acb\u84ff\u6d19\u710a\u5a75\u94dc\u7eb0\u62bc\u839e\u6e23\u5c48\u5370\u525b\u5897\u0411\u8eb2\u613b\u676d\u5229\u6c24\u9694\u6e5c\u6f46\u7d5c\u8703\u6a71\u612b\u8906\u962e\u5c9c\u8235\u7973\u7117\u8dd1\u7e82\u84ea\u884c\u8564\u4fb5\u5b3f\u88f1\u809f\u705e\u5bfc\u963e\u8d1f\u77fd\u2500\u50c6\u518a\u74a8\u507f\u4e45\u6a28\u576f\u801c\u960e\u59d1\u579f\u8f71\u75db\u7f28\u8c32\u639f\u4f8d\u5951\u62a0\u5d19\u7ae3\u87d1\u6ede\u82fe\u6577\u8bad\u5bac\u6014\u2161\u5704\u7f1f\u5d43\u9a8b\u30ca\u8bc2\u6dcf\u5bee\u5fbd\u9028\u8ce2\u6bde\u8abe\u7f9f\u85e9\u72e1\u96e0\u7cbcx\u7b2b\u7c3f\u5531\u6bb5\u6a2b\u727a\u0421\u69c5\u5821\u7816\u51ef\u7a77\u7b4f\u8914\u591fe\u5976\u723e\u96f3\u6a01\u77e3\u513c\u5167\u9006\u8e48\u5880\u9c8c\u5ccf\u8bd8\u9e4a\u708e\u96b4\u8638\u5382\u9557\u5987\u8bef\u754f\u78a5\u5777\u6973\u955b\u5b59\u9955\u304b\u7f1c\u84ba\u5cac\u8426\u768b\u54e6\u88fc\u7c51\u77de\u6c0f\u55b0\u5bf0\u95a3\u9cb9\u5575\u9f13\u5730\u94fa\u508e\u5c14\u67d3\u8247\u501f\u5ad2\u9cb2\u6cfc\u9298\u6251\u7eef\u6d2b\u86a9\u63e3\u6e1d\u6c72\u79ba\u86db\u523f\u660f\u03b2\u9854\u7a9d\u5ce5\u51e1\u99bc\u4fdc\u918b\u7468\u59e3\u5bb6\u86ca\u304d\u60b2\u9730\u95eb\u5949\u67e2\u4fee\u8a22\u4ec9\u7ed4\u7011\u5ae6\u76d0\u5149\u583a\u7b73\u808c\u7ec0\u8545\u7ba1\u7a3b\u745c\u72e9\u968b\u6019\u6342\u6924\u8725\u9149\u9733\u5c27\u88c6\u6b2c\u9277\u5e02\u5f05\u58ee\u704c\u70dc\u54a6\u836f\u59c8\u5323\u80ae\u97d3\u6a39\u8084\u86a3\u9615\u7463\u67c8\u9a0b\u5433\u7576\u5941\u822b\u9ae6\u9cd7\u6309\u7089\u03c6\u5486\u52d0\u548b\u6ee1\u680f\u9999\u5904\u4ff8\u7db8\u5b3e\u67e5\u73cf\u8306\u9607\u8d35\u65ad\u5e7a\u62c7p\u8517\u2248\u731b\u6b47\u7f1a\u50bb\u55bd\u8d5c\u5458\u9e35\u66e6\u53aa\u6295\u53e5\u80f0\u30c7\u571f\u6f2a\u96f2\u7ee5\u4e13\u767d\u72c8\u30b2\u7329\u8bb6\u5c38\u5300\u921e\u6689\u62c9\u7f01\u5beb\u659f\u7c6f]\u8083\u7dae\u9b1f\u745d\u5e0c\u00e8\u5de7\u696e\u7fb0\u043f\u7a46\u5f18\u6ced\u4fcd\u5b81\u79e7\u5bdf\u55d4\u83c7\u8be9\u8301\u81ed\u6a2f\u58f6\u66b9\u8c5a\u5e44\u65f2\u68fe\u80bd\u00ef\u73cd\u6ca9\u90f8\u9a8e\u79fb\u7538\u8fe4\u950b\u7aed\u9972\u6623\u9486\u7ebb\u952e\u67a2\u6fec\u6dcb\u766b\u5fcf\uff3f\uff26\u8fed\u64b8\u535f\u74b0\u566d\u4fc4\u5815\u607c\u852d\u5f0c\u86f0\u6c1a\u8fbf\u7434\u4f5f\u809c\u7b91\u8f9e\u71d4\uff19\u9650\u672a\u6316\u62e9\u5b70\u7c1f\u9566\u6f53\u6b63\u8004\u837b\u82e1\u871c\u781c\u66fa\u5ddd\u996e\u83c1\u8597\u621b\u4e39\u84b9\u64d2\u6f09\u4401\u7fe0\u5fc9\u62a2\u997c\u540a\u5ae3\u5f53\u7b03\u7a17\u6814\u83ea\u6c0d\u59a4\u63b3\u919b\u2163\u73e2\u8bed\u4ea8\u9b45\u6fe4\u775a\u9488\u8587\u91dc\u3044\u2481\u58f8\u8300\u9016\u4f7a\u54e5\u69d1\u5475Q\u828b\u4f84\u042d\u53ec\u6984\u677e\u7d3a\u8d4c\u8723\u4f17o\u9562\u6e86\u82a9\u6a58\u6f6d\u9e26\u6216\u70ac\u7c7e\u8594\u596d\u7481\u86aa\u82a5\u53e2\u7eb1\u683e\u6a3e\u9f50\u6b8a\u5f4a\u592e\u769e\u6df9\u99f0\u6f8d\u8f94\u7301\u2014\u5ea0\u9e29\u9bb0#\u8611\u91b4\u25cb\u7bcc\u8dc2\u95f9\u8fa6\u65c5\u81e7\u747e\u7cb3\u88c5\u5ba1\u5c4f\u8d5f\u307f\u03c0\u8584\u68af\u8859\u7156\u6f5f\u5b51\u8e66\u8c1f\u5807\u58f9\u55d6\u6c11\u609f\u7f20\u6c57\u6ee4\u5a67\u9520\u6db8\u81e3\u5676\u54d3\u914d\u2022\u520e\u9aa8\u6e72\u698e\u711e\u7ef8\u6c5b\u8e51\u9045\u707e\u5466\u9f9b\u65c2\u5c01\u5076\u8748\u5ee3\u567c\u6445\u51f3\u8231\u793a\u6170\u83b9\u74a0\u5bab\u90d7\u7618\u9026\u7898\u8c30\u5fcd\u63cf\u6768\u7919\u4eeb\u7316\uff12\u696b\u748b\u9d84\u6069\u804c\u9c8e\u52df\u901a\u66a8\u52f0\u7292\u8de8\u95b9\u671d\u6c10\u5803\u9a73\u9774\u935c\u00b7\u6ccc\u6628\u54a3\u0410\u6324\u9a7d\u838a\u51b0\u4e54\u53e6\u5751\u6e0a\u75c9\u9aa7\u6a02\u5e2b\u63fd\u9a81\u9609\u5178\u60bc\u64d8\u6b87\u88c0\u5026\u9efc\u98a0\u8981\u8dc3\u70d4\u5770\u5269\u7b54\u308a\u759f\u7cef\u71af\u9568\u5c4a\u60cb\uff25\u6d9e\u7827\u9a9e\u8bae\u5065\u7eaa\u8dde\u7ea7\u9244\u9c88\u6302\u9a7c\u4e48\u6125\u67f0S\u5826\u726f\u7b6e\u51e4\u776a\u6c64\u70f9\u641e\u5eec\u95f2\u9760\u85b3\u68e3\u94c3\u6c38\u6636\u7b15\u91c6\u53a5\u5ba7\u91ae\u71ce\u7983\u5dfe\u4ea2\u8f69\u54c8\u97e7\u6199\u55b5\u5237\u88d8\u96a3\u7430\u5fcc\u6b4c\u5624\u7256\u76e3\u9f94\u8868\u56fd\u529e\u7be6\u0414\u8ddb\u627f\u91ea\u898b\u6d5c\u5350\u9492\u6168\u587e\u8f95\u89d0\u82c7\u8087\u4e01\u9b44\u6760\u820a\u916a\u5242\u6bfd\u5e42\u6e56\u733e\u5561\u4fcf\u86c9\u82e5J\u5f17\u4f15\u8428\u64e2\u7c7c\u9e61\u6f7e\u6d33\u5b9d\u6f06\u53bb\u675f\u96fb\u7fa7\u53d8\u6332\u75b5\u5a5a\u8bda\u7530\u900b\u7aba\u6320\u6ed5\u5e84\u94f5\u8f7a\u89b3\u6e81\u5240\u9523\u70b3\u7a88\u6222\u6cfe\u535e\u6165\u5d16\u58c1\u758d\u5121\u5533\u634d\u697c\u8767\u88f3\u6d9f\u996c\u6d45\u54b2\u57ee\u9d6c\u7bdd\u7695\u7c91\u94b5\u81ea\u742d\u6b83\u8dbe\u79d2\u8169\u90e8\u7467\u767c\u577c\u9502\u8893\uff1a\u95e8\u6280\u65fc\u80fa\u988c\ufe5d\u5f88G\u5fd10\u532f\u30cd\u9ef4\u8fc4\u868c\u541b\u7ad1\u88ab\u670b\u59de\u53f9\u5d4b\u5e3c\u4e0a\u54ce\u70ef\u80dc\u79c3\u606d\u7ed1\u951e\u8cea\u575b\u67d1\u9009\u69d5\u6cfd\u88f9\u9f20\u8fe2\u747d\u7149\u7f42\u75e4\u6c87\u93e1\u7852\u6cad\u7634\u5979\u9577\u819c\u8d20\u0451\u8413\u7c0f\u9aef\u4fa8\u8b49\u7abc\u954a\u7c64\u74ff\u9879\u76ee\u7fd4\u6298\u5889\u9918\u74cc\u5d29\u85e5\u5014\u042e\u5aba\u8539\u662d\u6dc4\u85d3\u8f85\u7f61\u30b7\u52cb\u4fa0\u8dd6\u777f\u8715\u9988\u5587\u6d65\u7cae\u5421\u9608\u7f69\u8bd1\u5bc2\u9cad\u7ee3\u51bc\u67b8\u7d2b\u9773\u81a8\u7fdb\u6cef\u5009\u6ce2\u5a36\u8a9e\u5f02\u6562\u7d9c\u53bf\u5a76\u5b97\u5b89\u5733\u8fde\u84bf\u7247\u539f\u6c41\u6307\u5ba6\u78c1\u73e5\u839c\u6f4b\u6115\u9340\u60d8\u9a7b\u88fd\u9ecd\u7947\u8886\u7605\u53f1\u6fee\u832f\u79f0\u8baa\u69e9\u5763\u7238\u7b4c\u6d63\u539d\u89de\u55f7\u6e73\u6c74\u6073\u95ee\u6864\u837c\u7792\u81b4\u4e10\u5dcd\u6b66\u5bc5\u9e3e\u5f31\u5b8d\u6db2u\u00b1\u6be1\u504c\u77e9\u60b0\u8f6f\u8e41\u795c\u87c0\u531d\u7e64\u998f\u8568\u94cb\u7e46\u8e70\u5f1f\u8244\u6bef\u8d6b\u7bd3\u7b7e\u5703\u7977\u80a4\u60fa\u9f7f\u79a2\u9881\u7c27\u9ad3\u77ee\u8088\u4e15\u4f42\u53eb\u5ccb\u6155\u6edf\u6832\u7ed9\u937e\u3007\u7ff3\u8f7c\u82f9\u8236\u6d3a\u4f5c\u52fa\u9860\u56ff\u53d1\u52f5\u94aa\u7985\u746c\u9654\u952f\u6905\u6e89\u80a9\u30bf\u7fec\u9525\u80cc\u731d\u5a07\u8537\u6176\u5f03\u821c\u5662\u76f8\u4ea7\u62ed\u6d4a\u66dd\u7495\u6cb1\u96ef\u854d\u8dcc\u6789\u5a33\u7ebd\u79ef\u6d3d\u6811\u8354\u94b2\u7266R\u8aa9\u5e23\u5203\u6d5b\u5bd4\u6387\u745a\u7f15\u7f04\u74e3\u305f\u61b7\u7459\u8c82\u6834\u902d\u534f\u7572\u6dc6\u9e49\u5a40\u8d31\u8360\u5261\u6d8f\u5a32\u6e0e\u4e86\u4e24\u9631\u6cf7\u5bfe\u9efe\u948b\u7fe1\u90c3\u6113\u9990\u7619\u6e29\u52d1\u73e7\u5b05\u0392\u6e68\u674c\u7076\u8561\u6dbf\u7afa\u59a5\u54fa\u6e3c\u7fca\u5352\u7b06\u6dd1\u594b\u7b56\u03a3\u8c14\u9b47\u8efe\u7e16\u6f2d\u56e2\u517d\u9699\u67d0\u672b\u63e1\u6735\u73ae\u91ce\u9214\u94ed\u64da\u6c1b\u57df\u590d\u4e30\u00e1\u66a4\u5455\u783b\u4e07\u6fe0\u6026\u98d5\u6ca2\u9540\u984c\u917f\u8e2f\u6c9a\u8d2b\u6b48\u30a8\u51c4\u5b5a\u6bf3\u90ae\u679a\u6112\u221e\u9481\u590f\u3014\u8bf6\u73a9\u9751\u4e11\u573b\u7a5f\u7f05\u63bc\u7f8e\u9327\u7526\u9602\u9b49\u98d8\u5053\u7f55\u60e0\u963b\u821b\u5764\u8d6f\u7db5\u5022\u5a2c\u543c\u908a\u885b\u6345\u5fc6\u5c9b\u5462\u9062\u5967\u9e73\u66f4\u8d24\u74f7\uff05\u9511\u8c36\u9713\u5197\u8fdd\u793c\u5f6b\u7c74\u7ff1\u53e3\u75d6\u8c0a\u98d6\u799b\u86f9\u5ef6\u82d2\u7add\u7116\u4f48\u9192\u504f\u0428\u5107\u6ee9\u9563\u75a3\u51fa\u8815\u7eeb\u6f8e\u57da\u94f2\u6ea7\u5ffd\u8570\u4f1e\u9b43\u82b9\u5960\u6dfb\u6677\u0439\u5522\u73f2\u66fc\u739f\u964d\u7d31\u8438\u806a\u0427\u664c\u62ba\u81c6\u6e9f\u6e11\u90d0\u526f\u5187\u8d1d\u68ad\u867e\u7e41\u7ed3\u891d\u5384\u5dc5\u598f\u80f1\u5227\u72f8\u6866\u752c\u7bab\u63d0\u4edf\u4e5e\u6d11\u6740\u9824\u7738\u6a2a\u5c24\u5f3c\u8d1b\u8d9f\u8653\u6dd6\u782d\u67f4\u7978\u76fa\u5927\u6a13\u6aa9\u954c\u51ca\u7454\u53a6\u9021\u7f24\u8b72\u552f\u7bf1\u7f18\u6770\u5f92\u5d99\u5390\u5284\u30a9\u8c61\u82bd\u7c9f\u8bb9\u57ab\u70fa\u8ba1\u52b3\u515a\u8019\u7eee\u84aa\u667e\u708d\u75bc\u54c4\u8e87\u4e1b\u82e7\u5dfd\u805d\u7a49\u60f0\u51bb\u6e5b\u5036\u68fa\u636d\u6f58\u6078\u5581\u8adf\u9985\u66f9\u665a\u67dc\u5a1a\u72b0\u985c\u90c7\u72e0\u82dc\u4ef5\u7575\u637b\u6649\u5ce3\u5761\u59ae\u9719\u7efe\u5530\u8beb\u5439\u6d0c\u5de9\u79d8\u6daa\u5457\u5669\u4fe4\u4ff1\u57c2\u978d\u58fa\u9591\u521a\u5ba0\u7b5a\u8921\u8378\u67ac\u8299\u9701\u745f\u84a7\u512a\u5c19\u7ea3\u5eea\u7d76\u8b6c\u8e72\u03b1\u5cea\u6633\u8304\u5efb\u9123\u5b85\u5357\u5fae\u7439\u540f\u89da\u4f91\u6c14\uffe5\u8548\u5d03\u9082\u5b98\u94d0\u8c18\u762b\u5c3e\u83e9\u90b5\u626f\u201d\u535a\u8fe9\u5570\u518c\u866c\u8c0ed\u7483\u69f2\u8317\u7a81\u7eac\u92c6\u56e4\u8bff\u4e1c\u54d2\u53f0\u7956\u9a79\u8763\u6656\u9610\u7469\u6869\u9093\u4fe9\u77ab\u6d51\u53fd\u849c\u542c\u65bd\u5043\u7b11\u5965\u8072\u8e4b\u5b63\u94e0\u6de6\u4e7e\u9f0e\u6e51\u68fd\u8c4c\u74ef\u6d1b\u75eb\u85ff\uff2c\u7f81\u7513\u933e\u9c9a\u715f\u8fd9\u9ddf\u63d2\u989d\u94ea\u6566\u8d30\u98d4\u5984\u5464\u6fa7\u8a89\u7085\u5ef8\u4f5b\u9644\u5998\u6cd6\u94e8\u5d31\u860b\u665b\u76b1\u50e1\u6bd2\u6549\u4e16\u5868\u8deb\u8702\u5c41\u4ec7\u7fa1\u54da\u4f9d\u732e\u841c\u654c\u85cf\u639e\u6167\u7b4d\u5d02\u9ecf\u6f7a\u5e7b\u5225\u9928\u7ec4\u5a1e\u8c08\u7ebf\u61be\u595c\u94a3\u9708\u4e89\u7150\u6c85\u7aa0\u8c1b\u63ea\u524d\u6df3\u5c22\u9a22\u5289\u73ab\u595d\u86f1\u6829\u63c9\u7e22\u825f\u4e94\u526a\u692d\u8107\u78b4\u530d\u5041\u69a6\u58a1\u8343\u90af\u864e\u970d\u5bfa\u649eE\u51a4\u64c0\u5eab\u7120\uff45\u96bd\u5abe\u80c6\u86c0\u82db\u9e88\u7f51\u9770\u2477\u8d3c\u600f\u59fb\u6293\u67c4\u90b6\u90fd\u53ca\u6e9c\u7eb6\u59fd\u6a97\u865e\u81dd\u6805\u708a\ufa11\u5a04\u95ef\u6276\u2465\u6822\u592b\u711c\u9670\u607d\u7682\u557c\u90db\u7fce\u9097\u61c2\u84fc\u7791\u98a4\u76f1\u8fb2\u8f2a\u9504\u8404\u4f0b\u6c9b\u6840\u62fc\u5c60\u7579\u25cf\u6850\u8eab\u5fd7\u884d\u6487\u9686\u80f3\u041c\u563b\u9eef\u9cfa\u6731\u9570\u5d69\u9b6f\u64bc\u821f\u7bb4\u7626\u7f14\u9573\u9606\u5308\u4ee8\u5ae9\u8e8f\u7601\u5bd3\u6ed8\u7a39\u9e43\u742e\u752a\u53df\u3046\u0445\u4ec1\u57a6\u9163\u6554\u30ba\u6f82\u806fs\u686a\u9f61\u9cdd\u614a\u57f4\u6969\u96cc\u7f3a\u7fcf\u8be0\u6557\u9e2b\u6d54\u51af\u5b83\u69b7\u50e9\u044f\u6361\u6308\u8c50\u97ad\u4ea5\u6d41\u7840\u8207\u5e8a\u6b62\u8c1a\u815a\u7b49\u5ac4\u5b5c\u7ef3\u6cbe\u8165\u95c7\u951a\u5520\u6b7b\u6e15\u6d53\u9509\u549b\u7237M\u568f\u5351\u7f21\u52d2\u5085\u8d63\u5c98\u8f83\u98db\u0423\u9a11\u6c56\u00b0\u96c9\u97e9\u8364\u646d\u502a\u7a76\u6709\u98cf\u8461\u7f86\u90b3\u778e\u5112\u520d\u6a90\u83c5\u7119\u5586\u76b4\u6bd5\u62ac\u9554\u5792\u5355\u9753\u6c61\u7a40\u61ac\u7949\u7ea2\u8fdc\u73de\u53e9\u7889u200e\u4e34;\u9965\u8d45\u9e64\u6a9e\u86a8\u97dc\u81d9\u66bb\u66aeu2005\u90e4\u94a0\u54ff\u7080\u4eba\u8308\u79e3\u830f\u5598\u6da6\u5f7c\u7262\u7ae9\u95f0\u83ef\u0415\u6799\u876e\u7ae0\u732b\u600e\u8011\u6bcb\u5349\u620c\u4f1f\u857b\u73d9\u94f1\u504a\u6b93\u9a95\u547b\u9a6f\u8d32\u63f4\u84af\u5de6\u8627\u82ab\u50e7\u4f58\u7fe5\u62f7\u9cd6\uff01\u6ca4X\u5c97\u30d6\u748d\u30ef\u9690\u8e1e\u6d8e\u544c\u5faf\u5c09\u54af\u5ac2\u62bb\u8151\u5e79\u8662\u54d7\u4f55\u7845\u5bc6\u665e\u0446\u8446\u5fd6\u52f3\u589e\u4f4d\u4f2a\u77f6\u8882\u6a59\u9068\u7c65\u6fef\u6df5\u77fe\u557e\u5151\u855e\u4e18\u97ec\u5bb5\u4f22\u4fe8\u9cd5\u6776\u64ac\u536f\u956c\u787c\u6d4f\u649a\u51f6\u5361\u8154\u7812\u86fe\u5cb5\u3048\u7891\u9b2f\u76d8\u677f\u8682\u67e9\u9f9a\u51ae}\u9127\u601c\u955f\u95f3\u508b\u987e\u7591\u5a08\u82c1\u62b5\u6478\u548e\u5426\u95ff\u8c20\u7fda\u5406\u73c9\u6cf0\u6ed4\u8232\u77eb\u73d6\u73ee\u8c94\u6fc9\u9ebe\u732a\u503e\u996d\u680e\u7cd9\u5729\u60d1\u76d2\u8563\u8025\u6e6f\u64ce\u4f88\u7f00\u7239\u7bc0\u52a4\u6a35\u8037\u56a3\u4ff5\u0447\u6bc1\u4e42\u56e1\u931f\u6379\u8fdb\u7a7a\u8e40\u7cd7\u574d\u55d3\u7172\u93e6\u79dd\u6206\u5954\u886c\u03be\u8e22\u840b\u906f\u8fc2\u7ce8\u6101\u90c5\u2260\u5310\u9537\u7d7d\u6c70\u5948\u8df3\u9698\u7ec3\u30b9\u88a4\u517c\u9054\u9332\u9f4a\u919c\u785d\u6837\u810a\u52d6\u65cc\u5fe1\u4ef2\u7be1\u9cb3\u7b1b\u8dbc\u8d29A\u6773\u9171\u79aa\u8d07\u952c\u9b42\u94e1\u8d2e\u72f7\u306d\u50f5a\u8f17\ufe52\u6428\u6863\u4ee4\u8017\u8a4e\u5372\u8f89\u5fb4\u9e9d\u9910\u8150\u5019\u9e63\u5a23\u5b1d\u5320\u7ebe\u75d8\u5e72\u8098\u50ed\u69f1\u5de8\u6491\u804b\u8018\u7a23\u6a8f\u8c1c\u688f\u55a6\u532a\u70db\u9867\u840d\u775b\u633d\u7eba\u59be\u5934\u6055\u6a79\u5916\u03a0\u4f34\u6c29\u7567\u6d75\u6267\uf92c\u751c\u91d0\u7ae6\u586c\u5049\u8821\u6b46\u9818\uff22\u5cc4\u659b\u73af\u4e3d\u5c3d\u94cd\u4f30\u813e\u5db7\u68b5\u7a74\u829d\u55ef\u7ca6\u86e4\u70bc\u874c\u602b\u7ce6\u6328\u6631\u5156\u695d\u6ecc\u6f66\u80af\u65af\u5b99\u7fb2\u5e7f\u68cb\u88aa\u56f4\u6d10\u9053\u7656\u6c90\u9afb\u89c8\u6c7e\u4fca\u8f7d\u7b46\u6715\u659c\u817e\u8aac\u6401\u853d\u5e1a\u30c3\u90ac\u6667\u57e0\u8ffa\u55df\u96fe\u7a97\u6538\u67a1\u83d3\u5618\u544a\u82b3\u62dc\u95ea\u97e1\u6c60\u60a8\u8410\u8574\u8c21\u8026\u6221\u8c6a\u7881\u6a80\u63ac\u705d\u69b4\u6bc2\u667a\u5e26\u7b8ef\u6862\u6002\u7c73\u30ce\u5140\u6339\u718f\u707c\u8db5\u9981\u8bf9\u7965\u96f6\u5e37\u7eab\u6ca6\u7d0a\u4e0b\u55e1\u9510\u80b2\u5188\u9e32\u9a7e\u4fc6\u8188\u543b\u96d5\u70df\u7f2b\u6691\u6dd9\u8153\u536e\u913aO\u61d2\u8d2f\u50fb\u0432\u608d\u67de\u8a0f\u84dd\u5f2c\u5c13\u9241\u60f4u3000\u8328\u789b\u5de2\u61a9\u790c\u59f5\u5eb7\u693d\u754c\uff56\u4f18\u6237\u81cc\u5484\u6753\u74dc\u96c7\u02d9\uff3c\u91c9\u8ffb\u83eb\u752f\u92d0\u9ed4\u5b64\u8e7f\u2219\u7aa6\u81c0\u65e9\u8d39\u5c05\u9697\u5aab\u781f\u8dfb\u8ddd\u6c2f\u9e4f\u807f\u8c55\u608c\u9ee0\u8385\u8e0a\u7078\u6a1f\u5267\u6570\u6195\u90d9\u6162\u51b2\u7f12\u94bf\u7130\u7424\u6ba1\u6f7c\u75af\u56ca\u5e15\u5f7b\u6ca8\u7eb9\u5bd0\u5d5a\u516d\u5c4c\u8721\u8351\u6312\u96b1\u96e9\u6767\u5ca1\u5e61\u220f\u7b85\u55ea\u5b56\u7ec2\u582e\u8350\u66dc\u6413\u7c03\u5d24\u7490\u8711\u5538\u8884\u5992\u5740\u58c7\u8bbe\u846b\u6ec1\u7699\u6d48\u7a14\u6795\u77b0\u7531\u685c\u75b2\u5edf\u53a9\u7b25\u5025\u91ab\u965b\u785a\u7fd5", "created": "2021-09-05 08:25:23", "language": null, "type": "User", "username": "Dujltqzv", "stars": 1212, "forks": 329, "subscribers": 26, "open_issues": 7, "topics": []}, {"id": 33141430, "repo_name": "scikit-neuralnetwork", "full_name": "aigamedev/scikit-neuralnetwork", "description": "Deep neural networks without the learning cliff! Classifiers and regressors compatible with scikit-learn.", "created": "2015-03-30 18:50:27", "language": "Python", "type": "Organization", "username": "aigamedev", "stars": 1197, "forks": 230, "subscribers": 75, "open_issues": 51, "topics": []}, {"id": 81703646, "repo_name": "MachineLearningStocks", "full_name": "robertmartin8/MachineLearningStocks", "description": "Using python and scikit-learn to make stock predictions", "created": "2017-02-12 04:50:44", "language": "Python", "type": "User", "username": "robertmartin8", "stars": 1161, "forks": 414, "subscribers": 115, "open_issues": 8, "topics": ["stock-prediction", "machine-learning", "scikit-learn", "python", "yahoo-finance", "stock", "historical-stock-fundamentals", "quantitative-finance", "algorithmic-trading", "trading", "sklearn", "tutorial", "guide", "data-science", "stock-prices"]}, {"id": 318258852, "repo_name": "traingenerator", "full_name": "jrieke/traingenerator", "description": "\ud83e\uddd9 A web app to generate template code for machine learning", "created": "2020-12-03 16:47:16", "language": "Python", "type": "User", "username": "jrieke", "stars": 1153, "forks": 165, "subscribers": 37, "open_issues": 13, "topics": ["machine-learning", "deep-learning", "template", "website", "webapp", "streamlit", "pytorch", "scikit-learn", "sklearn", "tensorflow", "pytorch-ignite", "machine-learning-tutorials", "pytorch-lightning"]}, {"id": 61755318, "repo_name": "sklearn-porter", "full_name": "nok/sklearn-porter", "description": "Transpile trained scikit-learn estimators to C, Java, JavaScript and others.", "created": "2016-06-22 22:21:34", "language": "Python", "type": "User", "username": "nok", "stars": 1122, "forks": 155, "subscribers": 35, "open_issues": 47, "topics": ["machine-learning", "data-science", "scikit-learn", "sklearn"]}, {"id": 25257051, "repo_name": "sparkit-learn", "full_name": "lensacom/sparkit-learn", "description": "PySpark + Scikit-learn = Sparkit-learn", "created": "2014-10-15 14:01:10", "language": "Python", "type": "Organization", "username": "lensacom", "stars": 1119, "forks": 248, "subscribers": 90, "open_issues": 35, "topics": ["scikit-learn", "apache-spark", "machine-learning", "distributed-computing", "python"]}, {"id": 32899829, "repo_name": "gplearn", "full_name": "trevorstephens/gplearn", "description": "Genetic Programming in Python, with a scikit-learn inspired API", "created": "2015-03-26 01:01:14", "language": "Python", "type": "User", "username": "trevorstephens", "stars": 1099, "forks": 192, "subscribers": 51, "open_issues": 49, "topics": ["genetic-programming", "machine-learning", "python", "scikit-learn", "symbolic-regression"]}, {"id": 225165015, "repo_name": "projectlearn-project-based-learning", "full_name": "Xtremilicious/projectlearn-project-based-learning", "description": "A curated list of project tutorials for project-based learning.", "created": "2019-12-01 13:20:52", "language": "JavaScript", "type": "User", "username": "Xtremilicious", "stars": 1078, "forks": 114, "subscribers": 16, "open_issues": 10, "topics": ["project-based-learning", "web-development", "game-development", "mobile-development", "artificial-intelligence", "machine-learning", "learning-by-doing", "tutorials", "projects", "react", "vue", "python", "tensorflow", "scikit-learn", "flutter", "unity"]}, {"id": 41820544, "repo_name": "spark-sklearn", "full_name": "databricks/spark-sklearn", "description": "(Deprecated) Scikit-learn integration package for Apache Spark", "created": "2015-09-02 18:44:51", "language": "Python", "type": "Organization", "username": "databricks", "stars": 1066, "forks": 233, "subscribers": 89, "open_issues": 15, "topics": ["apache-spark", "scikit-learn", "grid-search", "parameter-tuning", "machine-learning"]}, {"id": 11815672, "repo_name": "kmodes", "full_name": "nicodv/kmodes", "description": "Python implementations of the k-modes and k-prototypes clustering algorithms, for clustering categorical data", "created": "2013-08-01 11:54:40", "language": "Python", "type": "User", "username": "nicodv", "stars": 971, "forks": 365, "subscribers": 54, "open_issues": 17, "topics": ["python", "clustering-algorithm", "k-modes", "k-prototypes", "scikit-learn"]}, {"id": 123592053, "repo_name": "Machine-Learning-with-Python", "full_name": "devAmoghS/Machine-Learning-with-Python", "description": "Small scale machine learning projects to understand the core concepts . Give a Star \ud83c\udf1fIf it helps you. BONUS: Interview Bank coming up..!", "created": "2018-03-02 14:54:11", "language": "Python", "type": "User", "username": "devAmoghS", "stars": 962, "forks": 169, "subscribers": 43, "open_issues": 1, "topics": ["machine-learning", "python", "exercises", "practice-project", "beginner-friendly", "scikit-learn", "deep-learning", "python-3", "data-science"]}, {"id": 6819325, "repo_name": "nolearn", "full_name": "dnouri/nolearn", "description": "Combines the ease of use of scikit-learn with the power of Theano/Lasagne", "created": "2012-11-22 21:41:47", "language": "Python", "type": "User", "username": "dnouri", "stars": 944, "forks": 273, "subscribers": 54, "open_issues": 41, "topics": ["scikit-learn", "lasagne", "deep-learning", "machine-learning"]}, {"id": 266866079, "repo_name": "Otto", "full_name": "KartikChugh/Otto", "description": "Otto makes machine learning an intuitive, natural language experience. \ud83c\udfc6  Facebook AI Hackathon winner \u2b50\ufe0f #1 Trending on MadeWithML.com \u2b50\ufe0f #4 Trending JavaScript Project on GitHub \u2b50\ufe0f #15 Trending (All Languages) on GitHub", "created": "2020-05-25 19:42:57", "language": "JavaScript", "type": "User", "username": "KartikChugh", "stars": 912, "forks": 66, "subscribers": 26, "open_issues": 8, "topics": ["machine-learning", "automl", "natural-language-understanding", "chat-application", "deep-learning", "python", "scikit-learn", "keras-tensorflow", "artificial-intelligence", "trending-repositories"]}, {"id": 33481913, "repo_name": "sklearn_pycon2015", "full_name": "jakevdp/sklearn_pycon2015", "description": "Materials for my Pycon 2015 scikit-learn tutorial.", "created": "2015-04-06 12:56:16", "language": "Jupyter Notebook", "type": "User", "username": "jakevdp", "stars": 884, "forks": 592, "subscribers": 72, "open_issues": 5, "topics": []}, {"id": 123486600, "repo_name": "Windows-Machine-Learning", "full_name": "microsoft/Windows-Machine-Learning", "description": "Samples and Tools for Windows ML.", "created": "2018-03-01 20:07:47", "language": "C++", "type": "Organization", "username": "microsoft", "stars": 796, "forks": 370, "subscribers": 68, "open_issues": 23, "topics": ["machine-learning", "ai", "ml", "deep-learning", "neural-network", "onnx", "windows", "keras", "tensorflow", "coreml", "scikit-learn", "caffe2", "pytorch", "winmltools"]}, {"id": 163630824, "repo_name": "feature_engine", "full_name": "feature-engine/feature_engine", "description": "Feature engineering package with sklearn like functionality", "created": "2018-12-31 01:47:18", "language": "Python", "type": "Organization", "username": "feature-engine", "stars": 794, "forks": 194, "subscribers": 28, "open_issues": 51, "topics": ["machine-learning", "data-science", "python", "scikit-learn", "feature-engineering", "feature-selection", "feature-extraction"]}, {"id": 71637984, "repo_name": "prince", "full_name": "MaxHalford/prince", "description": ":crown: Python factor analysis library (PCA, CA, MCA, MFA, FAMD)", "created": "2016-10-22 12:36:06", "language": "Python", "type": "User", "username": "MaxHalford", "stars": 765, "forks": 142, "subscribers": 20, "open_issues": 35, "topics": ["pandas", "pca", "ca", "mca", "python", "svd", "factor-analysis", "correspondence-analysis", "principal-component-analysis", "scikit-learn", "multiple-factor-analysis", "multiple-correspondence-analysis", "mfa", "famd"]}, {"id": 166836939, "repo_name": "scikit-lego", "full_name": "koaning/scikit-lego", "description": "Extra blocks for scikit-learn pipelines.", "created": "2019-01-21 15:30:15", "language": "Python", "type": "User", "username": "koaning", "stars": 759, "forks": 78, "subscribers": 17, "open_issues": 30, "topics": ["scikit-learn", "machine-learning", "common-sense"]}, {"id": 67394466, "repo_name": "data-science-portfolio", "full_name": "sajal2692/data-science-portfolio", "description": "Portfolio of data science projects completed by me for academic, self learning, and hobby purposes.", "created": "2016-09-05 06:36:35", "language": "Jupyter Notebook", "type": "User", "username": "sajal2692", "stars": 744, "forks": 361, "subscribers": 49, "open_issues": 2, "topics": ["data-science", "portfolio", "python", "pandas", "scikit-learn", "keras", "machine-learning", "nlp"]}, {"id": 77409504, "repo_name": "scikit-survival", "full_name": "sebp/scikit-survival", "description": "Survival analysis built on top of scikit-learn", "created": "2016-12-26 22:15:53", "language": "Python", "type": "User", "username": "sebp", "stars": 725, "forks": 149, "subscribers": 22, "open_issues": 18, "topics": ["survival-analysis", "machine-learning", "python", "scikit-learn"]}, {"id": 19313806, "repo_name": "scikit-multilearn", "full_name": "scikit-multilearn/scikit-multilearn", "description": "A scikit-learn based module for multi-label et. al. classification", "created": "2014-04-30 13:05:44", "language": "Python", "type": "Organization", "username": "scikit-multilearn", "stars": 725, "forks": 143, "subscribers": 35, "open_issues": 92, "topics": ["classification", "scikit", "scikit-learn", "multi-label", "scikit-multilearn", "machine-learning", "clustering", "partitioning", "label-prediction"]}, {"id": 51673050, "repo_name": "AlphaPy", "full_name": "ScottfreeLLC/AlphaPy", "description": "Automated Machine Learning [AutoML] with Python, scikit-learn, Keras, XGBoost, LightGBM, and CatBoost", "created": "2016-02-14 00:47:32", "language": "Python", "type": "Organization", "username": "ScottfreeLLC", "stars": 722, "forks": 158, "subscribers": 57, "open_issues": 13, "topics": ["machine-learning", "predictive-analytics", "classification", "regression", "scikit-learn", "pandas", "trading", "stocks", "sports", "portfolio", "cryptocurrency", "trading-strategies", "keras", "data-science", "python", "iex", "deep-learning", "trading-platform", "time-series-analysis", "tensorflow"]}, {"id": 60101534, "repo_name": "scikit-learn-doc-cn", "full_name": "lzjqsdd/scikit-learn-doc-cn", "description": "scikit-learn\u673a\u5668\u5b66\u4e60\u5e93\u4e2d\u6587\u6587\u6863\u7ffb\u8bd1\u9879\u76ee", "created": "2016-05-31 15:30:15", "language": "HTML", "type": "User", "username": "lzjqsdd", "stars": 719, "forks": 296, "subscribers": 82, "open_issues": 5, "topics": ["scikit-learn"]}, {"id": 195266931, "repo_name": "imodels", "full_name": "csinva/imodels", "description": "Interpretable ML package \ud83d\udd0d for concise, transparent, and accurate predictive modeling (sklearn-compatible).", "created": "2019-07-04 15:38:48", "language": "Jupyter Notebook", "type": "User", "username": "csinva", "stars": 692, "forks": 63, "subscribers": 21, "open_issues": 7, "topics": ["interpretability", "machine-learning", "data-science", "artificial-intelligence", "ml", "ai", "statistics", "scikit-learn", "python", "optimal-classification-tree", "rulefit", "imodels", "rule-learning", "supervised-learning", "explainable-ml", "explainable-ai", "rules", "bayesian-rule-list"]}, {"id": 135771325, "repo_name": "hyperparameter_hunter", "full_name": "HunterMcGushion/hyperparameter_hunter", "description": "Easy hyperparameter optimization and automatic result saving across machine learning algorithms and libraries", "created": "2018-06-01 23:17:00", "language": "Python", "type": "User", "username": "HunterMcGushion", "stars": 682, "forks": 91, "subscribers": 25, "open_issues": 37, "topics": ["artificial-intelligence", "machine-learning", "hyperparameter-optimization", "hyperparameter-tuning", "neural-network", "keras", "scikit-learn", "xgboost", "lightgbm", "catboost", "deep-learning", "data-science", "python", "rgf", "sklearn", "optimization", "experimentation", "feature-engineering", "ai", "ml"]}, {"id": 45146653, "repo_name": "sklearn-deap", "full_name": "rsteca/sklearn-deap", "description": "Use evolutionary algorithms instead of gridsearch in scikit-learn", "created": "2015-10-28 22:52:34", "language": "Jupyter Notebook", "type": "User", "username": "rsteca", "stars": 680, "forks": 115, "subscribers": 29, "open_issues": 22, "topics": []}, {"id": 137103159, "repo_name": "finetune", "full_name": "IndicoDataSolutions/finetune", "description": "Scikit-learn style model finetuning for NLP", "created": "2018-06-12 17:02:16", "language": "Python", "type": "Organization", "username": "IndicoDataSolutions", "stars": 660, "forks": 74, "subscribers": 34, "open_issues": 44, "topics": []}, {"id": 203362007, "repo_name": "HungaBunga", "full_name": "ypeleg/HungaBunga", "description": "HungaBunga: Brute-Force all sklearn models with all parameters using .fit .predict!", "created": "2019-08-20 11:26:09", "language": "Python", "type": "User", "username": "ypeleg", "stars": 655, "forks": 70, "subscribers": 23, "open_issues": 14, "topics": ["scikit-learn", "brute", "force", "machine", "learning", "kaggle", "automl", "sklearn", "fit", "predict"]}, {"id": 197432079, "repo_name": "AutoViz", "full_name": "AutoViML/AutoViz", "description": "Automatically Visualize any dataset, any size with a single line of code.  Created by Ram Seshadri. Collaborators Welcome. Permission Granted upon Request.", "created": "2019-07-17 17:14:06", "language": "Python", "type": "User", "username": "AutoViML", "stars": 651, "forks": 99, "subscribers": 28, "open_issues": 4, "topics": ["visualization", "python3", "python", "xgboost", "automl", "scikit-learn", "machine-learning", "tableau", "automl-algorithms", "tpot", "auto-sklearn", "automated-machine-learning"]}, {"id": 120142477, "repo_name": "iterative-stratification", "full_name": "trent-b/iterative-stratification", "description": "scikit-learn cross validators for iterative stratification of multilabel data", "created": "2018-02-04 00:32:10", "language": "Python", "type": "User", "username": "trent-b", "stars": 635, "forks": 57, "subscribers": 7, "open_issues": 4, "topics": ["multilabel", "stratification", "cross-validation", "scikit-learn", "multilabel-classification"]}, {"id": 148944721, "repo_name": "Pyto", "full_name": "ColdGrub1384/Pyto", "description": "Python IDE for iOS with NumPy, Matplotlib, Pandas, SciPy and SciKit-Learn", "created": "2018-09-15 22:29:07", "language": "C", "type": "User", "username": "ColdGrub1384", "stars": 631, "forks": 103, "subscribers": 69, "open_issues": 92, "topics": ["python", "ios", "cpython", "ide", "mobile-ide", "offline", "native", "no-jailbreak"]}, {"id": 110717885, "repo_name": "scikit-multiflow", "full_name": "scikit-multiflow/scikit-multiflow", "description": "A machine learning package for streaming data in Python. The other ancestor of River.", "created": "2017-11-14 16:46:58", "language": "Python", "type": "Organization", "username": "scikit-multiflow", "stars": 608, "forks": 161, "subscribers": 30, "open_issues": 55, "topics": ["scikit", "scikit-learn", "stream", "streaming-data", "machine-learning", "meka", "moa"]}, {"id": 121798175, "repo_name": "onnxmltools", "full_name": "onnx/onnxmltools", "description": "ONNXMLTools enables conversion of models to ONNX", "created": "2018-02-16 20:37:33", "language": "Python", "type": "Organization", "username": "onnx", "stars": 605, "forks": 139, "subscribers": 40, "open_issues": 79, "topics": ["machine-learning", "python-library", "onnx", "scikit-learn", "keras"]}, {"id": 246063957, "repo_name": "scikit-learn-mooc", "full_name": "INRIA/scikit-learn-mooc", "description": "scikit-learn-mooc", "created": "2020-03-09 14:53:36", "language": "Jupyter Notebook", "type": "Organization", "username": "INRIA", "stars": 593, "forks": 293, "subscribers": 24, "open_issues": 51, "topics": []}, {"id": 166814594, "repo_name": "baikal", "full_name": "alegonz/baikal", "description": "A graph-based functional API for building complex scikit-learn pipelines.", "created": "2019-01-21 12:59:02", "language": "Python", "type": "User", "username": "alegonz", "stars": 592, "forks": 28, "subscribers": 20, "open_issues": 6, "topics": ["scikit-learn", "machine-learning", "data-science", "python", "graph-based"]}, {"id": 84792081, "repo_name": "python-tutorial", "full_name": "shibing624/python-tutorial", "description": "Python\u5b9e\u7528\u6559\u7a0b\uff0c\u5305\u62ec\uff1aPython\u57fa\u7840\uff0cPython\u9ad8\u7ea7\u7279\u6027\uff0c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff0c\u591a\u7ebf\u7a0b\uff0c\u6570\u636e\u5e93\uff0c\u6570\u636e\u79d1\u5b66\uff0cFlask\uff0c\u722c\u866b\u5f00\u53d1\u6559\u7a0b\u3002", "created": "2017-03-13 06:35:18", "language": "Jupyter Notebook", "type": "User", "username": "shibing624", "stars": 582, "forks": 181, "subscribers": 16, "open_issues": 0, "topics": ["python", "python-tutorial", "numpy", "scipy", "pytorch", "scikit-learn", "pandas"]}, {"id": 45906846, "repo_name": "sklearn2pmml", "full_name": "jpmml/sklearn2pmml", "description": "Python library for converting Scikit-Learn pipelines to PMML", "created": "2015-11-10 11:12:55", "language": "Python", "type": "Organization", "username": "jpmml", "stars": 575, "forks": 101, "subscribers": 27, "open_issues": 15, "topics": []}, {"id": 31682513, "repo_name": "scipy_2015_sklearn_tutorial", "full_name": "amueller/scipy_2015_sklearn_tutorial", "description": "Scikit-Learn tutorial material for Scipy 2015", "created": "2015-03-04 22:09:04", "language": "Python", "type": "User", "username": "amueller", "stars": 571, "forks": 315, "subscribers": 51, "open_issues": 12, "topics": []}, {"id": 278844314, "repo_name": "human-learn", "full_name": "koaning/human-learn", "description": "Natural Intelligence is still a pretty good idea.", "created": "2020-07-11 11:03:11", "language": "Jupyter Notebook", "type": "User", "username": "koaning", "stars": 565, "forks": 48, "subscribers": 14, "open_issues": 7, "topics": ["scikit-learn", "machine-learning", "benchmark"]}, {"id": 9178484, "repo_name": "openscoring", "full_name": "openscoring/openscoring", "description": "REST web service for the true real-time scoring (<1 ms) of Scikit-Learn, R and Apache Spark models", "created": "2013-04-02 19:44:04", "language": "Java", "type": "Organization", "username": "openscoring", "stars": 561, "forks": 169, "subscribers": 35, "open_issues": 3, "topics": ["api", "real-time", "pmml", "r", "scikit-learn", "apache-spark", "xgboost", "lightgbm"]}, {"id": 225186246, "repo_name": "code", "full_name": "dataprofessor/code", "description": "Compilation of R and Python programming codes on the Data Professor YouTube channel.", "created": "2019-12-01 15:46:56", "language": "Jupyter Notebook", "type": "User", "username": "dataprofessor", "stars": 559, "forks": 979, "subscribers": 34, "open_issues": 13, "topics": ["shiny", "exploratory-data-analysis", "python", "streamlit", "r", "datascience", "data-science", "machinelearning", "machine-learning", "python-data-science", "data-science-python", "dataprofessor", "data-professor", "scikit-learn", "scikit-learn-python", "pandas"]}, {"id": 2564982, "repo_name": "notebooks", "full_name": "ogrisel/notebooks", "description": "Some sample IPython notebooks for scikit-learn", "created": "2011-10-12 20:04:58", "language": "Jupyter Notebook", "type": "User", "username": "ogrisel", "stars": 544, "forks": 201, "subscribers": 50, "open_issues": 3, "topics": []}, {"id": 215232087, "repo_name": "giotto-tda", "full_name": "giotto-ai/giotto-tda", "description": "A high-performance topological machine learning toolbox in Python", "created": "2019-10-15 07:14:38", "language": "Python", "type": "Organization", "username": "giotto-ai", "stars": 542, "forks": 114, "subscribers": 14, "open_issues": 53, "topics": ["topological-machine-learning", "topological-data-analysis", "machine-learning", "scikit-learn", "tda", "mapper", "topology", "computational-topology"]}, {"id": 198628357, "repo_name": "sktime-dl", "full_name": "sktime/sktime-dl", "description": "sktime companion package for deep learning based on TensorFlow", "created": "2019-07-24 12:08:53", "language": "Python", "type": "Organization", "username": "sktime", "stars": 529, "forks": 77, "subscribers": 23, "open_issues": 22, "topics": ["deep-learning", "time-series", "machine-learning", "scikit-learn", "panel-data", "longitudinal-data", "neural-networks", "time-series-classification", "time-series-regression", "time-series-forecasting"]}, {"id": 11845170, "repo_name": "skll", "full_name": "EducationalTestingService/skll", "description": "SciKit-Learn Laboratory (SKLL) makes it easy to run machine learning experiments.", "created": "2013-08-02 14:31:46", "language": "Python", "type": "Organization", "username": "EducationalTestingService", "stars": 526, "forks": 65, "subscribers": 47, "open_issues": 32, "topics": ["machine-learning", "python", "scikit-learn", "hacktoberfest"]}, {"id": 169527185, "repo_name": "ActionAI", "full_name": "smellslikeml/ActionAI", "description": "custom human activity recognition modules by pose estimation and cascaded inference using sklearn API", "created": "2019-02-07 06:09:11", "language": "Python", "type": "User", "username": "smellslikeml", "stars": 519, "forks": 156, "subscribers": 30, "open_issues": 24, "topics": ["machinelearning", "scikit-learn", "tensorflow2", "pose-estimation", "classifier", "human-activity-recognition", "human-action-recognition", "jetson-nano", "edgetpu", "raspberry-pi", "lstm"]}, {"id": 54307265, "repo_name": "scipy-2016-sklearn", "full_name": "amueller/scipy-2016-sklearn", "description": "Scikit-learn tutorial at SciPy2016", "created": "2016-03-20 08:14:28", "language": "Jupyter Notebook", "type": "User", "username": "amueller", "stars": 514, "forks": 520, "subscribers": 35, "open_issues": 15, "topics": []}, {"id": 260027545, "repo_name": "jetson-containers", "full_name": "dusty-nv/jetson-containers", "description": "Machine Learning Containers for NVIDIA Jetson and JetPack-L4T", "created": "2020-04-29 19:50:58", "language": "Shell", "type": "User", "username": "dusty-nv", "stars": 510, "forks": 167, "subscribers": 18, "open_issues": 76, "topics": ["machine-learning", "dockerfiles", "jetson", "pytorch", "tensorflow", "pandas", "scikit-learn", "numpy", "ros-containers", "ros2-foxy", "docker", "containers", "nvidia"]}, {"id": 177868131, "repo_name": "Neuraxle", "full_name": "Neuraxio/Neuraxle", "description": "A Sklearn-like Framework for Hyperparameter Tuning and AutoML in Deep Learning projects. Finally have the right abstractions and design patterns to properly do AutoML. Let your pipeline steps have hyperparameter spaces. Enable checkpoints to cut duplicate calculations. Go from research to production environment easily.", "created": "2019-03-26 21:01:54", "language": "Python", "type": "Organization", "username": "Neuraxio", "stars": 505, "forks": 53, "subscribers": 19, "open_issues": 111, "topics": ["pipeline", "pipeline-framework", "machine-learning", "deep-learning", "framework", "python-library", "hyperparameter-optimization", "hyperparameter-tuning", "hyperparameter-search", "hyperparameters", "scikit-learn", "parallel", "neuraxle"]}, {"id": 126384528, "repo_name": "random-forest-importances", "full_name": "parrt/random-forest-importances", "description": "Code to compute permutation and drop-column importances in Python scikit-learn models", "created": "2018-03-22 19:20:13", "language": "Jupyter Notebook", "type": "User", "username": "parrt", "stars": 494, "forks": 116, "subscribers": 21, "open_issues": 7, "topics": []}, {"id": 151186173, "repo_name": "kymatio", "full_name": "kymatio/kymatio", "description": "Wavelet scattering transforms in Python with GPU acceleration", "created": "2018-10-02 01:45:46", "language": "Python", "type": "Organization", "username": "kymatio", "stars": 489, "forks": 90, "subscribers": 31, "open_issues": 98, "topics": ["scattering-transform", "wavelets", "deep-learning", "pytorch", "tensorflow", "numpy", "keras", "scikit-learn"]}, {"id": 52732605, "repo_name": "ScikitLearn.jl", "full_name": "cstjean/ScikitLearn.jl", "description": "Julia implementation of the scikit-learn API https://cstjean.github.io/ScikitLearn.jl/dev/", "created": "2016-02-28 17:06:55", "language": "Julia", "type": "User", "username": "cstjean", "stars": 482, "forks": 69, "subscribers": 23, "open_issues": 31, "topics": ["julia", "machine-learning"]}, {"id": 52333038, "repo_name": "sklearn-expertsys", "full_name": "tmadl/sklearn-expertsys", "description": "Highly interpretable classifiers for scikit learn, producing easily understood decision rules instead of black box models", "created": "2016-02-23 05:31:06", "language": "Python", "type": "User", "username": "tmadl", "stars": 481, "forks": 66, "subscribers": 22, "open_issues": 5, "topics": []}, {"id": 39742851, "repo_name": "semisup-learn", "full_name": "tmadl/semisup-learn", "description": "Semi-supervised learning frameworks for python, which allow fitting scikit-learn classifiers to partially labeled data", "created": "2015-07-26 21:30:40", "language": "Python", "type": "User", "username": "tmadl", "stars": 480, "forks": 149, "subscribers": 25, "open_issues": 15, "topics": []}, {"id": 33114259, "repo_name": "palladium", "full_name": "ottogroup/palladium", "description": "Framework for setting up predictive analytics services", "created": "2015-03-30 09:29:21", "language": "Python", "type": "Organization", "username": "ottogroup", "stars": 480, "forks": 57, "subscribers": 40, "open_issues": 6, "topics": ["machine-learning", "scikit-learn", "data-science"]}, {"id": 139945544, "repo_name": "deep-learning-wizard", "full_name": "ritchieng/deep-learning-wizard", "description": "Open source guides/codes for mastering deep learning to deploying deep learning in production in PyTorch, Python, C++ and more.", "created": "2018-07-06 06:56:01", "language": "HTML", "type": "User", "username": "ritchieng", "stars": 478, "forks": 177, "subscribers": 17, "open_issues": 5, "topics": ["pytorch", "deep-learning", "python", "cpp", "gym", "machine-learning", "database", "plotly", "numpy", "rapids", "cuml", "cudf", "pandas", "scikit-learn", "bash", "cassandra"]}, {"id": 42821755, "repo_name": "jpmml-sklearn", "full_name": "jpmml/jpmml-sklearn", "description": "Java library and command-line application for converting Scikit-Learn pipelines to PMML", "created": "2015-09-20 17:15:13", "language": "Java", "type": "Organization", "username": "jpmml", "stars": 473, "forks": 109, "subscribers": 21, "open_issues": 18, "topics": []}, {"id": 39928875, "repo_name": "sklearn-bayes", "full_name": "AmazaspShumik/sklearn-bayes", "description": "Python package for Bayesian Machine Learning with scikit-learn API", "created": "2015-07-30 03:15:34", "language": "Jupyter Notebook", "type": "User", "username": "AmazaspShumik", "stars": 446, "forks": 109, "subscribers": 34, "open_issues": 21, "topics": ["python", "bayesian-machine-learning", "machine-learning", "scikit-learn", "bayesian"]}, {"id": 439743567, "repo_name": "machine-learning-book", "full_name": "rasbt/machine-learning-book", "description": "Code Repository for Machine Learning with PyTorch and Scikit-Learn", "created": "2021-12-19 00:32:59", "language": "Jupyter Notebook", "type": "User", "username": "rasbt", "stars": 438, "forks": 93, "subscribers": 10, "open_issues": 0, "topics": ["machine-learning", "scikit-learn", "deep-learning", "neural-networks", "pytorch"]}, {"id": 163343785, "repo_name": "profanity-check", "full_name": "vzhou842/profanity-check", "description": "A fast, robust Python library to check for offensive language in strings.", "created": "2018-12-27 23:13:31", "language": "Python", "type": "User", "username": "vzhou842", "stars": 432, "forks": 68, "subscribers": 15, "open_issues": 25, "topics": ["profanity", "profanity-detection", "python3", "sklearn", "scikit-learn", "linear-svm", "bag-of-words", "profanity-filter", "profanity-library", "offensive-language"]}, {"id": 108996733, "repo_name": "GraKeL", "full_name": "ysig/GraKeL", "description": "A scikit-learn compatible library for graph kernels", "created": "2017-10-31 13:05:27", "language": "Python", "type": "User", "username": "ysig", "stars": 428, "forks": 79, "subscribers": 9, "open_issues": 7, "topics": ["graph-kernels", "graph-classification", "scikit-learn", "graph-mining", "bioinformatics", "chemoinformatics", "graph-similarity", "graph-similarity-algorithms"]}, {"id": 58676336, "repo_name": "pycon-2016-tutorial", "full_name": "justmarkham/pycon-2016-tutorial", "description": "Machine Learning with Text in scikit-learn", "created": "2016-05-12 20:58:02", "language": "Jupyter Notebook", "type": "User", "username": "justmarkham", "stars": 427, "forks": 420, "subscribers": 36, "open_issues": 1, "topics": []}, {"id": 143831524, "repo_name": "scikit-learn-intelex", "full_name": "intel/scikit-learn-intelex", "description": "Intel(R) Extension for Scikit-learn is a seamless way to speed up your Scikit-learn application", "created": "2018-08-07 06:45:41", "language": "Python", "type": "Organization", "username": "intel", "stars": 421, "forks": 100, "subscribers": 19, "open_issues": 83, "topics": ["oneapi", "scikit-learn", "machine-learning-algorithms", "data-analysis", "machine-learning", "python", "swrepo", "ai-machine-learning", "big-data", "analytics", "ai-training", "ai-inference", "gpu", "intel"]}, {"id": 120594178, "repo_name": "datacamp-python-data-science-track", "full_name": "AmoDinho/datacamp-python-data-science-track", "description": "All the slides, accompanying code and exercises all stored in this repo. \ud83c\udf88", "created": "2018-02-07 09:36:04", "language": "Python", "type": "User", "username": "AmoDinho", "stars": 421, "forks": 377, "subscribers": 16, "open_issues": 6, "topics": ["python", "machinelearning", "data-science", "datacamp", "datacamp-course", "datacamp-exercises", "datacamp-projects", "datacamp-python", "datacamp-machine-learning", "datacamp-solutions-python", "pandas", "neural-network", "neural-networks", "natural-language-processing", "nlp", "bokeh", "scikit-learn", "tokenization", "datascience"]}, {"id": 162964892, "repo_name": "Data-Science-Projects-with-Python", "full_name": "TrainingByPackt/Data-Science-Projects-with-Python", "description": "A Case Study Approach to Successful Data Science Projects Using Python, Pandas, and Scikit-Learn", "created": "2018-12-24 07:47:03", "language": "Jupyter Notebook", "type": "Organization", "username": "TrainingByPackt", "stars": 411, "forks": 139, "subscribers": 28, "open_issues": 0, "topics": ["python", "machine-learning", "pandas-dataframe", "pandas", "numpy", "scikit-learn", "data-science"]}, {"id": 39930761, "repo_name": "machineJS", "full_name": "ClimbsRocks/machineJS", "description": "[UNMAINTAINED] Automated machine learning- just give it a data file! Check out the production-ready version of this project at ClimbsRocks/auto_ml", "created": "2015-07-30 04:10:08", "language": "Python", "type": "User", "username": "ClimbsRocks", "stars": 411, "forks": 59, "subscribers": 33, "open_issues": 56, "topics": ["machine-learning", "data-science", "javascript", "machine-learning-library", "machine-learning-algorithms", "ml", "data-scientists", "javascript-library", "scikit-learn", "kaggle", "numerai", "automated-machine-learning", "automl", "auto-ml"]}, {"id": 39022739, "repo_name": "deep-belief-network", "full_name": "albertbup/deep-belief-network", "description": "A Python implementation of Deep Belief Networks built upon NumPy and TensorFlow with scikit-learn compatibility", "created": "2015-07-13 16:06:35", "language": "Python", "type": "User", "username": "albertbup", "stars": 406, "forks": 183, "subscribers": 20, "open_issues": 13, "topics": []}, {"id": 46947105, "repo_name": "sklearn-crfsuite", "full_name": "TeamHG-Memex/sklearn-crfsuite", "description": "scikit-learn inspired API for CRFsuite", "created": "2015-11-26 21:15:41", "language": "Python", "type": "Organization", "username": "TeamHG-Memex", "stars": 394, "forks": 180, "subscribers": 21, "open_issues": 40, "topics": []}, {"id": 159827756, "repo_name": "libfaceid", "full_name": "richmondu/libfaceid", "description": "libfaceid is a research framework for prototyping of face recognition solutions. It seamlessly integrates multiple detection, recognition and liveness models w/ speech synthesis and speech recognition.", "created": "2018-11-30 13:30:51", "language": "Python", "type": "User", "username": "richmondu", "stars": 386, "forks": 143, "subscribers": 25, "open_issues": 16, "topics": ["face-detection", "face-recognition", "facenet", "openface", "dlib", "pose-estimation", "age-detection", "gender-detection", "emotion-detection", "deep-learning", "machine-learning", "convolutional-neural-network", "raspberry-pi", "speech-synthesis", "speech-recognition", "face-spoofing-detection", "keras", "tensorflow", "opencv", "scikit-learn"]}, {"id": 16920465, "repo_name": "featureforge", "full_name": "machinalis/featureforge", "description": "A set of tools for creating and testing machine learning features, with a scikit-learn compatible API", "created": "2014-02-17 17:21:12", "language": "Python", "type": "Organization", "username": "machinalis", "stars": 380, "forks": 81, "subscribers": 34, "open_issues": 11, "topics": []}, {"id": 92071194, "repo_name": "ecg-classification", "full_name": "mondejar/ecg-classification", "description": "Code for training and test machine learning classifiers on MIT-BIH Arrhyhtmia database", "created": "2017-05-22 15:47:58", "language": "Python", "type": "User", "username": "mondejar", "stars": 380, "forks": 170, "subscribers": 30, "open_issues": 5, "topics": ["mit-bih-arrhythmia", "artificial-neural-networks", "patients", "support-vector-machine", "inter-patient", "beats", "scikit-learn", "python"]}, {"id": 15534429, "repo_name": "scikit-learn-book", "full_name": "gmonce/scikit-learn-book", "description": "Source code for the \"Learning scikit-learn: Machine Learning in Python\"", "created": "2013-12-30 19:06:43", "language": "Jupyter Notebook", "type": "User", "username": "gmonce", "stars": 378, "forks": 262, "subscribers": 49, "open_issues": 0, "topics": []}, {"id": 229347545, "repo_name": "scikit-uplift", "full_name": "maks-sh/scikit-uplift", "description": ":exclamation: uplift modeling in scikit-learn style in python :snake:", "created": "2019-12-20 22:51:58", "language": "Python", "type": "User", "username": "maks-sh", "stars": 378, "forks": 72, "subscribers": 12, "open_issues": 24, "topics": ["uplift-modeling", "causal-inference", "uplift", "machine-learning", "causality", "individual-treatment-effects", "true-lift", "net-lift", "uplift-modelling"]}, {"id": 155687643, "repo_name": "Hyperactive", "full_name": "SimonBlanke/Hyperactive", "description": "An optimization and data collection toolbox for convenient and fast prototyping of computationally expensive models.", "created": "2018-11-01 08:53:30", "language": "Python", "type": "User", "username": "SimonBlanke", "stars": 369, "forks": 32, "subscribers": 10, "open_issues": 7, "topics": ["hyperparameter-optimization", "scikit-learn", "machine-learning", "meta-heuristics", "python", "data-science", "parameter-tuning", "xgboost", "keras", "deep-learning", "bayesian-optimization", "parallel-computing", "neural-architecture-search", "automated-machine-learning", "optimization", "pytorch", "feature-engineering", "hyperactive"]}, {"id": 21103726, "repo_name": "sklearn-theano", "full_name": "sklearn-theano/sklearn-theano", "description": "Scikit-learn compatible tools using theano", "created": "2014-06-22 19:58:30", "language": "Python", "type": "Organization", "username": "sklearn-theano", "stars": 365, "forks": 84, "subscribers": 35, "open_issues": 38, "topics": []}, {"id": 81799964, "repo_name": "thesemicolon", "full_name": "shreyans29/thesemicolon", "description": "This repository contains Ipython notebooks and datasets for the data analytics youtube tutorials on The Semicolon.", "created": "2017-02-13 08:03:04", "language": "Jupyter Notebook", "type": "User", "username": "shreyans29", "stars": 365, "forks": 426, "subscribers": 43, "open_issues": 18, "topics": ["neural-network", "pandas-tutorial", "semicolon", "scikit", "perceptron", "gradient-descent", "keras", "scikit-learn", "matplotlib", "numpy", "machine-learning", "count-vectorizer", "deep-learning", "convolutional-neural-networks", "cnn-keras", "sentiment-analysis", "data-science", "lstm", "rnn", "tutorial"]}, {"id": 53296383, "repo_name": "scikit-learn-contrib", "full_name": "scikit-learn-contrib/scikit-learn-contrib", "description": "scikit-learn compatible projects", "created": "2016-03-07 04:42:42", "language": null, "type": "Organization", "username": "scikit-learn-contrib", "stars": 361, "forks": 43, "subscribers": 44, "open_issues": 23, "topics": []}, {"id": 70790978, "repo_name": "pyaf", "full_name": "antoinecarme/pyaf", "description": "PyAF is an Open Source Python library for Automatic Time Series Forecasting built on top of popular pydata modules.", "created": "2016-10-13 09:30:30", "language": "Python", "type": "User", "username": "antoinecarme", "stars": 356, "forks": 58, "subscribers": 21, "open_issues": 12, "topics": ["scikit-learn", "pandas", "jupyter", "forecasting", "exogenous", "benchmark", "seasonal", "time-series", "horizon", "autoregressive", "python", "trend", "cycle", "arx", "automatic-forecasting", "transformation", "hierarchical-forecasting", "automl", "signal-decomposition", "machine-learning"]}, {"id": 85858065, "repo_name": "zat", "full_name": "SuperCowPowers/zat", "description": "Zeek Analysis Tools (ZAT):  Processing and analysis of Zeek network data with Pandas, scikit-learn, Kafka and Spark", "created": "2017-03-22 17:40:04", "language": "Jupyter Notebook", "type": "Organization", "username": "SuperCowPowers", "stars": 349, "forks": 97, "subscribers": 40, "open_issues": 7, "topics": ["python", "networking", "security", "bro", "pandas", "scikit-learn", "spark", "zeek", "kafka", "zeek-analysis", "data-analysis"]}, {"id": 51374946, "repo_name": "adam_qas", "full_name": "5hirish/adam_qas", "description": "ADAM - A Question Answering System. Inspired from IBM Watson", "created": "2016-02-09 15:18:46", "language": "Python", "type": "User", "username": "5hirish", "stars": 348, "forks": 103, "subscribers": 31, "open_issues": 9, "topics": ["python", "spacy", "natural-language-processing", "question-answering", "adam", "scikit-learn", "gensim", "pandas", "wikipedia", "elasticsearch", "spacy-extension"]}, {"id": 224567771, "repo_name": "tune-sklearn", "full_name": "ray-project/tune-sklearn", "description": "A drop-in replacement for Scikit-Learn\u2019s GridSearchCV / RandomizedSearchCV -- but with cutting edge hyperparameter tuning techniques.", "created": "2019-11-28 04:09:21", "language": "Python", "type": "Organization", "username": "ray-project", "stars": 347, "forks": 36, "subscribers": 17, "open_issues": 20, "topics": ["scikit-learn", "hyperparameter-tuning", "gridsearchcv", "bayesian-optimization", "automl"]}, {"id": 68609247, "repo_name": "scikit-rebate", "full_name": "EpistasisLab/scikit-rebate", "description": "A scikit-learn-compatible Python implementation of ReBATE, a suite of Relief-based feature selection algorithms for Machine Learning.", "created": "2016-09-19 13:36:17", "language": "Python", "type": "Organization", "username": "EpistasisLab", "stars": 345, "forks": 66, "subscribers": 23, "open_issues": 15, "topics": ["feature-selection", "data-science", "python"]}, {"id": 123693096, "repo_name": "sagify", "full_name": "Kenza-AI/sagify", "description": "MLOps for AWS SageMaker", "created": "2018-03-03 13:12:14", "language": "Python", "type": "Organization", "username": "Kenza-AI", "stars": 342, "forks": 54, "subscribers": 14, "open_issues": 12, "topics": ["sagemaker", "machine-learning", "python", "aws", "deep-learning", "keras", "tensorflow", "scikit-learn", "machine-learning-production", "machine-learning-deploy", "deep-learning-deploy", "deep-learning-production", "pytorch", "continuous-deployment", "continuous-training", "cd4ml", "mlops", "huggingface", "xgboost", "ml-infrastructure"]}, {"id": 35396569, "repo_name": "pyDataScienceToolkits_Base", "full_name": "jasonding1354/pyDataScienceToolkits_Base", "description": "\u4f7f\u7528Python\u8fdb\u884c\u6570\u636e\u5206\u6790\u5b9e\u9a8c\u5de5\u5177NumPy\u3001Pandas\u3001Matplotlib\u3001Scikit-learn\u7684\u5165\u95e8\u4ecb\u7ecd\uff0c\u4f7f\u7528IPython Notebook\u683c\u5f0f", "created": "2015-05-11 01:59:40", "language": "Python", "type": "User", "username": "jasonding1354", "stars": 340, "forks": 191, "subscribers": 43, "open_issues": 1, "topics": []}, {"id": 191316757, "repo_name": "eland", "full_name": "elastic/eland", "description": "Python Client and Toolkit for DataFrames, Big Data, Machine Learning and ETL in Elasticsearch", "created": "2019-06-11 07:24:06", "language": "Python", "type": "Organization", "username": "elastic", "stars": 339, "forks": 47, "subscribers": 35, "open_issues": 59, "topics": ["python", "elasticsearch", "pandas", "data-analysis", "machine-learning", "time-series-forecasting", "etl", "big-data", "dataframe", "eland", "scikit-learn", "lightgbm", "dataframes"]}, {"id": 41296210, "repo_name": "winerama-recommender-tutorial", "full_name": "jadianes/winerama-recommender-tutorial", "description": "A wine recommender system tutorial using Python technologies such as Django, Pandas, or Scikit-learn, and others such as Bootstrap.", "created": "2015-08-24 10:05:12", "language": "Python", "type": "User", "username": "jadianes", "stars": 333, "forks": 303, "subscribers": 39, "open_issues": 6, "topics": ["tutorial", "django", "scikit-learn", "python", "pandas", "recommender-system", "wine"]}, {"id": 191170272, "repo_name": "Auto_ViML", "full_name": "AutoViML/Auto_ViML", "description": "Automatically Build Multiple ML Models with a Single Line of Code. Created by Ram Seshadri. Collaborators Welcome. Permission Granted upon Request.", "created": "2019-06-10 13:09:15", "language": "Python", "type": "User", "username": "AutoViML", "stars": 333, "forks": 70, "subscribers": 22, "open_issues": 4, "topics": ["automl", "auto-viml", "machine-learning", "python3", "python", "scikit-learn", "xgboost", "tpot", "autosklearn", "autokeras", "automated-machine-learning", "automl-algorithms"]}, {"id": 171455943, "repo_name": "Amazing-Feature-Engineering", "full_name": "ashishpatel26/Amazing-Feature-Engineering", "description": "Feature engineering is the process of using domain knowledge to extract features from raw data via data mining techniques. These features can be used to improve the performance of machine learning algorithms. Feature engineering can be considered as applied machine learning itself.", "created": "2019-02-19 10:44:28", "language": "Jupyter Notebook", "type": "User", "username": "ashishpatel26", "stars": 327, "forks": 165, "subscribers": 11, "open_issues": 0, "topics": ["feature-engineering", "machine-learning", "deep-learning", "scikit-learn", "data-mining", "data-science", "data-scientists", "feature-scaling", "feature-extraction", "feature-selection", "features", "data-analysis", "data-visualization"]}, {"id": 10694331, "repo_name": "sklearn_scipy2013", "full_name": "jakevdp/sklearn_scipy2013", "description": "Scikit-learn tutorials for the Scipy 2013 conference", "created": "2013-06-14 17:40:13", "language": "Python", "type": "User", "username": "jakevdp", "stars": 326, "forks": 251, "subscribers": 47, "open_issues": 2, "topics": []}, {"id": 41926429, "repo_name": "sklearn-evaluation", "full_name": "edublancas/sklearn-evaluation", "description": "Machine learning model evaluation made easy: plots, tables, HTML reports, experiment tracking and Jupyter notebook analysis.", "created": "2015-09-04 16:33:42", "language": "Python", "type": "User", "username": "edublancas", "stars": 321, "forks": 29, "subscribers": 13, "open_issues": 8, "topics": ["sklearn", "scikit-learn", "machine-learning", "data-science", "deep-learning", "tensorflow", "pytorch", "jupyter-notebook"]}, {"id": 48652409, "repo_name": "machine-learning-python", "full_name": "htylab/machine-learning-python", "description": "\u6a5f\u5668\u5b78\u7fd2: Python", "created": "2015-12-27 16:41:30", "language": "Jupyter Notebook", "type": "User", "username": "htylab", "stars": 319, "forks": 137, "subscribers": 29, "open_issues": 2, "topics": ["scikit-learn", "python", "machine-learning"]}, {"id": 98178273, "repo_name": "machine-learning-notebooks", "full_name": "krasserm/machine-learning-notebooks", "description": "Stanford Machine Learning course exercises implemented with scikit-learn", "created": "2017-07-24 10:21:05", "language": "Jupyter Notebook", "type": "User", "username": "krasserm", "stars": 313, "forks": 133, "subscribers": 21, "open_issues": 2, "topics": ["machine-learning", "scikit-learn"]}, {"id": 211290210, "repo_name": "Hands-on-Machine-Learning-with-Scikit-Learn-Keras-and-TensorFlow", "full_name": "Akramz/Hands-on-Machine-Learning-with-Scikit-Learn-Keras-and-TensorFlow", "description": "Notes & exercise solutions of Part I from the book: \"Hands-On ML with Scikit-Learn, Keras & TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems\" by Aurelien Geron", "created": "2019-09-27 10:01:17", "language": "Jupyter Notebook", "type": "User", "username": "Akramz", "stars": 313, "forks": 156, "subscribers": 18, "open_issues": 2, "topics": ["machine-learning", "deep-learning", "artificial-intelligence", "neural-networks", "scikit-learn", "notebooks"]}, {"id": 162340939, "repo_name": "sklearn-onnx", "full_name": "onnx/sklearn-onnx", "description": "Convert scikit-learn models and pipelines to ONNX", "created": "2018-12-18 20:18:48", "language": "Python", "type": "Organization", "username": "onnx", "stars": 310, "forks": 71, "subscribers": 13, "open_issues": 60, "topics": ["scikit-learn", "onnx"]}, {"id": 89253020, "repo_name": "scikit-and-tensorflow-workbooks", "full_name": "bjpcjp/scikit-and-tensorflow-workbooks", "description": "based on \"Hands-On Machine Learning with Scikit-Learn & TensorFlow\" (O'Reilly, Aurelien Geron)", "created": "2017-04-24 14:51:43", "language": "HTML", "type": "User", "username": "bjpcjp", "stars": 303, "forks": 182, "subscribers": 30, "open_issues": 0, "topics": ["scikit-learn", "tensorflow", "tensorflow-tutorials", "deep-learning"]}, {"id": 272729720, "repo_name": "explainx", "full_name": "explainX/explainx", "description": "Explainable AI framework for data scientists. Explain & debug any blackbox machine learning model with a single line of code.", "created": "2020-06-16 14:27:15", "language": "Jupyter Notebook", "type": "Organization", "username": "explainX", "stars": 293, "forks": 39, "subscribers": 8, "open_issues": 10, "topics": ["explainable-ai", "explainable-artificial-intelligence", "machine-learning", "interpretability", "blackbox", "xai", "explainx", "interpretable-ai", "transparency", "bias", "interpretable-machine-learning", "aws-sagemaker", "explainability", "explainable-ml", "machine-learning-interpretability", "scikit-learn"]}, {"id": 352931865, "repo_name": "MAPIE", "full_name": "scikit-learn-contrib/MAPIE", "description": "A scikit-learn-compatible module for estimating prediction intervals.", "created": "2021-03-30 08:47:08", "language": "Python", "type": "Organization", "username": "scikit-learn-contrib", "stars": 292, "forks": 23, "subscribers": 8, "open_issues": 15, "topics": ["regression", "confidence-intervals", "data-science", "python", "sklearn"]}, {"id": 82625506, "repo_name": "box-plots-sklearn", "full_name": "drivendataorg/box-plots-sklearn", "description": "An implementation of some of the tools used by the winner of the box plots competition using scikit-learn.", "created": "2017-02-21 02:14:27", "language": "Jupyter Notebook", "type": "Organization", "username": "drivendataorg", "stars": 290, "forks": 204, "subscribers": 33, "open_issues": 2, "topics": []}, {"id": 83553805, "repo_name": "scipy-2017-sklearn", "full_name": "amueller/scipy-2017-sklearn", "description": "Scipy 2017 scikit-learn tutorial by Alex Gramfort and Andreas Mueller", "created": "2017-03-01 12:48:52", "language": "Jupyter Notebook", "type": "User", "username": "amueller", "stars": 284, "forks": 224, "subscribers": 13, "open_issues": 7, "topics": []}, {"id": 31113827, "repo_name": "pandas-ml", "full_name": "pandas-ml/pandas-ml", "description": "pandas, scikit-learn, xgboost and seaborn integration ", "created": "2015-02-21 03:14:04", "language": "Python", "type": "Organization", "username": "pandas-ml", "stars": 283, "forks": 69, "subscribers": 20, "open_issues": 29, "topics": []}, {"id": 23322442, "repo_name": "pyconuk-introtutorial", "full_name": "savarin/pyconuk-introtutorial", "description": "practical introduction to Python for machine learning, with pandas and scikit-learn - Sept 2014", "created": "2014-08-25 17:31:32", "language": "Jupyter Notebook", "type": "User", "username": "savarin", "stars": 282, "forks": 127, "subscribers": 23, "open_issues": 1, "topics": ["python", "machine-learning", "pandas", "scikit-learn", "data-science"]}, {"id": 50692313, "repo_name": "sklearnflask", "full_name": "amirziai/sklearnflask", "description": "Flask API for training and predicting using scikit learn models", "created": "2016-01-29 21:24:26", "language": "Python", "type": "User", "username": "amirziai", "stars": 280, "forks": 136, "subscribers": 19, "open_issues": 5, "topics": ["scikit-learn", "flask"]}, {"id": 202426182, "repo_name": "sk-dist", "full_name": "Ibotta/sk-dist", "description": "Distributed scikit-learn meta-estimators in PySpark", "created": "2019-08-14 21:07:17", "language": "Python", "type": "Organization", "username": "Ibotta", "stars": 275, "forks": 48, "subscribers": 25, "open_issues": 7, "topics": ["machine-learning", "data-science", "scikit-learn", "ml", "spark"]}, {"id": 108873992, "repo_name": "text-classification", "full_name": "javedsha/text-classification", "description": "Machine Learning and NLP: Text Classification using python, scikit-learn and NLTK", "created": "2017-10-30 15:56:57", "language": "Jupyter Notebook", "type": "User", "username": "javedsha", "stars": 272, "forks": 197, "subscribers": 18, "open_issues": 5, "topics": ["machinelearning", "nlp", "text-classification", "scikit-learn", "python", "nltk"]}, {"id": 41565200, "repo_name": "PornDetector", "full_name": "bakwc/PornDetector", "description": "Porn images detector with python, tensorflow, scikit-learn and opencv.", "created": "2015-08-28 19:29:03", "language": "Python", "type": "User", "username": "bakwc", "stars": 271, "forks": 62, "subscribers": 32, "open_issues": 10, "topics": ["opencv", "scikit-learn", "tensorflow", "porn-filter"]}, {"id": 153771517, "repo_name": "NimbusML", "full_name": "microsoft/NimbusML", "description": "Python machine learning package providing simple interoperability between ML.NET and scikit-learn components.", "created": "2018-10-19 11:17:39", "language": "Python", "type": "Organization", "username": "microsoft", "stars": 269, "forks": 63, "subscribers": 2346, "open_issues": 81, "topics": ["machine-learning", "python", "scikit-learn", "ml", "mlnet", "data-science", "nimbusml"]}, {"id": 107973176, "repo_name": "KaggleStruggle", "full_name": "corazzon/KaggleStruggle", "description": "Kaggle Struggle", "created": "2017-10-23 11:32:11", "language": "Jupyter Notebook", "type": "User", "username": "corazzon", "stars": 266, "forks": 294, "subscribers": 34, "open_issues": 0, "topics": ["python", "pandas", "seaborn", "matplotlib", "scikit-learn", "machine-learning"]}, {"id": 136827123, "repo_name": "StockSensation", "full_name": "LinLidi/StockSensation", "description": "\u57fa\u4e8e\u60c5\u611f\u5b57\u5178\u548c\u673a\u5668\u5b66\u4e60\u7684\u80a1\u5e02\u8206\u60c5\u60c5\u611f\u5206\u7c7b\u53ef\u89c6\u5316Web", "created": "2018-06-10 16:49:15", "language": "Python", "type": "User", "username": "LinLidi", "stars": 260, "forks": 113, "subscribers": 23, "open_issues": 4, "topics": ["django", "bootstrap", "python", "machine-learning", "data-visualization", "javascript", "word2vec", "scikit-learn", "stock", "sensation-data"]}, {"id": 63982179, "repo_name": "spherecluster", "full_name": "jasonlaska/spherecluster", "description": "Clustering routines for the unit sphere", "created": "2016-07-22 20:47:03", "language": "Python", "type": "User", "username": "jasonlaska", "stars": 257, "forks": 62, "subscribers": 9, "open_issues": 12, "topics": ["sphericalclustering", "scikit-learn", "k-means", "circular-statistics", "von-mises-fisher", "spherical-k-means", "clustering-algorithm", "sampling", "directional-statistics"]}, {"id": 152000215, "repo_name": "deeplearning_cv_notes", "full_name": "jayboxyz/deeplearning_cv_notes", "description": ":notebook: deepleaning and cv notes.", "created": "2018-10-08 01:08:39", "language": "Jupyter Notebook", "type": "User", "username": "jayboxyz", "stars": 256, "forks": 101, "subscribers": 15, "open_issues": 36, "topics": ["tensorflow", "python", "deeplearning", "numpy", "matplotlib", "scikit-learn", "opencv", "matlab"]}, {"id": 200869792, "repo_name": "lale", "full_name": "IBM/lale", "description": "Library for Semi-Automated Data Science", "created": "2019-08-06 14:39:27", "language": "Python", "type": "Organization", "username": "IBM", "stars": 250, "forks": 62, "subscribers": 20, "open_issues": 25, "topics": ["scikit-learn", "automl", "automated-machine-learning", "hyperparameter-optimization", "hyperparameter-tuning", "hyperparameter-search", "python", "artificial-intelligence", "pipeline-tests", "pipeline-testing", "dataquality", "data-science", "machine-learning", "ibm-research", "ibm-research-ai", "interoperability"]}, {"id": 92041236, "repo_name": "hydro-serving", "full_name": "Hydrospheredata/hydro-serving", "description": "MLOps Platform", "created": "2017-05-22 10:27:30", "language": "Mustache", "type": "Organization", "username": "Hydrospheredata", "stars": 249, "forks": 41, "subscribers": 25, "open_issues": 2, "topics": ["serving", "scoring", "spark", "tensorflow", "scikit-learn", "serverless", "pipelines", "realtime", "machine-learning", "models"]}, {"id": 88780543, "repo_name": "scikit-garden", "full_name": "scikit-garden/scikit-garden", "description": "A garden for scikit-learn compatible trees", "created": "2017-04-19 19:00:21", "language": "Python", "type": "Organization", "username": "scikit-garden", "stars": 246, "forks": 61, "subscribers": 12, "open_issues": 48, "topics": ["scikit-learn-api", "machine-learning", "python", "forest", "tree", "scientific-computing"]}, {"id": 136045156, "repo_name": "scipy-2018-sklearn", "full_name": "amueller/scipy-2018-sklearn", "description": " Scipy 2018 scikit-learn tutorial by Guillaume Lemaitre and Andreas Mueller ", "created": "2018-06-04 15:24:39", "language": "Jupyter Notebook", "type": "User", "username": "amueller", "stars": 246, "forks": 158, "subscribers": 16, "open_issues": 3, "topics": []}, {"id": 57143948, "repo_name": "forest-confidence-interval", "full_name": "scikit-learn-contrib/forest-confidence-interval", "description": "Confidence intervals for scikit-learn forest algorithms", "created": "2016-04-26 16:23:12", "language": "HTML", "type": "Organization", "username": "scikit-learn-contrib", "stars": 244, "forks": 42, "subscribers": 15, "open_issues": 21, "topics": []}, {"id": 323082026, "repo_name": "abess", "full_name": "abess-team/abess", "description": "Fast Best-Subset Selection Library", "created": "2020-12-20 13:47:31", "language": "C++", "type": "Organization", "username": "abess-team", "stars": 242, "forks": 25, "subscribers": 5, "open_issues": 3, "topics": ["polynomial-algorithm", "high-dimensional-data", "best-subset-selection", "machine-learning", "python", "r", "scikit-learn", "principal-component-analysis", "linear-regression", "classification-algorithm"]}, {"id": 49744402, "repo_name": "project-template", "full_name": "scikit-learn-contrib/project-template", "description": "A template for scikit-learn extensions", "created": "2016-01-15 20:54:59", "language": "Python", "type": "Organization", "username": "scikit-learn-contrib", "stars": 241, "forks": 85, "subscribers": 13, "open_issues": 12, "topics": []}, {"id": 54540136, "repo_name": "svm_mnist_digit_classification", "full_name": "ksopyla/svm_mnist_digit_classification", "description": "MNIST digit classification with scikit-learn and Support Vector Machine (SVM) algorithm.", "created": "2016-03-23 07:38:27", "language": "Python", "type": "User", "username": "ksopyla", "stars": 239, "forks": 98, "subscribers": 13, "open_issues": 1, "topics": ["support-vector-machine", "scikit-learn", "mnist-classification", "svm-mnist", "svm-mnist-classification", "scikitlearn-mnist"]}, {"id": 170117229, "repo_name": "neptune-client", "full_name": "neptune-ai/neptune-client", "description": ":bookmark: Experiment tracker and model registry for production teams. :ledger: Experiment tracking, model and dataset versioning, model training monitoring.", "created": "2019-02-11 11:25:57", "language": "Python", "type": "Organization", "username": "neptune-ai", "stars": 237, "forks": 21, "subscribers": 10, "open_issues": 18, "topics": ["deep-learning", "machine-learning", "reinforcement-learning", "experiment-tracking", "model-versioning", "model-registry", "model-repository", "model-monitoring", "data-versioning", "experiment-tracker", "pytorch", "keras", "lightgbm", "xgboost", "sklearn", "optuna", "tensorflow", "jupyter-notebook", "scikit-learn", "mlops"]}, {"id": 171210574, "repo_name": "bert-sklearn", "full_name": "charles9n/bert-sklearn", "description": "a sklearn wrapper for Google's BERT model", "created": "2019-02-18 03:48:10", "language": "Jupyter Notebook", "type": "User", "username": "charles9n", "stars": 236, "forks": 54, "subscribers": 10, "open_issues": 8, "topics": ["nlp", "natural-language-processing", "transfer-learning", "pytorch", "language-model", "scikit-learn", "bert", "ner", "named-entity-recognition", "conll-2003"]}, {"id": 120085546, "repo_name": "skift", "full_name": "shaypal5/skift", "description": "scikit-learn wrappers for Python fastText.", "created": "2018-02-03 11:37:21", "language": "Jupyter Notebook", "type": "User", "username": "shaypal5", "stars": 226, "forks": 24, "subscribers": 10, "open_issues": 1, "topics": []}, {"id": 12650995, "repo_name": "sklearn_pycon2014", "full_name": "jakevdp/sklearn_pycon2014", "description": "Repository containing files for my PyCon 2014 scikit-learn tutorial.", "created": "2013-09-06 18:09:32", "language": "Jupyter Notebook", "type": "User", "username": "jakevdp", "stars": 225, "forks": 248, "subscribers": 25, "open_issues": 0, "topics": []}, {"id": 103411095, "repo_name": "pqkmeans", "full_name": "DwangoMediaVillage/pqkmeans", "description": "Fast and memory-efficient clustering ", "created": "2017-09-13 14:37:38", "language": "Jupyter Notebook", "type": "Organization", "username": "DwangoMediaVillage", "stars": 220, "forks": 44, "subscribers": 22, "open_issues": 0, "topics": ["clustering", "k-means", "product-quantization", "scikit-learn", "computer-vision"]}, {"id": 17885881, "repo_name": "sklearn-compiledtrees", "full_name": "ajtulloch/sklearn-compiledtrees", "description": "Compiled Decision Trees for scikit-learn", "created": "2014-03-18 23:40:08", "language": "Python", "type": "User", "username": "ajtulloch", "stars": 219, "forks": 37, "subscribers": 10, "open_issues": 3, "topics": []}, {"id": 109879364, "repo_name": "PyMO", "full_name": "omimo/PyMO", "description": "A library for machine learning research on motion capture data ", "created": "2017-11-07 19:13:29", "language": "Python", "type": "User", "username": "omimo", "stars": 218, "forks": 48, "subscribers": 17, "open_issues": 7, "topics": ["python", "machine-learning", "mocap", "motion-capture", "scikit-learn", "library"]}, {"id": 60784756, "repo_name": "sklearn-genetic", "full_name": "manuel-calzolari/sklearn-genetic", "description": "Genetic feature selection module for scikit-learn", "created": "2016-06-09 15:19:03", "language": "Python", "type": "User", "username": "manuel-calzolari", "stars": 215, "forks": 54, "subscribers": 10, "open_issues": 6, "topics": []}, {"id": 7281923, "repo_name": "pu-learning", "full_name": "aldro61/pu-learning", "description": "Positive and unlabeled learning wrappers for scikit-learn", "created": "2012-12-22 02:56:52", "language": "Python", "type": "User", "username": "aldro61", "stars": 213, "forks": 84, "subscribers": 12, "open_issues": 2, "topics": []}, {"id": 125562741, "repo_name": "emlearn", "full_name": "emlearn/emlearn", "description": "Machine Learning inference engine for Microcontrollers and Embedded devices", "created": "2018-03-16 19:46:17", "language": "Python", "type": "Organization", "username": "emlearn", "stars": 204, "forks": 30, "subscribers": 13, "open_issues": 13, "topics": ["machine-learning", "random-forest", "classifier", "embedded-systems", "microcontroller", "scikit-learn", "c", "python", "inference", "neural-networks", "keras", "tensorflow", "tinyml", "sklearn"]}, {"id": 81612130, "repo_name": "Bet-on-Sibyl", "full_name": "jrbadiabo/Bet-on-Sibyl", "description": "Machine Learning Model for Sport Predictions (Football, Basketball, Baseball, Hockey, Soccer & Tennis) ", "created": "2017-02-10 22:18:08", "language": "Jupyter Notebook", "type": "User", "username": "jrbadiabo", "stars": 203, "forks": 84, "subscribers": 38, "open_issues": 1, "topics": ["machine-learning", "sportsanalytics", "sports-stats", "machine-learning-algorithms", "predictive-analysis", "algorithms", "selenium", "beautifulsoup", "python", "python-2", "scikit-learn", "web-scraping", "web-crawling", "machinelearning"]}, {"id": 50962295, "repo_name": "sklearn-benchmarks", "full_name": "rhiever/sklearn-benchmarks", "description": "A centralized repository to report scikit-learn model performance across a variety of parameter settings and data sets.", "created": "2016-02-03 00:31:11", "language": "Jupyter Notebook", "type": "User", "username": "rhiever", "stars": 200, "forks": 51, "subscribers": 18, "open_issues": 4, "topics": ["python", "scikit-learn", "benchmarking", "machine-learning"]}, {"id": 174432286, "repo_name": "multimodal-speech-emotion-recognition", "full_name": "Demfier/multimodal-speech-emotion-recognition", "description": "Lightweight and Interpretable ML Model for Speech Emotion Recognition and Ambiguity Resolution (trained on IEMOCAP dataset)", "created": "2019-03-07 22:50:22", "language": "Jupyter Notebook", "type": "User", "username": "Demfier", "stars": 199, "forks": 67, "subscribers": 8, "open_issues": 6, "topics": ["speech-emotion-recognition", "pytorch", "scikit-learn", "pandas", "librosa", "multimodal-emotion-recognition", "python3", "iemocap", "lstm"]}, {"id": 61526014, "repo_name": "highdimensional-decision-boundary-plot", "full_name": "tmadl/highdimensional-decision-boundary-plot", "description": "Estimating and plotting the decision boundary (decision surface) of machine learning classifiers in higher dimensions (scikit-learn compatible)", "created": "2016-06-20 07:35:14", "language": "Python", "type": "User", "username": "tmadl", "stars": 197, "forks": 26, "subscribers": 10, "open_issues": 1, "topics": []}, {"id": 87168186, "repo_name": "gesture-recognition", "full_name": "Gogul09/gesture-recognition", "description": ":hand: Recognizing \"Hand Gestures\" using OpenCV and Python.", "created": "2017-04-04 09:20:34", "language": "Python", "type": "User", "username": "Gogul09", "stars": 197, "forks": 136, "subscribers": 11, "open_issues": 14, "topics": ["gesture-recognition", "opencv", "python3", "scikit-learn", "computer-vision"]}, {"id": 70350749, "repo_name": "ShallowLearn", "full_name": "giacbrd/ShallowLearn", "description": "An experiment about re-implementing supervised learning models based on shallow neural network approaches (e.g. fastText) with some additional exclusive features and nice API. Written in Python and fully compatible with Scikit-learn.", "created": "2016-10-08 18:44:11", "language": "Python", "type": "User", "username": "giacbrd", "stars": 197, "forks": 30, "subscribers": 18, "open_issues": 17, "topics": ["word2vec", "fasttext", "scikit-learn", "machine-learning", "neural-network", "gensim", "text-mining", "text-classification", "supervised-learning", "online-learning", "word-embeddings", "shallow-learning"]}, {"id": 89341167, "repo_name": "cheatsheets.pdf", "full_name": "qg0/cheatsheets.pdf", "description": "\ud83d\udcda Various cheatsheets in PDF", "created": "2017-04-25 09:15:23", "language": "Jupyter Notebook", "type": "User", "username": "qg0", "stars": 197, "forks": 90, "subscribers": 22, "open_issues": 0, "topics": ["pandas", "keras", "python", "django", "deep-learning", "scikit-learn", "skipy", "numpy", "python3", "django-framework", "r", "jupyter", "jython", "ipython", "cheatsheet", "apache-spark", "cheat-sheets", "cheatsheets", "jquery", "php"]}, {"id": 60922229, "repo_name": "skggm", "full_name": "skggm/skggm", "description": "Scikit-learn compatible estimation of general graphical models", "created": "2016-06-11 18:35:56", "language": "Python", "type": "Organization", "username": "skggm", "stars": 195, "forks": 34, "subscribers": 10, "open_issues": 31, "topics": ["scikit-learn", "machine-learning", "graphical-models", "gaussian-graphical-models", "covariance-matrix", "ensemble-learning", "nonparametric", "rank-correlation", "general-graphical-models", "skggm", "graphical-lasso", "precision-matrix", "concentration-graph"]}, {"id": 40084759, "repo_name": "scikit-rvm", "full_name": "JamesRitchie/scikit-rvm", "description": "Relevance Vector Machine implementation using the scikit-learn API.", "created": "2015-08-02 16:04:36", "language": "Python", "type": "User", "username": "JamesRitchie", "stars": 193, "forks": 67, "subscribers": 14, "open_issues": 11, "topics": []}, {"id": 138684835, "repo_name": "Machine-Learning-and-Reinforcement-Learning-in-Finance", "full_name": "joelowj/Machine-Learning-and-Reinforcement-Learning-in-Finance", "description": "Machine Learning and Reinforcement Learning in Finance New York University Tandon School of Engineering", "created": "2018-06-26 04:30:08", "language": "Jupyter Notebook", "type": "User", "username": "joelowj", "stars": 193, "forks": 98, "subscribers": 15, "open_issues": 6, "topics": ["machine-learning", "finance", "reinforcement-learning", "python", "scikit-learn", "tensorflow", "tensorflow-examples", "coursera"]}, {"id": 411662063, "repo_name": "mlnote", "full_name": "chokkan/mlnote", "description": "\u6a5f\u68b0\u5b66\u7fd2\u5e33", "created": "2021-09-29 12:18:53", "language": "Jupyter Notebook", "type": "User", "username": "chokkan", "stars": 192, "forks": 13, "subscribers": 4, "open_issues": 1, "topics": ["python", "numpy", "matplotlib", "scikit-learn", "pytorch"]}, {"id": 120064371, "repo_name": "skits", "full_name": "EthanRosenthal/skits", "description": "scikit-learn-inspired time series", "created": "2018-02-03 06:02:58", "language": "Python", "type": "User", "username": "EthanRosenthal", "stars": 187, "forks": 17, "subscribers": 13, "open_issues": 4, "topics": ["time-series", "machine-learning"]}, {"id": 92949685, "repo_name": "Practical-Machine-Learning-With-Python", "full_name": "savan77/Practical-Machine-Learning-With-Python", "description": "Machine Learning Tutorials in Python", "created": "2017-05-31 13:40:04", "language": "Jupyter Notebook", "type": "User", "username": "savan77", "stars": 185, "forks": 80, "subscribers": 18, "open_issues": 0, "topics": ["machine-learning", "scikit-learn", "python", "tensorflow", "machine-learning-tutorials"]}, {"id": 272777821, "repo_name": "MLServer", "full_name": "SeldonIO/MLServer", "description": "An inference server for your machine learning models, including support for multiple frameworks, multi-model serving and more", "created": "2020-06-16 18:01:37", "language": "Python", "type": "Organization", "username": "SeldonIO", "stars": 183, "forks": 49, "subscribers": 16, "open_issues": 68, "topics": ["machine-learning", "scikit-learn", "xgboost", "lightgbm", "mlflow", "seldon-core", "kfserving"]}, {"id": 189022232, "repo_name": "mnist-classification", "full_name": "zhengyima/mnist-classification", "description": "Pytorch\u3001Scikit-learn\u5b9e\u73b0\u591a\u79cd\u5206\u7c7b\u65b9\u6cd5\uff0c\u5305\u62ec\u903b\u8f91\u56de\u5f52\uff08Logistic Regression\uff09\u3001\u591a\u5c42\u611f\u77e5\u673a\uff08MLP\uff09\u3001\u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09\u3001K\u8fd1\u90bb\uff08KNN\uff09\u3001CNN\u3001RNN\uff0c\u6781\u7b80\u4ee3\u7801\u9002\u5408\u65b0\u624b\u5c0f\u767d\u5165\u95e8\uff0c\u9644\u82f1\u6587\u5b9e\u9a8c\u62a5\u544a\uff08ACM\u6a21\u677f\uff09", "created": "2019-05-28 12:16:42", "language": "Python", "type": "User", "username": "zhengyima", "stars": 183, "forks": 71, "subscribers": 4, "open_issues": 0, "topics": ["python3", "pytorch", "scikit-learn", "cnn", "knn", "mlp", "rnn", "svm", "logistic-regression", "mnist", "machine-learning", "mnist-classification", "deep-learning"]}, {"id": 186586661, "repo_name": "TSCV", "full_name": "WenjieZ/TSCV", "description": "Time Series Cross-Validation -- an extension for scikit-learn", "created": "2019-05-14 09:10:38", "language": "Python", "type": "User", "username": "WenjieZ", "stars": 181, "forks": 28, "subscribers": 12, "open_issues": 5, "topics": ["time-series", "cross-validation", "model-selection", "backtesting", "hyperparameter-optimization", "tuning-parameters", "machine-learning", "data-science"]}, {"id": 153842646, "repo_name": "pymc-learn", "full_name": "pymc-learn/pymc-learn", "description": "pymc-learn: Practical probabilistic machine learning in Python ", "created": "2018-10-19 21:15:03", "language": "Python", "type": "Organization", "username": "pymc-learn", "stars": 180, "forks": 24, "subscribers": 16, "open_issues": 12, "topics": ["pymc3", "scikit-learn", "pymc4"]}, {"id": 60269016, "repo_name": "stacking", "full_name": "ikki407/stacking", "description": "Stacked Generalization (Ensemble Learning)", "created": "2016-06-02 14:04:37", "language": "Python", "type": "User", "username": "ikki407", "stars": 180, "forks": 74, "subscribers": 8, "open_issues": 20, "topics": ["stacking", "ensemble-learning", "scikit-learn", "xgboost", "prediction", "ensemble"]}, {"id": 223575230, "repo_name": "scikit-hts", "full_name": "carlomazzaferro/scikit-hts", "description": "Hierarchical Time Series Forecasting with a familiar API", "created": "2019-11-23 11:08:32", "language": "Python", "type": "User", "username": "carlomazzaferro", "stars": 179, "forks": 35, "subscribers": 12, "open_issues": 17, "topics": ["time-series", "machine-learning", "hierarchical-data", "fbprophet", "statsmodels", "exponential-smoothing", "time-series-analysis", "scikit-learn"]}, {"id": 81822770, "repo_name": "ml-forex-prediction", "full_name": "hayatoy/ml-forex-prediction", "description": "Predicting Forex Future Price with Machine Learning", "created": "2017-02-13 12:27:11", "language": "Jupyter Notebook", "type": "User", "username": "hayatoy", "stars": 176, "forks": 90, "subscribers": 18, "open_issues": 6, "topics": ["machine-learning", "ml", "python", "scikit-learn", "forex-prediction"]}, {"id": 259694630, "repo_name": "data-umbrella-scikit-learn-sprint", "full_name": "data-umbrella/data-umbrella-scikit-learn-sprint", "description": "scikit-learn sprint docs", "created": "2020-04-28 16:38:26", "language": null, "type": "Organization", "username": "data-umbrella", "stars": 175, "forks": 34, "subscribers": 9, "open_issues": 4, "topics": ["scikit-learn", "sprint", "python", "datascience", "machinelearning", "opensource", "diversity", "inclusion"]}, {"id": 8472054, "repo_name": "sklearn_pycon2013", "full_name": "jakevdp/sklearn_pycon2013", "description": "Files for my scikit-learn tutorial at PyCon 2013", "created": "2013-02-28 04:45:23", "language": "Jupyter Notebook", "type": "User", "username": "jakevdp", "stars": 172, "forks": 102, "subscribers": 20, "open_issues": 3, "topics": []}, {"id": 153461711, "repo_name": "fenchel-young-losses", "full_name": "mblondel/fenchel-young-losses", "description": "Probabilistic classification in PyTorch/TensorFlow/scikit-learn with Fenchel-Young losses", "created": "2018-10-17 13:28:51", "language": "Python", "type": "User", "username": "mblondel", "stars": 171, "forks": 9, "subscribers": 11, "open_issues": 0, "topics": ["loss-functions", "probabilistic-classification", "pytorch", "tensorflow", "sklearn"]}, {"id": 121855980, "repo_name": "stability-selection", "full_name": "scikit-learn-contrib/stability-selection", "description": "scikit-learn compatible implementation of stability selection.", "created": "2018-02-17 13:06:56", "language": "Python", "type": "Organization", "username": "scikit-learn-contrib", "stars": 170, "forks": 51, "subscribers": 11, "open_issues": 18, "topics": ["scikit-learn", "machine-learning", "feature-selection", "statistics"]}, {"id": 147740219, "repo_name": "timeseriescv", "full_name": "sam31415/timeseriescv", "description": "Scikit-learn style cross-validation classes for time series data", "created": "2018-09-06 22:23:29", "language": "Python", "type": "User", "username": "sam31415", "stars": 169, "forks": 50, "subscribers": 13, "open_issues": 3, "topics": []}, {"id": 161444039, "repo_name": "py4chemoinformatics", "full_name": "Mishima-syk/py4chemoinformatics", "description": "Python for chemoinformatics", "created": "2018-12-12 06:39:41", "language": "Jupyter Notebook", "type": "Organization", "username": "Mishima-syk", "stars": 168, "forks": 62, "subscribers": 15, "open_issues": 2, "topics": ["chemoinformatics", "scikit-learn", "cheminformatics", "python", "rdkit", "jupyter"]}, {"id": 365313678, "repo_name": "feature-engineering-tutorials", "full_name": "rasgointelligence/feature-engineering-tutorials", "description": "Data Science Feature Engineering and Selection Tutorials", "created": "2021-05-07 17:57:05", "language": "Jupyter Notebook", "type": "Organization", "username": "rasgointelligence", "stars": 165, "forks": 60, "subscribers": 8, "open_issues": 1, "topics": ["notebook", "tutorials", "tutorial", "python", "pandas", "data-science", "machine-learning", "scikit-learn", "feature-engineering", "feature-selection", "features", "xgboost", "pandas-profiling", "sweetviz", "pyrasgo", "jupyter", "exploratory-data-analysis", "data-cleaning"]}, {"id": 102988035, "repo_name": "SelfDrivingCar", "full_name": "sidroopdaska/SelfDrivingCar", "description": "A collection of all projects pertaining to different layers in the SDC software stack", "created": "2017-09-09 22:13:30", "language": "Jupyter Notebook", "type": "User", "username": "sidroopdaska", "stars": 160, "forks": 81, "subscribers": 10, "open_issues": 2, "topics": ["self-driving-car", "deep-learning", "deep-neural-networks", "opencv", "computer-vision", "behavioral-cloning", "lane-lines-detection", "computational-graphs", "backpropagation", "deep-learning-library", "keras", "tensorflow", "classification", "vehicle-detection-and-tracking", "python3", "lane-tracking", "scikit-learn", "scikit-image"]}, {"id": 82921673, "repo_name": "predictive-maintenance", "full_name": "Samimust/predictive-maintenance", "description": "Data Wrangling, EDA, Feature Engineering, Model Selection, Regression, Binary and Multi-class Classification (Python, scikit-learn) ", "created": "2017-02-23 11:40:40", "language": "Jupyter Notebook", "type": "User", "username": "Samimust", "stars": 158, "forks": 121, "subscribers": 13, "open_issues": 0, "topics": []}, {"id": 83580831, "repo_name": "ml-training-advanced", "full_name": "amueller/ml-training-advanced", "description": "Materials for the \"Advanced Scikit-learn\" class in the afternoon", "created": "2017-03-01 17:16:15", "language": "Jupyter Notebook", "type": "User", "username": "amueller", "stars": 157, "forks": 99, "subscribers": 5, "open_issues": 0, "topics": []}, {"id": 108652226, "repo_name": "python-clustering-exercises", "full_name": "benjaminwilson/python-clustering-exercises", "description": "Jupyter Notebook exercises for k-means clustering with Python 3 and scikit-learn", "created": "2017-10-28 13:39:45", "language": "Jupyter Notebook", "type": "User", "username": "benjaminwilson", "stars": 157, "forks": 64, "subscribers": 13, "open_issues": 1, "topics": ["k-means", "clustering", "notebook", "jupyter-notebook", "scikit-learn", "python3"]}, {"id": 145867505, "repo_name": "nyoka", "full_name": "SoftwareAG/nyoka", "description": "Nyoka is a Python library that helps to export ML models into PMML (PMML 4.4.1 Standard).", "created": "2018-08-23 14:47:04", "language": "Python", "type": "Organization", "username": "SoftwareAG", "stars": 157, "forks": 35, "subscribers": 13, "open_issues": 4, "topics": ["pmml", "python", "python-library", "nyoka", "pmml-exporter", "machine-learning", "scikit-learn", "xgboost", "lightgbm", "statsmodels"]}, {"id": 124969197, "repo_name": "qlik-py-tools", "full_name": "nabeel-oz/qlik-py-tools", "description": "Data Science algorithms for Qlik implemented as a Python Server Side Extension (SSE).", "created": "2018-03-13 00:34:50", "language": "Python", "type": "User", "username": "nabeel-oz", "stars": 155, "forks": 79, "subscribers": 25, "open_issues": 21, "topics": ["qlik", "qlik-sense", "server-side-extension", "data-science", "analytics", "advanced-analytics-integration", "advanced-analytics", "python", "clustering", "hdbscan", "forecasting", "fbprophet", "facebook-prophet", "sklearn", "scikit-learn", "machine-learning", "predictive-analytics", "qlik-oss", "keras", "deep-learning"]}, {"id": 136474830, "repo_name": "FIFA-2018-World-cup-predictions", "full_name": "itsmuriuki/FIFA-2018-World-cup-predictions", "description": "I used Machine Learning to make a Logistic Regression model using scikit-learn, pandas, numpy, seaborn and matplotlib to predict the results of FIFA 2018 World Cup.", "created": "2018-06-07 12:34:12", "language": "Jupyter Notebook", "type": "User", "username": "itsmuriuki", "stars": 152, "forks": 118, "subscribers": 16, "open_issues": 2, "topics": []}, {"id": 39253863, "repo_name": "scikit-learn.github.io", "full_name": "scikit-learn/scikit-learn.github.io", "description": "Scikit-learn website hosted by github", "created": "2015-07-17 12:49:37", "language": "HTML", "type": "Organization", "username": "scikit-learn", "stars": 151, "forks": 70, "subscribers": 40, "open_issues": 1, "topics": []}, {"id": 140489757, "repo_name": "dash-svm", "full_name": "plotly/dash-svm", "description": "Interactive SVM Explorer, using Dash and scikit-learn ", "created": "2018-07-10 21:37:11", "language": "Python", "type": "Organization", "username": "plotly", "stars": 150, "forks": 38, "subscribers": 13, "open_issues": 1, "topics": ["dash", "plotly-dash", "scikit-learn", "svm"]}, {"id": 43635670, "repo_name": "simple-machine-learning-examples", "full_name": "chribsen/simple-machine-learning-examples", "description": "This repo contains simple machine learning examples using scikit-learn and Python.", "created": "2015-10-04 12:22:24", "language": "Python", "type": "User", "username": "chribsen", "stars": 150, "forks": 95, "subscribers": 18, "open_issues": 3, "topics": []}, {"id": 95149886, "repo_name": "jarvis", "full_name": "usnistgov/jarvis", "description": "JARVIS-Tools: an open-source software package for data-driven atomistic materials design", "created": "2017-06-22 19:34:02", "language": "Python", "type": "Organization", "username": "usnistgov", "stars": 150, "forks": 87, "subscribers": 22, "open_issues": 29, "topics": ["dft", "md", "vasp", "lammps", "scikit-learn", "tensorflow", "pytorch", "atomistic-simulations", "materials-informatics", "mgi", "ai", "quantum-computing"]}, {"id": 147727117, "repo_name": "ml-workshop-4-of-4", "full_name": "amueller/ml-workshop-4-of-4", "description": "Advanced Machine Learning with Scikit-learn part II", "created": "2018-09-06 20:03:10", "language": "HTML", "type": "User", "username": "amueller", "stars": 148, "forks": 93, "subscribers": 13, "open_issues": 0, "topics": []}, {"id": 297089520, "repo_name": "modelstore", "full_name": "operatorai/modelstore", "description": "\ud83c\udfec modelstore is a Python library that allows you to version, export, and save a machine learning model to your filesystem or a cloud storage provider.", "created": "2020-09-20 14:06:18", "language": "Python", "type": "Organization", "username": "operatorai", "stars": 148, "forks": 3, "subscribers": 5, "open_issues": 4, "topics": ["python-library", "modelstore", "machine-learning", "data-science", "scikit-learn", "pytorch", "tensorflow", "mlops", "s3-storage", "transformer", "keras"]}, {"id": 10390704, "repo_name": "pyensemble", "full_name": "dclambert/pyensemble", "description": "An implementation of Caruana et al's Ensemble Selection algorithm in Python, based on scikit-learn", "created": "2013-05-30 20:03:31", "language": "Python", "type": "User", "username": "dclambert", "stars": 147, "forks": 52, "subscribers": 15, "open_issues": 2, "topics": ["ensemble", "scikit-learn", "ensemble-selection"]}, {"id": 113700496, "repo_name": "Interactive_Machine_Learning", "full_name": "tirthajyoti/Interactive_Machine_Learning", "description": "IPython widgets, interactive plots, interactive machine learning", "created": "2017-12-09 20:53:11", "language": "Jupyter Notebook", "type": "User", "username": "tirthajyoti", "stars": 147, "forks": 83, "subscribers": 9, "open_issues": 1, "topics": ["python", "machine-learning", "interactive", "jupyter-notebook", "data-science", "regression", "classification", "animation", "scikit-learn", "supervised-learning", "statistics", "analytics"]}, {"id": 152974952, "repo_name": "Spotify-Recommendation-Engine", "full_name": "ucalyptus/Spotify-Recommendation-Engine", "description": "Music Recommender System", "created": "2018-10-14 13:09:02", "language": "Jupyter Notebook", "type": "User", "username": "ucalyptus", "stars": 144, "forks": 108, "subscribers": 7, "open_issues": 2, "topics": ["python", "oauth", "spotify", "recommender-system", "recommendation-engine", "machine-learning", "scikit-learn", "recommendation-system", "music-recommender", "spotify-recommendation-engine", "notebook"]}, {"id": 35104122, "repo_name": "hep_ml", "full_name": "arogozhnikov/hep_ml", "description": "Machine Learning for High Energy Physics.", "created": "2015-05-05 14:17:36", "language": "Jupyter Notebook", "type": "User", "username": "arogozhnikov", "stars": 140, "forks": 51, "subscribers": 16, "open_issues": 19, "topics": ["machine-learning", "high-energy-physics", "python", "splot", "neural-networks", "boosting-algorithms", "reweighting-algorithms", "scikit-learn"]}, {"id": 203360264, "repo_name": "ai-deployment", "full_name": "aipredict/ai-deployment", "description": "\u5173\u6ce8AI\u6a21\u578b\u4e0a\u7ebf\u3001\u6a21\u578b\u90e8\u7f72", "created": "2019-08-20 11:14:16", "language": "Jupyter Notebook", "type": "User", "username": "aipredict", "stars": 140, "forks": 46, "subscribers": 6, "open_issues": 0, "topics": ["pmml", "onnx", "scikit-learn", "xgboost", "lightgbm", "pyspark", "spark-ml", "keras", "tensorflow", "pytorch", "mxnet", "deploy"]}, {"id": 61792100, "repo_name": "Python-Machine-Learning-zh", "full_name": "basicv8vc/Python-Machine-Learning-zh", "description": "Python\u673a\u5668\u5b66\u4e60\uff0c\u673a\u5668\u5b66\u4e60\u5165\u95e8\u9996\u9009\u3002", "created": "2016-06-23 09:18:59", "language": "Jupyter Notebook", "type": "User", "username": "basicv8vc", "stars": 137, "forks": 64, "subscribers": 10, "open_issues": 0, "topics": ["machine-learning", "python", "scikit-learn"]}, {"id": 312982689, "repo_name": "handson-ml2-vn", "full_name": "mlbvn/handson-ml2-vn", "description": "Jupyter Notebook cung c\u1ea5p c\u00e1c ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n v\u1ec1 H\u1ecdc M\u00e1y v\u00e0 H\u1ecdc S\u00e2u b\u1eb1ng Python v\u1edbi Scikit-Learn, Keras, v\u00e0 TensorFlow 2.", "created": "2020-11-15 07:47:00", "language": "Jupyter Notebook", "type": "Organization", "username": "mlbvn", "stars": 136, "forks": 77, "subscribers": 11, "open_issues": 1, "topics": ["handson-ml2", "machine-learning", "deep-learning", "python", "scikit-learn", "keras", "tensorflow2", "mlbvn", "jupyter-notebooks"]}, {"id": 352026071, "repo_name": "linear-tree", "full_name": "cerlymarco/linear-tree", "description": "A python library to build Model Trees with Linear Models at the leaves.", "created": "2021-03-27 08:57:48", "language": "Jupyter Notebook", "type": "User", "username": "cerlymarco", "stars": 135, "forks": 24, "subscribers": 8, "open_issues": 1, "topics": ["machine-learning", "tree", "linear-models", "decision-trees", "scikit-learn", "model-trees", "random-forest", "boosting-tree"]}, {"id": 132312594, "repo_name": "Awesome-Scripts", "full_name": "DedSecInside/Awesome-Scripts", "description": "A collection of awesome scripts from developers around the globe.", "created": "2018-05-06 06:23:13", "language": "Python", "type": "Organization", "username": "DedSecInside", "stars": 134, "forks": 84, "subscribers": 7, "open_issues": 3, "topics": ["python3", "perl", "script", "javascript", "ruby", "shell", "awesome", "awesome-list", "hacktoberfest", "first-timers", "opencv", "knn", "scikit-learn", "hacking", "hacktoberfest2020"]}, {"id": 104863604, "repo_name": "topic-model-tutorial", "full_name": "derekgreene/topic-model-tutorial", "description": "Tutorial on topic models in Python with scikit-learn", "created": "2017-09-26 09:18:49", "language": "Jupyter Notebook", "type": "User", "username": "derekgreene", "stars": 133, "forks": 45, "subscribers": 6, "open_issues": 1, "topics": []}, {"id": 183883255, "repo_name": "Machine-Learning-Concepts", "full_name": "free-to-learn/Machine-Learning-Concepts", "description": "Machine Learning Concepts with Concepts", "created": "2019-04-28 08:58:48", "language": "Jupyter Notebook", "type": "Organization", "username": "free-to-learn", "stars": 133, "forks": 50, "subscribers": 12, "open_issues": 0, "topics": ["machine-learning", "machine-learning-algorithms", "machinelearning-python", "python-3", "machine-learning-library", "ml", "stastistical-sampling", "regression", "linear-regression", "multiple-linear-regression", "polynomial-regression", "concepts", "data-science", "python", "deep-learning", "statistics", "scikit-learn"]}, {"id": 429406873, "repo_name": "converse", "full_name": "AnjanaRita/converse", "description": "Conversational text Analysis using various NLP techniques", "created": "2021-11-18 11:40:44", "language": "Jupyter Notebook", "type": "User", "username": "AnjanaRita", "stars": 132, "forks": 9, "subscribers": 5, "open_issues": 1, "topics": ["nlp", "text", "text-mining", "pytorch", "transformers", "huggingface", "spacy", "machine-learning", "conversational-ai", "nlu", "topic-modeling", "emotion-recognition", "sentiment-analysis", "callcenter-analysis", "scikit-learn", "speech-to-text"]}, {"id": 39585812, "repo_name": "sklearn_pydata2015", "full_name": "jakevdp/sklearn_pydata2015", "description": "Scikit-Learn Tutorial for PyData Seattle 2015", "created": "2015-07-23 18:53:49", "language": "Python", "type": "User", "username": "jakevdp", "stars": 130, "forks": 118, "subscribers": 13, "open_issues": 1, "topics": []}, {"id": 147727066, "repo_name": "ml-workshop-3-of-4", "full_name": "amueller/ml-workshop-3-of-4", "description": "Advanced Machine Learning with Scikit-learn part I", "created": "2018-09-06 20:02:43", "language": "HTML", "type": "User", "username": "amueller", "stars": 129, "forks": 110, "subscribers": 15, "open_issues": 0, "topics": []}, {"id": 89489455, "repo_name": "ml-email-clustering", "full_name": "anthdm/ml-email-clustering", "description": "Email clustering with machine learning", "created": "2017-04-26 14:18:40", "language": "Python", "type": "User", "username": "anthdm", "stars": 129, "forks": 51, "subscribers": 7, "open_issues": 2, "topics": ["machine-learning", "scikit-learn", "clustering", "data-science"]}, {"id": 65031372, "repo_name": "pydata-chicago2016-ml-tutorial", "full_name": "rasbt/pydata-chicago2016-ml-tutorial", "description": "Machine learning with scikit-learn tutorial at PyData Chicago 2016", "created": "2016-08-05 15:59:54", "language": "Jupyter Notebook", "type": "User", "username": "rasbt", "stars": 128, "forks": 115, "subscribers": 16, "open_issues": 0, "topics": ["scikit-learn", "tutorial", "pydata", "machine-learning"]}, {"id": 124923731, "repo_name": "zoltar", "full_name": "spotify/zoltar", "description": "Common library for serving TensorFlow, XGBoost and scikit-learn models in production.", "created": "2018-03-12 17:09:52", "language": "Java", "type": "Organization", "username": "spotify", "stars": 127, "forks": 35, "subscribers": 28, "open_issues": 21, "topics": ["model-serving", "machine-learning", "xgboost", "tensorflow", "java"]}, {"id": 67780682, "repo_name": "facial-expression-recognition-svm", "full_name": "amineHorseman/facial-expression-recognition-svm", "description": "Training SVM classifier to recognize people expressions (emotions) on Fer2013 dataset", "created": "2016-09-09 08:23:06", "language": "Python", "type": "User", "username": "amineHorseman", "stars": 127, "forks": 57, "subscribers": 3, "open_issues": 5, "topics": ["svm", "machine-learning", "facial-expression-recognition", "python", "scikit-learn", "fer2013", "hog-features", "hog", "svm-classifier", "sklearn"]}, {"id": 187224566, "repo_name": "clinica", "full_name": "aramis-lab/clinica", "description": "Software platform for clinical neuroimaging studies", "created": "2019-05-17 13:50:31", "language": "Python", "type": "Organization", "username": "aramis-lab", "stars": 127, "forks": 46, "subscribers": 10, "open_issues": 26, "topics": ["neuroimaging", "python", "machine-learning", "brainweb", "bids-format", "ants", "freesurfer", "fsl", "mrtrix3", "spm", "scikit-learn", "neuroscience"]}, {"id": 97234261, "repo_name": "python-flask-sklearn-docker-template", "full_name": "Soluto/python-flask-sklearn-docker-template", "description": "A simple example of python api for real time machine learning, using scikit-learn, Flask and Docker", "created": "2017-07-14 13:00:56", "language": "Python", "type": "Organization", "username": "Soluto", "stars": 126, "forks": 43, "subscribers": 22, "open_issues": 0, "topics": ["docker", "scikit-learn", "flask", "python", "sklearn"]}, {"id": 45096510, "repo_name": "tutorials-scikit-learn", "full_name": "glouppe/tutorials-scikit-learn", "description": "Scikit-Learn tutorials", "created": "2015-10-28 07:42:32", "language": "Jupyter Notebook", "type": "User", "username": "glouppe", "stars": 124, "forks": 52, "subscribers": 13, "open_issues": 1, "topics": []}, {"id": 185643856, "repo_name": "sklearn-audio-transfer-learning", "full_name": "jordipons/sklearn-audio-transfer-learning", "description": "A didactic toolkit to rapidly prototype audio classifiers with pre-trained Tensorflow models and Scikit-learn", "created": "2019-05-08 16:36:11", "language": "Python", "type": "User", "username": "jordipons", "stars": 120, "forks": 26, "subscribers": 2, "open_issues": 6, "topics": []}, {"id": 87260299, "repo_name": "bit-of-data-science-and-scikit-learn", "full_name": "knathanieltucker/bit-of-data-science-and-scikit-learn", "description": "Youtube tutorial associated content", "created": "2017-04-05 03:09:32", "language": "Jupyter Notebook", "type": "User", "username": "knathanieltucker", "stars": 119, "forks": 135, "subscribers": 8, "open_issues": 0, "topics": []}, {"id": 60546948, "repo_name": "advanced_training", "full_name": "amueller/advanced_training", "description": "Advanced Scikit-learn training session", "created": "2016-06-06 17:24:17", "language": "Jupyter Notebook", "type": "User", "username": "amueller", "stars": 119, "forks": 38, "subscribers": 8, "open_issues": 1, "topics": []}, {"id": 57036078, "repo_name": "gap_statistic", "full_name": "milesgranger/gap_statistic", "description": "Dynamically get the suggested clusters in the data for unsupervised learning.", "created": "2016-04-25 11:22:18", "language": "Rust", "type": "User", "username": "milesgranger", "stars": 119, "forks": 34, "subscribers": 4, "open_issues": 2, "topics": ["cluster", "scikit-learn", "cluster-count", "kmeans", "python", "clustering", "unsupervised-learning", "unsupervised"]}, {"id": 129173336, "repo_name": "Disease-Prediction-from-Symptoms", "full_name": "anujdutt9/Disease-Prediction-from-Symptoms", "description": "Disease Prediction based on Symptoms.", "created": "2018-04-12 01:09:32", "language": "Jupyter Notebook", "type": "User", "username": "anujdutt9", "stars": 116, "forks": 92, "subscribers": 11, "open_issues": 1, "topics": ["machine-learning", "python3", "pandas", "disease-prediction", "scikitlearn-machine-learning", "scikit-learn"]}, {"id": 65499587, "repo_name": "How-to-score-0.8134-in-Titanic-Kaggle-Challenge", "full_name": "ahmedbesbes/How-to-score-0.8134-in-Titanic-Kaggle-Challenge", "description": "Solution of the Titanic Kaggle competition ", "created": "2016-08-11 20:30:31", "language": "Jupyter Notebook", "type": "User", "username": "ahmedbesbes", "stars": 115, "forks": 96, "subscribers": 8, "open_issues": 3, "topics": ["kaggle", "kaggle-titanic", "tutorial", "machine-learning", "scikit-learn", "visualization", "python", "jupyter", "exploratory-data-analysis", "gridsearch", "random-forest", "data-visualization"]}, {"id": 147726966, "repo_name": "ml-workshop-2-of-4", "full_name": "amueller/ml-workshop-2-of-4", "description": "Intermediate Machine Learning with Scikit-learn, 4h interactive workshop", "created": "2018-09-06 20:01:42", "language": "HTML", "type": "User", "username": "amueller", "stars": 114, "forks": 108, "subscribers": 14, "open_issues": 1, "topics": []}, {"id": 296527756, "repo_name": "fake-news", "full_name": "mihail911/fake-news", "description": "Building a fake news detector from initial ideation to model deployment", "created": "2020-09-18 05:59:08", "language": "Jupyter Notebook", "type": "User", "username": "mihail911", "stars": 114, "forks": 38, "subscribers": 7, "open_issues": 1, "topics": ["machinelearning", "deeplearning", "mlops", "natural-language-processing", "nlp", "pytorch", "scikit-learn"]}, {"id": 119285342, "repo_name": "docker-python-deep-learning", "full_name": "petronetto/docker-python-deep-learning", "description": "A container for Deep Learning with Python 3", "created": "2018-01-28 18:21:47", "language": "Jupyter Notebook", "type": "User", "username": "petronetto", "stars": 114, "forks": 42, "subscribers": 6, "open_issues": 2, "topics": ["docker", "machine-learning", "deep-learning", "numpy", "pandas", "scikit-learn", "matplotlib", "xgboost", "tensorflow", "keras", "pytorch", "jupyter", "notebook", "pyhton3", "mxnet"]}, {"id": 173284824, "repo_name": "scikit-learn-extra", "full_name": "scikit-learn-contrib/scikit-learn-extra", "description": "scikit-learn contrib estimators", "created": "2019-03-01 10:42:06", "language": "Python", "type": "Organization", "username": "scikit-learn-contrib", "stars": 113, "forks": 31, "subscribers": 20, "open_issues": 25, "topics": []}, {"id": 143902983, "repo_name": "scitime", "full_name": "scitime/scitime", "description": "Training time estimation for scikit-learn algorithms", "created": "2018-08-07 16:56:46", "language": "Python", "type": "Organization", "username": "scitime", "stars": 113, "forks": 8, "subscribers": 10, "open_issues": 4, "topics": ["python", "machine-learning", "data-science", "scikit-learn", "timer"]}, {"id": 51579377, "repo_name": "IOHMM", "full_name": "Mogeng/IOHMM", "description": "Input Output Hidden Markov Model (IOHMM) in Python", "created": "2016-02-12 09:58:17", "language": "Python", "type": "User", "username": "Mogeng", "stars": 113, "forks": 29, "subscribers": 14, "open_issues": 7, "topics": ["python", "hidden-markov-model", "graphical-models", "sequence-to-sequence", "machine-learning", "linear-models", "sequence-labeling", "supervised-learning", "semi-supervised-learning", "unsupervised-learning", "time-series", "scikit-learn", "statsmodels"]}, {"id": 327861595, "repo_name": "dbt-ml-preprocessing", "full_name": "omnata-labs/dbt-ml-preprocessing", "description": "A SQL port of python's scikit-learn preprocessing module, provided as cross-database dbt macros.", "created": "2021-01-08 09:48:01", "language": "Python", "type": "Organization", "username": "omnata-labs", "stars": 110, "forks": 10, "subscribers": 8, "open_issues": 5, "topics": ["scikit-learn", "dbt", "snowflake", "bigquery", "redshift"]}, {"id": 396368619, "repo_name": "30-Days-of-ML-Kaggle", "full_name": "rojaAchary/30-Days-of-ML-Kaggle", "description": "Machine learning beginner to Kaggle competitor in 30 days. Non-coders welcome. The program starts Monday, August 2, and lasts four weeks. It's designed for people who want to learn machine learning.", "created": "2021-08-15 13:57:02", "language": "Jupyter Notebook", "type": "User", "username": "rojaAchary", "stars": 110, "forks": 40, "subscribers": 3, "open_issues": 0, "topics": ["data-science", "kaggle", "machine-learning", "hands-on", "pandas", "numpy", "scikit-learn", "python", "programming", "project", "jupyter-notebook", "gradient-descent", "xgboost", "decision-trees", "optimization", "python3"]}, {"id": 296365662, "repo_name": "nlp_workshop_odsc_europe20", "full_name": "dipanjanS/nlp_workshop_odsc_europe20", "description": "Extensive tutorials for the Advanced NLP Workshop in Open Data Science Conference Europe 2020. We will leverage machine learning, deep learning and deep transfer learning to learn and solve popular tasks using NLP including NER, Classification, Recommendation \\ Information Retrieval, Summarization, Classification, Language Translation, Q&A and Topic Models.", "created": "2020-09-17 15:22:29", "language": "Jupyter Notebook", "type": "User", "username": "dipanjanS", "stars": 109, "forks": 58, "subscribers": 9, "open_issues": 0, "topics": ["natural-language-processing", "jupyter-notebook", "python", "transformers", "machine-learning", "deep-learning", "transfer-learning", "scikit-learn", "spacy", "nltk", "tensorflow", "pytorch", "gensim"]}, {"id": 5023122, "repo_name": "sklearn_tutorial", "full_name": "astroML/sklearn_tutorial", "description": "Tutorial for astronomy data processing with scikit-learn", "created": "2012-07-13 18:11:54", "language": "Makefile", "type": "Organization", "username": "astroML", "stars": 106, "forks": 55, "subscribers": 14, "open_issues": 5, "topics": []}, {"id": 347815659, "repo_name": "WallStreetBets_BigDataAnalysis", "full_name": "Fryingpannn/WallStreetBets_BigDataAnalysis", "description": "Research project aimed to classify the best stock research posts from r/WallStreetBets for you. \ud83d\ude0f", "created": "2021-03-15 02:45:14", "language": "Jupyter Notebook", "type": "User", "username": "Fryingpannn", "stars": 105, "forks": 30, "subscribers": 3, "open_issues": 1, "topics": ["python", "pyspark", "scikit-learn", "stocks", "reddit-api", "naive-bayes", "clustering"]}, {"id": 102282685, "repo_name": "Speculator", "full_name": "amicks/Speculator", "description": "API for predicting the next Bitcoin and Ethereum with machine learning and technical analysis", "created": "2017-09-03 17:43:03", "language": "Python", "type": "User", "username": "amicks", "stars": 105, "forks": 36, "subscribers": 23, "open_issues": 0, "topics": ["machine-learning", "algorithm", "technical-analysis", "finance", "market", "python", "python3-6", "scikit-learn", "tensorflow"]}, {"id": 86180787, "repo_name": "pycobra", "full_name": "bhargavvader/pycobra", "description": "python library implementing ensemble methods for regression, classification and visualisation tools including Voronoi tesselations.", "created": "2017-03-25 18:47:29", "language": "Python", "type": "User", "username": "bhargavvader", "stars": 105, "forks": 19, "subscribers": 8, "open_issues": 3, "topics": ["machine-learning-algorithms", "machine-learning-library", "aggregation", "predictor", "voronoi-diagram", "visualization", "ensemble-learning", "python-library", "scikit-learn", "regression", "classification", "visualisation"]}, {"id": 310271441, "repo_name": "amazon-sagemaker-local-mode", "full_name": "aws-samples/amazon-sagemaker-local-mode", "description": "Amazon SageMaker Local Mode Examples", "created": "2020-11-05 11:00:27", "language": "Python", "type": "Organization", "username": "aws-samples", "stars": 105, "forks": 23, "subscribers": 5, "open_issues": 1, "topics": ["sagemaker", "amazon-sagemaker", "tensorflow2", "pytorch", "catboost", "lightgbm", "pycharm", "tensorflow-training", "pytorch-training", "sagemaker-processing", "prophet", "scikit-learn", "prophet-model", "hdbscan-clustering-algorithm", "huggingface", "huggingface-transformers", "machine-learning", "deep-learning", "delta-lake", "gensim-word2vec"]}, {"id": 459696101, "repo_name": "machine-learning-articles", "full_name": "christianversloot/machine-learning-articles", "description": "\ud83e\udde0\ud83d\udcac Articles I wrote about machine learning, archived from MachineCurve.com.", "created": "2022-02-15 18:12:31", "language": null, "type": "User", "username": "christianversloot", "stars": 104, "forks": 25, "subscribers": 5, "open_issues": 0, "topics": ["machine-learning", "deep-learning", "neural-networks", "tensorflow", "pytorch", "scikit-learn", "convolutional-neural-networks", "gan", "gans", "transformers", "huggingface-transformers"]}, {"id": 14589858, "repo_name": "pyimpute", "full_name": "perrygeo/pyimpute", "description": "Spatial classification and regression using Scikit-learn and Rasterio ", "created": "2013-11-21 14:33:12", "language": "Python", "type": "User", "username": "perrygeo", "stars": 103, "forks": 33, "subscribers": 9, "open_issues": 6, "topics": []}, {"id": 461147335, "repo_name": "handson-ml3", "full_name": "ageron/handson-ml3", "description": "A series of Jupyter notebooks that walk you through the fundamentals of Machine Learning and Deep Learning in Python using Scikit-Learn, Keras and TensorFlow 2.", "created": "2022-02-19 09:43:22", "language": "Jupyter Notebook", "type": "User", "username": "ageron", "stars": 103, "forks": 9, "subscribers": 7, "open_issues": 1, "topics": []}, {"id": 271744539, "repo_name": "sktime-tutorial-pydata-amsterdam-2020", "full_name": "sktime/sktime-tutorial-pydata-amsterdam-2020", "description": "Introduction to Machine Learning with Time Series at PyData Festival Amsterdam 2020", "created": "2020-06-12 08:09:36", "language": "Jupyter Notebook", "type": "Organization", "username": "sktime", "stars": 103, "forks": 63, "subscribers": 10, "open_issues": 0, "topics": ["machine-learning", "time-series", "scikit-learn", "sktime", "tutorials", "pydata"]}, {"id": 149985877, "repo_name": "Voice-based-gender-recognition", "full_name": "SuperKogito/Voice-based-gender-recognition", "description": ":sound: :boy: :girl:Voice based gender recognition using Mel-frequency cepstrum coefficients (MFCC)  and Gaussian mixture models (GMM)", "created": "2018-09-23 13:14:55", "language": "Python", "type": "User", "username": "SuperKogito", "stars": 100, "forks": 43, "subscribers": 4, "open_issues": 8, "topics": ["gender-recognition", "gender-detection", "gender-classification", "gmm", "mfcc", "gender-recognition-by-voice", "voice", "mel-frequencies", "gaussian-mixture-models", "signal", "machine-learning", "data-science", "vocal", "speech", "gender", "scikit-learn", "scikit-learn-python", "speaker"]}, {"id": 254741570, "repo_name": "scikeras", "full_name": "adriangb/scikeras", "description": "Scikit-Learn API wrapper for Keras.", "created": "2020-04-10 21:40:36", "language": "Python", "type": "User", "username": "adriangb", "stars": 99, "forks": 18, "subscribers": 2, "open_issues": 37, "topics": ["scikit-learn", "machine-learning", "python", "data-science", "deep-learning", "deep-neural-networks", "keras", "tensorflow", "wrappers"]}, {"id": 117618207, "repo_name": "mlviz", "full_name": "ChakriCherukuri/mlviz", "description": "Visualizations of machine learning models and algorithms", "created": "2018-01-16 02:06:30", "language": "Jupyter Notebook", "type": "User", "username": "ChakriCherukuri", "stars": 99, "forks": 33, "subscribers": 5, "open_issues": 2, "topics": ["machine-learning-algorithms", "jupyter-notebook", "bqplot", "ipywidgets", "data-visualization", "deep-learning", "tensorflow", "scikit-learn", "voila", "ai", "visualizations", "conda-environment", "notebook-server"]}, {"id": 111103851, "repo_name": "credit-risk-modelling", "full_name": "jalajthanaki/credit-risk-modelling", "description": "Credit Risk analysis by using Python and ML", "created": "2017-11-17 13:00:11", "language": "Jupyter Notebook", "type": "User", "username": "jalajthanaki", "stars": 98, "forks": 108, "subscribers": 15, "open_issues": 1, "topics": ["python", "machine-learning", "pandas", "scikit-learn", "numpy", "scipy", "credit-risk"]}, {"id": 291624604, "repo_name": "data-science-at-scale", "full_name": "coiled/data-science-at-scale", "description": "A Pythonic introduction to methods for scaling your data science and machine learning work to larger datasets and larger models, using the tools and APIs you know and love from the PyData stack (such as numpy, pandas, and scikit-learn).", "created": "2020-08-31 05:38:15", "language": "Jupyter Notebook", "type": "Organization", "username": "coiled", "stars": 98, "forks": 35, "subscribers": 23, "open_issues": 4, "topics": []}, {"id": 309396763, "repo_name": "DS_and_ML_projects", "full_name": "hhhrrrttt222111/DS_and_ML_projects", "description": "Data Science & Machine Learning projects and tutorials in python from beginner to advanced level.", "created": "2020-11-02 14:34:34", "language": "Jupyter Notebook", "type": "User", "username": "hhhrrrttt222111", "stars": 98, "forks": 41, "subscribers": 7, "open_issues": 8, "topics": ["data-science", "machine-learning", "machine-learning-algorithms", "data-visualization", "python", "linear-regression", "opencv", "logistic-regression", "scikit-learn", "keras", "tensorflow", "keras-tensorflow", "matplotlib", "seaborn", "knn-classification", "naive-bayes-classifier", "hacktoberfest"]}, {"id": 294121258, "repo_name": "doubleml-for-py", "full_name": "DoubleML/doubleml-for-py", "description": "DoubleML - Double Machine Learning in Python", "created": "2020-09-09 13:27:25", "language": "Python", "type": "Organization", "username": "DoubleML", "stars": 97, "forks": 19, "subscribers": 6, "open_issues": 9, "topics": ["machine-learning", "python", "scikit-learn", "causal-inference", "statistics", "econometrics", "data-science", "double-machine-learning"]}, {"id": 99068487, "repo_name": "Algorithmic-Trading", "full_name": "SravB/Algorithmic-Trading", "description": "Algorithmic trading using machine learning.", "created": "2017-08-02 03:31:47", "language": "Python", "type": "User", "username": "SravB", "stars": 96, "forks": 45, "subscribers": 11, "open_issues": 0, "topics": ["python", "scikit-learn", "pandas", "matplotlib", "stock", "google-finance", "decision-tree", "data-mining", "machine-learning", "algorithmic-trading", "data-science", "scipy"]}, {"id": 155597776, "repo_name": "sagemaker-scikit-learn-container", "full_name": "aws/sagemaker-scikit-learn-container", "description": "Support code for building and running Amazon SageMaker compatible Docker containers based on the open source framework Scikit-learn (http://scikit-learn.org/stable/)", "created": "2018-10-31 17:28:35", "language": "Python", "type": "Organization", "username": "aws", "stars": 95, "forks": 74, "subscribers": 38, "open_issues": 20, "topics": []}, {"id": 48960485, "repo_name": "scikit-learn-classifiers", "full_name": "mmmayo13/scikit-learn-classifiers", "description": "An introduction to implementing a number of scikit-learn classifiers, along with some data exploration", "created": "2016-01-03 20:58:17", "language": "Jupyter Notebook", "type": "User", "username": "mmmayo13", "stars": 95, "forks": 54, "subscribers": 12, "open_issues": 0, "topics": []}, {"id": 97746357, "repo_name": "scikit-downscale", "full_name": "pangeo-data/scikit-downscale", "description": "Statistical climate downscaling in Python", "created": "2017-07-19 18:01:29", "language": "Python", "type": "Organization", "username": "pangeo-data", "stars": 95, "forks": 27, "subscribers": 11, "open_issues": 14, "topics": ["climate", "downscaling", "xarray", "scikit-learn"]}, {"id": 94358873, "repo_name": "chainladder-python", "full_name": "casact/chainladder-python", "description": "Actuarial reserving in Python", "created": "2017-06-14 17:58:43", "language": "Python", "type": "Organization", "username": "casact", "stars": 95, "forks": 44, "subscribers": 15, "open_issues": 19, "topics": ["reserving", "actuarial", "chainladder", "python", "pandas", "actuary", "scikit-learn", "estimators"]}, {"id": 117610287, "repo_name": "pymc-example-project", "full_name": "AlexIoannides/pymc-example-project", "description": "Example PyMC3 project for performing Bayesian data analysis using a probabilistic programming approach to machine learning.", "created": "2018-01-16 00:26:47", "language": "Jupyter Notebook", "type": "User", "username": "AlexIoannides", "stars": 95, "forks": 17, "subscribers": 4, "open_issues": 0, "topics": ["python", "pymc3", "numpy", "pandas", "scikit-learn", "data-science", "machine-learning", "bayesian-inference", "bayesian-data-analysis", "probabilistic-programming"]}, {"id": 119584553, "repo_name": "Predicting_real_estate_prices_using_scikit-learn", "full_name": "MBKraus/Predicting_real_estate_prices_using_scikit-learn", "description": "Predicting Amsterdam house / real estate prices using Ordinary Least Squares-, XGBoost-, KNN-, Lasso-, Ridge-, Polynomial-, Random Forest-, and Neural Network MLP Regression (via scikit-learn)", "created": "2018-01-30 19:35:23", "language": "Python", "type": "User", "username": "MBKraus", "stars": 94, "forks": 48, "subscribers": 14, "open_issues": 0, "topics": ["predicting-housing-prices", "real-estate", "machine-learning", "python", "knn", "knn-regression", "lasso-regression", "lasso", "ridge-regression", "decision-trees", "random-forest", "neural-network", "mlp-regressor", "ols", "polynomial-regression", "amsterdam", "multi-layer-perceptron", "xgboost", "polynomial", "ensemble-learning"]}, {"id": 297257077, "repo_name": "hg-mldl", "full_name": "rickiepark/hg-mldl", "description": "<\ud63c\uc790 \uacf5\ubd80\ud558\ub294 \uba38\uc2e0\ub7ec\ub2dd+\ub525\ub7ec\ub2dd>\uc758 \ucf54\ub4dc \uc800\uc7a5\uc18c\uc785\ub2c8\ub2e4.", "created": "2020-09-21 07:08:35", "language": "Jupyter Notebook", "type": "User", "username": "rickiepark", "stars": 94, "forks": 92, "subscribers": 5, "open_issues": 0, "topics": ["machine-learning", "deep-learning", "tensorflow", "keras", "scikit-learn"]}, {"id": 89317488, "repo_name": "aurelienGeron", "full_name": "amitanalyste/aurelienGeron", "description": "\u201cHands-On Machine Learning with Scikit-Learn and TensorFlow\u201d  Excerpt From: Aur\u00e9lien G\u00e9ron. \u201cHands-On Machine Learning with Scikit-Learn and TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems.\u201d iBooks. ", "created": "2017-04-25 04:28:00", "language": "Jupyter Notebook", "type": "User", "username": "amitanalyste", "stars": 93, "forks": 56, "subscribers": 9, "open_issues": 6, "topics": []}, {"id": 102418138, "repo_name": "ml_code", "full_name": "zlxy9892/ml_code", "description": "A repository for recording the machine learning code", "created": "2017-09-05 01:22:32", "language": "Python", "type": "User", "username": "zlxy9892", "stars": 92, "forks": 53, "subscribers": 8, "open_issues": 2, "topics": ["machine-learning", "deep-learning", "artificial-intelligence", "tensorflow", "sklearn", "scikit-learn", "keras", "nlp", "mnist", "cv", "knn", "svd", "logistic-regression", "decision-tree", "bayesian", "neural-network", "apriori", "clustering", "k-means", "pca"]}, {"id": 80167332, "repo_name": "Arch-Data-Science", "full_name": "mratsim/Arch-Data-Science", "description": "Archlinux PKGBUILDs for Data Science, Machine Learning, Deep Learning, NLP and Computer Vision", "created": "2017-01-26 23:54:59", "language": "Shell", "type": "User", "username": "mratsim", "stars": 92, "forks": 4, "subscribers": 13, "open_issues": 0, "topics": ["archlinux", "data-science", "machine-learning", "deep-learning", "package", "tensorflow", "scikit-learn", "mxnet", "opencv", "nervana", "pandas", "cudnn", "cuda", "pytorch", "spacy", "natural-language-processing", "natural-language-understanding", "xgboost", "lightgbm", "mkl"]}, {"id": 84238935, "repo_name": "doc2vec", "full_name": "ibrahimsharaf/doc2vec", "description": ":notebook: Long(er) text representation and classification using Doc2Vec embeddings", "created": "2017-03-07 19:41:34", "language": "Python", "type": "User", "username": "ibrahimsharaf", "stars": 91, "forks": 36, "subscribers": 7, "open_issues": 6, "topics": ["nlp-machine-learning", "gensim", "scikit-learn", "doc2vec", "sentiment-analysis", "text-classification"]}, {"id": 234784442, "repo_name": "Sklearn-genetic-opt", "full_name": "rodrigo-arenas/Sklearn-genetic-opt", "description": "Hyperparameters tuning and feature selection, using evolutionary algorithms.", "created": "2020-01-18 19:16:48", "language": "Python", "type": "User", "username": "rodrigo-arenas", "stars": 89, "forks": 24, "subscribers": 3, "open_issues": 5, "topics": ["python", "scikit-learn", "machine-learning", "artificial-intelligence", "hyperparameters", "deap", "looking-for-contributors", "model-selection", "hyperparameter-optimization", "automl", "begginer-friendly", "evolutionary-algorithms", "contributions-welcome", "help-wanted", "good-first-issue", "goodfirstissue", "sklearn", "up-for-grabs", "featureselection", "feature-selection"]}, {"id": 114533437, "repo_name": "unsupervised-image-clustering", "full_name": "beleidy/unsupervised-image-clustering", "description": "An unsupervised image clustering algorithm that uses VGGNet for image transformation. Python, scikit-learn and tensorflow.", "created": "2017-12-17 12:14:16", "language": "Jupyter Notebook", "type": "User", "username": "beleidy", "stars": 88, "forks": 34, "subscribers": 5, "open_issues": 3, "topics": []}, {"id": 83723793, "repo_name": "neuropredict", "full_name": "raamana/neuropredict", "description": "Easy and comprehensive assessment of predictive power, with support for neuroimaging features", "created": "2017-03-02 20:53:39", "language": "Python", "type": "User", "username": "raamana", "stars": 88, "forks": 22, "subscribers": 7, "open_issues": 28, "topics": ["neuroimaging", "machine-learning", "structural-imaging", "anatomical-mri", "cross-validation", "functional-connectivity", "tractography", "tract-based-statistics", "resting-state", "pattern-recognition", "easy-to-use", "report", "nilearn", "scikit-learn"]}, {"id": 45139558, "repo_name": "sentimentAPI", "full_name": "mikelynn2/sentimentAPI", "description": "A fast python scikit-learn text sentiment API server.", "created": "2015-10-28 20:22:40", "language": "Python", "type": "User", "username": "mikelynn2", "stars": 87, "forks": 15, "subscribers": 4, "open_issues": 1, "topics": []}, {"id": 70767641, "repo_name": "ISLR-with-Python", "full_name": "hyunblee/ISLR-with-Python", "description": "Introduction to Statistical Learning with R\uc744 Python\uc73c\ub85c ", "created": "2016-10-13 04:02:18", "language": "Jupyter Notebook", "type": "User", "username": "hyunblee", "stars": 87, "forks": 45, "subscribers": 17, "open_issues": 0, "topics": ["predictive-analysis", "islr", "machine-learning", "statistical-learning", "scikit-learn"]}, {"id": 302293738, "repo_name": "unif", "full_name": "geyingli/unif", "description": "\u4eff Scikit-Learn \u8bbe\u8ba1\u7684\u6df1\u5ea6\u5b66\u4e60\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6846\u67b6, \u652f\u6301\u7ea6 40 \u79cd\u6a21\u578b\u7c7b, \u6db5\u76d6\u8bed\u8a00\u6a21\u578b\u3001\u6587\u672c\u5206\u7c7b\u3001NER\u3001MRC\u3001\u673a\u5668\u7ffb\u8bd1\u7b49\u5404\u4e2a\u9886\u57df", "created": "2020-10-08 09:36:25", "language": "Python", "type": "User", "username": "geyingli", "stars": 87, "forks": 22, "subscribers": 5, "open_issues": 7, "topics": ["nlp", "tensorflow", "language-modeling", "mrc", "classification", "transformer", "bertology", "distillation", "gpu-training"]}, {"id": 114149259, "repo_name": "Machine-Learning-in-Python-Workshop", "full_name": "snrazavi/Machine-Learning-in-Python-Workshop", "description": "My workshop on machine learning using python language to implement different algorithms", "created": "2017-12-13 17:24:24", "language": "Jupyter Notebook", "type": "User", "username": "snrazavi", "stars": 87, "forks": 49, "subscribers": 14, "open_issues": 0, "topics": ["machine-learning", "numpy", "matplotlib", "scikit-learn", "linear-classification", "workshop", "machine-learning-workshop", "softmax", "gradient-descent", "neural-networks", "backpropagation", "dropout", "batch-normalization", "optimization-algorithms", "deep-learning", "convolutional-neural-networks", "keras", "python"]}, {"id": 115416216, "repo_name": "comparing-trajectory-clustering-methods", "full_name": "seljukgulcan/comparing-trajectory-clustering-methods", "description": "Comparing Different Clustering Methods and Similarity Metrics on Trajectory Datasets", "created": "2017-12-26 11:28:07", "language": "Python", "type": "User", "username": "seljukgulcan", "stars": 84, "forks": 37, "subscribers": 6, "open_issues": 1, "topics": ["machine-learning", "pattern-recognition", "scikit-learn", "trajectory", "trajectory-analysis", "trajectory-clustering"]}, {"id": 59421981, "repo_name": "tensorflow-playground", "full_name": "wangz10/tensorflow-playground", "description": "Implementations of some Deep Learning models using tensorflow with scikit-learn like APIs", "created": "2016-05-22 16:19:17", "language": "Python", "type": "User", "username": "wangz10", "stars": 83, "forks": 35, "subscribers": 5, "open_issues": 6, "topics": ["tensorflow", "deep-learning", "word2vec", "autoencoder", "nlp"]}, {"id": 109655274, "repo_name": "machine-learning-for-beginners", "full_name": "edyoda/machine-learning-for-beginners", "description": "Start writing machine learning code in just 10 hours ", "created": "2017-11-06 06:16:29", "language": "Jupyter Notebook", "type": "Organization", "username": "edyoda", "stars": 83, "forks": 108, "subscribers": 16, "open_issues": 0, "topics": ["machine-learning", "scikit-learn", "practice-project"]}, {"id": 111443606, "repo_name": "sklearn-xarray", "full_name": "phausamann/sklearn-xarray", "description": "Metadata-aware machine learning.", "created": "2017-11-20 17:48:50", "language": "Python", "type": "User", "username": "phausamann", "stars": 82, "forks": 8, "subscribers": 8, "open_issues": 17, "topics": ["machine-learning", "framework", "xarray", "scikit-learn"]}, {"id": 148611982, "repo_name": "mloperator", "full_name": "polyaxon/mloperator", "description": "Machine Learning Operator & Controller for Kubernetes", "created": "2018-09-13 09:07:00", "language": "Go", "type": "Organization", "username": "polyaxon", "stars": 82, "forks": 7, "subscribers": 3, "open_issues": 0, "topics": ["tensorflow", "mxnet", "keras", "tensorboard", "notebook", "pytorch", "spark", "dask", "mpi", "scikit-learn", "xgboost", "mlops", "kubernetes", "kubernetes-operator", "machine-learning", "deep-learning", "k8s"]}, {"id": 84170448, "repo_name": "ml-sklearn", "full_name": "CristiVlad25/ml-sklearn", "description": "Tutorials on Machine Learning with Scikit-Learn", "created": "2017-03-07 07:48:27", "language": "Jupyter Notebook", "type": "User", "username": "CristiVlad25", "stars": 81, "forks": 104, "subscribers": 13, "open_issues": 0, "topics": []}, {"id": 31320531, "repo_name": "machine-learning", "full_name": "DistrictDataLabs/machine-learning", "description": "Code & Data for Introduction to Machine Learning with Scikit-Learn", "created": "2015-02-25 15:36:06", "language": "Jupyter Notebook", "type": "Organization", "username": "DistrictDataLabs", "stars": 81, "forks": 119, "subscribers": 19, "open_issues": 0, "topics": []}, {"id": 346345336, "repo_name": "imbalanced-ensemble", "full_name": "ZhiningLiu1998/imbalanced-ensemble", "description": "Class-imbalanced / Long-tailed ensemble learning in Python. Modular, flexible, and extensible. | \u6a21\u5757\u5316\u3001\u7075\u6d3b\u3001\u6613\u6269\u5c55\u7684\u7c7b\u522b\u4e0d\u5e73\u8861/\u957f\u5c3e\u673a\u5668\u5b66\u4e60\u5e93", "created": "2021-03-10 12:16:06", "language": "Python", "type": "User", "username": "ZhiningLiu1998", "stars": 81, "forks": 22, "subscribers": 3, "open_issues": 0, "topics": ["machine-learning", "class-imbalance", "imbalanced-learning", "imbalanced-classification", "imbalanced-data", "ensemble-learning", "ensemble-model", "multi-class-classification", "long-tail", "classification", "scikit-learn", "python3", "ensemble-imbalanced-learning", "sklearn", "python", "data-science", "data-mining", "ensemble"]}, {"id": 49453725, "repo_name": "lpproj", "full_name": "jakevdp/lpproj", "description": "Scikit-learn compatible Locality Preserving Projections in Python", "created": "2016-01-11 20:53:18", "language": "Jupyter Notebook", "type": "User", "username": "jakevdp", "stars": 80, "forks": 16, "subscribers": 7, "open_issues": 1, "topics": []}, {"id": 23311186, "repo_name": "sklearn_pandas_tutorial", "full_name": "GaelVaroquaux/sklearn_pandas_tutorial", "description": "EuroScipy 2014 tutorial: Introduction to predictive analytics with pandas and scikit-learn", "created": "2014-08-25 11:19:06", "language": "Python", "type": "User", "username": "GaelVaroquaux", "stars": 80, "forks": 54, "subscribers": 10, "open_issues": 0, "topics": []}, {"id": 104448285, "repo_name": "issue-tracking", "full_name": "comet-ml/issue-tracking", "description": "Questions, Help, and Issues for Comet ML", "created": "2017-09-22 08:02:16", "language": null, "type": "Organization", "username": "comet-ml", "stars": 80, "forks": 7, "subscribers": 21, "open_issues": 96, "topics": ["keras", "tenserflow", "comet-ml", "scikit-learn", "pytorch", "machine-learning"]}, {"id": 81335674, "repo_name": "detecting-road-features", "full_name": "navoshta/detecting-road-features", "description": "Detecting Road Features: identifying lane and vehicles boundaries in a video.", "created": "2017-02-08 14:00:45", "language": "Jupyter Notebook", "type": "User", "username": "navoshta", "stars": 78, "forks": 36, "subscribers": 5, "open_issues": 0, "topics": ["computer-vision", "machine-learning", "classification", "scikit-learn"]}, {"id": 81474085, "repo_name": "workshop-text-analysis-spacy", "full_name": "JonathanReeve/workshop-text-analysis-spacy", "description": "Materials for the workshop Advanced Text Analysis with SpaCy and Scikit-Learn, given at NYU during NYCDH Week 2017, at PyData NYC in Nov. 2017, and at Columbia University in 2018 and 2019.", "created": "2017-02-09 17:07:13", "language": "Jupyter Notebook", "type": "User", "username": "JonathanReeve", "stars": 78, "forks": 26, "subscribers": 5, "open_issues": 1, "topics": []}, {"id": 84499220, "repo_name": "Python-Machine-Learning", "full_name": "GeorgeSeif/Python-Machine-Learning", "description": "Python Machine Learning Algorithms ", "created": "2017-03-09 23:44:36", "language": "Python", "type": "User", "username": "GeorgeSeif", "stars": 77, "forks": 43, "subscribers": 10, "open_issues": 2, "topics": ["python-machine-learning", "classification", "python", "algorithm", "scikit-learn", "machine-learning", "regression", "neural-network", "support-vector-machines"]}, {"id": 69243415, "repo_name": "docker-alpine-python-machinelearning", "full_name": "Docker-Hub-frolvlad/docker-alpine-python-machinelearning", "description": "Small Docker image with Python Machine Learning tools (~180MB) https://hub.docker.com/r/frolvlad/alpine-python-machinelearning/", "created": "2016-09-26 11:27:07", "language": "Dockerfile", "type": "Organization", "username": "Docker-Hub-frolvlad", "stars": 77, "forks": 24, "subscribers": 10, "open_issues": 1, "topics": ["docker-image", "alpine", "python", "machine-learning", "numpy", "pandas", "scipy", "scikit-learn"]}, {"id": 58903396, "repo_name": "interactiveknn", "full_name": "lettier/interactiveknn", "description": "Interactive K-Nearest Neighbors machine learning algorithm in JavaScript.", "created": "2016-05-16 04:21:23", "language": "JavaScript", "type": "User", "username": "lettier", "stars": 77, "forks": 8, "subscribers": 6, "open_issues": 2, "topics": ["interactive-knearest-neighbors", "knn", "machine-learning", "data-science", "visualization", "html5", "nearest-neighbor-search", "data-analysis", "scikit-learn", "machine-learning-algorithms", "javascript", "ai", "classification", "statistics", "gui", "k-nearest-neighbors", "k-nearest-neighbor", "k-nearest-neighbours"]}, {"id": 337705968, "repo_name": "skforecast", "full_name": "JoaquinAmatRodrigo/skforecast", "description": "Time series forecasting with scikit-learn models", "created": "2021-02-10 11:40:34", "language": "Jupyter Notebook", "type": "User", "username": "JoaquinAmatRodrigo", "stars": 76, "forks": 21, "subscribers": 3, "open_issues": 1, "topics": ["forecasting", "scikit-learn", "machine-learning", "python", "data-science", "series-forecasting", "autoregressive-forecasters", "multi-step-forecasters", "exogenous-predictors", "series-temporales", "time-series", "direct-forecasting"]}, {"id": 182386474, "repo_name": "group-lasso", "full_name": "yngvem/group-lasso", "description": "Group Lasso implementation following the scikit-learn API", "created": "2019-04-20 09:28:25", "language": "Python", "type": "User", "username": "yngvem", "stars": 76, "forks": 28, "subscribers": 11, "open_issues": 10, "topics": []}, {"id": 6876509, "repo_name": "machineLearning", "full_name": "bigsnarfdude/machineLearning", "description": "POC IDS anomaly detection engine built with iPython notebook, matplotlib, pandas, numpy, scikit-learn, d3.js, hyperloglog implementation, PYCON 2013 Intro and Advanced Machine Learning Tutorial Notebooks", "created": "2012-11-27 02:54:23", "language": "Python", "type": "User", "username": "bigsnarfdude", "stars": 76, "forks": 39, "subscribers": 7, "open_issues": 0, "topics": []}, {"id": 89722664, "repo_name": "quick-ml-intro", "full_name": "amueller/quick-ml-intro", "description": "One hour interactive training for ML with scikit-learn", "created": "2017-04-28 16:06:22", "language": "Jupyter Notebook", "type": "User", "username": "amueller", "stars": 75, "forks": 22, "subscribers": 11, "open_issues": 0, "topics": []}, {"id": 111706359, "repo_name": "ML-Starter-Pack", "full_name": "aribis369/ML-Starter-Pack", "description": "A collection of Machine Learning algorithms written from sctrach.", "created": "2017-11-22 16:14:18", "language": "Jupyter Notebook", "type": "User", "username": "aribis369", "stars": 75, "forks": 50, "subscribers": 4, "open_issues": 10, "topics": ["machine-learning", "scikit-learn", "tensorflow", "pytorch", "deep-learning"]}, {"id": 69572382, "repo_name": "pydata-dc-2016-tutorial", "full_name": "justmarkham/pydata-dc-2016-tutorial", "description": "Tutorial: Machine Learning with Text in scikit-learn", "created": "2016-09-29 13:53:41", "language": "Jupyter Notebook", "type": "User", "username": "justmarkham", "stars": 74, "forks": 86, "subscribers": 8, "open_issues": 0, "topics": []}, {"id": 55985481, "repo_name": "skccm", "full_name": "nickc1/skccm", "description": "Convergent Cross Mapping in Scikit Learn's style", "created": "2016-04-11 15:41:59", "language": "Jupyter Notebook", "type": "User", "username": "nickc1", "stars": 74, "forks": 12, "subscribers": 7, "open_issues": 7, "topics": []}, {"id": 46984494, "repo_name": "gp_extras", "full_name": "jmetzen/gp_extras", "description": "Additional kernels that can be used with scikit-learn's Gaussian Process module", "created": "2015-11-27 14:30:58", "language": "Python", "type": "User", "username": "jmetzen", "stars": 74, "forks": 19, "subscribers": 4, "open_issues": 5, "topics": []}, {"id": 78878183, "repo_name": "MLatImperial2017", "full_name": "yandexdataschool/MLatImperial2017", "description": "Materials for the course of machine learning at Imperial College organized by Yandex SDA", "created": "2017-01-13 19:07:22", "language": "Jupyter Notebook", "type": "Organization", "username": "yandexdataschool", "stars": 74, "forks": 51, "subscribers": 18, "open_issues": 0, "topics": ["machine-learning", "lectures", "practice", "imperial-college", "yandex", "deep-learning", "sklearn", "scikit-learn", "keras", "theano"]}, {"id": 161178225, "repo_name": "omegaml", "full_name": "omegaml/omegaml", "description": "Python analytics made easy - an open source DataOps, MLOps platform for humans", "created": "2018-12-10 13:20:15", "language": "Python", "type": "User", "username": "omegaml", "stars": 73, "forks": 10, "subscribers": 4, "open_issues": 38, "topics": ["data-science", "scikit-learn", "jupyter-notebook", "docker-image", "deploy", "machine-learning", "artificial-intelligence", "productized"]}, {"id": 200110538, "repo_name": "NBA-Predict", "full_name": "JakeKandell/NBA-Predict", "description": "Predicts Daily NBA Games Using a Logistic Regression Model ", "created": "2019-08-01 19:49:26", "language": "Python", "type": "User", "username": "JakeKandell", "stars": 73, "forks": 33, "subscribers": 11, "open_issues": 0, "topics": ["nba-prediction", "nba-analytics", "nba-stats", "nba", "logistic-regression", "model", "prediction", "predictive-modeling", "scikit-learn", "pandas", "python", "python3", "data-science"]}, {"id": 156728057, "repo_name": "pyparis-2018-sklearn", "full_name": "glemaitre/pyparis-2018-sklearn", "description": "PyParis tutorial on machine learning using scikit-learn", "created": "2018-11-08 15:30:37", "language": "Jupyter Notebook", "type": "User", "username": "glemaitre", "stars": 71, "forks": 18, "subscribers": 3, "open_issues": 0, "topics": ["data-science", "machine-learn", "scikit-learn", "pandas"]}, {"id": 33623664, "repo_name": "sklearn-pmml", "full_name": "alex-pirozhenko/sklearn-pmml", "description": "A library that allows serialization of SciKit-Learn estimators into PMML", "created": "2015-04-08 18:09:49", "language": "Python", "type": "User", "username": "alex-pirozhenko", "stars": 71, "forks": 17, "subscribers": 10, "open_issues": 11, "topics": []}, {"id": 25709474, "repo_name": "osprey", "full_name": "msmbuilder/osprey", "description": "\ud83e\udd85Hyperparameter optimization for machine learning pipelines \ud83e\udd85", "created": "2014-10-24 21:39:16", "language": "Python", "type": "Organization", "username": "msmbuilder", "stars": 71, "forks": 24, "subscribers": 12, "open_issues": 18, "topics": ["python", "scikit-learn", "hyperparameter-optimization", "models", "cross-validation", "machine-learning", "optimization", "pretty-logo"]}, {"id": 56349398, "repo_name": "sigopt-sklearn", "full_name": "sigopt/sigopt-sklearn", "description": "SigOpt wrappers for scikit-learn methods", "created": "2016-04-15 20:58:39", "language": "Python", "type": "Organization", "username": "sigopt", "stars": 70, "forks": 13, "subscribers": 10, "open_issues": 3, "topics": []}, {"id": 26497723, "repo_name": "pydata-nyc-advanced-sklearn", "full_name": "amueller/pydata-nyc-advanced-sklearn", "description": "Notebooks (and slides) for my PyData NYC 2014 tutorial on the more advanced features of scikit-learn.", "created": "2014-11-11 18:13:10", "language": null, "type": "User", "username": "amueller", "stars": 70, "forks": 41, "subscribers": 12, "open_issues": 0, "topics": []}, {"id": 45148905, "repo_name": "mst_clustering", "full_name": "jakevdp/mst_clustering", "description": "Scikit-learn style estimator for Minimum Spanning Tree Clustering in Python", "created": "2015-10-28 23:54:54", "language": "Jupyter Notebook", "type": "User", "username": "jakevdp", "stars": 70, "forks": 16, "subscribers": 6, "open_issues": 1, "topics": []}, {"id": 160500454, "repo_name": "TextClassification", "full_name": "qyfang/TextClassification", "description": "\u57fa\u4e8escikit-learn\u5b9e\u73b0\u5bf9\u65b0\u6d6a\u65b0\u95fb\u7684\u6587\u672c\u5206\u7c7b\uff0c\u6570\u636e\u96c6\u4e3a100w\u7bc7\u6587\u6863\uff0c\u603b\u8ba110\u7c7b\uff0c\u6d4b\u8bd5\u96c6\u4e0e\u8bad\u7ec3\u96c61:1\u5212\u5206\u3002\u5206\u7c7b\u7b97\u6cd5\u91c7\u7528SVM\u548cBayes\uff0c\u5176\u4e2dBayes\u4f5c\u4e3abaseline\u3002", "created": "2018-12-05 10:21:12", "language": "Python", "type": "User", "username": "qyfang", "stars": 70, "forks": 18, "subscribers": 1, "open_issues": 3, "topics": ["data-mining", "scikit-learn", "text-classification", "svm"]}, {"id": 134266587, "repo_name": "A-Detector", "full_name": "alexfrancow/A-Detector", "description": ":star: An anomaly-based intrusion detection system.", "created": "2018-05-21 12:32:16", "language": "Python", "type": "User", "username": "alexfrancow", "stars": 70, "forks": 10, "subscribers": 5, "open_issues": 4, "topics": ["python", "pandas", "flask", "scikit-learn", "machine-learning", "security", "python3", "network-analysis", "pcap-analyzer", "jquery", "plotly", "csv", "wireshark", "anomaly-detection", "isolation-forest"]}, {"id": 97819977, "repo_name": "Mastering-Machine-Learning-with-scikit-learn-Second-Edition", "full_name": "PacktPublishing/Mastering-Machine-Learning-with-scikit-learn-Second-Edition", "description": "Mastering Machine Learning with scikit learn Second Edition, published by Packt", "created": "2017-07-20 09:58:50", "language": "Jupyter Notebook", "type": "Organization", "username": "PacktPublishing", "stars": 69, "forks": 95, "subscribers": 5, "open_issues": 0, "topics": []}, {"id": 110529928, "repo_name": "scikit-learn-Cookbook-Second-Edition", "full_name": "PacktPublishing/scikit-learn-Cookbook-Second-Edition", "description": "scikit-learn Cookbook Second Edition, published by Packt", "created": "2017-11-13 09:51:20", "language": "Jupyter Notebook", "type": "Organization", "username": "PacktPublishing", "stars": 68, "forks": 58, "subscribers": 10, "open_issues": 0, "topics": []}, {"id": 33157461, "repo_name": "sentiment.analysis", "full_name": "Poyuli/sentiment.analysis", "description": "Sentiment Analysis of IMDB Movie Reviews using word2vec and scikit-learn", "created": "2015-03-31 01:19:48", "language": "Python", "type": "User", "username": "Poyuli", "stars": 68, "forks": 22, "subscribers": 9, "open_issues": 1, "topics": []}, {"id": 156952831, "repo_name": "machine_learning_examples", "full_name": "nithyadurai87/machine_learning_examples", "description": "machine_learning_examples", "created": "2018-11-10 06:04:16", "language": "HTML", "type": "User", "username": "nithyadurai87", "stars": 68, "forks": 45, "subscribers": 12, "open_issues": 0, "topics": ["python", "scikit-learn", "kaniyam", "machine", "learning"]}, {"id": 142239060, "repo_name": "Hands-On-ML", "full_name": "ExcelsiorCJH/Hands-On-ML", "description": "Hands-On Machine Learning", "created": "2018-07-25 02:52:18", "language": "Jupyter Notebook", "type": "User", "username": "ExcelsiorCJH", "stars": 68, "forks": 69, "subscribers": 4, "open_issues": 1, "topics": ["machine-learning", "deep-learning", "tensorflow", "scikit-learn", "python3", "hands-on-machine-learning"]}, {"id": 99354003, "repo_name": "fraud-detection", "full_name": "yazanobeidi/fraud-detection", "description": "Credit Card Fraud Detection using ML: IEEE style paper + Jupyter Notebook", "created": "2017-08-04 15:03:47", "language": "Jupyter Notebook", "type": "User", "username": "yazanobeidi", "stars": 68, "forks": 34, "subscribers": 6, "open_issues": 14, "topics": ["scikit-learn", "machine-learning", "adasyn", "kaggle", "credit", "card", "fraud-detection"]}, {"id": 88619143, "repo_name": "Human-Activity-Recognition", "full_name": "ani8897/Human-Activity-Recognition", "description": "Classifying the physical activities performed by a user based on accelerometer and gyroscope sensor data collected by a smartphone in the user\u2019s pocket. The activities to be classified are: Standing, Sitting, Stairsup, StairsDown, Walking and Cycling.", "created": "2017-04-18 11:50:49", "language": "Python", "type": "User", "username": "ani8897", "stars": 68, "forks": 37, "subscribers": 2, "open_issues": 2, "topics": ["human-activity-recognition", "machine-learning", "downsampling-data", "accelerometer", "gyroscope", "sensor-data", "lstm-neural-networks", "rnn", "keras-neural-networks", "scikit-learn"]}, {"id": 131266222, "repo_name": "IsolationForest", "full_name": "elena-sharova/IsolationForest", "description": "testing scikit-learn Isolation Forest", "created": "2018-04-27 08:08:10", "language": "Jupyter Notebook", "type": "User", "username": "elena-sharova", "stars": 67, "forks": 69, "subscribers": 6, "open_issues": 0, "topics": []}, {"id": 22353796, "repo_name": "scikit-node", "full_name": "lramsey/scikit-node", "description": "npm wrapper for python's scikit-learn machine learning library.", "created": "2014-07-28 18:48:37", "language": "JavaScript", "type": "User", "username": "lramsey", "stars": 67, "forks": 16, "subscribers": 6, "open_issues": 4, "topics": []}, {"id": 134877468, "repo_name": "docker-flask-image-recognition-sklearn", "full_name": "DaveVoyles/docker-flask-image-recognition-sklearn", "description": "Dockerfile utilizing flask to host a scikit-learn image recognition model", "created": "2018-05-25 15:58:39", "language": "Python", "type": "User", "username": "DaveVoyles", "stars": 67, "forks": 15, "subscribers": 3, "open_issues": 3, "topics": []}, {"id": 303801602, "repo_name": "cca_zoo", "full_name": "jameschapman19/cca_zoo", "description": "Canonical Correlation Analysis Zoo: A collection of Regularized, Deep Learning based, Kernel, and Probabilistic methods in a scikit-learn style framework", "created": "2020-10-13 18:58:42", "language": "Python", "type": "User", "username": "jameschapman19", "stars": 67, "forks": 22, "subscribers": 1, "open_issues": 11, "topics": ["dcca", "deep", "cca", "canonical-correlation-analysis", "kernel", "multiview", "pytorch", "cca-zoo", "multiset-cca", "tensor-cca", "pls"]}, {"id": 110438985, "repo_name": "python-hierarchical-clustering-exercises", "full_name": "benjaminwilson/python-hierarchical-clustering-exercises", "description": "Exercises for hierarchical clustering with Python 3 and scipy as Jupyter Notebooks", "created": "2017-11-12 14:25:37", "language": "Jupyter Notebook", "type": "User", "username": "benjaminwilson", "stars": 67, "forks": 35, "subscribers": 4, "open_issues": 0, "topics": ["hierarchical-clustering", "python3", "scikit-learn", "data-science", "exercises"]}, {"id": 277069307, "repo_name": "Recommendation-systems", "full_name": "piyushpathak03/Recommendation-systems", "description": "Recommendation Systems This is a workshop on using Machine Learning and Deep Learning Techniques to build Recommendation Systesm  Theory: ML & DL Formulation, Prediction vs. Ranking, Similiarity, Biased vs. Unbiased Paradigms: Content-based, Collaborative filtering, Knowledge-based, Hybrid and Ensembles Data: Tabular, Images, Text (Sequences) Models: (Deep) Matrix Factorisation, Auto-Encoders, Wide & Deep, Rank-Learning, Sequence Modelling Methods: Explicit vs. implicit feedback, User-Item matrix, Embeddings, Convolution, Recurrent, Domain Signals: location, time, context, social, Process: Setup, Encode & Embed, Design, Train & Select, Serve & Scale, Measure, Test & Improve Tools: python-data-stack: numpy, pandas, scikit-learn, keras, spacy, implicit, lightfm Notes & Slides Basics: Deep Learning AI Conference 2019: WhiteBoard Notes | In-Class Notebooks Notebooks Movies - Movielens  01-Acquire 02-Augment 03-Refine 04-Transform 05-Evaluation 06-Model-Baseline 07-Feature-extractor 08-Model-Matrix-Factorization 09-Model-Matrix-Factorization-with-Bias 10-Model-MF-NNMF 11-Model-Deep-Matrix-Factorization 12-Model-Neural-Collaborative-Filtering 13-Model-Implicit-Matrix-Factorization 14-Features-Image 15-Features-NLP Ecommerce - YooChoose  01-Data-Preparation 02-Models News - Hackernews  Product - Groceries  Python Libraries Deep Recommender Libraries  Tensorrec - Built on Tensorflow Spotlight - Built on PyTorch TFranking - Built on TensorFlow (Learning to Rank) Matrix Factorisation Based Libraries  Implicit - Implicit Matrix Factorisation QMF - Implicit Matrix Factorisation Lightfm - For Hybrid Recommedations Surprise - Scikit-learn type api for traditional alogrithms Similarity Search Libraries  Annoy - Approximate Nearest Neighbour NMSLib - kNN methods FAISS - Similarity search and clustering Learning Resources Reference Slides Deep Learning in RecSys by Bal\u00e1zs Hidasi Lessons from Industry RecSys by Xavier Amatriain Architecting Recommendation Systems by James Kirk Recommendation Systems Overview by Raimon and Basilico Benchmarks MovieLens Benchmarks for Traditional Setup Microsoft Tutorial on Recommendation System at KDD 2019 Algorithms & Approaches Collaborative Filtering for Implicit Feedback Datasets Bayesian Personalised Ranking for Implicit Data Logistic Matrix Factorisation Neural Network Matrix Factorisation Neural Collaborative Filtering Variational Autoencoders for Collaborative Filtering Evaluations Evaluating Recommendation Systems", "created": "2020-07-04 08:21:26", "language": "Jupyter Notebook", "type": "User", "username": "piyushpathak03", "stars": 67, "forks": 26, "subscribers": 5, "open_issues": 0, "topics": []}, {"id": 237999598, "repo_name": "ciencia-de-dados", "full_name": "storopoli/ciencia-de-dados", "description": "Disciplina de Ci\u00eancias de Dados da UNINOVE", "created": "2020-02-03 15:38:36", "language": "Jupyter Notebook", "type": "User", "username": "storopoli", "stars": 66, "forks": 46, "subscribers": 6, "open_issues": 1, "topics": ["machinelearning", "deeplearning", "pandas", "matplotlib", "scikit-learn", "tensorflow", "data-science", "ciencia-de-dados", "aprendizagem-de-maquina", "aprendizagem-profunda", "python", "pytorch"]}, {"id": 26422034, "repo_name": "pydata-nyc-2014", "full_name": "bugra/pydata-nyc-2014", "description": "Pydata NYC 2014 Scikit Learn Tutorial", "created": "2014-11-10 05:16:06", "language": "Python", "type": "User", "username": "bugra", "stars": 65, "forks": 37, "subscribers": 8, "open_issues": 0, "topics": []}, {"id": 145306399, "repo_name": "scikit-hyperband", "full_name": "thuijskens/scikit-hyperband", "description": "A scikit-learn compatible implementation of hyperband", "created": "2018-08-19 13:38:23", "language": "Python", "type": "User", "username": "thuijskens", "stars": 65, "forks": 10, "subscribers": 5, "open_issues": 8, "topics": ["scikit-learn", "hyperband", "machine-learning", "hyperparameter-optimization", "hyperparameter-tuning", "algorithm-configuration"]}, {"id": 52235511, "repo_name": "sklearn_cotraining", "full_name": "jjrob13/sklearn_cotraining", "description": "An implementation of the Co-Training semi-supervised learning technique from (Blue, Mitchell 1998) that is meant to work well with scikit-learn classifiers.", "created": "2016-02-22 00:16:46", "language": "Python", "type": "User", "username": "jjrob13", "stars": 65, "forks": 30, "subscribers": 5, "open_issues": 0, "topics": []}, {"id": 76770159, "repo_name": "Sign-Language-and-Static-gesture-recognition-using-sklearn", "full_name": "mon95/Sign-Language-and-Static-gesture-recognition-using-sklearn", "description": "A Machine Learning pipeline that performs hand localization and static-gesture recognition built using the scikit learn and scikit image libraries", "created": "2016-12-18 07:54:15", "language": "Jupyter Notebook", "type": "User", "username": "mon95", "stars": 64, "forks": 34, "subscribers": 7, "open_issues": 4, "topics": ["sign-language-recognition", "machine-learning"]}, {"id": 57932916, "repo_name": "general_img_classifier", "full_name": "IanLondon/general_img_classifier", "description": "A general image classifier using Visual Bag of Words and SIFT, with OpenCV and scikit-learn", "created": "2016-05-03 01:38:14", "language": "Jupyter Notebook", "type": "User", "username": "IanLondon", "stars": 64, "forks": 25, "subscribers": 4, "open_issues": 2, "topics": []}, {"id": 95421591, "repo_name": "face_rating", "full_name": "HuyTu7/face_rating", "description": "Face/Beauty Rating with both the traditional ML approaches and Convolutional Neural Network Approach", "created": "2017-06-26 07:44:18", "language": "Jupyter Notebook", "type": "User", "username": "HuyTu7", "stars": 64, "forks": 16, "subscribers": 9, "open_issues": 1, "topics": ["landmark", "scikit-learn", "convolutional-neural-networks", "face-rating"]}, {"id": 115474631, "repo_name": "do-it-dl", "full_name": "rickiepark/do-it-dl", "description": "<Do it! \ub525\ub7ec\ub2dd \uc785\ubb38> \ub3c4\uc11c\uc758 \uc8fc\ud53c\ud130 \ub178\ud2b8\ubd81", "created": "2017-12-27 02:54:58", "language": "Jupyter Notebook", "type": "User", "username": "rickiepark", "stars": 64, "forks": 69, "subscribers": 7, "open_issues": 1, "topics": ["deep-learning", "neural-networks", "machie-learning", "keras", "tensorflow", "scikit-learn", "python"]}, {"id": 103323816, "repo_name": "Human-activity-recognition-using-Recurrent-Neural-Nets-RNN-LSTM-and-Tensorflow-on-Smartphones", "full_name": "girishp92/Human-activity-recognition-using-Recurrent-Neural-Nets-RNN-LSTM-and-Tensorflow-on-Smartphones", "description": "This was my Master's project where i was involved using a dataset from Wireless Sensor Data Mining Lab (WISDM) to build a machine learning model to predict basic human activities using a smartphone accelerometer, Using Tensorflow framework, recurrent neural nets and multiple stacks of Long-short-term memory units(LSTM)  for building a deep network.  After the model was trained,  it was saved and exported to an android application and the predictions were made using the model and the interface to speak out the results using text-to-speech API.", "created": "2017-09-12 21:50:03", "language": "Python", "type": "User", "username": "girishp92", "stars": 64, "forks": 35, "subscribers": 9, "open_issues": 1, "topics": ["machine-learning", "rnn-tensorflow", "lstm-neural-networks", "android-application", "python3", "human-activities", "hidden-units", "deep-learning", "proof-of-concept", "pycharm-ide", "androidstudio", "scikit-learn", "pickle", "smartphone-accelerometer"]}, {"id": 149278462, "repo_name": "active-semi-supervised-clustering", "full_name": "datamole-ai/active-semi-supervised-clustering", "description": "Active semi-supervised clustering algorithms for scikit-learn", "created": "2018-09-18 11:38:36", "language": "Python", "type": "Organization", "username": "datamole-ai", "stars": 63, "forks": 25, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 103846235, "repo_name": "Same-Size-K-Means", "full_name": "ndanielsen/Same-Size-K-Means", "description": "A k-means variation that produces clusters of the same size utilizing the scikit-learn API and related utilities", "created": "2017-09-17 17:02:55", "language": "Python", "type": "User", "username": "ndanielsen", "stars": 63, "forks": 52, "subscribers": 4, "open_issues": 11, "topics": []}, {"id": 164522976, "repo_name": "sports-betting", "full_name": "georgedouzas/sports-betting", "description": "Collection of sports betting AI tools.", "created": "2019-01-08 00:52:28", "language": "Python", "type": "User", "username": "georgedouzas", "stars": 63, "forks": 30, "subscribers": 9, "open_issues": 0, "topics": ["sports-betting", "machine-learning", "scikit-learn"]}, {"id": 149574658, "repo_name": "mlkatas", "full_name": "bpesquet/mlkatas", "description": "A series of challenges for practicing your Machine Learning and Deep Learning skills", "created": "2018-09-20 08:11:15", "language": "Jupyter Notebook", "type": "User", "username": "bpesquet", "stars": 63, "forks": 18, "subscribers": 7, "open_issues": 0, "topics": ["machine-learning", "python", "numpy", "scikit-learn", "keras", "assignment", "exercise", "activity", "challenge", "kata", "nbgrader"]}, {"id": 33413829, "repo_name": "pydata-dal-2015", "full_name": "bugra/pydata-dal-2015", "description": "Pydata Dallas 2015 Scikit-Learn Tutorial", "created": "2015-04-04 17:25:50", "language": "Python", "type": "User", "username": "bugra", "stars": 62, "forks": 38, "subscribers": 9, "open_issues": 0, "topics": []}, {"id": 19188721, "repo_name": "pydata-gbrt-tutorial", "full_name": "pprett/pydata-gbrt-tutorial", "description": "IPython notebook for PyData SF 2014 tutorial: \"Gradient Boosted Regression Trees in scikit-learn\"", "created": "2014-04-26 21:11:01", "language": "Jupyter Notebook", "type": "User", "username": "pprett", "stars": 62, "forks": 34, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 286779441, "repo_name": "sklearn-one-day", "full_name": "amueller/sklearn-one-day", "description": "One day workshop for machine learning with scikit-learn", "created": "2020-08-11 15:24:35", "language": "HTML", "type": "User", "username": "amueller", "stars": 62, "forks": 9, "subscribers": 6, "open_issues": 0, "topics": []}, {"id": 116969090, "repo_name": "model-deployment-flask", "full_name": "elliebirbeck/model-deployment-flask", "description": "'Deploying machine learning models with a Flask API' tutorial, written for HyperionDev", "created": "2018-01-10 14:35:37", "language": "Python", "type": "User", "username": "elliebirbeck", "stars": 62, "forks": 21, "subscribers": 1, "open_issues": 3, "topics": ["flask", "scikit-learn", "model-deployment", "svhn"]}, {"id": 67126331, "repo_name": "data-science-cookbook", "full_name": "InsightLab/data-science-cookbook", "description": ":mortar_board: Jupyter notebooks from UFC data science course", "created": "2016-09-01 11:43:29", "language": "Jupyter Notebook", "type": "Organization", "username": "InsightLab", "stars": 62, "forks": 84, "subscribers": 23, "open_issues": 10, "topics": ["data-science", "python", "spark", "jupyter-notebook", "scikit-learn", "machine-learning"]}, {"id": 136648763, "repo_name": "sklearn-pmml-model", "full_name": "iamDecode/sklearn-pmml-model", "description": "A library to parse and convert PMML models into Scikit-learn estimators.", "created": "2018-06-08 17:38:21", "language": "Cython", "type": "User", "username": "iamDecode", "stars": 61, "forks": 7, "subscribers": 3, "open_issues": 6, "topics": ["scikit-learn", "pmml", "machine-learning", "sklearn"]}, {"id": 87815067, "repo_name": "ml-rest", "full_name": "apinf/ml-rest", "description": "REST API (and possible UI) for Machine Learning workflows", "created": "2017-04-10 13:38:31", "language": "Python", "type": "Organization", "username": "apinf", "stars": 61, "forks": 24, "subscribers": 20, "open_issues": 1, "topics": ["machine-learning", "rest-api", "python", "scikit-learn"]}, {"id": 341670772, "repo_name": "ray_tutorial", "full_name": "DerwenAI/ray_tutorial", "description": "An introductory tutorial about leveraging Ray core features for distributed patterns.", "created": "2021-02-23 19:45:58", "language": "Jupyter Notebook", "type": "Organization", "username": "DerwenAI", "stars": 61, "forks": 23, "subscribers": 7, "open_issues": 1, "topics": ["ray", "rllib", "distributed-systems", "actor-pattern", "futures", "task-parallelism", "scikit-learn", "profiling", "ray-tutorial", "python", "introductory-tutorial", "pattern-language", "sharding"]}, {"id": 117273446, "repo_name": "polyaxon-examples", "full_name": "polyaxon/polyaxon-examples", "description": "Code for polyaxon tutorials and examples", "created": "2018-01-12 18:13:08", "language": "Python", "type": "Organization", "username": "polyaxon", "stars": 61, "forks": 24, "subscribers": 5, "open_issues": 2, "topics": ["tensorflow", "pytorch", "mxnet", "jupyter-notebook", "deep-learning", "polyaxon", "kubernetes", "machine-learning", "deeplearning", "nerual-network", "horovod", "scikit-learn", "mpi", "tfjob", "kubeflow", "pytorchjob", "mpijob", "keras", "mlops"]}, {"id": 103165761, "repo_name": "civisml-extensions", "full_name": "civisanalytics/civisml-extensions", "description": "scikit-learn-compatible estimators from Civis Analytics", "created": "2017-09-11 17:20:15", "language": "Python", "type": "Organization", "username": "civisanalytics", "stars": 60, "forks": 20, "subscribers": 77, "open_issues": 3, "topics": []}, {"id": 180804194, "repo_name": "Seizure-Detection-Tutorials", "full_name": "Eldave93/Seizure-Detection-Tutorials", "description": "A series of tutorials teaching the use of Python for epileptic seizure detection on open-source datasets", "created": "2019-04-11 14:00:06", "language": "Jupyter Notebook", "type": "User", "username": "Eldave93", "stars": 60, "forks": 26, "subscribers": 2, "open_issues": 1, "topics": ["epilepsy", "tutorials", "scikit-learn", "tensorflow", "keras"]}, {"id": 149908641, "repo_name": "IML", "full_name": "Dyakonov/IML", "description": "\u041a\u0443\u0440\u0441 \"\u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432 \u043c\u0430\u0448\u0438\u043d\u043d\u043e\u0435 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435\" (\u0412\u041c\u041a, \u041c\u0413\u0423 \u0438\u043c\u0435\u043d\u0438 \u041c.\u0412. \u041b\u043e\u043c\u043e\u043d\u043e\u0441\u043e\u0432\u0430)", "created": "2018-09-22 19:09:53", "language": null, "type": "User", "username": "Dyakonov", "stars": 60, "forks": 24, "subscribers": 16, "open_issues": 1, "topics": ["machine-learning", "ml", "education", "lectures", "slides", "python", "pandas", "scikit-learn", "numpy"]}, {"id": 231501720, "repo_name": "pure-predict", "full_name": "Ibotta/pure-predict", "description": "Machine learning prediction in pure Python", "created": "2020-01-03 03:03:00", "language": "Python", "type": "Organization", "username": "Ibotta", "stars": 60, "forks": 5, "subscribers": 17, "open_issues": 4, "topics": ["machine-learning", "scikit-learn", "pure-python", "inference", "serverless", "fasttext"]}, {"id": 24356567, "repo_name": "fylearn", "full_name": "sorend/fylearn", "description": "Fuzzy machine learning algorithms implementing the scikit-learn interface.", "created": "2014-09-23 04:19:40", "language": "Python", "type": "User", "username": "sorend", "stars": 59, "forks": 16, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 91170031, "repo_name": "ramp-workflow", "full_name": "paris-saclay-cds/ramp-workflow", "description": "Toolkit for building predictive workflows on top of pydata (pandas, scikit-learn, pytorch, keras, etc.). ", "created": "2017-05-13 11:37:06", "language": "Python", "type": "Organization", "username": "paris-saclay-cds", "stars": 59, "forks": 39, "subscribers": 15, "open_issues": 42, "topics": ["data-science", "data-challenge", "ramp", "python"]}, {"id": 108201726, "repo_name": "mstar_with_machine_learning", "full_name": "hunterlew/mstar_with_machine_learning", "description": "Simple implementation of sar target recognition using machine learning methods", "created": "2017-10-25 01:04:18", "language": "Python", "type": "User", "username": "hunterlew", "stars": 59, "forks": 30, "subscribers": 5, "open_issues": 3, "topics": ["machine-learning", "scikit-learn", "radar", "sar"]}, {"id": 138103263, "repo_name": "frovedis", "full_name": "frovedis/frovedis", "description": "Framework of vectorized and distributed data analytics", "created": "2018-06-21 01:17:51", "language": "C++", "type": "Organization", "username": "frovedis", "stars": 59, "forks": 11, "subscribers": 10, "open_issues": 1, "topics": ["sx-aurora-tsubasa", "machine-learning", "spark", "scikit-learn", "distributed-computing", "vectorization", "mpi"]}, {"id": 225617958, "repo_name": "Hands-On-Machine-Learning-with-scikit-learn-and-Scientific-Python-Toolkits", "full_name": "PacktPublishing/Hands-On-Machine-Learning-with-scikit-learn-and-Scientific-Python-Toolkits", "description": "The accompanying code for the book \"Hands-On Machine Learning with scikit-learn and Scientific Python Toolkits\". A practical guide to implementing supervised and unsupervised machine learning algorithms in Python by Tarek Amr", "created": "2019-12-03 12:45:45", "language": "Jupyter Notebook", "type": "Organization", "username": "PacktPublishing", "stars": 58, "forks": 44, "subscribers": 10, "open_issues": 1, "topics": ["machine-learning", "scikit-learn", "python", "machinelearning", "machinelearning-python"]}, {"id": 285298878, "repo_name": "SciCompforChemists", "full_name": "weisscharlesj/SciCompforChemists", "description": "Scientific Computing for Chemists text for teaching basic computing skills to chemistry students using Python, Jupyter notebooks, and the SciPy stack. This text makes use of a variety of packages including NumPy, SciPy, matplotlib, pandas, seaborn, NMRglue, SymPy, scikit-image, and scikit-learn.", "created": "2020-08-05 13:39:06", "language": null, "type": "User", "username": "weisscharlesj", "stars": 58, "forks": 19, "subscribers": 4, "open_issues": 0, "topics": ["chemists", "nmrglue", "scipy", "numpy", "python", "jupyterlab", "jupyter-notebooks", "chemistry", "computing", "scientific-computing", "scientific", "science", "chemical", "simulations"]}, {"id": 74752445, "repo_name": "machine-learning-scripts", "full_name": "CSCfi/machine-learning-scripts", "description": "Collection of scripts and tools related to machine learning", "created": "2016-11-25 11:20:09", "language": "Jupyter Notebook", "type": "Organization", "username": "CSCfi", "stars": 58, "forks": 50, "subscribers": 7, "open_issues": 1, "topics": ["machine-learning", "notebooks", "keras", "pytorch", "scikit-learn", "tensorflow", "jupyter-notebooks"]}, {"id": 208972987, "repo_name": "DS-Cookbook101", "full_name": "kaushil24/DS-Cookbook101", "description": "A jupyter notebook having all most frequent used code snippet for daily data scienceoperations", "created": "2019-09-17 06:12:29", "language": "Jupyter Notebook", "type": "User", "username": "kaushil24", "stars": 58, "forks": 14, "subscribers": 9, "open_issues": 0, "topics": ["pandas", "scikit-learn", "seaborn", "jupyter-notebook", "snippet"]}, {"id": 117859203, "repo_name": "TF-Speech-Recognition-Challenge-Solution", "full_name": "subho406/TF-Speech-Recognition-Challenge-Solution", "description": "Source code of the model used in Tensorflow Speech Recognition Challenge (https://www.kaggle.com/c/tensorflow-speech-recognition-challenge). The solution ranked in top 5% in private leaderboard.", "created": "2018-01-17 16:03:20", "language": "Jupyter Notebook", "type": "User", "username": "subho406", "stars": 58, "forks": 29, "subscribers": 4, "open_issues": 4, "topics": ["tensorflow", "speech", "speech-recognition", "raspberry-pi", "audio-recognition", "neural-network", "deep-learning", "convolutional-neural-networks", "recurrent-neural-networks", "ensemble-learning", "scikit-learn"]}, {"id": 148163152, "repo_name": "face_recognition_using_opencv_keras_scikit-learn", "full_name": "seed-fe/face_recognition_using_opencv_keras_scikit-learn", "description": "a face recognition system based on convolutional neural network.", "created": "2018-09-10 13:53:39", "language": "Python", "type": "User", "username": "seed-fe", "stars": 57, "forks": 30, "subscribers": 3, "open_issues": 0, "topics": ["deep-learning", "computer-vision", "machine-learning"]}, {"id": 335264320, "repo_name": "aws-lambda-docker-serverless-inference", "full_name": "aws-samples/aws-lambda-docker-serverless-inference", "description": "Serve scikit-learn, XGBoost, TensorFlow, and PyTorch models with AWS Lambda container images support.", "created": "2021-02-02 11:21:06", "language": "Jupyter Notebook", "type": "Organization", "username": "aws-samples", "stars": 57, "forks": 13, "subscribers": 4, "open_issues": 0, "topics": ["aws-lambda", "aws", "machine-learning", "serverless", "xgboost", "tensor-flow", "tensorflow-java", "djl", "deep-java-library", "tensorflow", "pytorch", "serverless-application-model", "sagemaker", "pytorch-models", "inference", "java", "docker", "scikit-learn", "huggingface", "huggingface-transformers"]}, {"id": 10509280, "repo_name": "social_media_brand_disambiguator", "full_name": "ianozsvald/social_media_brand_disambiguator", "description": "Brand disambiguator for tweets to differentiate e.g. Orange vs orange (brand vs foodstuff), using NLTK and scikit-learn", "created": "2013-06-05 18:10:39", "language": "Python", "type": "User", "username": "ianozsvald", "stars": 57, "forks": 7, "subscribers": 13, "open_issues": 3, "topics": []}, {"id": 145458733, "repo_name": "Deploy-machine-learning-model", "full_name": "deepakiim/Deploy-machine-learning-model", "description": "Dockerize and deploy machine learning model as REST API using Flask", "created": "2018-08-20 18:58:33", "language": "Python", "type": "User", "username": "deepakiim", "stars": 57, "forks": 40, "subscribers": 1, "open_issues": 0, "topics": ["docker", "machine-learning", "deployment", "flask-restful", "python", "scikit-learn", "rest-api"]}, {"id": 55423129, "repo_name": "rsmtool", "full_name": "EducationalTestingService/rsmtool", "description": "A Python package to facilitate research on building and evaluating automated scoring models.", "created": "2016-04-04 15:35:11", "language": "Python", "type": "Organization", "username": "EducationalTestingService", "stars": 57, "forks": 17, "subscribers": 14, "open_issues": 72, "topics": ["scoring-models", "automated-scoring-engines", "python", "visualization", "scikit-learn", "fairness", "hacktoberfest"]}, {"id": 93241705, "repo_name": "PredictionAPI", "full_name": "NawfalTachfine/PredictionAPI", "description": "Tutorial on deploying machine learning models to production", "created": "2017-06-03 10:41:32", "language": "Jupyter Notebook", "type": "User", "username": "NawfalTachfine", "stars": 57, "forks": 31, "subscribers": 5, "open_issues": 1, "topics": ["scikit-learn", "api", "flask", "docker", "tutorial", "production", "machine-learning", "json", "aws-elastic-beanstalk"]}, {"id": 154079534, "repo_name": "Python-Stock", "full_name": "Lucas-Kohorst/Python-Stock", "description": "Predicting stock prices from Yahoo stock screener using scikit-learn and sending the predicitons via smtplib to a phone number. ", "created": "2018-10-22 02:55:27", "language": "Python", "type": "User", "username": "Lucas-Kohorst", "stars": 56, "forks": 46, "subscribers": 8, "open_issues": 3, "topics": []}, {"id": 59807524, "repo_name": "SVM-CNN", "full_name": "dlmacedo/SVM-CNN", "description": "A feature extractor based on Python 3, Tensorflow and Scikit-learn created in order to improve the accuracy of SVM to classify MNIST dataset fast and with more accuracy.", "created": "2016-05-27 05:48:25", "language": "Python", "type": "User", "username": "dlmacedo", "stars": 56, "forks": 43, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 140740710, "repo_name": "wolpert", "full_name": "caioaao/wolpert", "description": "A stacked generalization framework. Built on top of scikit learn", "created": "2018-07-12 16:47:41", "language": "Python", "type": "User", "username": "caioaao", "stars": 56, "forks": 1, "subscribers": 5, "open_issues": 1, "topics": []}, {"id": 362190947, "repo_name": "Attendance-Management-System-Using-Face-Recognition", "full_name": "nevilparmar11/Attendance-Management-System-Using-Face-Recognition", "description": "Attendance Management system using face recognition.", "created": "2021-04-27 17:08:54", "language": "HTML", "type": "User", "username": "nevilparmar11", "stars": 56, "forks": 30, "subscribers": 1, "open_issues": 3, "topics": ["python", "python3", "django", "face-recognition", "face-detection", "dlib", "dlib-face-detection", "scikit-learn"]}, {"id": 235863526, "repo_name": "CursoDS_ProfDanilo", "full_name": "danmorales/CursoDS_ProfDanilo", "description": "C\u00f3digos Python com diferentes aplica\u00e7\u00f5es como t\u00e9cnicas de machine learning e deep learning, fundamentos de estat\u00edstica, problemas de regress\u00e3o de classifica\u00e7\u00e3o. Os v\u00eddeos com as explica\u00e7\u00f5es te\u00f3ricas est\u00e3o dispon\u00edveis no meu canal do YouTube ", "created": "2020-01-23 18:52:20", "language": "Jupyter Notebook", "type": "User", "username": "danmorales", "stars": 55, "forks": 69, "subscribers": 5, "open_issues": 0, "topics": ["deep-learning", "machine-learning", "machine-learning-algorithms", "aprendizado-de-maquina", "ciencia-de-dados", "scikit-learn", "data-science", "tensorflow", "tensorflow-tutorials", "keras-neural-networks", "keras-classification-models", "keras-models", "keras-layer", "scikitlearn-machine-learning", "pandas-dataframe", "pandas-python", "scipy", "numpy"]}, {"id": 110320947, "repo_name": "PracticalMachineLearning", "full_name": "habedi/PracticalMachineLearning", "description": "My ML related stuff including notebooks, codes and a curated list of various useful resources such as books and softwares. Almost everything mentioned here is free(as speech not free food) or open-source.", "created": "2017-11-11 05:32:10", "language": "Jupyter Notebook", "type": "User", "username": "habedi", "stars": 55, "forks": 17, "subscribers": 4, "open_issues": 0, "topics": ["jupyter-notebook", "zeppelin-notebook", "data-science", "machine-learning", "data-analysis", "self-learning", "resources", "book", "python-machine-learning", "python", "deep-learning", "kaggle", "learning", "deep-neural-networks", "data-science-resourses", "graph-mining", "graph-algorithms", "scikit-learn", "data-mining", "pandas"]}, {"id": 261426750, "repo_name": "all-classification-templetes-for-ML", "full_name": "sayantann11/all-classification-templetes-for-ML", "description": "Classification - Machine Learning This is \u2018Classification\u2019 tutorial which is a part of the Machine Learning course offered by Simplilearn. We will learn Classification algorithms, types of classification algorithms, support vector machines(SVM), Naive Bayes, Decision Tree and Random Forest Classifier in this tutorial.  Objectives Let us look at some of the objectives covered under this section of Machine Learning tutorial.  Define Classification and list its algorithms Describe Logistic Regression and Sigmoid Probability Explain K-Nearest Neighbors and KNN classification Understand Support Vector Machines, Polynomial Kernel, and Kernel Trick Analyze Kernel Support Vector Machines with an example Implement the Na\u00efve Bayes Classifier Demonstrate Decision Tree Classifier Describe Random Forest Classifier Classification: Meaning Classification is a type of supervised learning. It specifies the class to which data elements belong to and is best used when the output has finite and discrete values. It predicts a class for an input variable as well.  There are 2 types of Classification:   Binomial Multi-Class Classification: Use Cases Some of the key areas where classification cases are being used:  To find whether an email received is a spam or ham To identify customer segments To find if a bank loan is granted To identify if a kid will pass or fail in an examination Classification: Example Social media sentiment analysis has two potential outcomes, positive or negative, as displayed by the chart given below.  https://www.simplilearn.com/ice9/free_resources_article_thumb/classification-example-machine-learning.JPG  This chart shows the classification of the Iris flower dataset into its three sub-species indicated by codes 0, 1, and 2. https://www.simplilearn.com/ice9/free_resources_article_thumb/iris-flower-dataset-graph.JPG  The test set dots represent the assignment of new test data points to one class or the other based on the trained classifier model. Types of Classification Algorithms Let\u2019s have a quick look into the types of Classification Algorithm below.  Linear Models Logistic Regression Support Vector Machines Nonlinear models K-nearest Neighbors (KNN) Kernel Support Vector Machines (SVM) Na\u00efve Bayes Decision Tree Classification Random Forest Classification Logistic Regression: Meaning Let us understand the Logistic Regression model below.  This refers to a regression model that is used for classification. This method is widely used for binary classification problems. It can also be extended to multi-class classification problems. Here, the dependent variable is categorical: y \u03f5 {0, 1} A binary dependent variable can have only two values, like 0 or 1, win or lose, pass or fail, healthy or sick, etc In this case, you model the probability distribution of output y as 1 or 0. This is called the sigmoid probability (\u03c3). If \u03c3(\u03b8 Tx) > 0.5, set y = 1, else set y = 0 Unlike Linear Regression (and its Normal Equation solution), there is no closed form solution for finding optimal weights of Logistic Regression. Instead, you must solve this with maximum likelihood estimation (a probability model to detect the maximum likelihood of something happening). It can be used to calculate the probability of a given outcome in a binary model, like the probability of being classified as sick or passing an exam. https://www.simplilearn.com/ice9/free_resources_article_thumb/logistic-regression-example-graph.JPG  Sigmoid Probability The probability in the logistic regression is often represented by the Sigmoid function (also called the logistic function or the S-curve):  https://www.simplilearn.com/ice9/free_resources_article_thumb/sigmoid-function-machine-learning.JPG  In this equation, t represents data values * the number of hours studied and S(t) represents the probability of passing the exam. Assume sigmoid function: https://www.simplilearn.com/ice9/free_resources_article_thumb/sigmoid-probability-machine-learning.JPG  g(z) tends toward 1 as z -> infinity , and g(z) tends toward 0 as z -> infinity  K-nearest Neighbors (KNN) K-nearest Neighbors algorithm is used to assign a data point to clusters based on similarity measurement. It uses a supervised method for classification.  The steps to writing a k-means algorithm are as given below:  https://www.simplilearn.com/ice9/free_resources_article_thumb/knn-distribution-graph-machine-learning.JPG  Choose the number of k and a distance metric. (k = 5 is common) Find k-nearest neighbors of the sample that you want to classify Assign the class label by majority vote. KNN Classification A new input point is classified in the category such that it has the most number of neighbors from that category. For example:  https://www.simplilearn.com/ice9/free_resources_article_thumb/knn-classification-machine-learning.JPG  Classify a patient as high risk or low risk. Mark email as spam or ham. Keen on learning about Classification Algorithms in Machine Learning? Click here!  Support Vector Machine (SVM) Let us understand Support Vector Machine (SVM) in detail below.  SVMs are classification algorithms used to assign data to various classes. They involve detecting hyperplanes which segregate data into classes. SVMs are very versatile and are also capable of performing linear or nonlinear classification, regression, and outlier detection. Once ideal hyperplanes are discovered, new data points can be easily classified. https://www.simplilearn.com/ice9/free_resources_article_thumb/support-vector-machines-graph-machine-learning.JPG  The optimization objective is to find \u201cmaximum margin hyperplane\u201d that is farthest from the closest points in the two classes (these points are called support vectors). In the given figure, the middle line represents the hyperplane. SVM Example Let\u2019s look at this image below and have an idea about SVM in general.  Hyperplanes with larger margins have lower generalization error. The positive and negative hyperplanes are represented by: https://www.simplilearn.com/ice9/free_resources_article_thumb/positive-negative-hyperplanes-machine-learning.JPG  Classification of any new input sample xtest :  If w0 + wTxtest > 1, the sample xtest is said to be in the class toward the right of the positive hyperplane. If w0 + wTxtest < -1, the sample xtest is said to be in the class toward the left of the negative hyperplane. When you subtract the two equations, you get:  https://www.simplilearn.com/ice9/free_resources_article_thumb/equation-subtraction-machine-learning.JPG  Length of vector w is (L2 norm length):  https://www.simplilearn.com/ice9/free_resources_article_thumb/length-of-vector-machine-learning.JPG  You normalize with the length of w to arrive at:  https://www.simplilearn.com/ice9/free_resources_article_thumb/normalize-equation-machine-learning.JPG  SVM: Hard Margin Classification Given below are some points to understand Hard Margin Classification.  The left side of equation SVM-1 given above can be interpreted as the distance between the positive (+ve) and negative (-ve) hyperplanes; in other words, it is the margin that can be maximized. Hence the objective of the function is to maximize with the constraint that the samples are classified correctly, which is represented as : https://www.simplilearn.com/ice9/free_resources_article_thumb/hard-margin-classification-machine-learning.JPG  This means that you are minimizing \u2016w\u2016. This also means that all positive samples are on one side of the positive hyperplane and all negative samples are on the other side of the negative hyperplane. This can be written concisely as : https://www.simplilearn.com/ice9/free_resources_article_thumb/hard-margin-classification-formula.JPG  Minimizing \u2016w\u2016 is the same as minimizing. This figure is better as it is differentiable even at w = 0. The approach listed above is called \u201chard margin linear SVM classifier.\u201d SVM: Soft Margin Classification   Given below are some points to understand Soft Margin Classification.  To allow for linear constraints to be relaxed for nonlinearly separable data, a slack variable is introduced. (i) measures how much ith instance is allowed to violate the margin. The slack variable is simply added to the linear constraints. https://www.simplilearn.com/ice9/free_resources_article_thumb/soft-margin-calculation-machine-learning.JPG  Subject to the above constraints, the new objective to be minimized becomes: https://www.simplilearn.com/ice9/free_resources_article_thumb/soft-margin-calculation-formula.JPG  You have two conflicting objectives now\u2014minimizing slack variable to reduce margin violations and minimizing to increase the margin. The hyperparameter C allows us to define this trade-off. Large values of C correspond to larger error penalties (so smaller margins), whereas smaller values of C allow for higher misclassification errors and larger margins. https://www.simplilearn.com/ice9/free_resources_article_thumb/machine-learning-certification-video-preview.jpg  SVM: Regularization The concept of C is the reverse of regularization. Higher C means lower regularization, which increases bias and lowers the variance (causing overfitting).  https://www.simplilearn.com/ice9/free_resources_article_thumb/concept-of-c-graph-machine-learning.JPG  IRIS Data Set The Iris dataset contains measurements of 150 IRIS flowers from three different species:  Setosa Versicolor Viriginica Each row represents one sample. Flower measurements in centimeters are stored as columns. These are called features.  IRIS Data Set: SVM Let\u2019s train an SVM model using sci-kit-learn for the Iris dataset:  https://www.simplilearn.com/ice9/free_resources_article_thumb/svm-model-graph-machine-learning.JPG  Nonlinear SVM Classification There are two ways to solve nonlinear SVMs:  by adding polynomial features by adding similarity features Polynomial features can be added to datasets; in some cases, this can create a linearly separable dataset.  https://www.simplilearn.com/ice9/free_resources_article_thumb/nonlinear-classification-svm-machine-learning.JPG  In the figure on the left, there is only 1 feature x1. This dataset is not linearly separable. If you add x2 = (x1)2 (figure on the right), the data becomes linearly separable. Polynomial Kernel In sci-kit-learn, one can use a Pipeline class for creating polynomial features. Classification results for the Moons dataset are shown in the figure.  https://www.simplilearn.com/ice9/free_resources_article_thumb/polynomial-kernel-machine-learning.JPG  Polynomial Kernel with Kernel Trick Let us look at the image below and understand Kernel Trick in detail.  https://www.simplilearn.com/ice9/free_resources_article_thumb/polynomial-kernel-with-kernel-trick.JPG  For large dimensional datasets, adding too many polynomial features can slow down the model. You can apply a kernel trick with the effect of polynomial features without actually adding them. The code is shown (SVC class) below trains an SVM classifier using a 3rd-degree polynomial kernel but with a kernel trick. https://www.simplilearn.com/ice9/free_resources_article_thumb/polynomial-kernel-equation-machine-learning.JPG  The hyperparameter coef\u03b8 controls the influence of high-degree polynomials.  Kernel SVM Let us understand in detail about Kernel SVM.  Kernel SVMs are used for classification of nonlinear data. In the chart, nonlinear data is projected into a higher dimensional space via a mapping function where it becomes linearly separable. https://www.simplilearn.com/ice9/free_resources_article_thumb/kernel-svm-machine-learning.JPG  In the higher dimension, a linear separating hyperplane can be derived and used for classification.  A reverse projection of the higher dimension back to original feature space takes it back to nonlinear shape.  As mentioned previously, SVMs can be kernelized to solve nonlinear classification problems. You can create a sample dataset for XOR gate (nonlinear problem) from NumPy. 100 samples will be assigned the class sample 1, and 100 samples will be assigned the class label -1. https://www.simplilearn.com/ice9/free_resources_article_thumb/kernel-svm-graph-machine-learning.JPG  As you can see, this data is not linearly separable.  https://www.simplilearn.com/ice9/free_resources_article_thumb/kernel-svm-non-separable.JPG  You now use the kernel trick to classify XOR dataset created earlier.  https://www.simplilearn.com/ice9/free_resources_article_thumb/kernel-svm-xor-machine-learning.JPG  Na\u00efve Bayes Classifier What is Naive Bayes Classifier?  Have you ever wondered how your mail provider implements spam filtering or how online news channels perform news text classification or even how companies perform sentiment analysis of their audience on social media? All of this and more are done through a machine learning algorithm called Naive Bayes Classifier.  Naive Bayes Named after Thomas Bayes from the 1700s who first coined this in the Western literature. Naive Bayes classifier works on the principle of conditional probability as given by the Bayes theorem.  Advantages of Naive Bayes Classifier Listed below are six benefits of Naive Bayes Classifier.  Very simple and easy to implement Needs less training data Handles both continuous and discrete data Highly scalable with the number of predictors and data points As it is fast, it can be used in real-time predictions Not sensitive to irrelevant features Bayes Theorem We will understand Bayes Theorem in detail from the points mentioned below.  According to the Bayes model, the conditional probability P(Y|X) can be calculated as:  P(Y|X) = P(X|Y)P(Y) / P(X)  This means you have to estimate a very large number of P(X|Y) probabilities for a relatively small vector space X. For example, for a Boolean Y and 30 possible Boolean attributes in the X vector, you will have to estimate 3 billion probabilities P(X|Y). To make it practical, a Na\u00efve Bayes classifier is used, which assumes conditional independence of P(X) to each other, with a given value of Y. This reduces the number of probability estimates to 2*30=60 in the above example. Na\u00efve Bayes Classifier for SMS Spam Detection Consider a labeled SMS database having 5574 messages. It has messages as given below:  https://www.simplilearn.com/ice9/free_resources_article_thumb/naive-bayes-spam-machine-learning.JPG  Each message is marked as spam or ham in the data set. Let\u2019s train a model with Na\u00efve Bayes algorithm to detect spam from ham. The message lengths and their frequency (in the training dataset) are as shown below:  https://www.simplilearn.com/ice9/free_resources_article_thumb/naive-bayes-spam-spam-detection.JPG  Analyze the logic you use to train an algorithm to detect spam:  Split each message into individual words/tokens (bag of words). Lemmatize the data (each word takes its base form, like \u201cwalking\u201d or \u201cwalked\u201d is replaced with \u201cwalk\u201d). Convert data to vectors using scikit-learn module CountVectorizer. Run TFIDF to remove common words like \u201cis,\u201d \u201care,\u201d \u201cand.\u201d Now apply scikit-learn module for Na\u00efve Bayes MultinomialNB to get the Spam Detector. This spam detector can then be used to classify a random new message as spam or ham. Next, the accuracy of the spam detector is checked using the Confusion Matrix. For the SMS spam example above, the confusion matrix is shown on the right. Accuracy Rate = Correct / Total = (4827 + 592)/5574 = 97.21% Error Rate = Wrong / Total = (155 + 0)/5574 = 2.78% https://www.simplilearn.com/ice9/free_resources_article_thumb/confusion-matrix-machine-learning.JPG  Although confusion Matrix is useful, some more precise metrics are provided by Precision and Recall.  https://www.simplilearn.com/ice9/free_resources_article_thumb/precision-recall-matrix-machine-learning.JPG  Precision refers to the accuracy of positive predictions.  https://www.simplilearn.com/ice9/free_resources_article_thumb/precision-formula-machine-learning.JPG  Recall refers to the ratio of positive instances that are correctly detected by the classifier (also known as True positive rate or TPR).  https://www.simplilearn.com/ice9/free_resources_article_thumb/recall-formula-machine-learning.JPG  Precision/Recall Trade-off To detect age-appropriate videos for kids, you need high precision (low recall) to ensure that only safe videos make the cut (even though a few safe videos may be left out).  The high recall is needed (low precision is acceptable) in-store surveillance to catch shoplifters; a few false alarms are acceptable, but all shoplifters must be caught.  Learn about Naive Bayes in detail. Click here!  Decision Tree Classifier Some aspects of the Decision Tree Classifier mentioned below are.  Decision Trees (DT) can be used both for classification and regression. The advantage of decision trees is that they require very little data preparation. They do not require feature scaling or centering at all. They are also the fundamental components of Random Forests, one of the most powerful ML algorithms. Unlike Random Forests and Neural Networks (which do black-box modeling), Decision Trees are white box models, which means that inner workings of these models are clearly understood. In the case of classification, the data is segregated based on a series of questions. Any new data point is assigned to the selected leaf node. https://www.simplilearn.com/ice9/free_resources_article_thumb/decision-tree-classifier-machine-learning.JPG  Start at the tree root and split the data on the feature using the decision algorithm, resulting in the largest information gain (IG). This splitting procedure is then repeated in an iterative process at each child node until the leaves are pure. This means that the samples at each node belonging to the same class. In practice, you can set a limit on the depth of the tree to prevent overfitting. The purity is compromised here as the final leaves may still have some impurity. The figure shows the classification of the Iris dataset. https://www.simplilearn.com/ice9/free_resources_article_thumb/decision-tree-classifier-graph.JPG  IRIS Decision Tree Let\u2019s build a Decision Tree using scikit-learn for the Iris flower dataset and also visualize it using export_graphviz API.  https://www.simplilearn.com/ice9/free_resources_article_thumb/iris-decision-tree-machine-learning.JPG  The output of export_graphviz can be converted into png format:  https://www.simplilearn.com/ice9/free_resources_article_thumb/iris-decision-tree-output.JPG  Sample attribute stands for the number of training instances the node applies to. Value attribute stands for the number of training instances of each class the node applies to. Gini impurity measures the node\u2019s impurity. A node is \u201cpure\u201d (gini=0) if all training instances it applies to belong to the same class. https://www.simplilearn.com/ice9/free_resources_article_thumb/impurity-formula-machine-learning.JPG  For example, for Versicolor (green color node), the Gini is 1-(0/54)2 -(49/54)2 -(5/54) 2 \u2248 0.168  https://www.simplilearn.com/ice9/free_resources_article_thumb/iris-decision-tree-sample.JPG  Decision Boundaries Let us learn to create decision boundaries below.  For the first node (depth 0), the solid line splits the data (Iris-Setosa on left). Gini is 0 for Setosa node, so no further split is possible. The second node (depth 1) splits the data into Versicolor and Virginica. If max_depth were set as 3, a third split would happen (vertical dotted line). https://www.simplilearn.com/ice9/free_resources_article_thumb/decision-tree-boundaries.JPG  For a sample with petal length 5 cm and petal width 1.5 cm, the tree traverses to depth 2 left node, so the probability predictions for this sample are 0% for Iris-Setosa (0/54), 90.7% for Iris-Versicolor (49/54), and 9.3% for Iris-Virginica (5/54) CART Training Algorithm Scikit-learn uses Classification and Regression Trees (CART) algorithm to train Decision Trees. CART algorithm:  Split the data into two subsets using a single feature k and threshold tk (example, petal length < \u201c2.45 cm\u201d). This is done recursively for each node. k and tk are chosen such that they produce the purest subsets (weighted by their size). The objective is to minimize the cost function as given below: https://www.simplilearn.com/ice9/free_resources_article_thumb/cart-training-algorithm-machine-learning.JPG  The algorithm stops executing if one of the following situations occurs: max_depth is reached No further splits are found for each node Other hyperparameters may be used to stop the tree: min_samples_split min_samples_leaf min_weight_fraction_leaf max_leaf_nodes Gini Impurity or Entropy Entropy is one more measure of impurity and can be used in place of Gini.  https://www.simplilearn.com/ice9/free_resources_article_thumb/gini-impurity-entrophy.JPG  It is a degree of uncertainty, and Information Gain is the reduction that occurs in entropy as one traverses down the tree. Entropy is zero for a DT node when the node contains instances of only one class. Entropy for depth 2 left node in the example given above is:  https://www.simplilearn.com/ice9/free_resources_article_thumb/entrophy-for-depth-2.JPG  Gini and Entropy both lead to similar trees.  DT: Regularization The following figure shows two decision trees on the moons dataset.  https://www.simplilearn.com/ice9/free_resources_article_thumb/dt-regularization-machine-learning.JPG  The decision tree on the right is restricted by min_samples_leaf = 4. The model on the left is overfitting, while the model on the right generalizes better. Random Forest Classifier Let us have an understanding of Random Forest Classifier below.  A random forest can be considered an ensemble of decision trees (Ensemble learning). Random Forest algorithm: Draw a random bootstrap sample of size n (randomly choose n samples from the training set). Grow a decision tree from the bootstrap sample. At each node, randomly select d features. Split the node using the feature that provides the best split according to the objective function, for instance by maximizing the information gain. Repeat the steps 1 to 2 k times. (k is the number of trees you want to create, using a subset of samples) Aggregate the prediction by each tree for a new data point to assign the class label by majority vote (pick the group selected by the most number of trees and assign new data point to that group). Random Forests are opaque, which means it is difficult to visualize their inner workings. https://www.simplilearn.com/ice9/free_resources_article_thumb/random-forest-classifier-graph.JPG  However, the advantages outweigh their limitations since you do not have to worry about hyperparameters except k, which stands for the number of decision trees to be created from a subset of samples. RF is quite robust to noise from the individual decision trees. Hence, you need not prune individual decision trees. The larger the number of decision trees, the more accurate the Random Forest prediction is. (This, however, comes with higher computation cost). Key Takeaways Let us quickly run through what we have learned so far in this Classification tutorial.  Classification algorithms are supervised learning methods to split data into classes. They can work on Linear Data as well as Nonlinear Data. Logistic Regression can classify data based on weighted parameters and sigmoid conversion to calculate the probability of classes. K-nearest Neighbors (KNN) algorithm uses similar features to classify data. Support Vector Machines (SVMs) classify data by detecting the maximum margin hyperplane between data classes. Na\u00efve Bayes, a simplified Bayes Model, can help classify data using conditional probability models. Decision Trees are powerful classifiers and use tree splitting logic until pure or somewhat pure leaf node classes are attained. Random Forests apply Ensemble Learning to Decision Trees for more accurate classification predictions. Conclusion This completes \u2018Classification\u2019 tutorial. In the next tutorial, we will learn 'Unsupervised Learning with Clustering.'", "created": "2020-05-05 10:28:52", "language": "Python", "type": "User", "username": "sayantann11", "stars": 55, "forks": 24, "subscribers": 6, "open_issues": 0, "topics": []}, {"id": 101295867, "repo_name": "tutorial-sklearn", "full_name": "pagutierrez/tutorial-sklearn", "description": "Tutorial sobre scikit-learn completo", "created": "2017-08-24 13:07:32", "language": "HTML", "type": "User", "username": "pagutierrez", "stars": 54, "forks": 38, "subscribers": 5, "open_issues": 0, "topics": []}, {"id": 151195504, "repo_name": "scikit-learn_bench", "full_name": "IntelPython/scikit-learn_bench", "description": "scikit-learn_bench benchmarks various implementations of machine learning algorithms across data analytics frameworks. It currently support the scikit-learn, DAAL4PY, cuML, and XGBoost frameworks for commonly used machine learning algorithms.", "created": "2018-10-02 03:30:53", "language": "Python", "type": "Organization", "username": "IntelPython", "stars": 54, "forks": 37, "subscribers": 9, "open_issues": 17, "topics": ["machine-learning-benchmarks", "machine-learning", "benchmarks", "scikit-learn-benchmarks", "daal4py", "hacktoberfest"]}, {"id": 97590870, "repo_name": "eucl_dist", "full_name": "droyed/eucl_dist", "description": " Euclidean Distance Computation in Python for 4x-100x+ speedups over SciPy and scikit-learn. Also leverages GPU for better performance on specific datasets.", "created": "2017-07-18 11:36:16", "language": "Python", "type": "User", "username": "droyed", "stars": 54, "forks": 4, "subscribers": 3, "open_issues": 3, "topics": []}, {"id": 107194806, "repo_name": "website-fingerprinting", "full_name": "wisepythagoras/website-fingerprinting", "description": "Deanonymizing Tor or VPN users with website fingerprinting and machine learning.", "created": "2017-10-16 23:45:02", "language": "Python", "type": "User", "username": "wisepythagoras", "stars": 54, "forks": 22, "subscribers": 3, "open_issues": 0, "topics": ["fingerprinting", "fingerprinting-algorithm", "fingerprinting-methods", "website-fingerprinting", "scikit-learn", "machine-learning", "deanonymization", "tor", "user-privacy", "privacy", "wang", "packets", "classifier", "anonymous-users", "traffic", "capture", "goldberg", "anonymous"]}, {"id": 79687993, "repo_name": "sklearn-deeprl", "full_name": "yandexdataschool/sklearn-deeprl", "description": "Deep reinforcement learning. In scikit-learn. In less than 50 effective lines.", "created": "2017-01-22 02:35:18", "language": "Jupyter Notebook", "type": "Organization", "username": "yandexdataschool", "stars": 53, "forks": 14, "subscribers": 14, "open_issues": 1, "topics": []}, {"id": 127207413, "repo_name": "skoot", "full_name": "tgsmith61591/skoot", "description": "A package for data science practitioners. This library implements a number of helpful, common data transformations with a scikit-learn friendly interface in an effort to expedite the modeling process.", "created": "2018-03-28 22:48:40", "language": "Python", "type": "User", "username": "tgsmith61591", "stars": 53, "forks": 11, "subscribers": 5, "open_issues": 7, "topics": ["scikit-learn", "skutil", "imbalanced-data", "machine-learning", "data-science", "python", "pandas"]}, {"id": 420598047, "repo_name": "datascienv", "full_name": "ashishpatel26/datascienv", "description": "datascienv is package that helps you to setup your environment in single line of code with all dependency and it is also include pyforest that provide single line of import all required ml libraries", "created": "2021-10-24 05:43:15", "language": "Python", "type": "User", "username": "ashishpatel26", "stars": 53, "forks": 11, "subscribers": 3, "open_issues": 1, "topics": ["data-science", "datascienv", "data-science-env", "pandas", "numpy", "matplotlib", "seaborn", "imbalanced-data", "scikit-learn", "xgboost", "lightgbm", "catboost", "pycaret", "tensorflow2"]}, {"id": 274861986, "repo_name": "adapt", "full_name": "adapt-python/adapt", "description": "Awesome Domain Adaptation Python Toolbox", "created": "2020-06-25 08:08:21", "language": "Jupyter Notebook", "type": "User", "username": "adapt-python", "stars": 53, "forks": 10, "subscribers": 2, "open_issues": 5, "topics": ["domain-adaptation", "transfer-learning", "few-shot-learning", "zero-shot-learning", "adversarial-learning", "adversarial-networks", "feature-selection", "importance-sampling", "regularization-parameters", "machine-learning", "deep-learning", "generalization", "python", "tensorflow", "scikit-learn", "dann"]}, {"id": 187978556, "repo_name": "text-classification-cn", "full_name": "lijqhs/text-classification-cn", "description": "\u4e2d\u6587\u6587\u672c\u5206\u7c7b\u5b9e\u8df5\uff0c\u57fa\u4e8e\u641c\u72d7\u65b0\u95fb\u8bed\u6599\u5e93\uff0c\u91c7\u7528\u4f20\u7edf\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u4ee5\u53ca\u9884\u8bad\u7ec3\u6a21\u578b\u7b49\u65b9\u6cd5", "created": "2019-05-22 06:42:32", "language": "Python", "type": "User", "username": "lijqhs", "stars": 53, "forks": 22, "subscribers": 2, "open_issues": 1, "topics": ["text-classification", "keras", "cnn", "scikit-learn", "machine-learning", "deep-learning", "nlp", "svm", "embedding", "pretrained", "tf-idf", "naive-bayes", "logistic-regression", "text-cnn", "sogou", "corpus", "word2vec", "keras-cnn", "embedding-layers", "python"]}, {"id": 91188430, "repo_name": "Machine-Learning", "full_name": "anubhavshrimal/Machine-Learning", "description": "The projects I do in Machine Learning with PyTorch, keras, Tensorflow, scikit learn and Python.", "created": "2017-05-13 16:41:49", "language": "Jupyter Notebook", "type": "User", "username": "anubhavshrimal", "stars": 52, "forks": 18, "subscribers": 2, "open_issues": 0, "topics": ["machine-learning", "tensorflow", "deep-learning", "deep-neural-networks", "pytorch", "neural-networks", "machine-learning-projects", "scikit-learn", "python3", "kaggle-competition", "gans", "sagemaker-deployment", "lstm", "malaria-detection", "quick-draw", "face-recognition", "self-driving-car", "chess-ai", "image-captioning", "reinforcement-learning"]}, {"id": 259067775, "repo_name": "NBA-Search", "full_name": "skekre98/NBA-Search", "description": "flask application designed to explore NBA data :basketball: ", "created": "2020-04-26 15:39:46", "language": "Python", "type": "User", "username": "skekre98", "stars": 52, "forks": 64, "subscribers": 6, "open_issues": 15, "topics": ["flask", "python3", "javascript", "scikit-learn", "pandas", "beautifulsoup4"]}, {"id": 96602638, "repo_name": "ibex", "full_name": "atavory/ibex", "description": "Pandas Adapters For Scikit-Learn", "created": "2017-07-08 07:13:59", "language": "Python", "type": "User", "username": "atavory", "stars": 51, "forks": 7, "subscribers": 6, "open_issues": 14, "topics": []}, {"id": 75468632, "repo_name": "Spam-Message-Classifier-sklearn", "full_name": "ZPdesu/Spam-Message-Classifier-sklearn", "description": "Classification of spam messages with SVM-linear, SVM-rbf and Naive Bayes by scikit-learn", "created": "2016-12-03 11:03:49", "language": "Python", "type": "User", "username": "ZPdesu", "stars": 51, "forks": 25, "subscribers": 4, "open_issues": 4, "topics": []}, {"id": 32782165, "repo_name": "talk-pydata2015", "full_name": "glouppe/talk-pydata2015", "description": "Talk on \"Tree models with Scikit-Learn: Great learners with little assumptions\" presented at PyPata Paris 2015", "created": "2015-03-24 07:19:16", "language": "TeX", "type": "User", "username": "glouppe", "stars": 51, "forks": 10, "subscribers": 7, "open_issues": 0, "topics": []}, {"id": 53470749, "repo_name": "regression-stock-prediction", "full_name": "chaitjo/regression-stock-prediction", "description": "Predicting Google\u2019s stock price using regression", "created": "2016-03-09 05:28:11", "language": "Python", "type": "User", "username": "chaitjo", "stars": 51, "forks": 45, "subscribers": 5, "open_issues": 0, "topics": ["stock-prices", "regression", "python", "scikit-learn", "svm"]}, {"id": 116385498, "repo_name": "zeugma", "full_name": "nkthiebaut/zeugma", "description": "\ud83d\udcddNatural language processing (NLP) utils: word embeddings (Word2Vec, GloVe, FastText, ...) and preprocessing transformers, compatible with scikit-learn Pipelines. \ud83d\udee0", "created": "2018-01-05 13:00:01", "language": "Python", "type": "User", "username": "nkthiebaut", "stars": 51, "forks": 4, "subscribers": 1, "open_issues": 2, "topics": ["natural-language-processing", "machine-learning", "deep-learning"]}, {"id": 18548437, "repo_name": "scikit-learn-interactive-tutorial", "full_name": "amueller/scikit-learn-interactive-tutorial", "description": "IPython notebooks and data an interactive scikit-learn tutorial.", "created": "2014-04-08 06:57:47", "language": null, "type": "User", "username": "amueller", "stars": 50, "forks": 43, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 48665859, "repo_name": "scikit-learn-beginners-tutorials", "full_name": "mmmayo13/scikit-learn-beginners-tutorials", "description": "Abridged implementation of the official scikit-learn beginner tutorials", "created": "2015-12-28 00:22:21", "language": "Jupyter Notebook", "type": "User", "username": "mmmayo13", "stars": 50, "forks": 38, "subscribers": 5, "open_issues": 0, "topics": []}, {"id": 156673853, "repo_name": "sklearn-cookbook-zh", "full_name": "apachecn/sklearn-cookbook-zh", "description": ":book: [\u8bd1] Scikit-learn \u79d8\u7c4d", "created": "2018-11-08 08:24:15", "language": "CSS", "type": "Organization", "username": "apachecn", "stars": 50, "forks": 28, "subscribers": 10, "open_issues": 0, "topics": ["python", "sklearn", "scikit-learn", "machine-learning", "book"]}, {"id": 228586624, "repo_name": "Hands-On-Gradient-Boosting-with-XGBoost-and-Scikit-learn", "full_name": "PacktPublishing/Hands-On-Gradient-Boosting-with-XGBoost-and-Scikit-learn", "description": "Hands-On Gradient Boosting with XGBoost and Scikit-learn Published by Packt", "created": "2019-12-17 09:59:30", "language": "Jupyter Notebook", "type": "Organization", "username": "PacktPublishing", "stars": 50, "forks": 52, "subscribers": 8, "open_issues": 1, "topics": []}, {"id": 6002441, "repo_name": "topicModels", "full_name": "chyikwei/topicModels", "description": "topics Models extension for Mallet & scikit-learn", "created": "2012-09-28 20:05:45", "language": "Java", "type": "User", "username": "chyikwei", "stars": 50, "forks": 15, "subscribers": 11, "open_issues": 2, "topics": ["topic-modeling", "data-analysis"]}, {"id": 75098902, "repo_name": "kdd99-scikit", "full_name": "PENGZhaoqing/kdd99-scikit", "description": "Solutions to kdd99 dataset with Decision tree and Neural network by scikit-learn", "created": "2016-11-29 16:13:40", "language": "Python", "type": "User", "username": "PENGZhaoqing", "stars": 50, "forks": 22, "subscribers": 2, "open_issues": 3, "topics": ["decision-tree", "confusion-matrix", "kdd99", "scikit-learn", "mlp", "intrusion-detection"]}, {"id": 291381555, "repo_name": "mldocs", "full_name": "lsgrep/mldocs", "description": "Alfred Workflow for TensorFlow, PyTorch, Scikit-learn, NumPy, Pandas, Matplotlib, Statsmodels API Docs", "created": "2020-08-30 02:00:36", "language": "Python", "type": "User", "username": "lsgrep", "stars": 50, "forks": 2, "subscribers": 1, "open_issues": 1, "topics": ["machine-learning", "alfred-workflow", "docs"]}, {"id": 63618462, "repo_name": "Microsoft_DAT210x", "full_name": "anarayanan86/Microsoft_DAT210x", "description": "Datasets and solutions for the Programming Assignments for the Microsoft DAT210X course, EdX, July-August 2016.", "created": "2016-07-18 16:18:07", "language": "Python", "type": "User", "username": "anarayanan86", "stars": 50, "forks": 40, "subscribers": 5, "open_issues": 2, "topics": ["edx", "python", "data-science", "machine-learning", "scikit-learn", "pandas", "matplotlib"]}, {"id": 139123842, "repo_name": "ORL_faces", "full_name": "Frank-qlu/ORL_faces", "description": "ORL\u4eba\u8138\u8bc6\u522b\u4e0d\u540c\u7b97\u6cd5\u7684\u5b9e\u73b0\uff0c\u7528\u5230\u4e86scikit-learn,tensorflow\u7b49\uff0c\u4efb\u90095\u5f20\u8bad\u7ec3\uff0c5\u5f20\u6d4b\u8bd5\u3002\u56e0\u4e3a\u6bcf\u6b21\u8bad\u7ec3\u968f\u673a\u6311\u9009\uff0c\u6240\u4ee5\u6bcf\u6b21\u8f93\u51fa\u8bc6\u522b\u7387\u6709\u504f\u5dee \u7b97\u6cd5 \u8bc6\u522b\u7387 bp\u795e\u7ecf\u7f51\u7edc 0.8 pca+bp\u795e\u7ecf\u7f51\u7edc 0.85 \u5c0f\u6ce2\u53d8\u6362+pca+bp\u795e\u7ecf\u7f51\u7edc 0.95 CNN 0.98 \u5c0f\u6ce2\u53d8\u6362+pca+SVM 0.98####\u540c\u65f6\u5e0c\u671b\u5927\u5bb6\u63d0\u51fa\u5b9d\u8d35\u610f\u89c1\uff0c\u6b22\u8fce\u5b66\u4e60\u4ea4\u6d41\uff0c\u5982\u679c\u4f60\u559c\u6b22\u8be5\u9879\u76ee\uff0c\u8bf7star\u6216\u8005fork\u4e00\u4e0b\uff0c\u4f60\u7684\u4e3b\u52a8\u5c06\u662f\u6211\u524d\u884c\u7684\u52a8\u529b####", "created": "2018-06-29 08:36:25", "language": "Python", "type": "User", "username": "Frank-qlu", "stars": 50, "forks": 31, "subscribers": 2, "open_issues": 1, "topics": []}, {"id": 281783642, "repo_name": "The-Hello-World-of-Machine-Learning", "full_name": "codingforentrepreneurs/The-Hello-World-of-Machine-Learning", "description": "Learn to build a basic machine learning model from scratch with this repo and tutorial series.", "created": "2020-07-22 21:09:12", "language": "Jupyter Notebook", "type": "User", "username": "codingforentrepreneurs", "stars": 49, "forks": 21, "subscribers": 5, "open_issues": 9, "topics": ["machine-learning", "scikit-learn", "tutorial", "python", "machine-learning-python", "ml"]}, {"id": 268818588, "repo_name": "streamlit-demo", "full_name": "python-engineer/streamlit-demo", "description": "Build an interactive web app with streamlit and scikit-learn", "created": "2020-06-02 14:08:46", "language": "Python", "type": "User", "username": "python-engineer", "stars": 48, "forks": 39, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 43779699, "repo_name": "patsylearn", "full_name": "amueller/patsylearn", "description": "Patsy Adaptors for Scikit-learn", "created": "2015-10-06 21:25:24", "language": "Python", "type": "User", "username": "amueller", "stars": 48, "forks": 10, "subscribers": 3, "open_issues": 6, "topics": []}, {"id": 90403853, "repo_name": "machine-learning", "full_name": "abulbasar/machine-learning", "description": "notebooks with example for machine learning examples", "created": "2017-05-05 18:09:09", "language": "Jupyter Notebook", "type": "User", "username": "abulbasar", "stars": 48, "forks": 89, "subscribers": 16, "open_issues": 1, "topics": ["machine-learning", "tensorflow", "scikit-learn", "numpy", "matplotlib"]}, {"id": 137694161, "repo_name": "prediciting-binary-options", "full_name": "iancamleite/prediciting-binary-options", "description": "Predicting forex binary options using time series data and machine learning", "created": "2018-06-17 23:29:12", "language": "Jupyter Notebook", "type": "User", "username": "iancamleite", "stars": 48, "forks": 25, "subscribers": 3, "open_issues": 2, "topics": ["machine-learning", "python3", "classification", "binary-options", "forex-prediction", "scikit-learn"]}, {"id": 161149582, "repo_name": "hypertune", "full_name": "polyaxon/hypertune", "description": "A library for performing hyperparameter optimization", "created": "2018-12-10 09:25:48", "language": "Python", "type": "Organization", "username": "polyaxon", "stars": 48, "forks": 7, "subscribers": 3, "open_issues": 0, "topics": ["hyperparameter-optimization", "hyperparameter-tuning", "scikit-learn", "machine-learning", "mlops", "workflow", "data-science", "deep-learning", "numpy"]}, {"id": 67751513, "repo_name": "django-estimators", "full_name": "fridiculous/django-estimators", "description": "a django app to persist and retrieve scikit learn machine learning models", "created": "2016-09-09 00:44:57", "language": "Python", "type": "User", "username": "fridiculous", "stars": 47, "forks": 14, "subscribers": 4, "open_issues": 6, "topics": ["machine-learning", "django", "scikit-learn"]}, {"id": 147472138, "repo_name": "SVM-Image-Classification", "full_name": "whimian/SVM-Image-Classification", "description": "Image Classification with `sklearn.svm`", "created": "2018-09-05 06:42:01", "language": "Jupyter Notebook", "type": "User", "username": "whimian", "stars": 47, "forks": 39, "subscribers": 3, "open_issues": 2, "topics": ["scikit-learn", "machine-learning", "support-vector-machine", "image-classification"]}, {"id": 99213391, "repo_name": "fraud-detection", "full_name": "cloudacademy/fraud-detection", "description": "Fraud Detection model build with Python (numpy, scipy, pandas, scikit-learn), based on anonymized credit card transactions. The dataset is publicly available here: https://clouda-labs-assets.s3-us-west-2.amazonaws.com/fraud-detection/creditcard.csv.zip", "created": "2017-08-03 09:07:49", "language": "Python", "type": "Organization", "username": "cloudacademy", "stars": 47, "forks": 21, "subscribers": 14, "open_issues": 1, "topics": []}, {"id": 265385421, "repo_name": "Stock_Market_Data_Analysis", "full_name": "jcwill415/Stock_Market_Data_Analysis", "description": "Scrape, analyze & visualize stock market data for the S&P500 using Python. Build a basic trading strategy using machine learning to assess company performance and determine buy, sell, hold. Read me & instructions available in Spanish. This is a working repo, with plans to expand the project from technical analysis to fundamental analysis. ", "created": "2020-05-19 22:45:04", "language": "Jupyter Notebook", "type": "User", "username": "jcwill415", "stars": 47, "forks": 21, "subscribers": 4, "open_issues": 0, "topics": ["stock-price-data", "stock-market", "python3", "beautifulsoup4", "sp500-real-time-data", "data-manipulation", "pandas", "scikit-learn", "numpy", "data-visualization", "investment-decisions", "investment-analysis", "machine-learning", "matplotlib"]}, {"id": 365207112, "repo_name": "AutoTabular", "full_name": "jianzhnie/AutoTabular", "description": "Automatic machine learning for tabular data. \u26a1\ud83d\udd25\u26a1", "created": "2021-05-07 11:09:51", "language": "Python", "type": "User", "username": "jianzhnie", "stars": 47, "forks": 7, "subscribers": 1, "open_issues": 0, "topics": ["automl", "structured-data", "pytorch-lightning", "hpo", "tabular-data", "scikit-learn", "xgboost", "lightgbm", "catboost", "machine-learning", "data-science", "feature-engineering", "deep-learning"]}, {"id": 1555490, "repo_name": "scikit-learn-tutorial", "full_name": "mike-perdide/scikit-learn-tutorial", "description": "Applied Machine Learning in Python with scikit-learn", "created": "2011-04-01 12:54:28", "language": "Python", "type": "User", "username": "mike-perdide", "stars": 46, "forks": 102, "subscribers": 9, "open_issues": 0, "topics": []}, {"id": 111234239, "repo_name": "mlinsights", "full_name": "sdpython/mlinsights", "description": "Extends scikit-learn with new models, transformers, metrics, plotting.", "created": "2017-11-18 19:48:01", "language": "Python", "type": "User", "username": "sdpython", "stars": 46, "forks": 11, "subscribers": 2, "open_issues": 13, "topics": ["python3", "scikit-learn", "machine-learning", "algorithms"]}, {"id": 49594702, "repo_name": "stock_prediction", "full_name": "vishwajeetv/stock_prediction", "description": "Novice's attempt for Stock Prices Prediction & Portfolio Optimization using Machine Learning with Python & Scikit Learn", "created": "2016-01-13 18:55:10", "language": "Python", "type": "User", "username": "vishwajeetv", "stars": 46, "forks": 33, "subscribers": 12, "open_issues": 2, "topics": []}, {"id": 44739348, "repo_name": "enhancement_proposals", "full_name": "scikit-learn/enhancement_proposals", "description": "Enhancement proposals for scikit-learn: structured discussions and rational for large additions and modifications", "created": "2015-10-22 10:49:07", "language": "Python", "type": "Organization", "username": "scikit-learn", "stars": 46, "forks": 30, "subscribers": 36, "open_issues": 17, "topics": []}, {"id": 123183110, "repo_name": "sklearn-interpretable-tree", "full_name": "tmadl/sklearn-interpretable-tree", "description": "Simplified tree-based classifier and regressor for interpretable machine learning (scikit-learn compatible)", "created": "2018-02-27 20:17:59", "language": "Python", "type": "User", "username": "tmadl", "stars": 46, "forks": 4, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 50031642, "repo_name": "BM25Transformer", "full_name": "arosh/BM25Transformer", "description": "(Python) transform a document-term matrix to an Okapi/BM25 representation", "created": "2016-01-20 13:25:15", "language": "Python", "type": "User", "username": "arosh", "stars": 46, "forks": 4, "subscribers": 3, "open_issues": 1, "topics": ["python", "machine-learning", "information-retrieval", "scikit-learn", "natural-language-processing"]}, {"id": 287604296, "repo_name": "centrifuge-toolkit", "full_name": "BinaryResearch/centrifuge-toolkit", "description": "Tool for visualizing and empirically analyzing information encoded in binary files", "created": "2020-08-14 18:59:22", "language": "Jupyter Notebook", "type": "User", "username": "BinaryResearch", "stars": 46, "forks": 8, "subscribers": 2, "open_issues": 0, "topics": ["machine-learning", "cluster-analysis", "dbscan", "statistics", "data-visualization", "isadetect", "scikit-learn", "seaborn"]}, {"id": 260874537, "repo_name": "End-to-End-Diabetes-Prediction-Application-Using-Machine-Learning", "full_name": "ditikrushna/End-to-End-Diabetes-Prediction-Application-Using-Machine-Learning", "description": "In this project, the objective is to predict whether the person has Diabetes or not based on various features like Number of Pregnancies, Insulin Level, Age, BMI.  ", "created": "2020-05-03 09:56:25", "language": "HTML", "type": "User", "username": "ditikrushna", "stars": 46, "forks": 21, "subscribers": 2, "open_issues": 2, "topics": ["diabetes-prediction", "health-data", "machine-learning-algorithms", "mini-project-on-machine-learning", "machine-learning", "scikit-learn", "flask", "heroku", "deployment", "machine-learnin-model-deplyment", "end", "end-to-end-machine-learning", "end-end-machine-learning-project", "machine-learning-mini-project", "mini-projects"]}, {"id": 70228043, "repo_name": "2-scikit-learn-intro", "full_name": "real-time-machine-learning/2-scikit-learn-intro", "description": "\u5229\u7528Scikit Learn\u5bf9\u79d2\u7ea7\u80a1\u7968\u6570\u636e\u8fdb\u884c\u5efa\u6a21\u9884\u6d4b", "created": "2016-10-07 08:23:13", "language": "Python", "type": "Organization", "username": "real-time-machine-learning", "stars": 45, "forks": 32, "subscribers": 4, "open_issues": 1, "topics": []}, {"id": 186176677, "repo_name": "Nested-Cross-Validation", "full_name": "casperbh96/Nested-Cross-Validation", "description": "Nested cross-validation for unbiased predictions. Can be used with Scikit-Learn, XGBoost, Keras and LightGBM, or any other estimator that implements the scikit-learn interface.", "created": "2019-05-11 20:04:50", "language": "Python", "type": "User", "username": "casperbh96", "stars": 45, "forks": 17, "subscribers": 4, "open_issues": 6, "topics": []}, {"id": 165776816, "repo_name": "python-datascience", "full_name": "faizanbashir/python-datascience", "description": "Docker image for python datascience container with NumPy, SciPy, Scikit-learn, Matplotlib, nltk, pandas packages installed.", "created": "2019-01-15 03:12:23", "language": "Dockerfile", "type": "User", "username": "faizanbashir", "stars": 45, "forks": 18, "subscribers": 5, "open_issues": 3, "topics": ["docker", "docker-image", "python", "python36", "data-science", "ml", "nlp-machine-learning", "pandas-python", "dockerfile"]}, {"id": 248558190, "repo_name": "scikit-mine", "full_name": "scikit-mine/scikit-mine", "description": "scikit-mine : pattern mining in Python", "created": "2020-03-19 16:57:44", "language": "Python", "type": "Organization", "username": "scikit-mine", "stars": 45, "forks": 6, "subscribers": 5, "open_issues": 15, "topics": ["scikit", "datamining", "minimum-description-length", "pattern-mining", "scikit-learn"]}, {"id": 22055759, "repo_name": "sklearn_europython_2014", "full_name": "GaelVaroquaux/sklearn_europython_2014", "description": "Scikit-learn Tutorial at EuroPython 2014", "created": "2014-07-21 07:33:45", "language": "Jupyter Notebook", "type": "User", "username": "GaelVaroquaux", "stars": 44, "forks": 18, "subscribers": 5, "open_issues": 0, "topics": []}, {"id": 57400721, "repo_name": "RGF-sklearn", "full_name": "MLWave/RGF-sklearn", "description": "Scikit-learn API toy wrapper for Regularized Greedy Forests", "created": "2016-04-29 17:11:11", "language": "Python", "type": "User", "username": "MLWave", "stars": 44, "forks": 9, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 56184978, "repo_name": "spark-sklearn-airbnb-predict", "full_name": "mapr-demos/spark-sklearn-airbnb-predict", "description": "Code example to predict prices of Airbnb vacation rentals, using scikit-learn on Spark with spark-sklearn, on MapR.", "created": "2016-04-13 20:48:10", "language": "Jupyter Notebook", "type": "Organization", "username": "mapr-demos", "stars": 44, "forks": 33, "subscribers": 10, "open_issues": 0, "topics": []}, {"id": 283546804, "repo_name": "scikit-activeml", "full_name": "scikit-activeml/scikit-activeml", "description": "Our package scikit-activeml is a Python library for active learning on top of SciPy and scikit-learn.", "created": "2020-07-29 16:19:30", "language": "Python", "type": "Organization", "username": "scikit-activeml", "stars": 44, "forks": 3, "subscribers": 6, "open_issues": 29, "topics": ["active-learning", "scikit-learn", "machine-learning", "python"]}, {"id": 140861395, "repo_name": "ml-docker", "full_name": "nielsborie/ml-docker", "description": "An all-in-one Docker image for machine learning. Contains all the popular python machine learning librairies (scikit-learn, xgboost, LightGBM, gensim,Keras, etc...).", "created": "2018-07-13 15:05:52", "language": "Dockerfile", "type": "User", "username": "nielsborie", "stars": 44, "forks": 19, "subscribers": 2, "open_issues": 0, "topics": ["docker", "python", "machine-learning", "deep-learning"]}, {"id": 12420203, "repo_name": "PyMTL", "full_name": "tjanez/PyMTL", "description": "PyMTL (Python library for Multi-task learning) is a Python module implementing a Multi-task learning framework built on top of scikit-learn, SciPy and NumPy.", "created": "2013-08-27 23:45:34", "language": "Python", "type": "User", "username": "tjanez", "stars": 44, "forks": 13, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 99317891, "repo_name": "CVPR_paper_search_tool", "full_name": "jiny2001/CVPR_paper_search_tool", "description": "Automatic paper clustering and search tool by fastext from Facebook Research", "created": "2017-08-04 07:45:50", "language": "Python", "type": "User", "username": "jiny2001", "stars": 44, "forks": 10, "subscribers": 2, "open_issues": 0, "topics": ["nlp", "python", "fasttext", "google-appengine", "webapp2", "jinja2", "scikit-learn"]}, {"id": 145409380, "repo_name": "pygrams", "full_name": "datasciencecampus/pygrams", "description": "Extracts key terminology (n-grams) from any large collection of documents (>1000) and forecasts emergence", "created": "2018-08-20 11:34:57", "language": "Python", "type": "Organization", "username": "datasciencecampus", "stars": 44, "forks": 21, "subscribers": 5, "open_issues": 4, "topics": ["nlp", "python", "scikit-learn", "nltk", "natural-language-processing", "patents", "tf-idf", "emergence-calculations", "dsc-projects"]}, {"id": 222072830, "repo_name": "kaggledatasets", "full_name": "kaggledatasets/kaggledatasets", "description": "Collection of Kaggle Datasets ready to use for Everyone (Looking for contributors)", "created": "2019-11-16 08:59:19", "language": "Python", "type": "Organization", "username": "kaggledatasets", "stars": 44, "forks": 4, "subscribers": 4, "open_issues": 3, "topics": ["kaggle", "datasets", "machine-learning", "data-science", "deep-learning", "scikit-learn", "pytorch", "tensorflow", "python", "keras"]}, {"id": 88379868, "repo_name": "Python-Machine-Learning-Fundamentals", "full_name": "dlab-berkeley/Python-Machine-Learning-Fundamentals", "description": "D-Lab's 6 hour introduction to machine learning in Python. Learn how to perform classification, regression, clustering, and do model selection using scikit-learn and TPOT.", "created": "2017-04-15 23:30:26", "language": "Jupyter Notebook", "type": "Organization", "username": "dlab-berkeley", "stars": 43, "forks": 44, "subscribers": 16, "open_issues": 20, "topics": ["machine-learning", "scikit-learn", "tpot", "classification", "regression", "auto-ml", "clustering", "python"]}, {"id": 388187060, "repo_name": "Basic_Machine_Learning_Algorithms", "full_name": "Piyal-Banik/Basic_Machine_Learning_Algorithms", "description": "Implementation of Basic Machine Learning Algorithms on small datasets using Scikit Learn.", "created": "2021-07-21 16:55:28", "language": "Jupyter Notebook", "type": "User", "username": "Piyal-Banik", "stars": 43, "forks": 6, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 68456229, "repo_name": "captcha-breaker", "full_name": "jaysonsantos/captcha-breaker", "description": "A simple machine learning powered captcha breaker", "created": "2016-09-17 14:13:24", "language": "Jupyter Notebook", "type": "User", "username": "jaysonsantos", "stars": 43, "forks": 5, "subscribers": 3, "open_issues": 0, "topics": ["captcha-breaker", "scikit-learn", "scikit-image"]}, {"id": 111626301, "repo_name": "computer-vision", "full_name": "bfortuner/computer-vision", "description": "Computer vision sabbatical study materials", "created": "2017-11-22 02:27:12", "language": "Jupyter Notebook", "type": "User", "username": "bfortuner", "stars": 43, "forks": 15, "subscribers": 8, "open_issues": 1, "topics": ["computer-vision", "machine-learning", "deep-learning", "pytorch", "opencv", "jupyter", "scikit-learn"]}, {"id": 350000071, "repo_name": "playground", "full_name": "ahmedbesbes/playground", "description": "A Streamlit application to play with machine learning models directly from the browser", "created": "2021-03-21 13:01:53", "language": "Python", "type": "User", "username": "ahmedbesbes", "stars": 43, "forks": 17, "subscribers": 1, "open_issues": 2, "topics": ["streamlit", "scikit-learn", "playgound", "python", "heroku-deployment", "machine-learning-tutorials", "webapp", "sklearn", "machine-learning", "classification-algorithms"]}, {"id": 66285642, "repo_name": "muffnn", "full_name": "civisanalytics/muffnn", "description": "Multilayer Feed-Forward Neural Network predictive model implementations with TensorFlow and scikit-learn", "created": "2016-08-22 15:44:49", "language": "Python", "type": "Organization", "username": "civisanalytics", "stars": 42, "forks": 14, "subscribers": 104, "open_issues": 12, "topics": []}, {"id": 43971767, "repo_name": "dasklearn", "full_name": "mrocklin/dasklearn", "description": "Dask powered gridsearch and pipeline a la scikit-learn", "created": "2015-10-09 18:01:49", "language": "Python", "type": "User", "username": "mrocklin", "stars": 42, "forks": 5, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 140654855, "repo_name": "MachineLearning_Portugues", "full_name": "Zurubabel/MachineLearning_Portugues", "description": "Arquivos das aulas de Machine Leaning em Portugu\u00eas (python + scikit-learn - https://www.youtube.com/playlist?list=PL4OAe-tL47sb3xdFBVXs2w1BA2LRN5JU2_)", "created": "2018-07-12 03:14:58", "language": "Jupyter Notebook", "type": "User", "username": "Zurubabel", "stars": 42, "forks": 15, "subscribers": 9, "open_issues": 0, "topics": []}, {"id": 54308884, "repo_name": "sklearn-random-rotation-ensembles", "full_name": "tmadl/sklearn-random-rotation-ensembles", "description": "Scikit-learn compatible implementations of the Random Rotation Ensemble idea of (Blaser & Fryzlewicz, 2016)", "created": "2016-03-20 09:02:44", "language": "Python", "type": "User", "username": "tmadl", "stars": 42, "forks": 5, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 136787223, "repo_name": "RapidML", "full_name": "ritabratamaiti/RapidML", "description": " RapidML is a smart Python framework for rapidly prototyping Machine Learning APIs for the Web!", "created": "2018-06-10 07:06:22", "language": "Python", "type": "User", "username": "ritabratamaiti", "stars": 42, "forks": 4, "subscribers": 8, "open_issues": 0, "topics": ["machine-learning", "scikit-learn", "tpot", "flask-api"]}, {"id": 79451031, "repo_name": "Recipe", "full_name": "laic-ufmg/Recipe", "description": "Automated machine learning (AutoML) with grammar-based genetic programming", "created": "2017-01-19 12:27:53", "language": "C", "type": "Organization", "username": "laic-ufmg", "stars": 42, "forks": 12, "subscribers": 7, "open_issues": 1, "topics": ["automl", "grammar", "recipe", "genetic-programming", "grammar-based-genetic-programming", "scikit-learn"]}, {"id": 238645652, "repo_name": "Practical-Machine-Learning-with-TensorFlow-2.0-and-Scikit-Learn", "full_name": "PacktPublishing/Practical-Machine-Learning-with-TensorFlow-2.0-and-Scikit-Learn", "description": "Practical Machine Learning with TensorFlow 2.0 and Scikit-Learn [Video], published by Packt", "created": "2020-02-06 08:55:17", "language": "Jupyter Notebook", "type": "Organization", "username": "PacktPublishing", "stars": 41, "forks": 20, "subscribers": 5, "open_issues": 0, "topics": []}, {"id": 18781922, "repo_name": "k-means-clustering", "full_name": "sarguido/k-means-clustering", "description": "Repository for my 'K-Means Clustering with Scikit-Learn' talk materials.", "created": "2014-04-15 00:38:10", "language": null, "type": "User", "username": "sarguido", "stars": 41, "forks": 41, "subscribers": 4, "open_issues": 2, "topics": []}, {"id": 117342475, "repo_name": "serverless-machine-learning", "full_name": "patrick-michelberger/serverless-machine-learning", "description": "How to deploy serverless Machine Learning Microservice with AWS Lambda,  API Gateway and\u00a0scikit-learn :moneybag: :globe_with_meridians: :zap:", "created": "2018-01-13 12:39:46", "language": "Python", "type": "User", "username": "patrick-michelberger", "stars": 41, "forks": 7, "subscribers": 5, "open_issues": 1, "topics": []}, {"id": 12786700, "repo_name": "LODA-lecture-notes-on-data-analysis", "full_name": "mgrani/LODA-lecture-notes-on-data-analysis", "description": "Lecture notes and excercises for data analysis in python. Includes introduction to Python, Numpy, Scipy, Scikit-Learn, SimpleCV. Topics Supervised/Unsupervised Learning, Signal Analysis, Image Analysis, Text and Web-Media Analysis", "created": "2013-09-12 15:06:47", "language": "Jupyter Notebook", "type": "User", "username": "mgrani", "stars": 41, "forks": 18, "subscribers": 7, "open_issues": 1, "topics": []}, {"id": 110545949, "repo_name": "real_estate_ml", "full_name": "noahgift/real_estate_ml", "description": "Machine Learning for Real Estate", "created": "2017-11-13 12:33:05", "language": "Jupyter Notebook", "type": "User", "username": "noahgift", "stars": 41, "forks": 54, "subscribers": 12, "open_issues": 0, "topics": ["python", "pandas", "scikit-learn", "knn", "plotly", "jupyter-notebook", "machine-learning", "real-estate", "unsupervised-learning"]}, {"id": 260590580, "repo_name": "AI-for-Medical-Diagnosis", "full_name": "makama-md/AI-for-Medical-Diagnosis", "description": "This repo contain my assignment notebooks for the Coursera AI for Medicine Specialization course. The link to the course: https://www.coursera.org/specializations/ai-for-medicine", "created": "2020-05-02 01:14:01", "language": "Jupyter Notebook", "type": "User", "username": "makama-md", "stars": 41, "forks": 32, "subscribers": 3, "open_issues": 0, "topics": ["ai-for-medicine", "coursera", "deeplearning-ai", "scikit-learn", "python", "mri-segmentation", "medical-imaging", "keras", "tensorflow"]}, {"id": 188982280, "repo_name": "ICC-2019-WC-prediction", "full_name": "abhinavsagar/ICC-2019-WC-prediction", "description": "Predicting the winner of 2019 cricket world cup using random forest algorithm", "created": "2019-05-28 08:00:07", "language": "Jupyter Notebook", "type": "User", "username": "abhinavsagar", "stars": 41, "forks": 54, "subscribers": 3, "open_issues": 0, "topics": ["machine-learning", "artificial-intelligence", "algorithms", "scikit-learn", "jupyter-notebook", "random-forest", "support-vector-machines", "logistic-regression", "knn-classification", "cricket", "worldcup2019"]}, {"id": 293663700, "repo_name": "python-machine-learning-book-3rd-edition", "full_name": "rickiepark/python-machine-learning-book-3rd-edition", "description": "\"\uba38\uc2e0 \ub7ec\ub2dd \uad50\uacfc\uc11c 3\ud310\"(\uae38\ubc97, 2021)\uc758 \uc8fc\ud53c\ud130 \ub178\ud2b8\ubd81", "created": "2020-09-08 00:50:23", "language": "Jupyter Notebook", "type": "User", "username": "rickiepark", "stars": 41, "forks": 43, "subscribers": 6, "open_issues": 0, "topics": ["machine-learning", "deep-learning", "scikit-learn", "tensorflow", "notebooks", "keras", "neural-network", "convolutional-neural-network", "recurrent-neural-networks", "gan", "reinforcement-learning", "supervised-learning", "unsupervised-learning", "classification", "regression"]}, {"id": 285236275, "repo_name": "sklearndf", "full_name": "BCG-Gamma/sklearndf", "description": "DataFrame support for scikit-learn.", "created": "2020-08-05 09:04:19", "language": "Python", "type": "Organization", "username": "BCG-Gamma", "stars": 40, "forks": 4, "subscribers": 7, "open_issues": 4, "topics": ["python", "data-science", "machine-learning", "model-selection", "hyper-parameter-tuning", "cross-validation", "pandas-dataframe", "feature-traceability"]}, {"id": 20704160, "repo_name": "skl-groups", "full_name": "djsutherland/skl-groups", "description": "scikit-learn addon to operate on set/\"group\"-based features", "created": "2014-06-10 22:36:35", "language": "Python", "type": "User", "username": "djsutherland", "stars": 40, "forks": 8, "subscribers": 5, "open_issues": 25, "topics": []}, {"id": 135226770, "repo_name": "MachineLearningCourse", "full_name": "rugantio/MachineLearningCourse", "description": "A collection of notebooks of my Machine Learning class written in python 3", "created": "2018-05-29 01:39:43", "language": "Jupyter Notebook", "type": "User", "username": "rugantio", "stars": 40, "forks": 42, "subscribers": 4, "open_issues": 0, "topics": ["machine-learning", "scikit-learn", "python", "data-science", "neural-network", "numpy", "pandas", "jupyter", "ml", "kaggle"]}, {"id": 71804723, "repo_name": "emoji-prediction", "full_name": "javierhonduco/emoji-prediction", "description": "\ud83e\udd13\ud83d\udd2e\ud83d\udd2c Emoji prediction from a text using machine learning", "created": "2016-10-24 15:45:44", "language": "Python", "type": "User", "username": "javierhonduco", "stars": 40, "forks": 4, "subscribers": 6, "open_issues": 0, "topics": ["machine-learning", "scikit-learn", "emoji"]}, {"id": 73324522, "repo_name": "ScriptingLanguagesCourseMaterials", "full_name": "oroszgy/ScriptingLanguagesCourseMaterials", "description": "Python and Lua tutorials", "created": "2016-11-09 21:57:12", "language": "Jupyter Notebook", "type": "User", "username": "oroszgy", "stars": 40, "forks": 10, "subscribers": 6, "open_issues": 0, "topics": ["python", "lua", "course-materials", "tutorial", "scripting-language", "scikit-learn", "numpy"]}, {"id": 302747117, "repo_name": "awesome-deepnote", "full_name": "ramene/awesome-deepnote", "description": "A curated list of extensions, python packages, machine learning and collaborative notebooks ready to run in Deepnote.", "created": "2020-10-09 20:31:00", "language": null, "type": "User", "username": "ramene", "stars": 40, "forks": 5, "subscribers": 6, "open_issues": 0, "topics": ["deepnote", "python", "awesome-list", "awesome", "deep-learning", "deep-neural-networks", "gans", "collections", "scikit-learn", "visualizations", "notebooks", "data-visualization", "datascience", "lists", "hashicorp-waypoint", "hashicorp"]}, {"id": 207978666, "repo_name": "scikit-learn-tutorial", "full_name": "lesteve/scikit-learn-tutorial", "description": "This repo has moved to https://github.com/INRIA/scikit-learn-mooc/", "created": "2019-09-12 06:18:00", "language": "Jupyter Notebook", "type": "User", "username": "lesteve", "stars": 39, "forks": 22, "subscribers": 13, "open_issues": 0, "topics": []}, {"id": 80818347, "repo_name": "dstoolbox", "full_name": "ottogroup/dstoolbox", "description": "Tools that make working with scikit-learn and pandas easier.", "created": "2017-02-03 10:14:10", "language": "Jupyter Notebook", "type": "Organization", "username": "ottogroup", "stars": 39, "forks": 11, "subscribers": 9, "open_issues": 5, "topics": ["machine-learning", "scikit-learn", "pandas"]}, {"id": 204445510, "repo_name": "sklearn", "full_name": "VISWESWARAN1998/sklearn", "description": "Trying to implement Scikit Learn for Python in C++ (Single Headers and No dependencies)", "created": "2019-08-26 09:47:44", "language": "C++", "type": "User", "username": "VISWESWARAN1998", "stars": 39, "forks": 18, "subscribers": 11, "open_issues": 0, "topics": ["machine-learning"]}, {"id": 83453995, "repo_name": "CombineML.jl", "full_name": "ppalmes/CombineML.jl", "description": "Create ensembles of machine learning models from scikit-learn, caret, and julia", "created": "2017-02-28 16:21:48", "language": "Jupyter Notebook", "type": "User", "username": "ppalmes", "stars": 39, "forks": 5, "subscribers": 5, "open_issues": 4, "topics": []}, {"id": 99138674, "repo_name": "ClassificaIO", "full_name": "gmiaslab/ClassificaIO", "description": "This repository contains ClassificaIO, a Python package that provides a graphical user interface (GUI) for machine learning algorithms from scikit-learn.", "created": "2017-08-02 16:29:56", "language": "Python", "type": "User", "username": "gmiaslab", "stars": 39, "forks": 10, "subscribers": 7, "open_issues": 0, "topics": []}, {"id": 238569720, "repo_name": "CrabNet", "full_name": "anthony-wang/CrabNet", "description": "Predict materials properties using only the composition information!", "created": "2020-02-05 23:32:53", "language": "Python", "type": "User", "username": "anthony-wang", "stars": 39, "forks": 9, "subscribers": 5, "open_issues": 10, "topics": ["predict-materials-properties", "neural-networks", "materials-informatics", "machine-learning", "pytorch", "materials-science", "materials-screening", "scikit-learn", "attention-mechanism", "attention", "self-attention", "transformer"]}, {"id": 98050753, "repo_name": "Hands-On-Machine-Learning-with-ScikitLearn-and-TensorFlow", "full_name": "brianoleary15/Hands-On-Machine-Learning-with-ScikitLearn-and-TensorFlow", "description": null, "created": "2017-07-22 18:35:36", "language": "Jupyter Notebook", "type": "User", "username": "brianoleary15", "stars": 38, "forks": 17, "subscribers": 5, "open_issues": 0, "topics": []}, {"id": 202897171, "repo_name": "gauss-rank-scaler", "full_name": "aldente0630/gauss-rank-scaler", "description": "Scikit-learn compatible implementation of the Gauss Rank scaling method", "created": "2019-08-17 15:21:18", "language": "Python", "type": "User", "username": "aldente0630", "stars": 38, "forks": 7, "subscribers": 1, "open_issues": 0, "topics": ["scikit-learn", "transformer", "gauss-rank"]}, {"id": 60712371, "repo_name": "euro2016predictor", "full_name": "iamhankai/euro2016predictor", "description": " Soccer Matches Predictor using Machine Learning", "created": "2016-06-08 16:21:52", "language": "Python", "type": "User", "username": "iamhankai", "stars": 38, "forks": 22, "subscribers": 6, "open_issues": 1, "topics": ["machine-learning", "soccer", "scikit-learn"]}, {"id": 28439754, "repo_name": "kaggle-for-fun", "full_name": "lenguyenthedat/kaggle-for-fun", "description": "All my submissions for Kaggle contests that I have been, and going to be participating.", "created": "2014-12-24 07:09:21", "language": "Python", "type": "User", "username": "lenguyenthedat", "stars": 38, "forks": 36, "subscribers": 3, "open_issues": 4, "topics": ["kaggle", "xgboost", "python", "mnist", "neural-network", "scikit-learn", "kaggle-contest"]}, {"id": 103154598, "repo_name": "wisconsin-breast-cancer", "full_name": "AFAgarap/wisconsin-breast-cancer", "description": "[ICMLSC 2018] On Breast Cancer Detection: An Application of Machine Learning Algorithms on the Wisconsin Diagnostic Dataset", "created": "2017-09-11 15:38:48", "language": "Python", "type": "User", "username": "AFAgarap", "stars": 38, "forks": 20, "subscribers": 4, "open_issues": 2, "topics": ["machine-learning", "machine-learning-algorithms", "scikit-learn", "tensorflow", "nearest-neighbours-classifier", "support-vector-machine", "multilayer-perceptron", "recurrent-neural-network", "linear-regression", "logistic-regression", "softmax-regression", "classification", "binary-classification", "supervised-learning"]}, {"id": 52086848, "repo_name": "LLDA", "full_name": "TaskeHAMANO/LLDA", "description": "Scikit-learn like Labeled-LDA", "created": "2016-02-19 12:40:08", "language": "Python", "type": "User", "username": "TaskeHAMANO", "stars": 37, "forks": 15, "subscribers": 1, "open_issues": 6, "topics": []}, {"id": 24279646, "repo_name": "Foxhound", "full_name": "IndicoDataSolutions/Foxhound", "description": "Scikit learn inspired library for gpu-accelerated machine learning", "created": "2014-09-21 02:13:22", "language": "Python", "type": "Organization", "username": "IndicoDataSolutions", "stars": 37, "forks": 13, "subscribers": 33, "open_issues": 9, "topics": []}, {"id": 201231243, "repo_name": "awesome-scikit-learn", "full_name": "fkromer/awesome-scikit-learn", "description": "A curated list of awesome scikit-learn resources and libraries", "created": "2019-08-08 10:03:36", "language": null, "type": "User", "username": "fkromer", "stars": 37, "forks": 4, "subscribers": 5, "open_issues": 0, "topics": []}, {"id": 324061449, "repo_name": "five-minute-midas", "full_name": "MichaelOw/five-minute-midas", "description": "Predicting Profitable Day Trading Positions using Decision Tree Classifiers. scikit-learn | Flask | SQLite3 | pandas | MLflow | Heroku | Streamlit", "created": "2020-12-24 04:03:27", "language": "Python", "type": "User", "username": "MichaelOw", "stars": 37, "forks": 23, "subscribers": 5, "open_issues": 0, "topics": ["machine-learning", "scikit-learn", "mlflow", "flask", "sqlite3", "pandas", "heroku", "streamlit"]}, {"id": 133349297, "repo_name": "20-newsgroups_text-classification", "full_name": "gokriznastic/20-newsgroups_text-classification", "description": "\"20 newsgroups\" dataset - Text Classification using Multinomial Naive Bayes in Python. ", "created": "2018-05-14 11:16:28", "language": "Jupyter Notebook", "type": "User", "username": "gokriznastic", "stars": 37, "forks": 33, "subscribers": 1, "open_issues": 0, "topics": ["text-classification", "naive-bayes-classifier", "python", "nlp", "multiclass-classification", "scikit-learn", "naive-bayes"]}, {"id": 123741929, "repo_name": "lending-club", "full_name": "jgcorliss/lending-club", "description": "Applying machine learning to predict loan charge-offs on LendingClub.com", "created": "2018-03-04 00:02:05", "language": "Jupyter Notebook", "type": "User", "username": "jgcorliss", "stars": 37, "forks": 22, "subscribers": 6, "open_issues": 0, "topics": ["loan-default-prediction", "loan-data", "python", "scikit-learn", "pandas", "jupyter-notebook", "machine-learning"]}, {"id": 97413743, "repo_name": "iterative-Random-Forest", "full_name": "Yu-Group/iterative-Random-Forest", "description": "Python implementation of iterative-random-forests", "created": "2017-07-16 21:59:20", "language": "Cython", "type": "Organization", "username": "Yu-Group", "stars": 37, "forks": 16, "subscribers": 7, "open_issues": 8, "topics": ["iterative-random-forests", "machine-learning", "scikit-learn", "python", "data-science", "interactions"]}, {"id": 163140389, "repo_name": "kernelmethods", "full_name": "raamana/kernelmethods", "description": "Foundational library for Kernel methods in pattern analysis and machine learning", "created": "2018-12-26 05:36:44", "language": "Python", "type": "User", "username": "raamana", "stars": 37, "forks": 12, "subscribers": 4, "open_issues": 6, "topics": ["kernel-methods", "machine-learning", "kernel-functions", "data-structures", "svm", "mkl", "multiple-kernel-learning", "kernels", "kernel", "pattern-recognition", "pattern-analysis", "data-science", "scikit-learn", "metric-learning"]}, {"id": 163525436, "repo_name": "Voice-based-speaker-identification", "full_name": "SuperKogito/Voice-based-speaker-identification", "description": ":sound: :boy: :girl: :woman: :man: Speaker identification using voice MFCCs and GMM", "created": "2018-12-29 16:35:47", "language": "Python", "type": "User", "username": "SuperKogito", "stars": 37, "forks": 9, "subscribers": 2, "open_issues": 3, "topics": ["speaker-identification", "speaker-recognition", "gmm", "mfcc", "voice", "mel-frequency-cepstral-coefficients", "mel-frequencies", "gaussian-mixture-models", "signal", "machine-learning", "vocal", "speech", "scikit-learn", "scikit-learn-python"]}, {"id": 194400702, "repo_name": "Machine-Learning-with-Scikit-Learn-Python-3.x", "full_name": "reddyprasade/Machine-Learning-with-Scikit-Learn-Python-3.x", "description": "In general, a learning problem considers a set of n samples of data and then tries to predict properties of unknown data. If each sample is more than a single number and, for instance, a multi-dimensional entry (aka multivariate data), it is said to have several attributes or features.  Learning problems fall into a few categories:  supervised learning, in which the data comes with additional attributes that we want to predict (Click here to go to the scikit-learn supervised learning page).This problem can be either:  classification: samples belong to two or more classes and we want to learn from already labeled data how to predict the class of unlabeled data. An example of a classification problem would be handwritten digit recognition, in which the aim is to assign each input vector to one of a finite number of discrete categories. Another way to think of classification is as a discrete (as opposed to continuous) form of supervised learning where one has a limited number of categories and for each of the n samples provided, one is to try to label them with the correct category or class.  regression: if the desired output consists of one or more continuous variables, then the task is called regression. An example of a regression problem would be the prediction of the length of a salmon as a function of its age and weight.  unsupervised learning, in which the training data consists of a set of input vectors x without any corresponding target values. The goal in such problems may be to discover groups of similar examples within the data, where it is called clustering, or to determine the distribution of data within the input space, known as density estimation, or to project the data from a high-dimensional space down to two or three dimensions for the purpose of visualization (Click here to go to the Scikit-Learn unsupervised learning page).", "created": "2019-06-29 11:59:45", "language": "Jupyter Notebook", "type": "User", "username": "reddyprasade", "stars": 36, "forks": 19, "subscribers": 1, "open_issues": 0, "topics": ["sklearn", "machine-learning", "machine-learning-algorithms", "regression", "python-3", "python", "unsupervised-learning", "supervised-learning", "scikit-learn", "classification", "prediction", "vector", "semi-supervised-learning", "reinforcement-learning", "scikit-image", "scikit-learn-python", "scikit-learn-api", "scikit-model", "consists"]}, {"id": 170375773, "repo_name": "integrating-pandas-with-scikit-learn", "full_name": "tdpetrou/integrating-pandas-with-scikit-learn", "description": "Tutorial covering a new workflow available going from pandas to scikit-learn", "created": "2019-02-12 19:12:21", "language": "Jupyter Notebook", "type": "User", "username": "tdpetrou", "stars": 36, "forks": 13, "subscribers": 8, "open_issues": 0, "topics": []}, {"id": 151077433, "repo_name": "scipycon-2018-sklearn-tut-zh", "full_name": "apachecn/scipycon-2018-sklearn-tut-zh", "description": ":book: [\u8bd1] SciPyCon 2018 Sklearn \u6559\u7a0b", "created": "2018-10-01 11:26:59", "language": "CSS", "type": "Organization", "username": "apachecn", "stars": 36, "forks": 15, "subscribers": 47, "open_issues": 0, "topics": ["python", "scikit-learn", "machine-learning", "scipy2018", "tutorial"]}, {"id": 58784617, "repo_name": "machine_learning", "full_name": "yinpinghui/machine_learning", "description": "\u673a\u5668\u5b66\u4e60\u7b14\u8bb0\uff0c\u6765\u6e90\u4e8e\uff1a\u674e\u822a\u7684\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u300b \u5468\u5fd7\u534e\u7684\u300a\u673a\u5668\u5b66\u4e60\u300b Peter Harrington \u7684\u300a\u673a\u5668\u5b66\u4e60\u5b9e\u6218\u300b \u4ee5\u53caPython\u7684  Scikit-Learn \u5f00\u6e90\u5e93\u3002", "created": "2016-05-14 02:06:30", "language": null, "type": "User", "username": "yinpinghui", "stars": 36, "forks": 44, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 190408006, "repo_name": "News-Intelligent-Classification-WeChat-Mini-Program", "full_name": "weizhiwen/News-Intelligent-Classification-WeChat-Mini-Program", "description": "\u57fa\u4e8e Scrapy \u7684\u65b0\u95fb\u667a\u80fd\u5206\u7c7b\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\uff0c\u662f\u4e00\u4e2a\u6587\u672c\u5206\u7c7b\u76f8\u5173\u7684\u5e94\u7528\uff0c\u76ee\u7684\u662f\u6253\u9020\u51fa\u4e00\u4e2a\u53ef\u4ee5\u5bf9\u65b0\u95fb\u8fdb\u884c\u667a\u80fd\u5206\u7c7b\u7684\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u3002\u6280\u672f\u6808\uff1aPython + Scrapy + MongoDB + scikit-learn + Flask + \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\uff0c\u6d89\u53ca\u722c\u866b\u3001\u6587\u672c\u5206\u7c7b\u3001Web \u5f00\u53d1\u548c\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u3002", "created": "2019-06-05 14:15:02", "language": "Python", "type": "User", "username": "weizhiwen", "stars": 36, "forks": 14, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 226030962, "repo_name": "The-Deep-Learning-with-Keras-Workshop", "full_name": "PacktWorkshops/The-Deep-Learning-with-Keras-Workshop", "description": "An Interactive Approach to Understanding Deep Learning with Keras", "created": "2019-12-05 06:21:23", "language": "Jupyter Notebook", "type": "Organization", "username": "PacktWorkshops", "stars": 36, "forks": 79, "subscribers": 10, "open_issues": 12, "topics": ["machine-learning", "keras", "artificial-neural-networks", "magnetic-resonance-imaging", "logistic-regression", "decision-trees", "scikit-learn", "k-means-clustering", "hyperparameter-tuning", "model-evaluation", "tensorflow", "classification", "regression", "support-vector-machine", "model-tuning", "regularization", "cross-validation", "linear-transformation", "scalars", "vectors"]}, {"id": 187477036, "repo_name": "pyclustertend", "full_name": "lachhebo/pyclustertend", "description": "A python package to assess cluster tendency", "created": "2019-05-19 12:58:23", "language": "Python", "type": "User", "username": "lachhebo", "stars": 36, "forks": 6, "subscribers": 2, "open_issues": 1, "topics": ["clustering", "clustertendency", "cluster-analysis", "scikit-learn", "machine-learning", "hopkins", "statistics", "visual-assessment-cluster-tendency", "data-science", "vat", "cluster-tendency", "python", "ivat"]}, {"id": 281499090, "repo_name": "scikit-learn-lambda", "full_name": "model-zoo/scikit-learn-lambda", "description": "Toolkit for deploying scikit-learn models for realtime inference on AWS Lambda", "created": "2020-07-21 20:36:31", "language": "Python", "type": "Organization", "username": "model-zoo", "stars": 35, "forks": 9, "subscribers": 3, "open_issues": 5, "topics": []}, {"id": 139448459, "repo_name": "Trajectory-Analysis-and-Classification-in-Python-Pandas-and-Scikit-Learn", "full_name": "jim-spyropoulos/Trajectory-Analysis-and-Classification-in-Python-Pandas-and-Scikit-Learn", "description": "Formed trajectories of sets of points.Experimented on finding similarities between trajectories based on DTW (Dynamic Time Warping) and LCSS (Longest Common SubSequence) algorithms.Modeled trajectories as strings based on a Grid representation.Benchmarked KNN, Random Forest, Logistic Regression classification algorithms  to classify efficiently trajectories.", "created": "2018-07-02 13:36:32", "language": "Python", "type": "User", "username": "jim-spyropoulos", "stars": 35, "forks": 15, "subscribers": 0, "open_issues": 1, "topics": ["python", "machine-learning", "classification", "trajectory", "scikitlearn-machine-learning", "dtw", "trajectory-analysis", "classifiers", "similarity-measures", "scikit-learn", "random-forest", "knn", "logistic-regression"]}, {"id": 94670883, "repo_name": "kenchi", "full_name": "Y-oHr-N/kenchi", "description": "A scikit-learn compatible library for anomaly detection", "created": "2017-06-18 07:02:05", "language": "Python", "type": "User", "username": "Y-oHr-N", "stars": 35, "forks": 10, "subscribers": 4, "open_issues": 37, "topics": ["data-science", "statistics", "machine-learning", "data-mining", "anomaly-detection", "outlier-detection", "novelty-detection", "one-class-classification", "scikit-learn"]}, {"id": 103337000, "repo_name": "sklearn-hierarchical-classification", "full_name": "globality-corp/sklearn-hierarchical-classification", "description": "Hierarchical classification module based on scikit-learn's interfaces and conventions.", "created": "2017-09-13 01:12:54", "language": "Python", "type": "Organization", "username": "globality-corp", "stars": 35, "forks": 10, "subscribers": 7, "open_issues": 19, "topics": ["machine-learning"]}, {"id": 110731348, "repo_name": "predict-opioid-prescribers", "full_name": "IBM/predict-opioid-prescribers", "description": "A pattern focusing on how to use scikit learn and python in Watson Studio to predict opioid prescribers based off of a 2014 kaggle dataset.", "created": "2017-11-14 18:54:40", "language": "Jupyter Notebook", "type": "Organization", "username": "IBM", "stars": 35, "forks": 43, "subscribers": 29, "open_issues": 0, "topics": ["datascience", "machinelearning", "python3", "scikitlearn-machine-learning", "pandas", "pixiedust", "dsx", "ibmcode", "call-for-code"]}, {"id": 83067026, "repo_name": "KMeans_elbow", "full_name": "analyticalmonk/KMeans_elbow", "description": "Code for determining optimal number of clusters for K-means algorithm using the 'elbow criterion'", "created": "2017-02-24 17:38:27", "language": "Jupyter Notebook", "type": "User", "username": "analyticalmonk", "stars": 35, "forks": 20, "subscribers": 4, "open_issues": 1, "topics": ["sklearn", "scikit-learn", "kmeans-clustering", "kmeans", "python", "machine-learning"]}, {"id": 355978479, "repo_name": "topometry", "full_name": "davisidarta/topometry", "description": "High-resolution manifold learning with modular topological operators", "created": "2021-04-08 16:28:02", "language": "Python", "type": "User", "username": "davisidarta", "stars": 35, "forks": 1, "subscribers": 2, "open_issues": 1, "topics": ["topological-data-analysis", "machine-learning", "visualization", "clustering", "knowledge-representation", "information-visualization", "topology-visualiztion", "topology-optimization", "data-topology", "scikit-learn", "graphs", "dimensionality-reduction"]}, {"id": 43080566, "repo_name": "2015lab4", "full_name": "cs109/2015lab4", "description": "Lab for Linear and Logistic Regression, SciKit Learn", "created": "2015-09-24 16:59:55", "language": null, "type": "Organization", "username": "cs109", "stars": 34, "forks": 512, "subscribers": 10, "open_issues": 1, "topics": []}, {"id": 33070418, "repo_name": "scikit-learn-mpi-grid-search", "full_name": "sebp/scikit-learn-mpi-grid-search", "description": "Performs nested cross-validation for scikit-learn classes using MPI for parallel computing.", "created": "2015-03-29 11:22:14", "language": "Python", "type": "User", "username": "sebp", "stars": 34, "forks": 9, "subscribers": 4, "open_issues": 1, "topics": []}, {"id": 374645786, "repo_name": "skorecard", "full_name": "ing-bank/skorecard", "description": "scikit-learn compatible tools for building credit risk acceptance models", "created": "2021-06-07 11:45:30", "language": "Python", "type": "Organization", "username": "ing-bank", "stars": 34, "forks": 3, "subscribers": 7, "open_issues": 4, "topics": ["scikit-learn", "scorecard", "scorecard-model", "scorecards", "credit-risk", "creditrisk", "machine-learning", "logistic-regression"]}, {"id": 114427896, "repo_name": "dataquest-guided-projects-solutions", "full_name": "sengkchu/dataquest-guided-projects-solutions", "description": "My dataquest project solutions", "created": "2017-12-16 02:37:37", "language": "Jupyter Notebook", "type": "User", "username": "sengkchu", "stars": 34, "forks": 54, "subscribers": 3, "open_issues": 0, "topics": ["python3", "jupyter-notebook", "pandas", "matplotlib", "scikit-learn", "data-analysis"]}, {"id": 90444908, "repo_name": "machine-learning-alpine", "full_name": "petronetto/machine-learning-alpine", "description": "Alpine Container for Machine Learning", "created": "2017-05-06 07:18:56", "language": "Jupyter Notebook", "type": "User", "username": "petronetto", "stars": 34, "forks": 10, "subscribers": 3, "open_issues": 0, "topics": ["machine-learning", "xgboost", "scikit-learn", "pandas", "numpy", "seaborn", "matplotlib", "python", "docker", "alpine", "jupyter-notebook", "tensorflow", "keras"]}, {"id": 122148393, "repo_name": "serveit", "full_name": "rtlee9/serveit", "description": "Simple API serving for Python ML models", "created": "2018-02-20 02:51:53", "language": "Python", "type": "User", "username": "rtlee9", "stars": 34, "forks": 0, "subscribers": 3, "open_issues": 4, "topics": ["machine-learning", "machine-learning-api", "restful-api", "scikit-learn", "keras", "tensorflow", "pytorch"]}, {"id": 128687034, "repo_name": "Agricultural-Price-Prediction-and-Visualization-on-Android-App", "full_name": "deadskull7/Agricultural-Price-Prediction-and-Visualization-on-Android-App", "description": "In Agriculture Price Monitioring , I have used data provided by open government site data.gov.in, which updates prices of market daily .  Working Interface Details: We have provided user choice to see current market prices based on two choices: market wise or commodity wise use increase assesibility options.  Market wise: User have to provide State,District and Market name and then select market wise button. Then user will be shown the prices of all the commodities present in the market in graphical format, so that he can analyse the rates on one scale. This feature is mostly helpful for a regular buyer to decide the choice of commodity to buy. He is also given feature to download the data in a tabular format(csv) for accurate analysis.  Commodity Wise: User have to provide State,District and Commodity name and then select Commodity wise button. Then user will be shown the prices of all the markets present in the region with the commodity in graphical format, so that he can analyse the cheapest commodity rate. This feature is mostly helpful for wholesale buyers. He is also given feature to download the data in a tabular format(csv) for accurate analysis.  On the first activity user is also given forecasting choice. It can be used to forecast the wholesale prices of various commodities at some later year. Regression techniques on timeseries data is used to predict future prices. Select the type of item and click link for future predictions.  There are 3 java files Forecasts, DisplayGraphs, DisplayGraphs2 ..... Please change the localhost \"server_name\" at time of testing as the server name changes each time a new server is made.  Things Used: We have used pandas , numpy , scikit learn , seaborn and matplotlib libraries for the same . The dataset is thoroughly analysed using different function available in pandas in my .iPynb file . Not just in-built functions are used but also many user made functions are made to make the working smooth . Various graphs like pointplot , heat-map , barplot , kdeplot , distplot, pairplot , stripplot , jointplot, regplot , etc are made and also deployed on the android app as well .  To integrate the android app and machine learning analysis outputs , we have used Flask to host our laptop as the server . We have a separate file for the Flask as server.py . Where all the the necessary stuff of clint request and server response have been dealt with . We have used npm package ngrok for tunneling purpose and hosting .  A different .iPynb file is used for the time series predictions using regression algorithms and would send the csv file of prediction along with the graph to the andoid app when given a request .", "created": "2018-04-08 22:27:59", "language": "Jupyter Notebook", "type": "User", "username": "deadskull7", "stars": 34, "forks": 16, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 117465949, "repo_name": "Transfer-learning-with-TrAdaBoost", "full_name": "surajiyer/Transfer-learning-with-TrAdaBoost", "description": "Scikit-learn style implementation of TrAdaBoost algorithm", "created": "2018-01-14 20:54:37", "language": "Python", "type": "User", "username": "surajiyer", "stars": 33, "forks": 11, "subscribers": 2, "open_issues": 1, "topics": []}, {"id": 10835739, "repo_name": "Dash-Docset", "full_name": "Black-Milk/Dash-Docset", "description": "A place for dash docsets. Includes scipy, numpy, pandas, scikit-learn, scikit-image,...", "created": "2013-06-21 05:04:20", "language": "Python", "type": "User", "username": "Black-Milk", "stars": 33, "forks": 5, "subscribers": 5, "open_issues": 3, "topics": []}, {"id": 67150552, "repo_name": "tweet-clustering", "full_name": "pksohn/tweet-clustering", "description": "Clustering analysis of one million tweets using scikit-learn, including basic benchmarking of various clustering algorithms", "created": "2016-09-01 17:03:52", "language": "Jupyter Notebook", "type": "User", "username": "pksohn", "stars": 33, "forks": 13, "subscribers": 4, "open_issues": 1, "topics": []}, {"id": 99282976, "repo_name": "searchgrid", "full_name": "jnothman/searchgrid", "description": "Helpers for constructing scikit-learn grid search", "created": "2017-08-03 23:24:17", "language": "Python", "type": "User", "username": "jnothman", "stars": 33, "forks": 3, "subscribers": 3, "open_issues": 5, "topics": []}, {"id": 106237309, "repo_name": "ML-supervised-learning", "full_name": "booleanhunter/ML-supervised-learning", "description": "A repository to try out Supervised Learning algorithms in Machine Learning", "created": "2017-10-09 04:42:31", "language": "HTML", "type": "User", "username": "booleanhunter", "stars": 33, "forks": 80, "subscribers": 10, "open_issues": 0, "topics": ["machine-learning", "python3", "scikit-learn", "jupyter-notebook", "python"]}, {"id": 430746088, "repo_name": "skippa", "full_name": "data-science-lab-amsterdam/skippa", "description": "SciKIt-learn Pipeline in PAndas", "created": "2021-11-22 14:45:08", "language": "Python", "type": "Organization", "username": "data-science-lab-amsterdam", "stars": 33, "forks": 1, "subscribers": 1, "open_issues": 0, "topics": ["data-science", "machine-learning", "preprocessing", "pipeline", "scikit-learn", "sklearn", "pandas-dataframe", "pandas", "python"]}, {"id": 98463320, "repo_name": "neuroglia", "full_name": "AllenInstitute/neuroglia", "description": "a Python machine learning library for neurophysiology data", "created": "2017-07-26 20:29:45", "language": "Python", "type": "Organization", "username": "AllenInstitute", "stars": 33, "forks": 7, "subscribers": 19, "open_issues": 19, "topics": ["scikit-learn", "machine-learning", "neuroscience", "neurophysiology", "python", "open-science", "nwb", "electrophysiology", "calcium-imaging"]}, {"id": 111008184, "repo_name": "deep_learning_projects", "full_name": "OlgaBelitskaya/deep_learning_projects", "description": null, "created": "2017-11-16 18:36:56", "language": "Jupyter Notebook", "type": "User", "username": "OlgaBelitskaya", "stars": 33, "forks": 19, "subscribers": 1, "open_issues": 2, "topics": ["dataset", "image-processing", "image-classification", "image-recognition", "data-visualization", "neural-networks", "machine-learning", "deep-learning", "convolutional-neural-networks", "regression", "projects", "keras", "matplotlib", "database", "gan", "jupyter-notebook", "css-styles", "python", "scikit-learn", "scikit-image"]}, {"id": 195224722, "repo_name": "verbecc", "full_name": "bretttolbert/verbecc", "description": "Complete Conjugation of any Verb using Machine Learning for French, Spanish, Portuguese, Italian and Romanian", "created": "2019-07-04 10:56:04", "language": "Python", "type": "User", "username": "bretttolbert", "stars": 33, "forks": 3, "subscribers": 2, "open_issues": 3, "topics": ["conjugation", "verbs", "verb-conjugation", "nlp", "linguistics", "french", "spanish-language", "french-language", "portuguese-language", "spanish-verbs", "french-nlp", "machine-learning", "scikit-learn", "natural-language-processing", "portuguese-verbs", "conjugator", "romanian", "romanian-language"]}, {"id": 53698474, "repo_name": "pydata-amsterdam-2016", "full_name": "amueller/pydata-amsterdam-2016", "description": "Machine Learning with Scikit-Learn (material for pydata Amsterdam 2016)", "created": "2016-03-11 21:43:22", "language": "Jupyter Notebook", "type": "User", "username": "amueller", "stars": 32, "forks": 22, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 13724719, "repo_name": "skl-talk", "full_name": "sarguido/skl-talk", "description": "A Beginner's Guide to Machine Learning with Scikit-Learn", "created": "2013-10-20 18:57:17", "language": null, "type": "User", "username": "sarguido", "stars": 32, "forks": 18, "subscribers": 7, "open_issues": 0, "topics": []}, {"id": 40764281, "repo_name": "Python-ELM", "full_name": "masaponto/Python-ELM", "description": "Extreme learning machine implemented by python3 with scikit-learn interface", "created": "2015-08-15 14:28:17", "language": "Python", "type": "User", "username": "masaponto", "stars": 32, "forks": 16, "subscribers": 0, "open_issues": 1, "topics": ["machine-learning-algorithms"]}, {"id": 10522000, "repo_name": "twitterclassifier", "full_name": "miha-stopar/twitterclassifier", "description": "Classifier for predicting user interests based on Twitter profile and using Python library scikit-learn.", "created": "2013-06-06 08:24:42", "language": "JavaScript", "type": "User", "username": "miha-stopar", "stars": 32, "forks": 8, "subscribers": 2, "open_issues": 0, "topics": []}, {"id": 111591524, "repo_name": "Anaconda-Windows-AMD", "full_name": "fo40225/Anaconda-Windows-AMD", "description": "optimized numpy, numexpr, scipy, scikit-learn for AMD CPU with patched Intel MKL+compiler", "created": "2017-11-21 19:21:49", "language": null, "type": "User", "username": "fo40225", "stars": 32, "forks": 8, "subscribers": 5, "open_issues": 4, "topics": []}, {"id": 97495825, "repo_name": "RBM_DBN", "full_name": "kaushiksk/RBM_DBN", "description": "Experimenting with RBMs using scikit-learn on MNIST and simulating a DBN using Keras.", "created": "2017-07-17 16:09:42", "language": "Jupyter Notebook", "type": "User", "username": "kaushiksk", "stars": 32, "forks": 7, "subscribers": 2, "open_issues": 0, "topics": ["rbm", "keras", "machine-learning", "neural-networks", "dbn", "rbm-dbn", "deep-belief-network"]}, {"id": 261603270, "repo_name": "skranger", "full_name": "crflynn/skranger", "description": "scikit-learn compatible Python bindings for ranger C++ random forest library", "created": "2020-05-05 23:13:13", "language": "Python", "type": "User", "username": "crflynn", "stars": 32, "forks": 4, "subscribers": 2, "open_issues": 8, "topics": ["random-forest", "machine-learning", "scikit-learn"]}, {"id": 35448639, "repo_name": "EmbeddingScripts", "full_name": "kylemcdonald/EmbeddingScripts", "description": "Collection of scripts for visualizing high dimensional data with scikit-learn and bh_tsne", "created": "2015-05-11 20:35:47", "language": "Python", "type": "User", "username": "kylemcdonald", "stars": 32, "forks": 3, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 156385848, "repo_name": "Natural-Language-Processing-Fundamentals", "full_name": "TrainingByPackt/Natural-Language-Processing-Fundamentals", "description": "Use Python and NLTK to build out your own text classifiers and solve common NLP problems", "created": "2018-11-06 13:13:33", "language": "Jupyter Notebook", "type": "Organization", "username": "TrainingByPackt", "stars": 32, "forks": 41, "subscribers": 8, "open_issues": 0, "topics": ["nlp", "natural-language-processing", "python", "tokenization", "supervised", "unsupervised", "linear-regression", "pandas", "scikit-learn", "binary-classifier", "latent-dirichlet-allocation", "lda", "api", "markov-chain"]}, {"id": 197051912, "repo_name": "sagemaker-scikit-learn-extension", "full_name": "aws/sagemaker-scikit-learn-extension", "description": "A library of additional estimators and SageMaker tools based on scikit-learn", "created": "2019-07-15 18:30:19", "language": "Python", "type": "Organization", "username": "aws", "stars": 31, "forks": 26, "subscribers": 18, "open_issues": 5, "topics": []}, {"id": 77059742, "repo_name": "geo-services.scikit-learn", "full_name": "natbusa/geo-services.scikit-learn", "description": "Geo-Located Data: Extracting Patterns from Mobile Data using Scikit-Learn and Cassandra", "created": "2016-12-21 14:42:41", "language": null, "type": "User", "username": "natbusa", "stars": 31, "forks": 20, "subscribers": 6, "open_issues": 0, "topics": []}, {"id": 115914038, "repo_name": "Detecting-Fake-News-with-Scikit-Learn", "full_name": "docketrun/Detecting-Fake-News-with-Scikit-Learn", "description": "Detecting Fake News with Scikit-Learn ( Machine Learning ) ", "created": "2018-01-01 11:05:57", "language": "Jupyter Notebook", "type": "User", "username": "docketrun", "stars": 31, "forks": 30, "subscribers": 2, "open_issues": 1, "topics": []}, {"id": 42175304, "repo_name": "scikit-image-clustering-scripts", "full_name": "h4k1m0u/scikit-image-clustering-scripts", "description": "Python scripts using scikit-image and scikit-learn to cluster images.", "created": "2015-09-09 11:50:02", "language": "Python", "type": "User", "username": "h4k1m0u", "stars": 31, "forks": 13, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 153771702, "repo_name": "NimbusML-Samples", "full_name": "microsoft/NimbusML-Samples", "description": "Samples for NimbusML, a Python machine learning package providing simple interoperability between ML.NET and scikit-learn components.", "created": "2018-10-19 11:19:18", "language": "Batchfile", "type": "Organization", "username": "microsoft", "stars": 31, "forks": 17, "subscribers": 12, "open_issues": 0, "topics": ["nimbusml", "machine-learning", "python", "scikit-learn", "ml", "mlnet", "data-science"]}, {"id": 107142377, "repo_name": "mlcv-tutorial", "full_name": "johny-c/mlcv-tutorial", "description": "Assisting library for the ML4CV tutorial based on scikit-learn.", "created": "2017-10-16 14:55:07", "language": "Python", "type": "User", "username": "johny-c", "stars": 31, "forks": 3, "subscribers": 6, "open_issues": 0, "topics": ["mlcv-tutorial", "machine-learning-api"]}, {"id": 112469804, "repo_name": "mlprodict", "full_name": "sdpython/mlprodict", "description": "Productionize machine learning predictions, with ONNX or without", "created": "2017-11-29 11:57:10", "language": "Python", "type": "User", "username": "sdpython", "stars": 31, "forks": 8, "subscribers": 5, "open_issues": 12, "topics": ["onnx", "python3", "machine-learning", "scikit-learn"]}, {"id": 281545986, "repo_name": "Hands-on-Machine-Learning-2edition", "full_name": "chenhaishun/Hands-on-Machine-Learning-2edition", "description": "A jupyter notebook based on Scikit-Learn and TensorFlow 2.0 with Chinese comment that takes you through the basics of machine learning and deep learning in python with ease.", "created": "2020-07-22 01:43:23", "language": "Jupyter Notebook", "type": "User", "username": "chenhaishun", "stars": 31, "forks": 13, "subscribers": 2, "open_issues": 1, "topics": []}, {"id": 258761367, "repo_name": "Football_Prediction_Project", "full_name": "mhaythornthwaite/Football_Prediction_Project", "description": "This project will pull past game data from api-football, and use these statistics to predict the outcome of future premier league matches through machine learning.", "created": "2020-04-25 11:41:44", "language": "Python", "type": "User", "username": "mhaythornthwaite", "stars": 31, "forks": 12, "subscribers": 7, "open_issues": 0, "topics": ["football-prediction", "machine-learning", "scikit-learn", "python", "flask", "football", "premier-league"]}, {"id": 316084064, "repo_name": "org-similarity", "full_name": "brunoarine/org-similarity", "description": "Emacs package that helps org-mode users discover similar documents via TF-IDF and cosine similarity", "created": "2020-11-26 00:28:26", "language": "Python", "type": "User", "username": "brunoarine", "stars": 31, "forks": 4, "subscribers": 2, "open_issues": 0, "topics": ["org-mode", "org-roam", "tf-idf", "similarity-search", "emacs", "cosine-similarity", "scikit-learn", "elisp", "python"]}, {"id": 104302491, "repo_name": "Machine-learning-toolkits-with-python", "full_name": "buomsoo-kim/Machine-learning-toolkits-with-python", "description": "Machine learning toolkits with Python", "created": "2017-09-21 04:42:13", "language": "Jupyter Notebook", "type": "User", "username": "buomsoo-kim", "stars": 31, "forks": 11, "subscribers": 1, "open_issues": 0, "topics": ["machine-learning", "cross-validation", "grid-search", "python", "bootstrap", "scikit-learn", "ensemble-learning", "ensemble", "evaluation", "metrics", "roc"]}, {"id": 162601150, "repo_name": "nostradamus", "full_name": "exactpro/nostradamus", "description": "\ud83e\udde0 An open-source machine learning application for analyzing software defect reports extracted from bug tracking systems.", "created": "2018-12-20 15:58:05", "language": "TypeScript", "type": "Organization", "username": "exactpro", "stars": 31, "forks": 9, "subscribers": 12, "open_issues": 4, "topics": ["software-testing", "agile", "quality-assurance", "automation", "automation-tools", "fintech", "tool", "testing", "python3", "python", "machine-learning", "data-science", "data-mining", "deep-learning", "artificial-intelligence", "data-analysis", "exploratory-data-analysis", "machine-learning-testing", "scikit-learn", "pandas"]}, {"id": 127896869, "repo_name": "Hands-on-NLP-with-NLTK-and-scikit-learn-", "full_name": "PacktPublishing/Hands-on-NLP-with-NLTK-and-scikit-learn-", "description": "Hands-on NLP with NLTK and scikit-learn[video], published by Packt", "created": "2018-04-03 11:21:01", "language": "Python", "type": "Organization", "username": "PacktPublishing", "stars": 30, "forks": 28, "subscribers": 7, "open_issues": 1, "topics": []}, {"id": 157382915, "repo_name": "scikit-learn.net", "full_name": "SciSharp/scikit-learn.net", "description": "Machine Learning in .NET Core.", "created": "2018-11-13 13:15:05", "language": "C#", "type": "Organization", "username": "SciSharp", "stars": 30, "forks": 8, "subscribers": 7, "open_issues": 2, "topics": ["scikit-learn", "machine-learning", "algorithm"]}, {"id": 122482044, "repo_name": "node-red-contrib-machine-learning", "full_name": "GabrieleMaurina/node-red-contrib-machine-learning", "description": "Machine learning with scikit-learn and tensorflow for node-red.", "created": "2018-02-22 13:27:07", "language": "HTML", "type": "User", "username": "GabrieleMaurina", "stars": 30, "forks": 13, "subscribers": 5, "open_issues": 10, "topics": []}, {"id": 50127184, "repo_name": "ml_meetup_nyc_2016", "full_name": "amueller/ml_meetup_nyc_2016", "description": "Material for Machine Learning Meetup \"Machine Learning with Scikit-learn\"", "created": "2016-01-21 18:17:48", "language": "Jupyter Notebook", "type": "User", "username": "amueller", "stars": 30, "forks": 7, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 180854880, "repo_name": "ryuzaki_bot", "full_name": "LuciaLlavero/ryuzaki_bot", "description": "Simple chatbot in Python using NLTK and scikit-learn", "created": "2019-04-11 18:32:43", "language": "Python", "type": "User", "username": "LuciaLlavero", "stars": 30, "forks": 0, "subscribers": 2, "open_issues": 5, "topics": ["chatbot", "python3", "nltk", "scikit-learn", "api-rest"]}, {"id": 168708489, "repo_name": "IBM-final-project-Machine-Learning", "full_name": "Moeinh77/IBM-final-project-Machine-Learning", "description": "Final project of IBM's course https://www.coursera.org/learn/machine-learning-with-python on coursera", "created": "2019-02-01 14:21:07", "language": "Jupyter Notebook", "type": "User", "username": "Moeinh77", "stars": 30, "forks": 90, "subscribers": 2, "open_issues": 3, "topics": ["machine-learning", "ibm", "coursera", "python", "scikit-learn", "svm-classifier", "decision-trees", "logistic-regression", "knn-classifier"]}, {"id": 215540458, "repo_name": "inception-external-recommender", "full_name": "inception-project/inception-external-recommender", "description": "Get annotation suggestions for the INCEpTION text annotation platform from spaCy, Sentence BERT, scikit-learn and more. Runs as a web-service compatible with the external recommender API of INCEpTION.  ", "created": "2019-10-16 12:16:24", "language": "Python", "type": "Organization", "username": "inception-project", "stars": 30, "forks": 8, "subscribers": 11, "open_issues": 13, "topics": ["inception-recommender", "spacy", "annotation", "natural-language-processing", "machine-learning"]}, {"id": 192948131, "repo_name": "serverless-machine-learning", "full_name": "mpavlovic/serverless-machine-learning", "description": "Examples of deploying scikit, spaCy and Keras (TensorFlow) machine learning models to AWS Lambda with Serverless framework and Python 3.", "created": "2019-06-20 15:51:03", "language": "Python", "type": "User", "username": "mpavlovic", "stars": 30, "forks": 32, "subscribers": 0, "open_issues": 2, "topics": ["machine-learning", "aws-lambda", "serverless-framework", "deployment", "scikit-learn", "spacy", "keras", "tensorflow", "python-3", "deep-learning"]}, {"id": 133544407, "repo_name": "touchdesigner-dominant-color", "full_name": "raganmd/touchdesigner-dominant-color", "description": "An approach for finding dominant color in an image using KMeans clustering with scikit learn and openCV. The approach here is built for realtime applications using TouchDesigner and python multi-threading.", "created": "2018-05-15 16:33:47", "language": "Python", "type": "User", "username": "raganmd", "stars": 30, "forks": 1, "subscribers": 3, "open_issues": 1, "topics": ["touchdesigner", "touchdesigner-components", "kmeans-clustering", "python", "dominant-colors", "touchdesigner-tool"]}, {"id": 172663420, "repo_name": "Scikit-Learn", "full_name": "liuzheCSDN/Scikit-Learn", "description": null, "created": "2019-02-26 07:51:20", "language": "Jupyter Notebook", "type": "User", "username": "liuzheCSDN", "stars": 29, "forks": 16, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 131308323, "repo_name": "pandas-feature-union", "full_name": "marrrcin/pandas-feature-union", "description": "Use Pandas DataFrame with scikit-learn Pipelines and Feature Unions", "created": "2018-04-27 14:39:07", "language": "Python", "type": "User", "username": "marrrcin", "stars": 29, "forks": 9, "subscribers": 4, "open_issues": 1, "topics": []}, {"id": 90917501, "repo_name": "Machine-Learning", "full_name": "jeffprosise/Machine-Learning", "description": "Samples demonstrating how to use Scikit-learn to build machine-learning models", "created": "2017-05-10 23:37:04", "language": "Jupyter Notebook", "type": "User", "username": "jeffprosise", "stars": 29, "forks": 21, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 85042114, "repo_name": "ml_webapp", "full_name": "ramansah/ml_webapp", "description": "Explore machine learning models. Leveraging scikit-learn's models and exposing their behaviour through API", "created": "2017-03-15 07:27:56", "language": "Python", "type": "User", "username": "ramansah", "stars": 29, "forks": 8, "subscribers": 7, "open_issues": 0, "topics": ["machine-learning", "scikit-learn", "django"]}, {"id": 246383857, "repo_name": "sklearn-jax-kernels", "full_name": "ExpectationMax/sklearn-jax-kernels", "description": "Composable kernels for scikit-learn implemented in JAX.", "created": "2020-03-10 18:59:36", "language": "Python", "type": "User", "username": "ExpectationMax", "stars": 29, "forks": 3, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 59169414, "repo_name": "Data-Mining-Project", "full_name": "mrsan22/Data-Mining-Project", "description": "Recognizing human activity using multiple wearable accelerometer sensors placed at different body positions.", "created": "2016-05-19 03:04:04", "language": "Python", "type": "User", "username": "mrsan22", "stars": 29, "forks": 12, "subscribers": 3, "open_issues": 1, "topics": ["data-mining", "random-forest", "accelerometer-data", "python", "scikit-learn"]}, {"id": 57972469, "repo_name": "skutil", "full_name": "tgsmith61591/skutil", "description": "NOTE: skutil is now deprecated. See its sister project: https://github.com/tgsmith61591/skoot. Original description: A set of scikit-learn and h2o extension classes (as well as caret classes for python). See more here: https://tgsmith61591.github.io/skutil", "created": "2016-05-03 13:45:57", "language": "Python", "type": "User", "username": "tgsmith61591", "stars": 29, "forks": 9, "subscribers": 6, "open_issues": 7, "topics": ["sklearn", "h2o", "machine-learning", "pandas", "python"]}, {"id": 48244243, "repo_name": "mnist-sklearn", "full_name": "jrmontag/mnist-sklearn", "description": "Code and notes from using scikit-learn on the MNIST digits dataset. For more of a narrative on this project, see the article:", "created": "2015-12-18 16:11:06", "language": "Python", "type": "User", "username": "jrmontag", "stars": 29, "forks": 2, "subscribers": 3, "open_issues": 2, "topics": []}, {"id": 22096982, "repo_name": "minimal-datascience", "full_name": "lenguyenthedat/minimal-datascience", "description": "This repository contains all the code and dataset used in my blog series: Minimal Data Science", "created": "2014-07-22 08:45:02", "language": "Python", "type": "User", "username": "lenguyenthedat", "stars": 29, "forks": 7, "subscribers": 3, "open_issues": 1, "topics": ["python", "blog-series", "data-science", "scikit-learn", "xgboost", "kaggle", "machine-learning"]}, {"id": 224627422, "repo_name": "Movie-Recommendation-Chatbot", "full_name": "kaushikjadhav01/Movie-Recommendation-Chatbot", "description": "Movie Recommendation Chatbot provides information about a movie like plot, genre, revenue, budget, imdb rating, imdb links, etc. The model was trained with Kaggle\u2019s movies metadata dataset. To give a recommendation of similar movies, Cosine Similarity and TFID vectorizer were used. Slack API was used to provide a Front End for the chatbot. IBM Watson was used to link the Python code for Natural Language Processing with the front end hosted on Slack API. Libraries like nltk, sklearn, pandas and nlp were used to perform Natural Language Processing and cater to user queries and responses.", "created": "2019-11-28 10:23:36", "language": "Jupyter Notebook", "type": "User", "username": "kaushikjadhav01", "stars": 29, "forks": 11, "subscribers": 2, "open_issues": 0, "topics": ["natural-language-processing", "chatbot", "artificial-intelligence", "movie-recommendation", "slack", "watson", "recommendation-engine", "python", "scikit-learn", "tabulate", "pandas"]}, {"id": 177345995, "repo_name": "data-science-learning", "full_name": "dinhanhthi/data-science-learning", "description": "\ud83d\udcca  All of courses, assignments, exercises, mini-projects and books that I've done so far in the process of learning by myself Machine Learning and Data Science.", "created": "2019-03-23 22:21:26", "language": "HTML", "type": "User", "username": "dinhanhthi", "stars": 29, "forks": 12, "subscribers": 2, "open_issues": 1, "topics": ["dinhanhthi", "data-science", "coursera", "dataquest", "machine-learning", "self-learning", "deep-learning", "colab", "scikit-learn", "jupyter-notebook", "python-programming-language", "pca", "concepts", "kaggle", "deeplearning-ai"]}, {"id": 157069546, "repo_name": "Python-for-Data-Science-and-Machine-Learning-Bootcamp", "full_name": "abhiwalia15/Python-for-Data-Science-and-Machine-Learning-Bootcamp", "description": "program with Python, how to create amazing data visualizations, and how to use Machine Learning with Python! Here a just a few of the topics we will be learning:  Programming with Python NumPy with Python Using pandas Data Frames to solve complex tasks Use pandas to handle Excel Files Web scraping with python Connect Python to SQL Use matplotlib and seaborn for data visualizations Use plotly for interactive visualizations Machine Learning with SciKit Learn, including: Linear Regression K Nearest Neighbors K Means Clustering Decision Trees Random Forests Natural Language Processing Neural Nets and Deep Learning Support Vector Machines and much, much more!", "created": "2018-11-11 10:40:14", "language": "Jupyter Notebook", "type": "User", "username": "abhiwalia15", "stars": 29, "forks": 11, "subscribers": 2, "open_issues": 0, "topics": []}, {"id": 4309388, "repo_name": "scikit-learn-benchmarks", "full_name": "scikit-learn/scikit-learn-benchmarks", "description": "Results of scikit-learn asv benchmarks", "created": "2012-05-12 20:13:20", "language": "Shell", "type": "Organization", "username": "scikit-learn", "stars": 28, "forks": 23, "subscribers": 24, "open_issues": 1, "topics": []}, {"id": 197383839, "repo_name": "euroscipy-2019-scikit-learn-tutorial", "full_name": "lesteve/euroscipy-2019-scikit-learn-tutorial", "description": null, "created": "2019-07-17 12:21:02", "language": "Jupyter Notebook", "type": "User", "username": "lesteve", "stars": 28, "forks": 20, "subscribers": 3, "open_issues": 1, "topics": []}, {"id": 63525545, "repo_name": "machine-learning-dataschool", "full_name": "ritchieng/machine-learning-dataschool", "description": "Detailed notes and code to learn the basics of machine learning with scikit-learn.", "created": "2016-07-17 10:05:25", "language": "Jupyter Notebook", "type": "User", "username": "ritchieng", "stars": 28, "forks": 31, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 24818552, "repo_name": "sklearn_ensae_course", "full_name": "GaelVaroquaux/sklearn_ensae_course", "description": "Materials for a course on scikit-learn at ENSAE", "created": "2014-10-05 15:18:27", "language": "Jupyter Notebook", "type": "User", "username": "GaelVaroquaux", "stars": 28, "forks": 22, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 47600009, "repo_name": "scikit-mice", "full_name": "Ouwen/scikit-mice", "description": "MICE Imputation implementation using scikit learn.", "created": "2015-12-08 05:10:44", "language": "Python", "type": "User", "username": "Ouwen", "stars": 28, "forks": 12, "subscribers": 4, "open_issues": 3, "topics": []}, {"id": 120416379, "repo_name": "Data-Science-cheet-sheets", "full_name": "sachindc/Data-Science-cheet-sheets", "description": "Cheat sheets for Numpy, Pandas, SQL, Scikit Learn", "created": "2018-02-06 07:14:51", "language": null, "type": "User", "username": "sachindc", "stars": 28, "forks": 10, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 73845393, "repo_name": "skmca", "full_name": "TomAugspurger/skmca", "description": "A scikit-learn compatible implementation of MCA", "created": "2016-11-15 18:57:14", "language": "Python", "type": "User", "username": "TomAugspurger", "stars": 28, "forks": 5, "subscribers": 1, "open_issues": 2, "topics": []}, {"id": 143131564, "repo_name": "Sentiment-Analysist", "full_name": "merveyapnaz/Sentiment-Analysist", "description": "Scikit-Learn k\u00fct\u00fcphanesi ile basit bir duygu analizi \u00f6rne\u011fi", "created": "2018-08-01 09:06:35", "language": "Python", "type": "User", "username": "merveyapnaz", "stars": 28, "forks": 7, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 119230287, "repo_name": "Machine-Learning-With-Python", "full_name": "LahiruTjay/Machine-Learning-With-Python", "description": "This repositories contain various Machine Learning examples done with Python.", "created": "2018-01-28 05:19:30", "language": "Jupyter Notebook", "type": "User", "username": "LahiruTjay", "stars": 28, "forks": 69, "subscribers": 10, "open_issues": 0, "topics": ["machine-learning", "scikit-learn", "jupyter-notebook", "python"]}, {"id": 90968565, "repo_name": "kaggle-titanic", "full_name": "ramansah/kaggle-titanic", "description": "Titanic assignment on Kaggle competition", "created": "2017-05-11 10:45:06", "language": "Jupyter Notebook", "type": "User", "username": "ramansah", "stars": 28, "forks": 38, "subscribers": 1, "open_issues": 0, "topics": ["machine-learning", "scikit-learn", "kaggle-titanic"]}, {"id": 47587484, "repo_name": "python_for_ml", "full_name": "savarin/python_for_ml", "description": "brief introduction to Python for machine learning", "created": "2015-12-08 00:12:15", "language": "Jupyter Notebook", "type": "User", "username": "savarin", "stars": 28, "forks": 10, "subscribers": 3, "open_issues": 0, "topics": ["python", "machine-learning", "scikit-learn", "pandas", "data-science"]}, {"id": 96073545, "repo_name": "maxentropy", "full_name": "PythonCharmers/maxentropy", "description": "Maximum entropy and minimum divergence models in Python", "created": "2017-07-03 05:33:00", "language": "Jupyter Notebook", "type": "Organization", "username": "PythonCharmers", "stars": 28, "forks": 18, "subscribers": 4, "open_issues": 3, "topics": ["python", "maximum-entropy", "minimum-divergence", "kullback-leibler-divergence", "bayesian-inference", "scikit-learn", "prior-distribution"]}, {"id": 143982441, "repo_name": "machine-learning-capstone-project", "full_name": "flaviohenriquecbc/machine-learning-capstone-project", "description": "This is the final project for the Udacity Machine Learning Nanodegree: Predicting article retweets and likes based on the title using Machine Learning", "created": "2018-08-08 08:15:14", "language": "Jupyter Notebook", "type": "User", "username": "flaviohenriquecbc", "stars": 28, "forks": 16, "subscribers": 1, "open_issues": 0, "topics": ["machine-learning", "pandas", "scikit-learn", "matplotlib", "anaconda", "python"]}, {"id": 98425130, "repo_name": "predictive_modeling_price", "full_name": "elena-petrova/predictive_modeling_price", "description": "Data Analysis and Machine Learning with Python: EDA with ECDF and Correlation analysis, Preprocessing and Feature engineering, L1 (Lasso) Regression and Random Forest Regressor with scikit-learn backed up by cross-validation, grid search and plots of feature importance.", "created": "2017-07-26 13:20:42", "language": "Jupyter Notebook", "type": "User", "username": "elena-petrova", "stars": 28, "forks": 8, "subscribers": 1, "open_issues": 1, "topics": []}, {"id": 169607261, "repo_name": "pedestrian-detection", "full_name": "abhinavsagar/pedestrian-detection", "description": "Pedestrian Detection using Non Maximum Suppression", "created": "2019-02-07 16:56:03", "language": "Python", "type": "User", "username": "abhinavsagar", "stars": 28, "forks": 13, "subscribers": 2, "open_issues": 4, "topics": ["pedestrian-detection", "mahcine-learning", "artificial-intelligence", "non-maximum-suppression", "convolutional-neural-network", "scikit-learn", "open-cv", "numpy", "object-detection"]}, {"id": 163348216, "repo_name": "agatha", "full_name": "driemworks/agatha", "description": "Stock market prediction using Keras", "created": "2018-12-28 00:39:17", "language": "Python", "type": "User", "username": "driemworks", "stars": 28, "forks": 10, "subscribers": 7, "open_issues": 2, "topics": ["python3", "keras", "keras-tensorflow", "alphavantage", "stock-price-prediction", "lstm", "machinelearning", "time-series", "tensorflow", "scikit-learn"]}, {"id": 117768750, "repo_name": "charts", "full_name": "polyaxon/charts", "description": "Helm charts for creating reproducible and maintainable deployments of Polyaxon with Kubernetes.", "created": "2018-01-17 01:58:28", "language": "Smarty", "type": "Organization", "username": "polyaxon", "stars": 28, "forks": 41, "subscribers": 7, "open_issues": 1, "topics": ["kubernetes", "helm", "helm-charts", "deep-learning", "tensorflow", "pytorch", "scikit-learn", "machine-learning", "polyaxon", "helm-chart", "mlops", "gitops", "k8s", "distributed-systems"]}, {"id": 244404388, "repo_name": "easylearn_dev", "full_name": "easylearn-fmri/easylearn_dev", "description": "Easylearn is designed for machine learning mainly in resting-state fMRI, radiomics and other fields (such as EEG). Easylearn is built on top of scikit-learn, pytorch and other packages. Easylearn can assist doctors and researchers who have limited coding experience to easily realize machine learning, e.g., (MR/CT/PET/EEG)imaging-marker- or other biomarker-based disease diagnosis and prediction, treatment response prediction,  disease subtyping, dimensional decoding for transdiagnostic psychiatric diseases or other diseases, disease mechanism exploration and etc.  ", "created": "2020-03-02 15:23:17", "language": "Python", "type": "Organization", "username": "easylearn-fmri", "stars": 28, "forks": 12, "subscribers": 4, "open_issues": 0, "topics": ["resting-state-fmri", "machine-learning", "radiomics", "deep-learning", "neuroimaging", "graphic-user-interface"]}, {"id": 134055305, "repo_name": "VKSentimentAnalysis", "full_name": "VamshiIITBHU14/VKSentimentAnalysis", "description": "This project is a demo on using CoreML framework for sentiment analysis of text. .mlmodel was developed from Scikit-learn Pipeline using coremltools python package. More details here : https://developer.apple.com/documentation/coreml/converting_trained_models_to_core_ml", "created": "2018-05-19 11:19:02", "language": "Swift", "type": "User", "username": "VamshiIITBHU14", "stars": 28, "forks": 0, "subscribers": 1, "open_issues": 1, "topics": ["coreml", "coreml-models", "sentiment-analysis", "nlp-machine-learning", "ios", "swift4", "algorithms"]}, {"id": 193392727, "repo_name": "school_crime_and_corruption_analysis", "full_name": "lgaalves/school_crime_and_corruption_analysis", "description": "Lectures on \"crime and political corruption analysis using data mining, machine learning and complex networks\" at the School of Applied Mathematics in the Institute of Mathematics and Computer Science at University of S\u00e3o Paulo ", "created": "2019-06-23 20:31:13", "language": "Jupyter Notebook", "type": "User", "username": "lgaalves", "stars": 28, "forks": 15, "subscribers": 2, "open_issues": 0, "topics": ["python", "jupyter-notebook", "web-scraping", "data-mining", "data-science", "big-data", "machine-learning", "complex-networks", "community-detection", "corruption-networks", "crime-prediction", "crimonology", "quantitative-criminology", "social-networks", "igraph", "scikit-learn", "networkx"]}, {"id": 363712125, "repo_name": "AIPortfolio", "full_name": "gregyjames/AIPortfolio", "description": "Use AI to generate a optimized stock portfolio", "created": "2021-05-02 17:37:49", "language": "Python", "type": "User", "username": "gregyjames", "stars": 28, "forks": 4, "subscribers": 1, "open_issues": 7, "topics": ["python", "python3", "scikit-learn", "numpy", "stock", "stock-market", "stocks", "yahoo", "finance", "pandas", "portfolio"]}, {"id": 15632953, "repo_name": "intro-to-scikit-learn", "full_name": "tdhopper/intro-to-scikit-learn", "description": ":nut_and_bolt: Materials for talk on scikit-learn", "created": "2014-01-04 13:58:34", "language": null, "type": "User", "username": "tdhopper", "stars": 27, "forks": 13, "subscribers": 7, "open_issues": 0, "topics": []}, {"id": 21110471, "repo_name": "scikit-protopy", "full_name": "dvro/scikit-protopy", "description": "Prototype Selection and Generation Toolbox based on scikit-learn", "created": "2014-06-23 01:31:43", "language": "Python", "type": "User", "username": "dvro", "stars": 27, "forks": 8, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 187651175, "repo_name": "nyc-2019-scikit-sprint", "full_name": "wimlds/nyc-2019-scikit-sprint", "description": "NYC WiMLDS scikit-learn open source sprint (Aug 24, 2019)", "created": "2019-05-20 13:58:20", "language": null, "type": "Organization", "username": "wimlds", "stars": 27, "forks": 8, "subscribers": 10, "open_issues": 0, "topics": ["python", "opensource", "scikit-learn", "machine-learning", "diversity", "datascience", "women-in-tech"]}, {"id": 104729322, "repo_name": "sklearn-fasttext", "full_name": "vishnumani2009/sklearn-fasttext", "description": "A scikit learn based interface to facebook fasttext.", "created": "2017-09-25 09:23:11", "language": "Python", "type": "User", "username": "vishnumani2009", "stars": 27, "forks": 7, "subscribers": 1, "open_issues": 10, "topics": ["python", "fasttext", "neural-network", "word-embeddings", "facebook"]}, {"id": 352387630, "repo_name": "dagster-sklearn", "full_name": "pybokeh/dagster-sklearn", "description": "dagster scikit-learn pipeline example.", "created": "2021-03-28 17:03:17", "language": "Python", "type": "User", "username": "pybokeh", "stars": 27, "forks": 3, "subscribers": 1, "open_issues": 0, "topics": ["dagster", "scikit-learn", "python"]}, {"id": 335186648, "repo_name": "sklearn-som", "full_name": "rileypsmith/sklearn-som", "description": "A simple, rectangular self-organizing map with methods similar to clustering methods in Scikit Learn.", "created": "2021-02-02 06:07:47", "language": "Python", "type": "User", "username": "rileypsmith", "stars": 27, "forks": 10, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 112972520, "repo_name": "online_vectorizers", "full_name": "idoshlomo/online_vectorizers", "description": "Extension of scikit-learn TfidfVectorizer and CountVectorizer that allows for online learning / partial fit.", "created": "2017-12-03 23:24:13", "language": "Python", "type": "User", "username": "idoshlomo", "stars": 27, "forks": 7, "subscribers": 0, "open_issues": 1, "topics": []}, {"id": 138970836, "repo_name": "Emotions-recognition-from-audio-signal", "full_name": "Sehaba95/Emotions-recognition-from-audio-signal", "description": "Emotions recognition from audio signal using OpenSmile, PCA and set of classifiers from Scikit-learn library", "created": "2018-06-28 05:35:00", "language": "Python", "type": "User", "username": "Sehaba95", "stars": 27, "forks": 5, "subscribers": 2, "open_issues": 1, "topics": []}, {"id": 230886181, "repo_name": "handson_ml_2nd", "full_name": "libingallin/handson_ml_2nd", "description": "Note for Aur\u00e9lien G\u00e9ron's 2019 book \"Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow, 2nd Edition\"", "created": "2019-12-30 09:22:34", "language": "Jupyter Notebook", "type": "User", "username": "libingallin", "stars": 27, "forks": 11, "subscribers": 1, "open_issues": 0, "topics": ["python3", "tensorflow2", "keras", "tensorflow-keras"]}, {"id": 151160081, "repo_name": "superml", "full_name": "saraswatmks/superml", "description": "Build machine learning models in R like using python's scikit-learn library", "created": "2018-10-01 21:09:46", "language": "R", "type": "User", "username": "saraswatmks", "stars": 27, "forks": 6, "subscribers": 1, "open_issues": 6, "topics": []}, {"id": 377605400, "repo_name": "kafkaml-anomaly-detection", "full_name": "rodrigo-arenas/kafkaml-anomaly-detection", "description": "Demo project for real-time anomaly detection using Kafka and python", "created": "2021-06-16 19:26:05", "language": "Python", "type": "User", "username": "rodrigo-arenas", "stars": 27, "forks": 11, "subscribers": 1, "open_issues": 0, "topics": ["python", "kafka", "confluent-kafka", "machine-learning", "anomaly-detection", "scikit-learn", "sklearn"]}, {"id": 254928182, "repo_name": "Research-Paper-Summarization", "full_name": "jananiarunachalam/Research-Paper-Summarization", "description": "Text Summarization for Research Papers", "created": "2020-04-11 18:17:30", "language": "Jupyter Notebook", "type": "User", "username": "jananiarunachalam", "stars": 27, "forks": 11, "subscribers": 7, "open_issues": 3, "topics": ["text-summarization", "recurrent-neural-networks", "lstm", "neural-network", "gensim", "word2vec", "doc2vec", "scikit-learn", "machine-learning", "tensorflow", "keras", "deep-learning", "nltk"]}, {"id": 197298208, "repo_name": "confounds", "full_name": "raamana/confounds", "description": "Conquering confounds and covariates in machine learning", "created": "2019-07-17 02:13:53", "language": "Python", "type": "User", "username": "raamana", "stars": 27, "forks": 12, "subscribers": 3, "open_issues": 11, "topics": ["confound", "covariates", "machine-learning", "cross-validation", "scikit-learn", "statistics", "regression", "classification", "neuroimaging", "neuroscience", "biostatistics", "confounding", "combat", "deconfounding"]}, {"id": 300134276, "repo_name": "sklearn-audio-classification", "full_name": "IliaZenkov/sklearn-audio-classification", "description": "An in-depth analysis of audio classification on the RAVDESS dataset. Feature engineering, hyperparameter optimization, model evaluation, and cross-validation with a variety of ML techniques and MLP ", "created": "2020-10-01 03:53:47", "language": "Jupyter Notebook", "type": "User", "username": "IliaZenkov", "stars": 27, "forks": 10, "subscribers": 2, "open_issues": 0, "topics": ["deep-neural-networks", "audio-data", "feature-engineering", "ravdess-dataset", "classification", "machine-learning", "audio", "emotion-recognition", "emotion-detection", "emotion", "machine-learning-tutorials", "deep-learning-tutorial", "mlp-model", "model-evaluation", "dnns", "scikit-learn", "sklearn"]}, {"id": 113189296, "repo_name": "machine-learning-for-dummies", "full_name": "mr-ubik/machine-learning-for-dummies", "description": "Series of talks/workshops aimed at guiding newcomers through Python basics, Data Analysis and Machine Learning.", "created": "2017-12-05 14:00:21", "language": "Jupyter Notebook", "type": "User", "username": "mr-ubik", "stars": 27, "forks": 6, "subscribers": 10, "open_issues": 3, "topics": ["machine-learning", "python", "talk", "slides", "jupyter", "data-science", "data-analysis", "data-visualization", "deep-learning", "google-developer-groups", "bologna", "pandas", "jupyter-notebook", "material", "keras", "scikit-learn", "tutorial", "introduction", "matplotlib", "gdg-bologna"]}, {"id": 193362517, "repo_name": "SKlearn_files", "full_name": "HeshamAsem/SKlearn_files", "description": "All Files for SciKit Learn Library", "created": "2019-06-23 15:09:30", "language": null, "type": "User", "username": "HeshamAsem", "stars": 26, "forks": 25, "subscribers": 0, "open_issues": 0, "topics": []}, {"id": 205865277, "repo_name": "SkLite-dart", "full_name": "axegon/SkLite-dart", "description": "Transpile scikit-learn models to Flutter", "created": "2019-09-02 13:39:30", "language": "Dart", "type": "User", "username": "axegon", "stars": 26, "forks": 9, "subscribers": 2, "open_issues": 0, "topics": ["dart", "flutter", "scikit-learn"]}, {"id": 219051656, "repo_name": "sklearn-json", "full_name": "mlrequest/sklearn-json", "description": "A safe, transparent way to share and deploy scikit-learn models.", "created": "2019-11-01 19:42:06", "language": "Python", "type": "User", "username": "mlrequest", "stars": 26, "forks": 14, "subscribers": 1, "open_issues": 6, "topics": []}, {"id": 164071610, "repo_name": "Pancake", "full_name": "bhimmetoglu/Pancake", "description": "Pancake is a Python package which provides a simple API to stack scikit-learn models.", "created": "2019-01-04 07:08:41", "language": "Python", "type": "User", "username": "bhimmetoglu", "stars": 26, "forks": 8, "subscribers": 2, "open_issues": 0, "topics": []}, {"id": 184484551, "repo_name": "Python-Text-Analysis-Fundamentals", "full_name": "dlab-berkeley/Python-Text-Analysis-Fundamentals", "description": "D-Lab's 9 hour introduction to text analysis with Python. Learn how to perform bag-of-words, sentiment analysis, topic modeling, word embeddings, and more, using scikit-learn, NLTK, gensim, and spaCy in Python.", "created": "2019-05-01 21:32:46", "language": "Jupyter Notebook", "type": "Organization", "username": "dlab-berkeley", "stars": 26, "forks": 30, "subscribers": 10, "open_issues": 21, "topics": ["python", "text-analysis", "bag-of-words", "word-embeddings", "topic-modeling", "sentiment-analysis", "nltk", "scikit-learn", "gensim", "spacy"]}, {"id": 144670638, "repo_name": "topsbm", "full_name": "TopSBM/topsbm", "description": "Scikit-learn compatible Topic Modelling with Hierarchical Statistical Block Models (Gerlach, Peixoto and Altmann, 2018)", "created": "2018-08-14 04:59:05", "language": "Python", "type": "Organization", "username": "TopSBM", "stars": 26, "forks": 3, "subscribers": 6, "open_issues": 15, "topics": []}, {"id": 214615544, "repo_name": "AccidentPredictor", "full_name": "meraldoantonio/AccidentPredictor", "description": "An accurate traffic accident predictor can potentially save lives. I hereby described the creation and deployment of such a model using scikit-learn, Google Maps API, Flask and PythonAnywhere.", "created": "2019-10-12 09:08:19", "language": "HTML", "type": "User", "username": "meraldoantonio", "stars": 26, "forks": 24, "subscribers": 2, "open_issues": 5, "topics": []}, {"id": 119611480, "repo_name": "mouse_connectivity_models", "full_name": "AllenInstitute/mouse_connectivity_models", "description": "Python package providing mesoscale connectivity models for mouse.", "created": "2018-01-31 00:18:37", "language": "Python", "type": "Organization", "username": "AllenInstitute", "stars": 26, "forks": 10, "subscribers": 9, "open_issues": 4, "topics": ["python", "scikit-learn", "neuroscience", "open-science"]}, {"id": 369228779, "repo_name": "rule_estimator", "full_name": "oegedijk/rule_estimator", "description": "A scikit-learn compatible estimator based on business-rules with interactive dashboard included", "created": "2021-05-20 14:04:21", "language": "Jupyter Notebook", "type": "User", "username": "oegedijk", "stars": 26, "forks": 1, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 53214770, "repo_name": "gateplugin-LearningFramework", "full_name": "GateNLP/gateplugin-LearningFramework", "description": "A plugin for the GATE language technology framework for training and using machine learning models.  Currently supports Mallet (MaxEnt, NaiveBayes, CRF and others), LibSVM, Scikit-Learn, Weka, and DNNs through Pytorch and Keras.", "created": "2016-03-05 17:50:30", "language": "Java", "type": "Organization", "username": "GateNLP", "stars": 26, "forks": 6, "subscribers": 15, "open_issues": 45, "topics": ["machine-learning", "crf", "classification", "nlp", "sequence-tagging"]}, {"id": 168557291, "repo_name": "sklearn-oblique-tree", "full_name": "AndriyMulyar/sklearn-oblique-tree", "description": "a python interface to OC1 and other oblique decision tree implementations", "created": "2019-01-31 16:29:35", "language": "C", "type": "User", "username": "AndriyMulyar", "stars": 26, "forks": 10, "subscribers": 4, "open_issues": 5, "topics": ["scikit-learn", "oblique-decision-tree", "decision-tree", "oc1", "oblique-classifier-1", "cart-linear-combinations"]}, {"id": 75554162, "repo_name": "reskit", "full_name": "neuro-ml/reskit", "description": "A library for creating and curating reproducible pipelines for scientific and industrial machine learning", "created": "2016-12-04 17:56:13", "language": "Jupyter Notebook", "type": "Organization", "username": "neuro-ml", "stars": 26, "forks": 6, "subscribers": 4, "open_issues": 13, "topics": ["python", "pipeline", "data-preparation", "grid-search", "prepare-data", "scikit-learn", "reproducible-research", "reproducible-experiments"]}, {"id": 145259265, "repo_name": "Smart-agricultural-system", "full_name": "omkarbuchade/Smart-agricultural-system", "description": "Smart agricultural system to recommend most profitable crops to farmers", "created": "2018-08-18 23:29:28", "language": "CSS", "type": "User", "username": "omkarbuchade", "stars": 26, "forks": 31, "subscribers": 2, "open_issues": 1, "topics": ["scikit-learn", "scikitlearn-machine-learning", "regression", "python", "nodejs", "web-application", "data-analytics", "smart-agricultural", "machine-learning", "prediction", "html-css-javascript"]}, {"id": 101320270, "repo_name": "text-classification-python", "full_name": "joaorafaelm/text-classification-python", "description": "An example of retails products classification using scikit and nltk -", "created": "2017-08-24 17:21:00", "language": "Python", "type": "User", "username": "joaorafaelm", "stars": 26, "forks": 13, "subscribers": 4, "open_issues": 1, "topics": ["scikit-learn", "nlp", "nltk", "machine-learning", "python", "dataset", "amazon", "scraper", "virtualenv", "retail-products-classifier", "text-classification-python"]}, {"id": 216915443, "repo_name": "books", "full_name": "oneoffcoder/books", "description": "A collection of online books for data science, computer science and coding!", "created": "2019-10-22 21:46:03", "language": "Jupyter Notebook", "type": "Organization", "username": "oneoffcoder", "stars": 26, "forks": 2, "subscribers": 3, "open_issues": 52, "topics": ["computer-science", "coder", "data-science", "sphinx", "python", "java", "scikit-learn", "spark", "r", "docker", "software", "software-engineering", "software-development", "tutorials", "books", "scratch"]}, {"id": 70149260, "repo_name": "gbdt", "full_name": "guojiasheng/gbdt", "description": "gdbt implement by scikit-learn", "created": "2016-10-06 11:52:37", "language": "Python", "type": "User", "username": "guojiasheng", "stars": 25, "forks": 16, "subscribers": 1, "open_issues": 2, "topics": []}, {"id": 99269922, "repo_name": "pipelines", "full_name": "philipmgoddard/pipelines", "description": "demo of scikit-learn pipelines", "created": "2017-08-03 19:56:37", "language": "Jupyter Notebook", "type": "User", "username": "philipmgoddard", "stars": 25, "forks": 10, "subscribers": 4, "open_issues": 2, "topics": []}, {"id": 279611799, "repo_name": "PyRCN", "full_name": "TUD-STKS/PyRCN", "description": "A Python 3 framework for Reservoir Computing with a scikit-learn-compatible API.", "created": "2020-07-14 14:42:41", "language": "Python", "type": "Organization", "username": "TUD-STKS", "stars": 25, "forks": 7, "subscribers": 5, "open_issues": 4, "topics": []}, {"id": 46352814, "repo_name": "sentiment", "full_name": "mikepqr/sentiment", "description": "Notebook demonstrating bag-of-words sentiment analysis of tweets in scikit-learn", "created": "2015-11-17 14:37:02", "language": null, "type": "User", "username": "mikepqr", "stars": 25, "forks": 7, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 157656477, "repo_name": "CreditCard_Fraud_Detection", "full_name": "zmzhouXJTU/CreditCard_Fraud_Detection", "description": "\u5229\u7528Logistic\u56de\u5f52\u5b9e\u73b0\u4fe1\u7528\u5361\u6b3a\u8bc8\u68c0\u6d4b", "created": "2018-11-15 05:23:48", "language": "Python", "type": "User", "username": "zmzhouXJTU", "stars": 25, "forks": 11, "subscribers": 2, "open_issues": 1, "topics": ["python3", "machine-learning", "scikit-learn"]}, {"id": 115483120, "repo_name": "Parkinson-s-Disease-Detection-using-Gait-Analysis", "full_name": "mittrayash/Parkinson-s-Disease-Detection-using-Gait-Analysis", "description": "A research project that aims to detect Parkinson's disease in patients using Gait Analysis data. Subsequently, the project may make use of Gait Data Analysis to make powerful inferences which would help in genralizing the most common groups affected by this disease.", "created": "2017-12-27 04:59:50", "language": "Jupyter Notebook", "type": "User", "username": "mittrayash", "stars": 25, "forks": 20, "subscribers": 2, "open_issues": 0, "topics": ["python", "scikit-learn", "machine-learning", "parkinsons-disease", "gait-analysis"]}, {"id": 54602007, "repo_name": "Flu-Prediction", "full_name": "RK900/Flu-Prediction", "description": "Predicting Future Influenza Virus Sequences with Machine Learning ", "created": "2016-03-24 00:18:50", "language": "Python", "type": "User", "username": "RK900", "stars": 25, "forks": 11, "subscribers": 6, "open_issues": 0, "topics": ["machine-learning", "flu-prediction", "python", "dna", "biopython", "scikit-learn", "flu"]}, {"id": 33761131, "repo_name": "intro-to-machine-learning", "full_name": "zkan/intro-to-machine-learning", "description": "Introduction to Machine Learning", "created": "2015-04-11 03:30:26", "language": "Jupyter Notebook", "type": "User", "username": "zkan", "stars": 25, "forks": 11, "subscribers": 3, "open_issues": 1, "topics": ["scikit-learn", "machine-learning", "python", "pandas", "seaborn", "hacktoberfest"]}, {"id": 56663322, "repo_name": "common-ml", "full_name": "bizreach/common-ml", "description": "Common Machine Learning Library for Python", "created": "2016-04-20 06:57:29", "language": "Jupyter Notebook", "type": "Organization", "username": "bizreach", "stars": 25, "forks": 6, "subscribers": 27, "open_issues": 0, "topics": ["python", "ml", "machine-learning", "elasticsearch", "chainer", "scikit-learn"]}, {"id": 75572768, "repo_name": "textlytics", "full_name": "laugustyniak/textlytics", "description": "Text processing library for sentiment analysis and related tasks ", "created": "2016-12-04 23:58:57", "language": "Python", "type": "User", "username": "laugustyniak", "stars": 25, "forks": 12, "subscribers": 7, "open_issues": 3, "topics": ["natural-language-processing", "nlp", "sentiment-analysis", "opinion-mining", "classification", "supervised-learning", "scikit-learn", "word-embeddings"]}, {"id": 29983000, "repo_name": "sentdex_scikit_machine_learning_tutorial_for_investing", "full_name": "cleesmith/sentdex_scikit_machine_learning_tutorial_for_investing", "description": "sentdex's scikit machine learning tutorial for investing", "created": "2015-01-28 19:00:16", "language": "Python", "type": "User", "username": "cleesmith", "stars": 24, "forks": 20, "subscribers": 7, "open_issues": 0, "topics": []}, {"id": 62483275, "repo_name": "sklearn-matlab", "full_name": "steven2358/sklearn-matlab", "description": "Machine learning in Matlab using scikit-learn syntax", "created": "2016-07-03 05:47:08", "language": "MATLAB", "type": "User", "username": "steven2358", "stars": 24, "forks": 12, "subscribers": 6, "open_issues": 2, "topics": ["machine-learning", "matlab", "scikit-learn"]}, {"id": 11769056, "repo_name": "oglearn", "full_name": "ogrisel/oglearn", "description": "ogrisel's utility extensions for scikit-learn", "created": "2013-07-30 15:57:14", "language": "Python", "type": "User", "username": "ogrisel", "stars": 24, "forks": 4, "subscribers": 5, "open_issues": 0, "topics": []}, {"id": 206597138, "repo_name": "Hands_on_ML_w_Scikit_Karas_and_TensorFlow", "full_name": "soo-pecialist/Hands_on_ML_w_Scikit_Karas_and_TensorFlow", "description": "Hands-on Machine Learning with Scikit-Learn, Keras and TensorFlow 2nd Edition by Aur\u00e9lien G\u00e9ron", "created": "2019-09-05 15:29:00", "language": "Jupyter Notebook", "type": "User", "username": "soo-pecialist", "stars": 24, "forks": 12, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 256018605, "repo_name": "ocaml-sklearn", "full_name": "lehy/ocaml-sklearn", "description": "scikit-learn for OCaml", "created": "2020-04-15 19:37:39", "language": "Python", "type": "User", "username": "lehy", "stars": 24, "forks": 1, "subscribers": 4, "open_issues": 1, "topics": []}, {"id": 113704127, "repo_name": "object_detector", "full_name": "VladKha/object_detector", "description": "Object detector from HOG + Linear SVM framework", "created": "2017-12-09 21:57:48", "language": "Python", "type": "User", "username": "VladKha", "stars": 24, "forks": 19, "subscribers": 3, "open_issues": 0, "topics": ["object-detection", "object-detection-pipelines", "face-detection", "scikit-learn", "scikit-image", "python3", "opencv-python"]}, {"id": 142669717, "repo_name": "mlserve", "full_name": "ml-libs/mlserve", "description": "mlserve turns your python models into RESTful API, serves web page with form generated to match your input data.", "created": "2018-07-28 10:48:59", "language": "Python", "type": "Organization", "username": "ml-libs", "stars": 24, "forks": 1, "subscribers": 3, "open_issues": 20, "topics": ["mlserve", "scikit-learn", "model-deployment", "machine-learning", "model-serving"]}, {"id": 350662672, "repo_name": "recurrent-neural-network-pricing-model", "full_name": "TatevKaren/recurrent-neural-network-pricing-model", "description": "Price Prediction Case Study predicting the Bitcoin price and the Google stock price using Deep Learning, RNN with LSTM layers with TensorFlow and Keras in Python. (Includes: Data, Case Study Paper, Code)", "created": "2021-03-23 10:03:32", "language": "Python", "type": "User", "username": "TatevKaren", "stars": 24, "forks": 20, "subscribers": 2, "open_issues": 1, "topics": ["deep-learning", "recurrent-neural-networks", "lstm", "tensorflow", "keras", "stock-price-prediction", "scikit-learn", "pandas", "machine-learning", "google", "bitcoin", "bitcoin-price", "google-stock-prices", "stock-prices", "price-prediction", "case-study-paper", "rnn-model"]}, {"id": 159564433, "repo_name": "real_estate_machine_learning", "full_name": "tszereny/real_estate_machine_learning", "description": "Modelling real estate market in Budapest using machine learning", "created": "2018-11-28 21:02:08", "language": "Jupyter Notebook", "type": "User", "username": "tszereny", "stars": 24, "forks": 5, "subscribers": 7, "open_issues": 0, "topics": ["machine-learning", "budapest", "realestate", "predictive-modeling", "algorithms", "data-science", "data-mining", "data-analysis", "data-visualization", "visualization", "python", "hungary", "scikit-learn", "matplotlib"]}, {"id": 156565134, "repo_name": "ML-Live-Intermediate", "full_name": "DavidMertz/ML-Live-Intermediate", "description": "Machine Learning with scikit-learn for Safari Books Online, intermediate", "created": "2018-11-07 15:13:53", "language": "Jupyter Notebook", "type": "User", "username": "DavidMertz", "stars": 23, "forks": 34, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 285422917, "repo_name": "watson-sklearn-transforms", "full_name": "vnderlev/watson-sklearn-transforms", "description": "A template Python Package created with setuptools for seamless integration of custom scikit-learn transformations and Watson Machine Learning on IBM Cloud", "created": "2020-08-05 23:04:58", "language": "Python", "type": "User", "username": "vnderlev", "stars": 23, "forks": 625, "subscribers": 4, "open_issues": 5, "topics": []}, {"id": 78966092, "repo_name": "sklearn-gbmi", "full_name": "ralphhaygood/sklearn-gbmi", "description": "scikit-learn gradient-boosting-model interactions", "created": "2017-01-14 20:54:46", "language": "Jupyter Notebook", "type": "User", "username": "ralphhaygood", "stars": 23, "forks": 6, "subscribers": 2, "open_issues": 1, "topics": []}, {"id": 115294565, "repo_name": "keras-malicious-url-detector", "full_name": "chen0040/keras-malicious-url-detector", "description": "Malicious URL detector using keras recurrent networks and scikit-learn classifiers", "created": "2017-12-25 00:47:13", "language": "Python", "type": "User", "username": "chen0040", "stars": 23, "forks": 20, "subscribers": 1, "open_issues": 0, "topics": ["url-detector", "malicious-url", "binary-classification", "recurrent-neural-networks", "lstm", "convolutional-neural-networks"]}, {"id": 4244665, "repo_name": "SuPyLearner", "full_name": "lendle/SuPyLearner", "description": "An implementation of the SuperLearner algorithm in Python based on scikit-learn.", "created": "2012-05-06 22:49:41", "language": "Python", "type": "User", "username": "lendle", "stars": 23, "forks": 12, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 108539388, "repo_name": "Handon-ml", "full_name": "gaufung/Handon-ml", "description": "A learning note of  Hand-On Machine Learning with Scikit-Learn and TensorFlow", "created": "2017-10-27 11:45:02", "language": "Jupyter Notebook", "type": "User", "username": "gaufung", "stars": 23, "forks": 9, "subscribers": 2, "open_issues": 0, "topics": []}, {"id": 133763704, "repo_name": "Flight_delay_prediction_web_app", "full_name": "bennwei/Flight_delay_prediction_web_app", "description": "A big data web application to predict USA airline traffic delay with Python, Flask, Apache Spark, Kafka, MongoDB, ElasticSearch, d3.js, scikit-learn, MLlib and Apache Airflow.", "created": "2018-05-17 05:36:40", "language": "Jupyter Notebook", "type": "User", "username": "bennwei", "stars": 23, "forks": 10, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 153864600, "repo_name": "domextract", "full_name": "sugiyamath/domextract", "description": "Web content extractor for articles", "created": "2018-10-20 03:06:15", "language": "Python", "type": "User", "username": "sugiyamath", "stars": 23, "forks": 1, "subscribers": 1, "open_issues": 0, "topics": ["information-extraction", "web-extraction", "scikit-learn", "natural-language-processing"]}, {"id": 103075456, "repo_name": "spot_price_machine_learning", "full_name": "noahgift/spot_price_machine_learning", "description": "Machine Learning for Spot Prices", "created": "2017-09-11 01:25:03", "language": "Jupyter Notebook", "type": "User", "username": "noahgift", "stars": 23, "forks": 19, "subscribers": 5, "open_issues": 2, "topics": ["aws", "spot", "machine-learning", "python", "knn", "scikit-learn", "pandas", "click", "spot-price", "spot-instances", "price", "ecu", "jupyter-notebook"]}, {"id": 83032727, "repo_name": "crime-analysis", "full_name": "chrisPiemonte/crime-analysis", "description": "Association Rule Mining from Spatial Data for Crime Analysis", "created": "2017-02-24 11:00:38", "language": "Jupyter Notebook", "type": "User", "username": "chrisPiemonte", "stars": 23, "forks": 11, "subscribers": 5, "open_issues": 0, "topics": ["data-science", "spatial-analysis", "crime-data", "association-rules", "sentence-clustering", "crime-analysis", "spatial-data", "kdd", "python", "crime", "jupyter", "anaconda", "pandas", "matplotlib", "scikit-learn", "sequence-mining", "doc2vec", "gensim", "shapefile"]}, {"id": 436402751, "repo_name": "upgini", "full_name": "upgini/upgini", "description": "Features search library for supervised machine learning \u2192 searches through thousands of ready-to-use features from public, community and commercial data sources", "created": "2021-12-08 21:53:58", "language": "Python", "type": "Organization", "username": "upgini", "stars": 23, "forks": 3, "subscribers": 1, "open_issues": 0, "topics": ["data-science", "machine-learning", "scikit-learn", "python-library", "kaggle", "open-data", "public-data", "data-scraping", "automl", "feature-engineering", "feature-extraction", "feature-selection", "features"]}, {"id": 189511106, "repo_name": "foxcross", "full_name": "laactechnology/foxcross", "description": "AsyncIO serving for data science models", "created": "2019-05-31 02:08:19", "language": "Python", "type": "Organization", "username": "laactechnology", "stars": 23, "forks": 0, "subscribers": 2, "open_issues": 0, "topics": ["data-science", "machine-learning", "serving", "pytorch", "async", "http", "rest-api", "scikit-learn", "python", "pandas", "dataframe"]}, {"id": 140816845, "repo_name": "Machine-Learning-with-scikit-learn-Quick-Start-Guide", "full_name": "PacktPublishing/Machine-Learning-with-scikit-learn-Quick-Start-Guide", "description": "Published by Packt", "created": "2018-07-13 08:03:44", "language": "Jupyter Notebook", "type": "Organization", "username": "PacktPublishing", "stars": 22, "forks": 20, "subscribers": 8, "open_issues": 0, "topics": []}, {"id": 47846565, "repo_name": "skedm", "full_name": "nickc1/skedm", "description": "Empirical dynamic modeling in scikit-learn's style", "created": "2015-12-11 19:25:29", "language": "Jupyter Notebook", "type": "User", "username": "nickc1", "stars": 22, "forks": 11, "subscribers": 5, "open_issues": 0, "topics": []}, {"id": 141490921, "repo_name": "dash-regression", "full_name": "plotly/dash-regression", "description": "Interactive Linear Regression Explorer, using Dash + scikit-learn", "created": "2018-07-18 21:13:53", "language": "Python", "type": "Organization", "username": "plotly", "stars": 22, "forks": 9, "subscribers": 20, "open_issues": 2, "topics": []}, {"id": 36810964, "repo_name": "simple_esn", "full_name": "sylvchev/simple_esn", "description": "simple Echo State Networks integrated with scikit-learn", "created": "2015-06-03 15:00:13", "language": "Python", "type": "User", "username": "sylvchev", "stars": 22, "forks": 9, "subscribers": 4, "open_issues": 0, "topics": ["scikit-learn", "esn", "reservoir"]}, {"id": 194108250, "repo_name": "machine-learning-novice-sklearn", "full_name": "carpentries-incubator/machine-learning-novice-sklearn", "description": "A Carpentry style lesson on machine learning with Python and scikit-learn.", "created": "2019-06-27 14:15:12", "language": "Python", "type": "Organization", "username": "carpentries-incubator", "stars": 22, "forks": 15, "subscribers": 12, "open_issues": 11, "topics": ["lesson", "machine-learning", "python", "sklearn", "english", "carpentries-incubator", "alpha"]}, {"id": 93446489, "repo_name": "coreml-scikit-example", "full_name": "mfpierre/coreml-scikit-example", "description": "Apple CoreML example with scikit-learn", "created": "2017-06-05 20:58:59", "language": "Python", "type": "User", "username": "mfpierre", "stars": 22, "forks": 3, "subscribers": 0, "open_issues": 0, "topics": ["scikit-learn", "coreml", "apple-coreml"]}, {"id": 38892530, "repo_name": "scikit-chainer", "full_name": "lucidfrontier45/scikit-chainer", "description": "scikit-learn like interface to chainer", "created": "2015-07-10 17:13:44", "language": "Python", "type": "User", "username": "lucidfrontier45", "stars": 22, "forks": 0, "subscribers": 5, "open_issues": 0, "topics": []}, {"id": 230395874, "repo_name": "cointanalysis", "full_name": "simaki/cointanalysis", "description": "Python library for cointegration analysis. It carries out cointegration test and evaluates spread between cointegrated time-series based on scikit-learn API.", "created": "2019-12-27 07:33:41", "language": "Python", "type": "User", "username": "simaki", "stars": 22, "forks": 8, "subscribers": 2, "open_issues": 2, "topics": ["python", "time-series", "cointegration"]}, {"id": 93021376, "repo_name": "ANT", "full_name": "MahmoudAbdelRahman/ANT", "description": "Machine Learning plugin for Rhino\\grasshopper based on Python\\scikit-learn module.", "created": "2017-06-01 05:52:52", "language": "C#", "type": "User", "username": "MahmoudAbdelRahman", "stars": 22, "forks": 2, "subscribers": 10, "open_issues": 2, "topics": []}, {"id": 159526587, "repo_name": "starboost", "full_name": "MaxHalford/starboost", "description": ":star::rocket: Gradient boosting on steroids", "created": "2018-11-28 15:50:20", "language": "Python", "type": "User", "username": "MaxHalford", "stars": 22, "forks": 7, "subscribers": 3, "open_issues": 1, "topics": ["gradient-boosting", "machine-learning", "python", "scikit-learn"]}, {"id": 134976265, "repo_name": "Loan-prediction-using-Machine-Learning-and-Python", "full_name": "Architectshwet/Loan-prediction-using-Machine-Learning-and-Python", "description": "To design a predictive model using xgboost and voting ensembling techniques and extract insights from the data using pandas, seaborn and matplotlib", "created": "2018-05-26 16:11:26", "language": "Jupyter Notebook", "type": "User", "username": "Architectshwet", "stars": 22, "forks": 44, "subscribers": 2, "open_issues": 2, "topics": ["xgboost", "grid-search", "machine-learning", "scikit-learn", "pandas", "seaborn", "matplotlib", "voting-classifier"]}, {"id": 276656303, "repo_name": "skrobot", "full_name": "medoidai/skrobot", "description": "skrobot is a Python module for designing, running and tracking Machine Learning experiments / tasks. It is built on top of scikit-learn framework.", "created": "2020-07-02 13:39:57", "language": "Python", "type": "Organization", "username": "medoidai", "stars": 22, "forks": 2, "subscribers": 4, "open_issues": 0, "topics": ["python", "machine-learning", "scikit-learn", "data-science", "hyperparameter-tuning", "feature-selection", "model-evaluation", "model-selection", "artificial-intelligence", "model-training", "model-tuning", "modelling", "predictive-modelling", "feature-engineering"]}, {"id": 143405740, "repo_name": "TransFBP", "full_name": "lucasxlu/TransFBP", "description": "Official Code for Paper <Transferring Rich Deep Features for Facial Beauty Prediction> (arXiv1803.07253)", "created": "2018-08-03 09:10:47", "language": "Python", "type": "User", "username": "lucasxlu", "stars": 22, "forks": 5, "subscribers": 3, "open_issues": 0, "topics": ["tensorflow", "scikit-learn", "machine-learning", "deep-learning", "facial-beauty-prediction", "face-analysis"]}, {"id": 119312788, "repo_name": "projection-pursuit", "full_name": "pavelkomarov/projection-pursuit", "description": "An implementation of multivariate projection pursuit regression and univariate classification", "created": "2018-01-29 00:50:25", "language": "Python", "type": "User", "username": "pavelkomarov", "stars": 22, "forks": 10, "subscribers": 3, "open_issues": 0, "topics": ["projection-pursuit", "regression", "machine-learning", "classification", "friedman", "scikit-learn", "travis-ci", "sphinx", "coveralls"]}, {"id": 129282169, "repo_name": "face_gender", "full_name": "cftang0827/face_gender", "description": "A simple demo of gender classifier by using dlib face recognition model as a feature extractor", "created": "2018-04-12 16:40:37", "language": "Jupyter Notebook", "type": "User", "username": "cftang0827", "stars": 22, "forks": 4, "subscribers": 4, "open_issues": 2, "topics": ["gender-classifier", "face-recognition", "transfer-learning", "dlib", "scikit-learn", "python", "feature-extractor", "svm"]}, {"id": 102018273, "repo_name": "python-sklearn-classifier-cookiecutter", "full_name": "microsoft/python-sklearn-classifier-cookiecutter", "description": "Cookiecutter template for testing Python scikit-learn classifiers.", "created": "2017-08-31 15:52:04", "language": "Python", "type": "Organization", "username": "microsoft", "stars": 21, "forks": 32, "subscribers": 12, "open_issues": 0, "topics": ["python", "cookiecutter", "scikit-learn", "template", "machine-learning"]}, {"id": 233080804, "repo_name": "hands-on-scikit-learn-for-mach-learning-apps", "full_name": "Apress/hands-on-scikit-learn-for-mach-learning-apps", "description": "Source code for 'Hands-on Scikit-Learn for Machine Learning Applications' by David Paper", "created": "2020-01-10 15:55:56", "language": "Jupyter Notebook", "type": "Organization", "username": "Apress", "stars": 21, "forks": 19, "subscribers": 3, "open_issues": 1, "topics": []}, {"id": 21574434, "repo_name": "activelearning", "full_name": "afshinrahimi/activelearning", "description": "Active Learning for text classification using scikit-learn", "created": "2014-07-07 14:52:30", "language": "Python", "type": "User", "username": "afshinrahimi", "stars": 21, "forks": 11, "subscribers": 2, "open_issues": 0, "topics": []}, {"id": 94186801, "repo_name": "PipeGraph", "full_name": "mcasl/PipeGraph", "description": "Home of the PipeGraph extension to Scikit-Learn", "created": "2017-06-13 08:01:50", "language": "Python", "type": "User", "username": "mcasl", "stars": 21, "forks": 6, "subscribers": 3, "open_issues": 2, "topics": []}, {"id": 106249717, "repo_name": "Identifying-Clothing-Attributes", "full_name": "nmeripo/Identifying-Clothing-Attributes", "description": "Pretrained VGG-16 network as feature extractor for Object Recognition (Python, Keras, Scikit-Learn)", "created": "2017-10-09 07:21:48", "language": "Python", "type": "User", "username": "nmeripo", "stars": 21, "forks": 8, "subscribers": 3, "open_issues": 2, "topics": ["keras", "image", "recognition", "vgg16", "fine-tuning", "fine-tuning-cnns"]}, {"id": 216261269, "repo_name": "scikit-nni", "full_name": "ksachdeva/scikit-nni", "description": "AutoML - Hyper parameters search for scikit-learn pipelines using Microsoft NNI", "created": "2019-10-19 19:43:21", "language": "Python", "type": "User", "username": "ksachdeva", "stars": 21, "forks": 2, "subscribers": 1, "open_issues": 8, "topics": ["automl", "nni", "neural-network-intelligence", "sklearn", "sklearn-library", "scikit-learn", "scikit-learn-api", "tool", "hyperparameter-search", "hyperparameters"]}, {"id": 175915165, "repo_name": "machine_learning", "full_name": "chalmerlowe/machine_learning", "description": "A gentle introduction to machine learning: data handling, linear regression, naive bayes, clustering", "created": "2019-03-16 02:09:56", "language": "Jupyter Notebook", "type": "User", "username": "chalmerlowe", "stars": 21, "forks": 23, "subscribers": 5, "open_issues": 0, "topics": ["machine-learning", "data", "data-science", "python", "scikit-learn", "linear-regression", "nearest-neighbors"]}, {"id": 170202257, "repo_name": "introduction-to-neural-networks", "full_name": "electricsquare/introduction-to-neural-networks", "description": null, "created": "2019-02-11 21:05:50", "language": "JavaScript", "type": "Organization", "username": "electricsquare", "stars": 21, "forks": 6, "subscribers": 6, "open_issues": 1, "topics": ["workshop", "machine-learning", "neural-network", "mnist-database", "scikit-learn"]}, {"id": 89725024, "repo_name": "audio_noise_clustering", "full_name": "dodiku/audio_noise_clustering", "description": "https://dodiku.github.io/audio_noise_clustering/results/ ==> An experiment with a variety of clustering (and clustering-like) techniques to reduce noise on an audio speech recording.", "created": "2017-04-28 16:35:26", "language": "Python", "type": "User", "username": "dodiku", "stars": 21, "forks": 11, "subscribers": 3, "open_issues": 0, "topics": ["python", "machine-learning", "scikit-learn", "clustering", "noise-reduction", "data-reduction", "speech", "audio-processing", "audio-analysis", "dsp"]}, {"id": 94798546, "repo_name": "cshl-singlecell-2017", "full_name": "olgabot/cshl-singlecell-2017", "description": "Single Cell Analysis course at Cold Spring Harbor Laboratory 2017", "created": "2017-06-19 16:38:06", "language": "Jupyter Notebook", "type": "User", "username": "olgabot", "stars": 21, "forks": 17, "subscribers": 5, "open_issues": 0, "topics": ["singlecell", "single-cell", "bioinformatics", "machinelearning", "pca", "tsne", "scikit-learn", "matplotlib", "seaborn", "python", "jupyter-notebook"]}, {"id": 125528775, "repo_name": "ML_for_kirigami_design", "full_name": "phanakata/ML_for_kirigami_design", "description": "Python package to model and to perform topology optimization for graphene kirigami using deep learning ", "created": "2018-03-16 14:40:05", "language": "Jupyter Notebook", "type": "User", "username": "phanakata", "stars": 21, "forks": 4, "subscribers": 2, "open_issues": 0, "topics": ["convolutional-neural-networks", "graphene", "material-design", "tensorflow", "topology-optimization", "deep-learning", "lammps", "scikit-learn", "tensorflow-models"]}, {"id": 196056491, "repo_name": "ML-Track", "full_name": "kabirnagpal/ML-Track", "description": "This repository is a recommended track, designed to get started with Machine Learning.", "created": "2019-07-09 17:47:58", "language": "Jupyter Notebook", "type": "User", "username": "kabirnagpal", "stars": 21, "forks": 14, "subscribers": 1, "open_issues": 1, "topics": ["numpy", "pandas", "classification", "machine-learning", "python", "regression", "visualization", "scikit-learn", "clustering", "dimesion-reduction", "bias-variance"]}, {"id": 337365980, "repo_name": "go-ml-benchmarks", "full_name": "nikolaydubina/go-ml-benchmarks", "description": "\u23f1 Benchmarks of machine learning inference for Go", "created": "2021-02-09 10:20:46", "language": "Go", "type": "User", "username": "nikolaydubina", "stars": 21, "forks": 1, "subscribers": 1, "open_issues": 1, "topics": ["machine-learning", "benchmarks", "xgboost", "scikit-learn", "inference", "grpc", "go", "python", "cpp"]}, {"id": 306782219, "repo_name": "DSGO_IntroductionScikitLearn", "full_name": "mGalarnyk/DSGO_IntroductionScikitLearn", "description": null, "created": "2020-10-24 01:29:45", "language": "Jupyter Notebook", "type": "User", "username": "mGalarnyk", "stars": 20, "forks": 11, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 104566169, "repo_name": "Keras_Sklearn", "full_name": "shibuiwilliam/Keras_Sklearn", "description": "Combination of Keras CNN with Scikit-learn classifiers.", "created": "2017-09-23 12:32:48", "language": "HTML", "type": "User", "username": "shibuiwilliam", "stars": 20, "forks": 17, "subscribers": 0, "open_issues": 0, "topics": []}, {"id": 80803433, "repo_name": "kmeans-dbscan-tutorial", "full_name": "howardyclo/kmeans-dbscan-tutorial", "description": "A clustering tutorial with scikit-learn for beginners.", "created": "2017-02-03 06:28:58", "language": "HTML", "type": "User", "username": "howardyclo", "stars": 20, "forks": 13, "subscribers": 3, "open_issues": 0, "topics": ["clustering-algorithm", "kmeans", "dbscan", "tutorial", "scikit-learn", "ipython-notebook"]}, {"id": 88802723, "repo_name": "SentimentClassifier", "full_name": "karthikmswamy/SentimentClassifier", "description": "Code for building a sentiment classifier using classic Scikit-learn and a modern TensorFlow classifier.", "created": "2017-04-20 00:19:53", "language": "Jupyter Notebook", "type": "User", "username": "karthikmswamy", "stars": 20, "forks": 13, "subscribers": 4, "open_issues": 1, "topics": []}, {"id": 10560569, "repo_name": "glm-sklearn", "full_name": "modusdatascience/glm-sklearn", "description": "Some scikit-learn-esque wrappers for statsmodels GLM", "created": "2013-06-07 23:20:39", "language": "Python", "type": "Organization", "username": "modusdatascience", "stars": 20, "forks": 5, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 117444085, "repo_name": "sequence-classification", "full_name": "aajanki/sequence-classification", "description": "Scikit-learn compatible sequence classifier", "created": "2018-01-14 15:53:16", "language": "Python", "type": "User", "username": "aajanki", "stars": 20, "forks": 2, "subscribers": 2, "open_issues": 0, "topics": ["machine-learning", "scikit-learn", "sequence-classification"]}, {"id": 179806734, "repo_name": "tiny-sklearn", "full_name": "qinhanmin2014/tiny-sklearn", "description": "Tiny implementation of important algorithms in scikit-learn. Useful when understanding ML algorithms and scikit-learn.", "created": "2019-04-06 08:18:31", "language": "Jupyter Notebook", "type": "User", "username": "qinhanmin2014", "stars": 20, "forks": 2, "subscribers": 2, "open_issues": 1, "topics": ["machine-learning", "machine-learning-algorithms", "scikit-learn"]}, {"id": 307429599, "repo_name": "mealy", "full_name": "dataiku-research/mealy", "description": "Model Error Analysis for scikit-learn models. ", "created": "2020-10-26 16:07:12", "language": "Python", "type": "Organization", "username": "dataiku-research", "stars": 20, "forks": 0, "subscribers": 7, "open_issues": 4, "topics": ["python", "machine-learning"]}, {"id": 410522697, "repo_name": "latent-semantic-analysis", "full_name": "dayyass/latent-semantic-analysis", "description": "Pipeline for training LSA models using Scikit-Learn.", "created": "2021-09-26 10:40:10", "language": "Python", "type": "User", "username": "dayyass", "stars": 20, "forks": 0, "subscribers": 1, "open_issues": 3, "topics": ["python", "data-science", "machine-learning", "natural-language-processing", "nlp", "topic-modeling", "latent-semantic-analysis", "lsa", "pipeline", "hacktoberfest"]}, {"id": 190616713, "repo_name": "AD-ML", "full_name": "aramis-lab/AD-ML", "description": "Framework for the reproducible classification of Alzheimer's disease using machine learning", "created": "2019-06-06 16:45:50", "language": "Python", "type": "Organization", "username": "aramis-lab", "stars": 20, "forks": 11, "subscribers": 5, "open_issues": 1, "topics": ["python", "alzheimer-disease", "machine-learning", "scikit-learn", "neuroimaging"]}, {"id": 285809012, "repo_name": "LSSVMlib", "full_name": "DannyVanpoucke/LSSVMlib", "description": "This repository provides a Python3 Library with implementations of the Least-Squares Support Vector Machine (LS-SVM)  machine learning model. The Classes are designed to integrate smoothly with the scikit-learn library. ", "created": "2020-08-07 11:05:59", "language": "Jupyter Notebook", "type": "User", "username": "DannyVanpoucke", "stars": 20, "forks": 9, "subscribers": 3, "open_issues": 2, "topics": ["machine-learning", "machine-learning-algorithms", "regression-models", "lssvm", "python3", "artificial-intelligence", "regression-algorithms"]}, {"id": 124155701, "repo_name": "Handwritten-Math-Expression-Recognition", "full_name": "SanjayKhatwani/Handwritten-Math-Expression-Recognition", "description": "Segmentation, classification and parsing of handwritten math expressions. Works with inkml format.", "created": "2018-03-07 00:25:47", "language": "Python", "type": "User", "username": "SanjayKhatwani", "stars": 20, "forks": 3, "subscribers": 1, "open_issues": 2, "topics": ["pattern-recognition", "scikit-learn", "machinelearning"]}, {"id": 78084425, "repo_name": "hybrid-vocal-classifier", "full_name": "NickleDave/hybrid-vocal-classifier", "description": "a Python machine learning library for animal vocalizations and bioacoustics", "created": "2017-01-05 06:03:07", "language": "Python", "type": "User", "username": "NickleDave", "stars": 20, "forks": 9, "subscribers": 5, "open_issues": 43, "topics": ["birdsong", "python", "machine-learning", "scikit-learn", "keras", "tensorflow"]}, {"id": 225658233, "repo_name": "palette", "full_name": "angristan/palette", "description": "Extract color palette from an image with k-means and k-NN // Project for the AI/ML class at Hanyang University", "created": "2019-12-03 15:50:19", "language": "Python", "type": "User", "username": "angristan", "stars": 20, "forks": 7, "subscribers": 3, "open_issues": 1, "topics": ["python", "kmeans", "knn", "color-palette", "flask", "pandas", "scikit-learn", "opencv"]}, {"id": 199944736, "repo_name": "mlr", "full_name": "tirthajyoti/mlr", "description": "Multiple linear regression with statistical inference, residual analysis, direct CSV loading, and other features", "created": "2019-07-31 23:55:41", "language": "Python", "type": "User", "username": "tirthajyoti", "stars": 20, "forks": 7, "subscribers": 1, "open_issues": 0, "topics": ["linear-regression", "machine-learning", "data-science", "analytics", "data-analytics", "statistics", "statiscal-learning", "modeling", "statistical-analysis", "regression", "scikit-learn", "python", "predictive-modeling"]}, {"id": 146961274, "repo_name": "disentangled-attribution-curves", "full_name": "csinva/disentangled-attribution-curves", "description": "Using / reproducing DAC from the paper \"Disentangled Attribution Curves for Interpreting Random Forests and  Boosted Trees\"", "created": "2018-09-01 02:41:23", "language": "Python", "type": "User", "username": "csinva", "stars": 20, "forks": 1, "subscribers": 7, "open_issues": 1, "topics": ["interpretability", "random-forests", "machine-learning", "scikit-learn", "python", "statistics", "explainable-ai", "boosting", "ml", "ai", "stats", "random-forest", "ensemble-model", "feature-importance", "feature-engineering", "artificial-intelligence"]}, {"id": 233033261, "repo_name": "The-Machine-Learning-Workshop", "full_name": "PacktWorkshops/The-Machine-Learning-Workshop", "description": "An interactive approach to understanding Machine Learning using scikit-learn", "created": "2020-01-10 11:29:25", "language": "Jupyter Notebook", "type": "Organization", "username": "PacktWorkshops", "stars": 19, "forks": 37, "subscribers": 5, "open_issues": 0, "topics": ["mean-shift", "dbscan-clustering", "k-means-clustering", "silhouette-score", "calinski-harabaz-score", "naive-bayes-algorithm", "support-vector-machine", "artificial-neural-networks"]}, {"id": 295431444, "repo_name": "django-scikit-learn-tutorial", "full_name": "katiehouse/django-scikit-learn-tutorial", "description": "A simple Django web app with a Scikit-Learn model", "created": "2020-09-14 13:52:53", "language": "Python", "type": "User", "username": "katiehouse", "stars": 19, "forks": 9, "subscribers": 1, "open_issues": 0, "topics": ["django", "django-application", "scikit-learn", "web", "develop", "webapp", "software-engineering"]}, {"id": 331037685, "repo_name": "belajar_scikit_learn", "full_name": "boedybios/belajar_scikit_learn", "description": null, "created": "2021-01-19 16:14:54", "language": "Jupyter Notebook", "type": "User", "username": "boedybios", "stars": 19, "forks": 8, "subscribers": 3, "open_issues": 1, "topics": []}, {"id": 55084578, "repo_name": "scikit-learn", "full_name": "kjung/scikit-learn", "description": "A version of scikit-learn that includes implementations of Wager & Athey and Scott Powers causal forests.  ", "created": "2016-03-30 17:51:05", "language": "Python", "type": "User", "username": "kjung", "stars": 19, "forks": 5, "subscribers": 2, "open_issues": 3, "topics": []}, {"id": 63051307, "repo_name": "Deep-Belief-Network-for-Regression", "full_name": "matrachma/Deep-Belief-Network-for-Regression", "description": "DBN for Regression Problem using Theano, NumPy, and Scikit-learn", "created": "2016-07-11 08:39:56", "language": "Python", "type": "User", "username": "matrachma", "stars": 19, "forks": 9, "subscribers": 1, "open_issues": 1, "topics": []}, {"id": 141271345, "repo_name": "nlptextclassification", "full_name": "eduonix/nlptextclassification", "description": "This is the source code for the 'Natural Language Processing for Text Classification with NLTK & Scikit-learn' video ", "created": "2018-07-17 10:08:25", "language": "HTML", "type": "User", "username": "eduonix", "stars": 19, "forks": 49, "subscribers": 4, "open_issues": 2, "topics": []}, {"id": 3118566, "repo_name": "pyDistances", "full_name": "jakevdp/pyDistances", "description": "Work in progress for eventual contribution to scikit-learn", "created": "2012-01-06 14:51:43", "language": "Python", "type": "User", "username": "jakevdp", "stars": 19, "forks": 7, "subscribers": 4, "open_issues": 1, "topics": []}, {"id": 46414575, "repo_name": "trolling_detection", "full_name": "rafaharo/trolling_detection", "description": "Trolling Detection PoC with NLTK and scikit-learn", "created": "2015-11-18 11:32:00", "language": "Jupyter Notebook", "type": "User", "username": "rafaharo", "stars": 19, "forks": 7, "subscribers": 2, "open_issues": 11, "topics": []}, {"id": 43986342, "repo_name": "sklearn-extensions", "full_name": "wdm0006/sklearn-extensions", "description": "A consolidated package of small extensions to scikit-learn", "created": "2015-10-10 00:33:33", "language": "Python", "type": "User", "username": "wdm0006", "stars": 19, "forks": 6, "subscribers": 5, "open_issues": 6, "topics": []}, {"id": 379348215, "repo_name": "13_Python_scikit-learn_Module", "full_name": "milaan9/13_Python_scikit-learn_Module", "description": null, "created": "2021-06-22 17:20:51", "language": null, "type": "User", "username": "milaan9", "stars": 19, "forks": 4, "subscribers": 2, "open_issues": 0, "topics": []}, {"id": 116743976, "repo_name": "wine-ml-on-aws-lambda", "full_name": "pierreant/wine-ml-on-aws-lambda", "description": "Training and running a Machine Learning Regression Model on AWS Lambda with Scikit Learn", "created": "2018-01-09 00:20:58", "language": "Python", "type": "User", "username": "pierreant", "stars": 19, "forks": 5, "subscribers": 0, "open_issues": 0, "topics": []}, {"id": 136948292, "repo_name": "destructive-deep-learning", "full_name": "davidinouye/destructive-deep-learning", "description": "Destructive deep learning estimators and functions that are compatible with scikit-learn.", "created": "2018-06-11 15:51:16", "language": "Python", "type": "User", "username": "davidinouye", "stars": 19, "forks": 3, "subscribers": 3, "open_issues": 16, "topics": []}, {"id": 90416690, "repo_name": "multiscorer", "full_name": "StKyr/multiscorer", "description": "A module for allowing the use of multiple metric functions in scikit's cross_val_score", "created": "2017-05-05 21:12:26", "language": "Python", "type": "User", "username": "StKyr", "stars": 19, "forks": 13, "subscribers": 3, "open_issues": 2, "topics": ["machine-learning", "data-mining", "scikit-learn"]}, {"id": 222234675, "repo_name": "clustering-benchmarks", "full_name": "LukeMathWalker/clustering-benchmarks", "description": "Benchmarks `linfa` against `scikit-learn` on a clustering task.", "created": "2019-11-17 11:03:05", "language": "Jupyter Notebook", "type": "User", "username": "LukeMathWalker", "stars": 19, "forks": 1, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 141948276, "repo_name": "timeseries-lstm-keras", "full_name": "ivanarielcaceres/timeseries-lstm-keras", "description": "Time Series Prediction with LSTM Recurrent Neural Networks in Python with Keras base on tutorial of Jason Brownlee ", "created": "2018-07-23 01:55:28", "language": "Jupyter Notebook", "type": "User", "username": "ivanarielcaceres", "stars": 19, "forks": 15, "subscribers": 2, "open_issues": 0, "topics": ["tensorflow", "deep-learning", "python", "scikit-learn", "prediction", "lstm-neural-networks"]}, {"id": 126408308, "repo_name": "turbofan_failure", "full_name": "jancervenka/turbofan_failure", "description": "Aircraft engine failure prediction model", "created": "2018-03-22 23:52:02", "language": "Jupyter Notebook", "type": "User", "username": "jancervenka", "stars": 19, "forks": 13, "subscribers": 0, "open_issues": 1, "topics": ["python", "svm", "tensorflow", "prediction-model", "scikit-learn", "lstm"]}, {"id": 107191086, "repo_name": "Lecture-3-Linear-Models", "full_name": "Imperial-College-Data-Science-Society/Lecture-3-Linear-Models", "description": "ICDSS Machine Learning Workshop Series: Linear Models", "created": "2017-10-16 22:47:53", "language": "Jupyter Notebook", "type": "Organization", "username": "Imperial-College-Data-Science-Society", "stars": 19, "forks": 18, "subscribers": 12, "open_issues": 0, "topics": ["linear-models", "machine-learning", "scikit-learn", "tensorflow", "keras", "python", "finance", "keras-tensorflow", "linear-regression"]}, {"id": 216600085, "repo_name": "Deploy-Keras-Deep-Learning-Model-with-Flask", "full_name": "curiousily/Deploy-Keras-Deep-Learning-Model-with-Flask", "description": "Build Deep Neural Network model in Keras and deploy a REST API to production with Flask on Google App Engine", "created": "2019-10-21 15:18:24", "language": "Jupyter Notebook", "type": "User", "username": "curiousily", "stars": 19, "forks": 13, "subscribers": 1, "open_issues": 1, "topics": ["keras", "deep-learning", "machine-learning", "python", "tensorflow", "neural-network", "google-appengine", "jupyter-notebook", "regression", "price-prediction", "airbnb", "scikit-learn", "rest-api"]}, {"id": 355311477, "repo_name": "Cubist", "full_name": "pjaselin/Cubist", "description": "A Python package for fitting Quinlan's Cubist regression model", "created": "2021-04-06 19:46:28", "language": "C", "type": "User", "username": "pjaselin", "stars": 19, "forks": 1, "subscribers": 0, "open_issues": 0, "topics": ["python", "machine-learning", "regression", "data-science", "scikit-learn"]}, {"id": 143338187, "repo_name": "IBM-HR-Analytics-Employee-Attrition-Performance", "full_name": "mrc03/IBM-HR-Analytics-Employee-Attrition-Performance", "description": "The IBM HR Analytics Employee Attrition & Performance dataset from the Kaggle. I have first performed Exploratory Data Analysis on the data using  various libraries like pandas,seaborn,matplotlib etc.. Then I have plotted used feature selection techniques like RFE to select the features.  The data is then oversampled using the SMOTE technique in order to deal with the imbalanced classes. Also the data is then scaled for better performance. Lastly I have trained many ML models from the scikit-learn library for predictive modelling and compared the performance using Precision, Recall and other metrics.", "created": "2018-08-02 19:44:43", "language": "Jupyter Notebook", "type": "User", "username": "mrc03", "stars": 19, "forks": 16, "subscribers": 1, "open_issues": 1, "topics": []}, {"id": 327242650, "repo_name": "youtube", "full_name": "dataprofessor/youtube", "description": "Collection of YouTube videos on data science on the Data Professor YouTube channel.", "created": "2021-01-06 08:06:36", "language": null, "type": "User", "username": "dataprofessor", "stars": 19, "forks": 4, "subscribers": 1, "open_issues": 0, "topics": ["youtube", "dataprofessor", "data-professor", "python", "streamlit", "r", "data-science-toolbox", "youtube-channel", "bioinformatics", "datascience", "data-science", "machinelearning", "machine-learning", "scikit-learn", "python-data-science"]}, {"id": 69076648, "repo_name": "scikit-learn-machine-learning-tutorial", "full_name": "machine-learning-projects/scikit-learn-machine-learning-tutorial", "description": "Following along with  Sentdex\u2019s tutorial", "created": "2016-09-24 03:15:27", "language": "Python", "type": "Organization", "username": "machine-learning-projects", "stars": 18, "forks": 17, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 4133213, "repo_name": "administrative", "full_name": "scikit-learn/administrative", "description": "Project management related documents for scikit-learn", "created": "2012-04-25 05:31:31", "language": "TeX", "type": "Organization", "username": "scikit-learn", "stars": 18, "forks": 18, "subscribers": 24, "open_issues": 1, "topics": []}, {"id": 53972612, "repo_name": "postlearn", "full_name": "TomAugspurger/postlearn", "description": "Common post-estimation tasks for scikit-learn", "created": "2016-03-15 19:30:50", "language": "Python", "type": "User", "username": "TomAugspurger", "stars": 18, "forks": 6, "subscribers": 2, "open_issues": 2, "topics": []}, {"id": 65808298, "repo_name": "padua", "full_name": "mfitzp/padua", "description": "Proteomic Data Analysis with Python (pandas, scikit-learn, numpy, scipy)", "created": "2016-08-16 09:46:26", "language": "Python", "type": "User", "username": "mfitzp", "stars": 18, "forks": 9, "subscribers": 4, "open_issues": 3, "topics": []}, {"id": 51545077, "repo_name": "Parallel-SGD", "full_name": "angadgill/Parallel-SGD", "description": "Parallel implementation of Stochastic Gradient Descent using SciKit-Learn library in Python.", "created": "2016-02-11 20:33:51", "language": "Python", "type": "User", "username": "angadgill", "stars": 18, "forks": 13, "subscribers": 5, "open_issues": 1, "topics": []}, {"id": 93306601, "repo_name": "Machine-Learning-CheatSheets", "full_name": "DipakMajhi/Machine-Learning-CheatSheets", "description": "Cheatsheets for Numpy, Pandas, Matplotlib, Scipy, Scikit Learn, ggplot2, TensorFlow, Neural Networks, Keras, Deep Learning", "created": "2017-06-04 10:39:30", "language": null, "type": "User", "username": "DipakMajhi", "stars": 18, "forks": 7, "subscribers": 3, "open_issues": 0, "topics": ["cheatsheet", "deep-learning", "matplotlib", "numpy", "pandas", "scipy", "ggplot2", "tensorflow", "neural-network", "scikit-learn"]}, {"id": 68324089, "repo_name": "pyconuk_using_sklearn_classification", "full_name": "ianozsvald/pyconuk_using_sklearn_classification", "description": "PyConUK 2016 talk - Using Machine Learning to solve a classification problem with scikit-learn - a practical walkthrough", "created": "2016-09-15 19:20:02", "language": "Jupyter Notebook", "type": "User", "username": "ianozsvald", "stars": 18, "forks": 4, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 2685736, "repo_name": "MLloWorld", "full_name": "petewarden/MLloWorld", "description": "Shows how to write a simple data contest entry for Kaggle, using scikit-learn for machine learning algorithms", "created": "2011-11-01 05:20:07", "language": "Python", "type": "User", "username": "petewarden", "stars": 18, "forks": 3, "subscribers": 5, "open_issues": 0, "topics": []}, {"id": 297754364, "repo_name": "project_MYM", "full_name": "andrewleeunderwood/project_MYM", "description": "Combined computer vision techniques and convolutional neural networks to accurately classify chess pieces and identified their location on a chessboard. Tools: Python, Google Cloud, Keras, TensorFlow, OpenCV, Pillow, Scikit-learn, NumPy, Seaborn, and others", "created": "2020-09-22 19:41:24", "language": "Jupyter Notebook", "type": "User", "username": "andrewleeunderwood", "stars": 18, "forks": 17, "subscribers": 2, "open_issues": 0, "topics": []}, {"id": 316872457, "repo_name": "Stacking-Blending-Voting-Ensembles", "full_name": "FernandoLpz/Stacking-Blending-Voting-Ensembles", "description": "This repository contains an example of each of the Ensemble Learning methods: Stacking, Blending, and Voting. The examples for Stacking and Blending were made from scratch, the example for Voting was using the scikit-learn utility.", "created": "2020-11-29 04:03:02", "language": "Python", "type": "User", "username": "FernandoLpz", "stars": 18, "forks": 13, "subscribers": 1, "open_issues": 0, "topics": ["ensemble-learning", "ensemble-machine-learning", "ensemble-classifier", "ensemble-model", "stacking", "stacking-ensemble", "blending", "voting", "machine-learning"]}, {"id": 75661047, "repo_name": "machine-learning-snippets", "full_name": "rueedlinger/machine-learning-snippets", "description": "Python Machine Learning Snippets contains various machine learning examples as Jupyter notebooks with scikit-learn, statsmodel, numpy and other libraries. ", "created": "2016-12-05 19:58:26", "language": "Jupyter Notebook", "type": "User", "username": "rueedlinger", "stars": 18, "forks": 3, "subscribers": 3, "open_issues": 5, "topics": ["machine-learning", "python", "jupyter"]}, {"id": 95113866, "repo_name": "ICON2017", "full_name": "lukassnoek/ICON2017", "description": "Repository for the ICON 2017 hackathon 'multivoxel pattern analysis (MVPA) of fMRI data in Python'", "created": "2017-06-22 12:35:47", "language": "Jupyter Notebook", "type": "User", "username": "lukassnoek", "stars": 18, "forks": 6, "subscribers": 4, "open_issues": 0, "topics": ["fmri", "mvpa", "python", "scikit-learn", "machine-learning"]}, {"id": 91686651, "repo_name": "Dos-Attack-Detection-using-Machine-Learning", "full_name": "alonecoder1337/Dos-Attack-Detection-using-Machine-Learning", "description": "A machine learning program, that detects denial of service attack using machine learning technique.", "created": "2017-05-18 11:43:31", "language": "Python", "type": "User", "username": "alonecoder1337", "stars": 18, "forks": 12, "subscribers": 3, "open_issues": 1, "topics": ["machine-learning", "python", "scikit-learn", "decision-trees", "denial-of-service", "network-security-monitoring"]}, {"id": 68849750, "repo_name": "coulomb_matrix", "full_name": "pythonpanda/coulomb_matrix", "description": "A Python based code to construct a Sorted Coulomb matrix from Smile strings (CSV input) of molecules . An optional scikit-learn is invoked at the end of the script to classify molecules using SVM.", "created": "2016-09-21 19:15:56", "language": "Python", "type": "User", "username": "pythonpanda", "stars": 18, "forks": 6, "subscribers": 2, "open_issues": 0, "topics": []}, {"id": 283288046, "repo_name": "intro-to-ml-with-time-series-DSSGx-2020", "full_name": "mloning/intro-to-ml-with-time-series-DSSGx-2020", "description": "Python tutorial on machine learning with time series for DSSGx 2020", "created": "2020-07-28 17:56:06", "language": "Jupyter Notebook", "type": "User", "username": "mloning", "stars": 18, "forks": 4, "subscribers": 2, "open_issues": 0, "topics": ["machine-learning", "time-series", "tutorial", "sktime", "scikit-learn"]}, {"id": 137670265, "repo_name": "Playground", "full_name": "TomLin/Playground", "description": "store my personal project", "created": "2018-06-17 16:41:47", "language": "Jupyter Notebook", "type": "User", "username": "TomLin", "stars": 18, "forks": 34, "subscribers": 2, "open_issues": 0, "topics": ["classification-model", "scikit-learn", "pytorch", "feature-engineering", "visualization", "nlp", "word-embeddings", "gensim", "spacy", "lightfm", "keras-tensorflow", "svd", "recommender-system"]}, {"id": 422164111, "repo_name": "Coursera-Guided-Projects-2021", "full_name": "ashishpatel26/Coursera-Guided-Projects-2021", "description": "Coursera Guided Projects 2021", "created": "2021-10-28 10:41:38", "language": "Jupyter Notebook", "type": "User", "username": "ashishpatel26", "stars": 18, "forks": 9, "subscribers": 1, "open_issues": 0, "topics": ["coursera", "coursera-machine-learning", "coursera-data-science", "machine-learning", "deep-learning", "reinforcement-learning", "computer-vision", "deeplearning-ai", "pytorch", "tensorflow", "tensorflow2", "keras", "scikit-learn"]}, {"id": 188456280, "repo_name": "dlime_experiments", "full_name": "rehmanzafar/dlime_experiments", "description": "In this work, we propose a deterministic version of Local Interpretable Model Agnostic Explanations (LIME) and the experimental results on three different medical datasets shows the superiority for Deterministic Local Interpretable Model-Agnostic Explanations (DLIME).", "created": "2019-05-24 16:39:42", "language": "Jupyter Notebook", "type": "User", "username": "rehmanzafar", "stars": 18, "forks": 7, "subscribers": 2, "open_issues": 1, "topics": ["breast-cancer-dataset", "python3", "random-forest", "classifiers", "neural-networks", "scikit-learn", "clusters", "xai", "explainable-ai", "explainable-ml", "lime", "dlime", "knn", "heirarchical-clustering", "machine-learning"]}, {"id": 135021594, "repo_name": "Python-for-Data-Analysis-and-Machine-Learning", "full_name": "marcogdepinto/Python-for-Data-Analysis-and-Machine-Learning", "description": "This repo contains the projects made for the course of Jose Portilla on Udemy.", "created": "2018-05-27 06:30:44", "language": "Jupyter Notebook", "type": "User", "username": "marcogdepinto", "stars": 18, "forks": 6, "subscribers": 1, "open_issues": 0, "topics": ["scikit-learn", "ipynb", "seaborn", "analysis", "pandas", "machine-learning", "data-analysis", "numpy", "deep-neural-networks", "python", "jupyter-notebook", "exercise"]}, {"id": 160211633, "repo_name": "mlhandbook", "full_name": "bpesquet/mlhandbook", "description": "My textbook for teaching Machine Learning", "created": "2018-12-03 15:22:27", "language": "Jupyter Notebook", "type": "User", "username": "bpesquet", "stars": 18, "forks": 6, "subscribers": 2, "open_issues": 15, "topics": ["machine-learning", "deep-learning", "python", "numpy", "scikit-learn", "keras", "pytorch", "kata", "nbgrader", "jupyter-notebook", "jupyterbook"]}, {"id": 172986530, "repo_name": "Turma-Introducao-2019.1", "full_name": "icmc-data/Turma-Introducao-2019.1", "description": "Material for the ML/DS course developed by DATA for 2019.", "created": "2019-02-27 20:37:42", "language": "Jupyter Notebook", "type": "Organization", "username": "icmc-data", "stars": 18, "forks": 4, "subscribers": 6, "open_issues": 0, "topics": ["machine-learning", "machinelearning", "aprendizado-de-maquina", "inteligencia-artificial", "artificial-intelligence", "python3", "pandas", "seaborn", "matplotlib", "numpy", "scikit-learn"]}, {"id": 75839257, "repo_name": "Kaio-machine-learning-human-face-detection", "full_name": "thiagomarquesrocha/Kaio-machine-learning-human-face-detection", "description": "Machine Learning project a case study focused on the interaction with digital characters, using a character called \"Kaio\", which, based on the automatic detection of facial expressions and classification of emotions, interacts with humans by classifying emotions and imitating expressions", "created": "2016-12-07 13:38:06", "language": "Jupyter Notebook", "type": "User", "username": "thiagomarquesrocha", "stars": 18, "forks": 8, "subscribers": 3, "open_issues": 0, "topics": ["smile", "detection", "machine-learning", "sklearn", "javascript", "python", "blink", "supervised-learning", "jupyter-notebook", "django", "notebook", "human-faces", "scikit-learn", "eyes", "percentage", "java", "android", "mobile-vision"]}, {"id": 95152596, "repo_name": "hungarian-text-mining-workshop", "full_name": "oroszgy/hungarian-text-mining-workshop", "description": "Materials for the Text Mining workshop held in the  HuNLP meetup, June 2017", "created": "2017-06-22 20:11:07", "language": "Jupyter Notebook", "type": "User", "username": "oroszgy", "stars": 18, "forks": 5, "subscribers": 2, "open_issues": 7, "topics": ["nlp", "natural-language-processing", "hungarian", "spacy", "spacy-models", "meetup", "textacy", "information-extraction", "machine-learning", "classification", "sentiment-analysis", "keyword-extraction", "workshop", "text-mining-workshop", "python", "tutorial", "scikit-learn", "text-mining"]}, {"id": 157540396, "repo_name": "Scikit_Learn", "full_name": "Jan1995/Scikit_Learn", "description": null, "created": "2018-11-14 11:42:57", "language": "Python", "type": "User", "username": "Jan1995", "stars": 17, "forks": 4, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 60389603, "repo_name": "pandas-and-scikit-handson", "full_name": "sijanonly/pandas-and-scikit-handson", "description": "Illustrating Pandas and Scikit learn with different examples", "created": "2016-06-04 02:39:36", "language": "Jupyter Notebook", "type": "User", "username": "sijanonly", "stars": 17, "forks": 9, "subscribers": 3, "open_issues": 1, "topics": []}, {"id": 51486054, "repo_name": "nbsvm", "full_name": "Joshua-Chin/nbsvm", "description": "A scikit-learn style implementation of NBSVM", "created": "2016-02-11 01:08:13", "language": "Python", "type": "User", "username": "Joshua-Chin", "stars": 17, "forks": 5, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 97780753, "repo_name": "hands-on-machine-learning", "full_name": "youngjeong46/hands-on-machine-learning", "description": "Machine learning practice based on the book Hands On Machine Learning with Scikit-Learn & Tensorflow by Aurelien Geron.", "created": "2017-07-20 02:18:28", "language": "Jupyter Notebook", "type": "User", "username": "youngjeong46", "stars": 17, "forks": 26, "subscribers": 2, "open_issues": 0, "topics": ["machine-learning", "scikit-learn", "tensorflow"]}, {"id": 303491844, "repo_name": "scikit-cosmo", "full_name": "lab-cosmo/scikit-cosmo", "description": "A collection of scikit-learn compatible utilities that implement methods developed in the COSMO laboratory", "created": "2020-10-12 19:23:26", "language": "Python", "type": "Organization", "username": "lab-cosmo", "stars": 17, "forks": 7, "subscribers": 12, "open_issues": 11, "topics": []}, {"id": 113498502, "repo_name": "pyPhenology", "full_name": "sdtaylor/pyPhenology", "description": "Plant phenology models in python with a scikit-learn inspired API", "created": "2017-12-07 21:05:55", "language": "Python", "type": "User", "username": "sdtaylor", "stars": 17, "forks": 7, "subscribers": 3, "open_issues": 10, "topics": ["ecology", "ecology-modelling", "science", "plants"]}, {"id": 112289178, "repo_name": "pydata_nyc2017", "full_name": "ColCarroll/pydata_nyc2017", "description": "Slides and materials for workshop on \"Two views on regression with PyMC3 and scikit-learn\"", "created": "2017-11-28 05:15:29", "language": "Jupyter Notebook", "type": "User", "username": "ColCarroll", "stars": 17, "forks": 7, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 325721406, "repo_name": "Hands-On-Machine-Learning-with-Scikit-Learn-Keras-and-TensorFlow-2nd-Edition", "full_name": "susanli2016/Hands-On-Machine-Learning-with-Scikit-Learn-Keras-and-TensorFlow-2nd-Edition", "description": "Book Projects", "created": "2020-12-31 05:25:49", "language": "Jupyter Notebook", "type": "User", "username": "susanli2016", "stars": 17, "forks": 4, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 138268659, "repo_name": "Quora_question_pairs_NLP_Kaggle", "full_name": "aspk/Quora_question_pairs_NLP_Kaggle", "description": "Quora Kaggle Competition : Natural Language Processing using word2vec embeddings, scikit-learn and xgboost for training", "created": "2018-06-22 07:14:12", "language": "Jupyter Notebook", "type": "User", "username": "aspk", "stars": 17, "forks": 5, "subscribers": 2, "open_issues": 0, "topics": ["nlp", "nlp-machine-learning", "quora-question-pairs", "tensorflow", "xgboost", "scikit-learn"]}, {"id": 65572589, "repo_name": "XDGMM", "full_name": "tholoien/XDGMM", "description": "A wrapper class for the scikit-learn BaseEstimator class that implements both the astroML and Bovy et al. (2011) XDGMM methods.", "created": "2016-08-12 17:49:20", "language": "Jupyter Notebook", "type": "User", "username": "tholoien", "stars": 17, "forks": 17, "subscribers": 2, "open_issues": 2, "topics": []}, {"id": 116511382, "repo_name": "LightGBM-binary-classification-example", "full_name": "angelotc/LightGBM-binary-classification-example", "description": "A model that predicts the default rate of credit card holders using the LightGBM classifier. Trained the LightGBM classifier with Scikit-learn's GridSearchCV.", "created": "2018-01-06 19:55:10", "language": "Jupyter Notebook", "type": "User", "username": "angelotc", "stars": 17, "forks": 14, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 176213188, "repo_name": "ai-project-fraud-detection", "full_name": "edyoda/ai-project-fraud-detection", "description": "Credit card fraud detection using kafka,scikit,flask,cassandra", "created": "2019-03-18 05:52:55", "language": "Python", "type": "Organization", "username": "edyoda", "stars": 17, "forks": 17, "subscribers": 3, "open_issues": 1, "topics": ["scikit-learn", "cassandra", "kafka", "flask"]}, {"id": 124586353, "repo_name": "PGA-Tour-Data-Science-Project", "full_name": "daronprater/PGA-Tour-Data-Science-Project", "description": null, "created": "2018-03-09 19:50:32", "language": "Jupyter Notebook", "type": "User", "username": "daronprater", "stars": 17, "forks": 15, "subscribers": 5, "open_issues": 0, "topics": ["data-science", "scikit-learn", "data-visualization", "scraping-websites"]}, {"id": 113731158, "repo_name": "FOMCTranscriptAnalysis", "full_name": "ali-wetrill/FOMCTranscriptAnalysis", "description": "Textual analysis of FOMC Transcripts. My research examines the relationship between words said during FOMC meetings, and changes in Federal Funds Rate. You can walk through my data cleaning, processing, and analysis process here.", "created": "2017-12-10 07:19:37", "language": "Jupyter Notebook", "type": "User", "username": "ali-wetrill", "stars": 17, "forks": 8, "subscribers": 3, "open_issues": 0, "topics": ["economics", "nlp-machine-learning", "scikit-learn"]}, {"id": 98458261, "repo_name": "ML", "full_name": "greed2411/ML", "description": "Machine Learning Experiments with scikit-learn, Deep learning with Keras, TensorFlow and Pytorch. Data Science examples for various datasets and competitions from Kaggle and Analytics Vidhya.", "created": "2017-07-26 19:24:28", "language": "Jupyter Notebook", "type": "User", "username": "greed2411", "stars": 17, "forks": 4, "subscribers": 0, "open_issues": 0, "topics": []}, {"id": 108491108, "repo_name": "BabyCryDetector", "full_name": "Troy-Wang/BabyCryDetector", "description": "A baby cry detector written with matlab and  a classifier based on sklearn.", "created": "2017-10-27 02:46:39", "language": "Python", "type": "User", "username": "Troy-Wang", "stars": 17, "forks": 9, "subscribers": 5, "open_issues": 2, "topics": ["audio", "scikit-learn", "matlab", "c", "python"]}, {"id": 289088726, "repo_name": "rezonance", "full_name": "radioactive11/rezonance", "description": "Content Based Music Recommendation Service ", "created": "2020-08-20 19:06:54", "language": "Jupyter Notebook", "type": "User", "username": "radioactive11", "stars": 17, "forks": 8, "subscribers": 1, "open_issues": 0, "topics": ["music-recommendation-system", "python3", "react", "scikit-learn", "heroku"]}, {"id": 76583197, "repo_name": "jogo-politico", "full_name": "thefonseca/jogo-politico", "description": "An\u00e1lise de posicionamento pol\u00edtico utilizando a API de Dados Abertos da C\u00e2mara dos Deputados", "created": "2016-12-15 17:59:46", "language": "Jupyter Notebook", "type": "User", "username": "thefonseca", "stars": 17, "forks": 7, "subscribers": 2, "open_issues": 0, "topics": ["machine-learning", "dados-abertos", "python", "camara-federal", "scikit-learn"]}, {"id": 80441305, "repo_name": "gabbar", "full_name": "mapbox/gabbar", "description": "Guarding OpenStreetMap from harmful edits using machine learning", "created": "2017-01-30 16:48:44", "language": "Jupyter Notebook", "type": "Organization", "username": "mapbox", "stars": 17, "forks": 6, "subscribers": 70, "open_issues": 15, "topics": ["machine-learning", "openstreetmap", "scikit-learn", "jupyter-notebook", "vandalism", "banished"]}, {"id": 189016912, "repo_name": "mantis-ml-release", "full_name": "astrazeneca-cgr-publications/mantis-ml-release", "description": "mantis-ml: Stochastic semi-supervised learning to prioritise genes from high throughput genomic screens", "created": "2019-05-28 11:40:30", "language": "Python", "type": "Organization", "username": "astrazeneca-cgr-publications", "stars": 17, "forks": 6, "subscribers": 4, "open_issues": 1, "topics": ["machine-learning", "keras", "scikit-learn", "auto-ml", "genomics", "tensorflow"]}, {"id": 127703533, "repo_name": "midi-classification-tutorial", "full_name": "sandershihacker/midi-classification-tutorial", "description": "A Tutorial on How to Classify Genres of Midi Files.", "created": "2018-04-02 04:44:17", "language": "Jupyter Notebook", "type": "User", "username": "sandershihacker", "stars": 17, "forks": 3, "subscribers": 2, "open_issues": 1, "topics": ["machine-learning", "data-science", "scikit-learn", "music", "midi-files"]}, {"id": 125887960, "repo_name": "machine-learning", "full_name": "bfortuner/machine-learning", "description": "Machine learning sabbatical study materials", "created": "2018-03-19 16:27:42", "language": "Jupyter Notebook", "type": "User", "username": "bfortuner", "stars": 17, "forks": 12, "subscribers": 2, "open_issues": 0, "topics": ["machine-learning", "deep-learning", "neural-network", "scikit-learn", "numpy", "pandas", "pytorch", "jupyter-notebook", "data-science"]}, {"id": 140386634, "repo_name": "Diamonds-In-Depth-Analysis", "full_name": "Chinmayrane16/Diamonds-In-Depth-Analysis", "description": "Given dataset of Diamonds with features such as Cut, Carat, Clarity etc. I have used libraries such as Pandas, Numpy, Matplotlib, Seaborn to Analyse and Estimate the Price of Diamonds based on the features. Using Scikit-Learn , implemented Algorithms to increase the effective R2 score.", "created": "2018-07-10 06:22:47", "language": "Jupyter Notebook", "type": "User", "username": "Chinmayrane16", "stars": 17, "forks": 7, "subscribers": 0, "open_issues": 0, "topics": ["data-visualization", "feature-engineering", "feature-scaling", "pandas", "numpy", "seaborn", "matplotlib", "machine-learning"]}, {"id": 352722837, "repo_name": "machine_learning", "full_name": "Rustam-Z/machine_learning", "description": "All about Machine Learning and Deep Learning \u2022 Data \u2192 Model \u2192 Predict", "created": "2021-03-29 17:09:20", "language": "Jupyter Notebook", "type": "User", "username": "Rustam-Z", "stars": 17, "forks": 3, "subscribers": 1, "open_issues": 0, "topics": ["machine-learning", "deep-learning", "data-science", "tensorflow", "keras", "scikit-learn"]}, {"id": 223598865, "repo_name": "Multiscale-Parametric-t-SNE", "full_name": "FrancescoCrecchi/Multiscale-Parametric-t-SNE", "description": "ESANN20 paper code repository. This package is a perplexity-free extension of Parametric t-SNE dimensionality reduction method implemented in `Keras` and compatible with `Scikit-learn`.", "created": "2019-11-23 14:07:41", "language": "Python", "type": "User", "username": "FrancescoCrecchi", "stars": 17, "forks": 1, "subscribers": 1, "open_issues": 2, "topics": []}, {"id": 216324694, "repo_name": "machine-learning-course", "full_name": "mahmoudparsian/machine-learning-course", "description": "Machine Learning Course @ Santa Clara University", "created": "2019-10-20 07:35:50", "language": null, "type": "User", "username": "mahmoudparsian", "stars": 17, "forks": 13, "subscribers": 6, "open_issues": 0, "topics": ["machine-learning", "data-algorithms", "scikit-learn", "santa-clara-university", "pyspark-algorithms-book", "supervised-learning", "unsupervised-learning", "clustering", "linear-regression", "logistic-regression", "kmeans-clustering", "spark", "pyspark", "spark-ml"]}, {"id": 272659456, "repo_name": "Learning-and-Experimenting_Data-Science", "full_name": "Shaon2221/Learning-and-Experimenting_Data-Science", "description": "Journey through data analysis", "created": "2020-06-16 08:59:10", "language": "Jupyter Notebook", "type": "User", "username": "Shaon2221", "stars": 17, "forks": 9, "subscribers": 1, "open_issues": 0, "topics": ["data-analysis", "data-science", "datascience", "business-analytics", "pandas-python", "machinelearning", "deep-learning", "neuralnetworks", "statistics", "scikit-learn", "matplotlib", "jupyter-notebook"]}, {"id": 333786605, "repo_name": "MLgenerator", "full_name": "durgeshsamariya/MLgenerator", "description": "MLgenerator is a web app which help you to generate machine learning starter code with ease.", "created": "2021-01-28 14:39:40", "language": "HTML", "type": "User", "username": "durgeshsamariya", "stars": 17, "forks": 5, "subscribers": 3, "open_issues": 3, "topics": ["machine-learning", "starter-template", "starter-code", "template", "machine-learning-algorithms", "machine-learning-tutorials", "beginner-code", "webapp", "streamlit-webapp", "heroku", "scikit-learn", "pyod"]}, {"id": 138488993, "repo_name": "DataScienceUtils", "full_name": "idanmoradarthas/DataScienceUtils", "description": "Data science common method for python", "created": "2018-06-24 14:32:58", "language": "Python", "type": "User", "username": "idanmoradarthas", "stars": 17, "forks": 3, "subscribers": 1, "open_issues": 0, "topics": ["data-science", "utilities", "python", "machine-learning", "scikit-learn", "matplotlib", "plot-confusion-matrix", "visualize-features", "plots", "correlation", "features-correlated", "pypi-package", "conda-packages"]}, {"id": 437277123, "repo_name": "YouML", "full_name": "ChongyaSong/YouML", "description": "YouML: A Machine Learning Toolkit", "created": "2021-12-11 12:32:50", "language": "Python", "type": "User", "username": "ChongyaSong", "stars": 17, "forks": 3, "subscribers": 1, "open_issues": 0, "topics": ["machine-learning", "artificial-intelligence", "data-science", "big-data", "ai", "data-mining", "scikit-learn", "matplotlib", "pandas", "python", "numpy", "scipy"]}, {"id": 49565715, "repo_name": "pandas-tutorial", "full_name": "luciasantamaria/pandas-tutorial", "description": "Teaching materials for pandas and scikit-learn ", "created": "2016-01-13 10:05:35", "language": "Jupyter Notebook", "type": "User", "username": "luciasantamaria", "stars": 16, "forks": 22, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 56785662, "repo_name": "sklearn_pandas_intro", "full_name": "agramfort/sklearn_pandas_intro", "description": "Introduction to Scikit-Learn and Pandas", "created": "2016-04-21 15:34:46", "language": "Jupyter Notebook", "type": "User", "username": "agramfort", "stars": 16, "forks": 15, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 147389004, "repo_name": "nyc-2018-scikit-sprint", "full_name": "wimlds/nyc-2018-scikit-sprint", "description": "NYC scikit-learn sprint (Sep 2018)", "created": "2018-09-04 18:18:00", "language": null, "type": "Organization", "username": "wimlds", "stars": 16, "forks": 15, "subscribers": 9, "open_issues": 0, "topics": ["python", "open-source", "scikit-learn", "sprint-planning"]}, {"id": 80760546, "repo_name": "ngcm_sklearn_2017", "full_name": "fonnesbeck/ngcm_sklearn_2017", "description": "scikit-learn course for 2017 NGCM Summer Academy", "created": "2017-02-02 19:27:07", "language": "Jupyter Notebook", "type": "User", "username": "fonnesbeck", "stars": 16, "forks": 20, "subscribers": 4, "open_issues": 3, "topics": []}, {"id": 68778899, "repo_name": "strata-nyc-2016", "full_name": "amueller/strata-nyc-2016", "description": "Materials fort Strata NYC 2016 scikit-learn tutorial", "created": "2016-09-21 04:04:23", "language": "Jupyter Notebook", "type": "User", "username": "amueller", "stars": 16, "forks": 14, "subscribers": 2, "open_issues": 0, "topics": []}, {"id": 125418824, "repo_name": "Kaggle-SMS-Spam-Collection-Dataset-", "full_name": "mohitgupta-omg/Kaggle-SMS-Spam-Collection-Dataset-", "description": "Classified messages as Spam or Ham using NLTK and Scikit-learn", "created": "2018-03-15 19:50:36", "language": "Jupyter Notebook", "type": "User", "username": "mohitgupta-omg", "stars": 16, "forks": 45, "subscribers": 1, "open_issues": 0, "topics": ["scikit-learn", "nltk", "decision-trees", "naive-bayes-classification"]}, {"id": 319236070, "repo_name": "scikit-learn", "full_name": "mehrdad-dev/scikit-learn", "description": "\u0628\u0647 \u0641\u0627\u0631\u0633\u06cc\u060c \u0628\u0631\u0627\u06cc \u0645\u0634\u0627\u0631\u06a9\u062a scikit-learn", "created": "2020-12-07 07:20:42", "language": "CSS", "type": "User", "username": "mehrdad-dev", "stars": 16, "forks": 3, "subscribers": 1, "open_issues": 0, "topics": ["scikit-learn", "sklearn", "machine-learning", "python"]}, {"id": 136392576, "repo_name": "kdd-cup-99-python", "full_name": "timeamagyar/kdd-cup-99-python", "description": "Analysis and preprocessing of the kdd cup 99 dataset using python and scikit-learn", "created": "2018-06-06 22:25:43", "language": "Jupyter Notebook", "type": "User", "username": "timeamagyar", "stars": 16, "forks": 12, "subscribers": 2, "open_issues": 1, "topics": ["kdd99", "python", "sklearn", "matplotlib", "smote", "cluster-centroids", "resampling-methods", "principal-component-analysis", "linear-separability", "convex-hull", "one-hot-encode", "standardization", "normalization"]}, {"id": 191972210, "repo_name": "bayarea-2019-scikit-sprint", "full_name": "wimlds/bayarea-2019-scikit-sprint", "description": "Bay Area WiMLDS scikit-learn open source sprint (Nov 2, 2019)", "created": "2019-06-14 16:06:58", "language": null, "type": "Organization", "username": "wimlds", "stars": 16, "forks": 10, "subscribers": 8, "open_issues": 0, "topics": ["python", "opensource", "scikit-learn", "machine-learning", "diversity", "datascience", "women-in-tech"]}, {"id": 99219783, "repo_name": "Docker_Python_DataScience", "full_name": "ashish-y/Docker_Python_DataScience", "description": "Some DataScience Test with docker + python + SciKit-learn", "created": "2017-08-03 10:15:18", "language": "Python", "type": "User", "username": "ashish-y", "stars": 16, "forks": 4, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 321173902, "repo_name": "streamlit-healthcare-ML-App", "full_name": "abhishek-ch/streamlit-healthcare-ML-App", "description": "Streamlit example showing Scikit Learn & Pyspark ML over Healthcare data ! Its simple !!", "created": "2020-12-13 22:33:34", "language": "Python", "type": "User", "username": "abhishek-ch", "stars": 16, "forks": 7, "subscribers": 1, "open_issues": 0, "topics": ["pyspark", "streamlit", "docker", "docker-image", "machine-learning"]}, {"id": 165242305, "repo_name": "sklearn_fastapi", "full_name": "nickc1/sklearn_fastapi", "description": "Building an API with the FastAPI framework to serve a scikit-learn model.", "created": "2019-01-11 12:44:05", "language": "Jupyter Notebook", "type": "User", "username": "nickc1", "stars": 16, "forks": 6, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 98414508, "repo_name": "scikit-feature", "full_name": "charliec443/scikit-feature", "description": null, "created": "2017-07-26 11:15:57", "language": "Python", "type": "User", "username": "charliec443", "stars": 16, "forks": 13, "subscribers": 4, "open_issues": 5, "topics": ["scikit-learn", "feature-selection"]}, {"id": 132201749, "repo_name": "News-Classification", "full_name": "sachinbiradar9/News-Classification", "description": "Classify news into categories based on headline.", "created": "2018-05-05 00:40:08", "language": "Jupyter Notebook", "type": "User", "username": "sachinbiradar9", "stars": 16, "forks": 13, "subscribers": 6, "open_issues": 0, "topics": ["machine-learning", "scikit-learn", "news-classification"]}, {"id": 148978648, "repo_name": "ml-on-fhir", "full_name": "chrisby/ml-on-fhir", "description": "A work in progress library that fuses the HL7 FHIR standard with scikit-learn", "created": "2018-09-16 08:52:07", "language": "Jupyter Notebook", "type": "User", "username": "chrisby", "stars": 16, "forks": 2, "subscribers": 4, "open_issues": 19, "topics": []}, {"id": 143163182, "repo_name": "genetic_algorithm_optimization_sklearn-based", "full_name": "philipjk/genetic_algorithm_optimization_sklearn-based", "description": null, "created": "2018-08-01 13:56:05", "language": "Jupyter Notebook", "type": "User", "username": "philipjk", "stars": 16, "forks": 8, "subscribers": 4, "open_issues": 0, "topics": ["scikit", "scikit-learn", "genetic-programming", "classification"]}, {"id": 214413697, "repo_name": "sklearn-rvm", "full_name": "Mind-the-Pineapple/sklearn-rvm", "description": "An sklearn style implementation of the Relevance Vector Machine (RVM).", "created": "2019-10-11 10:59:48", "language": "Python", "type": "Organization", "username": "Mind-the-Pineapple", "stars": 16, "forks": 5, "subscribers": 5, "open_issues": 3, "topics": ["relevance-vector-machine", "sklearn", "scikit-learn", "machine-learning"]}, {"id": 85469280, "repo_name": "vector_space_modelling", "full_name": "ishaan007/vector_space_modelling", "description": "NLP in python Vector Space Modelling and document classification NLP", "created": "2017-03-19 11:01:39", "language": "Jupyter Notebook", "type": "User", "username": "ishaan007", "stars": 16, "forks": 11, "subscribers": 4, "open_issues": 0, "topics": ["word2vec", "vector-space-model", "nlp", "machine-learning", "scikit-learn", "document-classification"]}, {"id": 294398037, "repo_name": "pxtextmining", "full_name": "CDU-data-science-team/pxtextmining", "description": "Text classification of NHS patient feedback.", "created": "2020-09-10 12:06:15", "language": "Python", "type": "Organization", "username": "CDU-data-science-team", "stars": 16, "forks": 2, "subscribers": 5, "open_issues": 8, "topics": ["patient-experience", "python", "scikit-learn", "nhs-r-community"]}, {"id": 447459376, "repo_name": "Tabular-AutoML", "full_name": "sagnik1511/Tabular-AutoML", "description": "Python Auto-ML Package for Tabular Datasets", "created": "2022-01-13 04:13:10", "language": "Python", "type": "User", "username": "sagnik1511", "stars": 16, "forks": 8, "subscribers": 2, "open_issues": 11, "topics": ["python3", "automl", "modular-architecture", "scikit-learn", "numpy", "pandas", "python-package"]}, {"id": 94426560, "repo_name": "regain", "full_name": "fdtomasi/regain", "description": "REGAIN (Regularised Graphical Inference)", "created": "2017-06-15 10:02:24", "language": "Jupyter Notebook", "type": "User", "username": "fdtomasi", "stars": 16, "forks": 7, "subscribers": 5, "open_issues": 0, "topics": ["scikit-learn", "graphical-models", "network-inference", "machine-learning", "latent-variables", "time-series"]}, {"id": 126344029, "repo_name": "evalutils", "full_name": "comic/evalutils", "description": "evalutils helps users create extensions for grand-challenge.org", "created": "2018-03-22 14:02:29", "language": "Python", "type": "Organization", "username": "comic", "stars": 16, "forks": 6, "subscribers": 4, "open_issues": 8, "topics": ["machine-learning", "docker", "scikit-learn", "simpleitk", "pandas", "python36"]}, {"id": 236712439, "repo_name": "machine-learning-for-beginners", "full_name": "Institute-of-Coding-Northumbria/machine-learning-for-beginners", "description": "\ud83e\udd16Notebooks of machine learning for beginners developed by the Institute of Coding - Northumbria University", "created": "2020-01-28 10:46:43", "language": "Jupyter Notebook", "type": "Organization", "username": "Institute-of-Coding-Northumbria", "stars": 16, "forks": 2, "subscribers": 4, "open_issues": 0, "topics": ["scikit-learn", "machine-learning", "tensorflow", "face-recognition"]}, {"id": 100714344, "repo_name": "cli", "full_name": "polyaxon/cli", "description": "Polyaxon Core Client & CLI to streamline MLOps", "created": "2017-08-18 13:25:49", "language": "Python", "type": "Organization", "username": "polyaxon", "stars": 16, "forks": 18, "subscribers": 3, "open_issues": 1, "topics": ["mlops", "workflows", "machine-learning", "deep-learning", "hyperparameter-optimization", "tensorflow", "pytorch", "kubernetes", "scikit-learn", "dataops", "data-science", "ml"]}, {"id": 214486244, "repo_name": "workshops", "full_name": "tribeofai/workshops", "description": "Tribe of AI workshops curriculum", "created": "2019-10-11 16:47:54", "language": null, "type": "Organization", "username": "tribeofai", "stars": 16, "forks": 4, "subscribers": 9, "open_issues": 1, "topics": ["machine-learning", "deep-learning", "scikit-learn", "tensorflow", "keras", "python", "pandas", "numpy"]}, {"id": 86386536, "repo_name": "sneaker-forecast-app", "full_name": "maludee/sneaker-forecast-app", "description": "A price forecaster for the sneaker resale market", "created": "2017-03-27 21:40:05", "language": "Jupyter Notebook", "type": "User", "username": "maludee", "stars": 16, "forks": 4, "subscribers": 3, "open_issues": 0, "topics": ["python", "scrapy", "selenium", "flask", "scikit-learn", "machine-learning", "nlp", "word2vec"]}, {"id": 80636552, "repo_name": "MachineLearning", "full_name": "Cheng-Lin-Li/MachineLearning", "description": "Implementations of machine learning algorithm by Python 3", "created": "2017-02-01 15:59:35", "language": "Jupyter Notebook", "type": "User", "username": "Cheng-Lin-Li", "stars": 16, "forks": 10, "subscribers": 2, "open_issues": 1, "topics": ["machine-learning-algorithms", "machine-learning", "decision-trees", "fastmap", "gmm", "hmm-viterbi-algorithm", "kmeans", "neural-network", "pca", "pca-analysis", "lstm", "tensorflow", "mlp", "python3", "scikit-learn", "perceptron", "perceptron-learning-algorithm", "gaussian-mixture-models"]}, {"id": 420576923, "repo_name": "fastlapmap", "full_name": "davisidarta/fastlapmap", "description": "Fast Laplacian Eigenmaps: lightweight multicore LE for non-linear dimensional reduction with minimal memory usage. Outperforms sklearn's implementation and escalates linearly beyond 10e6 samples.", "created": "2021-10-24 03:23:47", "language": "Python", "type": "User", "username": "davisidarta", "stars": 16, "forks": 1, "subscribers": 2, "open_issues": 0, "topics": ["dimensionality-reduction", "embedding", "laplacian-eigenmaps", "denoising", "machine-learning", "feature-engineering", "python", "multithreading", "scikit-learn"]}, {"id": 94664761, "repo_name": "verbecc-svc", "full_name": "bretttolbert/verbecc-svc", "description": "Dockerized Python microservice with REST API for verbs conjugation in French, Spanish and Portuguese", "created": "2017-06-18 04:22:55", "language": "Python", "type": "User", "username": "bretttolbert", "stars": 16, "forks": 4, "subscribers": 1, "open_issues": 3, "topics": ["conjugation", "french", "verb-conjugation", "nlp", "linguistics", "french-nlp", "spanish-language", "french-language", "portuguese-language", "portuguese-verbs", "spanish-verbs", "machine-learning", "scikit-learn", "natural-language-processing", "natural-language", "conjugator", "romanian", "romanian-language"]}, {"id": 140863766, "repo_name": "basic-machine-learning-using-scikit-learn", "full_name": "mrolarik/basic-machine-learning-using-scikit-learn", "description": null, "created": "2018-07-13 15:27:19", "language": "Jupyter Notebook", "type": "User", "username": "mrolarik", "stars": 15, "forks": 15, "subscribers": 3, "open_issues": 0, "topics": ["machine-learning"]}, {"id": 298650855, "repo_name": "ml-workshop-intro", "full_name": "thomasjpfan/ml-workshop-intro", "description": "Introduction to scikit-learn: Machine Learning in Python", "created": "2020-09-25 18:29:27", "language": "Jupyter Notebook", "type": "User", "username": "thomasjpfan", "stars": 15, "forks": 23, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 49842218, "repo_name": "scikit-learn-tutorial", "full_name": "ericmjl/scikit-learn-tutorial", "description": null, "created": "2016-01-18 00:20:39", "language": "Jupyter Notebook", "type": "User", "username": "ericmjl", "stars": 15, "forks": 5, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 74870321, "repo_name": "docker-scikit-learn", "full_name": "smizy/docker-scikit-learn", "description": "Python3 scikit-learn with Jupyter docker image based on alpine ", "created": "2016-11-27 05:58:32", "language": "Dockerfile", "type": "User", "username": "smizy", "stars": 15, "forks": 6, "subscribers": 3, "open_issues": 5, "topics": []}, {"id": 326396075, "repo_name": "ml-opt-app", "full_name": "dataprofessor/ml-opt-app", "description": "Machine Learning Hyperparameter Optimizer App (Streamlit + Scikit-learn + Python)", "created": "2021-01-03 11:56:48", "language": "Python", "type": "User", "username": "dataprofessor", "stars": 15, "forks": 11, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 201259163, "repo_name": "scikit-elm", "full_name": "akusok/scikit-elm", "description": "Extreme Learning Machine (ELM) with Scikit-Learn compatibility", "created": "2019-08-08 13:00:55", "language": "HTML", "type": "User", "username": "akusok", "stars": 15, "forks": 5, "subscribers": 1, "open_issues": 1, "topics": []}, {"id": 72334789, "repo_name": "mash_2016_sklearn_intro", "full_name": "fabianp/mash_2016_sklearn_intro", "description": "Material for the MASH course on introduction to scikit-learn", "created": "2016-10-30 07:12:39", "language": "Jupyter Notebook", "type": "User", "username": "fabianp", "stars": 15, "forks": 5, "subscribers": 5, "open_issues": 0, "topics": ["scikit-learn", "tutorial", "machine-learning", "notebooks"]}, {"id": 70333374, "repo_name": "pydata2016", "full_name": "thedataincubator/pydata2016", "description": "A couple projects using scikit-learn illustrating project decision making.", "created": "2016-10-08 13:36:13", "language": "Jupyter Notebook", "type": "Organization", "username": "thedataincubator", "stars": 15, "forks": 5, "subscribers": 6, "open_issues": 0, "topics": []}, {"id": 140187218, "repo_name": "ml-algorithms-on-scikit-and-keras", "full_name": "sourcecode369/ml-algorithms-on-scikit-and-keras", "description": "Implementation scripts of Machine Learning algorithms on Scikit-learn and Keras for complete novice..", "created": "2018-07-08 17:09:58", "language": "Jupyter Notebook", "type": "User", "username": "sourcecode369", "stars": 15, "forks": 9, "subscribers": 0, "open_issues": 0, "topics": ["machine-learning", "deep-learning", "reinforcement-learning", "natural-language-processing", "numpy", "pandas", "matplotlib", "scikit-learn", "keras", "regression", "classification", "clustering", "association-rule-learning", "data-preprocessing", "dimensionality-reduction", "t-sne", "grid-search", "kfold-cross-validation", "xgboost", "multiarm-bandit"]}, {"id": 437957286, "repo_name": "ml-wrappers", "full_name": "microsoft/ml-wrappers", "description": "A unified wrapper for various ML frameworks - to have one uniform scikit-learn format predict and predict_proba functions.", "created": "2021-12-13 17:06:03", "language": "Python", "type": "Organization", "username": "microsoft", "stars": 15, "forks": 5, "subscribers": 6, "open_issues": 8, "topics": []}, {"id": 110512265, "repo_name": "intro-to-ml", "full_name": "kjam/intro-to-ml", "description": "A basic introduction to machine learning (one day training).", "created": "2017-11-13 07:05:16", "language": "Jupyter Notebook", "type": "User", "username": "kjam", "stars": 15, "forks": 18, "subscribers": 4, "open_issues": 0, "topics": ["machine-learning", "introduction", "jupyter-notebook", "scikit-learn"]}, {"id": 263010812, "repo_name": "Sklearn-Nature-Inspired-Algorithms", "full_name": "timzatko/Sklearn-Nature-Inspired-Algorithms", "description": "Nature-inspired algorithms for hyper-parameter tuning of Scikit-Learn models.", "created": "2020-05-11 10:28:58", "language": "Python", "type": "User", "username": "timzatko", "stars": 15, "forks": 3, "subscribers": 1, "open_issues": 1, "topics": ["python", "data-science", "nature-inspired-algorithms", "hyper-parameter-optimization", "hyper-parameter-tuning", "scikit-learn"]}, {"id": 46933423, "repo_name": "destimator", "full_name": "rainforestapp/destimator", "description": "Describe your scikit-learn estimators for posterity!", "created": "2015-11-26 15:12:17", "language": "Python", "type": "Organization", "username": "rainforestapp", "stars": 15, "forks": 1, "subscribers": 28, "open_issues": 0, "topics": []}, {"id": 206175227, "repo_name": "ge-sklearn-pipeline-example", "full_name": "StevenMMortimer/ge-sklearn-pipeline-example", "description": "Example using Great Expectations to Validate Data in a scikit-learn Pipeline", "created": "2019-09-03 21:26:41", "language": "Python", "type": "User", "username": "StevenMMortimer", "stars": 15, "forks": 2, "subscribers": 3, "open_issues": 0, "topics": ["python", "great-ex"]}, {"id": 19363962, "repo_name": "NeuralNets", "full_name": "keithzhou/NeuralNets", "description": "scikit-learn friendly Implementation of Neural Nets. Will also try to reproduce results in this area", "created": "2014-05-02 02:26:12", "language": "Python", "type": "User", "username": "keithzhou", "stars": 15, "forks": 2, "subscribers": 3, "open_issues": 1, "topics": []}, {"id": 107755596, "repo_name": "hopfield-mnist", "full_name": "kencyke/hopfield-mnist", "description": "A scikit-learn implementation of hopfield network for MNIST", "created": "2017-10-21 06:01:40", "language": "Python", "type": "User", "username": "kencyke", "stars": 15, "forks": 0, "subscribers": 3, "open_issues": 0, "topics": ["python", "hopfield-network", "scikit-learn", "mnist"]}, {"id": 9434118, "repo_name": "newsclassifier", "full_name": "belate/newsclassifier", "description": "Classify newspaper articles using scikit-learn and scraping test articles from several online newspapers like BBC, The Guardian, Telegraph and Reuters.", "created": "2013-04-14 19:33:04", "language": "Python", "type": "User", "username": "belate", "stars": 15, "forks": 4, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 100877433, "repo_name": "Data-Science-Python", "full_name": "GeorgeSeif/Data-Science-Python", "description": "Data Science analysis and visualization using Python.", "created": "2017-08-20 17:25:44", "language": "Python", "type": "User", "username": "GeorgeSeif", "stars": 15, "forks": 18, "subscribers": 3, "open_issues": 0, "topics": ["data-science", "python", "numpy", "scikit-learn", "machine-learning", "pandas", "matplotlib"]}, {"id": 79555642, "repo_name": "RobustPCA", "full_name": "bsharchilev/RobustPCA", "description": null, "created": "2017-01-20 12:02:56", "language": "Python", "type": "User", "username": "bsharchilev", "stars": 15, "forks": 4, "subscribers": 3, "open_issues": 1, "topics": ["pca-analysis", "robust-pca", "machine-learning-algorithms", "scikit-learn"]}, {"id": 65411193, "repo_name": "resume_tailor", "full_name": "bryantbiggs/resume_tailor", "description": "An unsupervised analysis combining topic modeling and clustering to preserve an individuals work history and credentials while tailoring their resume towards a new career field", "created": "2016-08-10 19:39:38", "language": "Python", "type": "User", "username": "bryantbiggs", "stars": 15, "forks": 12, "subscribers": 2, "open_issues": 0, "topics": ["python", "nltk", "gensim", "scikit-learn", "mongodb", "resume-analysis"]}, {"id": 128720006, "repo_name": "DataSciPy", "full_name": "yoavram/DataSciPy", "description": "Data Science with Python", "created": "2018-04-09 05:40:43", "language": "Jupyter Notebook", "type": "User", "username": "yoavram", "stars": 15, "forks": 12, "subscribers": 5, "open_issues": 2, "topics": ["scientific-computing", "data-science", "machine-learning", "deep-learning", "numpy", "keras", "pandas", "scikit-learn"]}, {"id": 139848876, "repo_name": "Red-Wine-Quality-Accuracy-0.9175-", "full_name": "mrc03/Red-Wine-Quality-Accuracy-0.9175-", "description": "The Red Wine Quality dataset from kaggle. Data is provided of the composition of the wine having different chemicals. I have used pandas to manipulate the data and seaborn to visualize the data. Finally I have made predictions on the wine quality by using various models from the scikit-learn.", "created": "2018-07-05 12:50:14", "language": "Jupyter Notebook", "type": "User", "username": "mrc03", "stars": 15, "forks": 8, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 91533255, "repo_name": "notebooks", "full_name": "data-science-joinville/notebooks", "description": "Community Scientific Python notebooks", "created": "2017-05-17 04:24:34", "language": "Jupyter Notebook", "type": "Organization", "username": "data-science-joinville", "stars": 15, "forks": 0, "subscribers": 4, "open_issues": 0, "topics": ["docker", "scikit-learn"]}, {"id": 437315292, "repo_name": "Machine_Learning", "full_name": "BenyaminZojaji/Machine_Learning", "description": "Data Analysis and ML in Python.", "created": "2021-12-11 15:15:12", "language": "Jupyter Notebook", "type": "User", "username": "BenyaminZojaji", "stars": 15, "forks": 0, "subscribers": 1, "open_issues": 0, "topics": ["ml", "machine-learning", "python", "scikit-learn", "data-science", "data-analysis", "matplotlib"]}, {"id": 141081019, "repo_name": "Vulcan", "full_name": "Aifred-Health/Vulcan", "description": "A high level deep learning framework for quickly prototyping networks with added tools in data visualisation, model interpretability and performance metrics", "created": "2018-07-16 03:15:44", "language": "Python", "type": "Organization", "username": "Aifred-Health", "stars": 15, "forks": 4, "subscribers": 9, "open_issues": 43, "topics": ["mental-health", "deep-learning", "deep-neural-networks", "data-science", "data-visualization", "data-analysis", "pytorch", "scikit-learn", "data-cleaning", "feature-engineering", "python3"]}, {"id": 199247338, "repo_name": "Python-for-Remote-Sensing", "full_name": "Seyed-Ali-Ahmadi/Python-for-Remote-Sensing", "description": "python codes for remote sensing applications will be uploaded here. I will try to teach everything I learn during my projects in here.", "created": "2019-07-28 05:40:13", "language": "Jupyter Notebook", "type": "User", "username": "Seyed-Ali-Ahmadi", "stars": 15, "forks": 8, "subscribers": 5, "open_issues": 0, "topics": ["lidar", "lidar-point-cloud", "point-cloud", "remote-sensing", "satellite-imagery", "satellite-images", "satellite-data", "python", "gdal-python", "gdal", "gdal-python-libraries", "pdal", "python-pdal", "scikit-learn", "hyperspectral-image-classification", "hyperspectral-imaging", "multispectral-images", "spacenet-dataset", "deep-learning", "machine-learning"]}, {"id": 162422530, "repo_name": "Personality-Attribution-using-Natural-Language-Processing", "full_name": "desaichirayu/Personality-Attribution-using-Natural-Language-Processing", "description": "Aims at attributing the big-five personality traits to authors of essays by analyzing their works.", "created": "2018-12-19 10:38:49", "language": "Python", "type": "User", "username": "desaichirayu", "stars": 15, "forks": 3, "subscribers": 0, "open_issues": 0, "topics": ["natural-language-processing", "machine-learning", "personality-traits", "support-vector-machines", "naive-bayes", "neural-networks", "multilayer-perceptron", "word2vec", "tfidf", "gridsearch", "cross-validation", "scikit-learn", "feature-engineering"]}, {"id": 36274925, "repo_name": "interactivekmeans", "full_name": "lettier/interactivekmeans", "description": "Interactive HTML canvas based implementation of k-means.", "created": "2015-05-26 05:45:27", "language": "JavaScript", "type": "User", "username": "lettier", "stars": 15, "forks": 2, "subscribers": 7, "open_issues": 0, "topics": ["interactive-kmeans", "kmeans", "kmeans-clustering", "kmeans-algorithm", "machine-learning", "machine-learning-algorithms", "ai", "clustering", "clustering-algorithm", "cluster-analysis", "clustering-methods", "data-science", "clustering-evaluation", "scikit-learn", "cluster"]}, {"id": 207407054, "repo_name": "SP500-SPY-ETF-Daily-Price-Prediction", "full_name": "ganevniko/SP500-SPY-ETF-Daily-Price-Prediction", "description": "It is well known that the stock market exhibits very high dimensionality due to the almost unlimited number of factors that can affect it which makes it very difficult to predict. Studying how global stock market indexes respond to headlines can provide a major advantage in predicting stock movements and making trade decisions. Naturally, fundamental and technical indicators are not to be neglected and the goal of the project is to combine all of these aspects to achieve a model that thinks as an experienced trader.", "created": "2019-09-09 21:21:48", "language": "Jupyter Notebook", "type": "User", "username": "ganevniko", "stars": 15, "forks": 2, "subscribers": 4, "open_issues": 0, "topics": ["python", "data-science", "keras", "scikit-learn", "aws", "vizualisation", "candlestick-chart", "deep-learning", "machine-learning", "artificial-intelligence", "dimensionality-reduction", "principal-component-analysis", "sentiment-analysis", "arima-model"]}, {"id": 247082865, "repo_name": "fit-COVID19", "full_name": "LucaAngioloni/fit-COVID19", "description": "Easy model to fit logistic curve to COVID19 data from Italy. Demo: https://fit-covid19.herokuapp.com", "created": "2020-03-13 13:53:25", "language": "Python", "type": "User", "username": "LucaAngioloni", "stars": 15, "forks": 2, "subscribers": 3, "open_issues": 0, "topics": ["prediction", "python", "covid-19", "logistic", "regression", "scikit-learn", "covid19", "covid-virus", "forecasting", "coronavirus", "italy", "contagi-giornalieri", "totale-contagi", "demo"]}, {"id": 121609874, "repo_name": "keras2sql", "full_name": "antoinecarme/keras2sql", "description": "Deep Learning (Keras) Models Deployment using SQL databases", "created": "2018-02-15 09:15:18", "language": "Python", "type": "User", "username": "antoinecarme", "stars": 15, "forks": 3, "subscribers": 3, "open_issues": 2, "topics": ["sql", "keras", "deployment", "databases", "sqlserver", "postgresql", "mysql", "layer", "convolutional", "activation", "scikit-learn", "neural-network", "deep-learning", "machine-learning", "in-database", "tensorflow", "theano", "cntk", "lstm", "oracle"]}, {"id": 158839900, "repo_name": "phishing-URL-detection", "full_name": "Komal01/phishing-URL-detection", "description": "Phishing website detection system provides strong security mechanism to detect and prevent phishing domains from reaching user. This project presents a simple and portable approach to detect spoofed webpages and solve security vulnerabilities using Machine Learning.  It can be easily operated by anyone since all the major tasks are happening in the backend. The user is required to provide URL as input to the GUI and click on submit button. The output is shown as \u201cYES\u201d for phishing URL and \u201cNO\u201d for not phished URL.  PYTHON DEPENDENCIES:  \u2022 NumPy, Pandas, Scikit-learn: For Data cleaning, Data analysis and Data modelling. \u2022 Pickle: For exporting the model to local machine  \u2022 Tkinter, Pyqt, QtDesigner: For building up the Graphical User Interface (GUI) of the software.    To avoid the pain of installing independent packages and libraries of python, install Anaconda from www.anaconda.com. It is a Python data science platform which has all the ML libraries, Data analysis libraries, Jupyter Notebooks, Spyder etc. built in it which makes it easy to use and efficient.  Steps to be followed for running the code of the software:  \u2022 Install anaconda in the system. \u2022 gui.py : It contains the code for the GUI and is linked to other modules of the software. \u2022 Feature_extractor.py: It contains the code of Data analysis and data modelling. \u2022 Rf_model.py: It contains the trained machine learning model. \u2022 Only gui.py is to be run to execute the whole software.   ", "created": "2018-11-23 14:00:32", "language": "Jupyter Notebook", "type": "User", "username": "Komal01", "stars": 15, "forks": 12, "subscribers": 2, "open_issues": 0, "topics": []}, {"id": 127122388, "repo_name": "Fundamentals-of-Machine-Learning-with-scikit-learn", "full_name": "PacktPublishing/Fundamentals-of-Machine-Learning-with-scikit-learn", "description": "Fundamentals of Machine Learning with Scikit-Learn", "created": "2018-03-28 10:14:11", "language": "Python", "type": "Organization", "username": "PacktPublishing", "stars": 14, "forks": 23, "subscribers": 6, "open_issues": 0, "topics": []}, {"id": 219927343, "repo_name": "scikit_handbook", "full_name": "ayukat1016/scikit_handbook", "description": "scikit-learn handbook", "created": "2019-11-06 06:27:56", "language": "Jupyter Notebook", "type": "User", "username": "ayukat1016", "stars": 14, "forks": 10, "subscribers": 2, "open_issues": 0, "topics": []}, {"id": 114042131, "repo_name": "introductory-machine-learning-algorithms-in-python-with-scikit-learn", "full_name": "eggheadio-projects/introductory-machine-learning-algorithms-in-python-with-scikit-learn", "description": null, "created": "2017-12-12 21:42:25", "language": "Python", "type": "Organization", "username": "eggheadio-projects", "stars": 14, "forks": 12, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 153425704, "repo_name": "MachineLearningStocks", "full_name": "deysuman/MachineLearningStocks", "description": "Using python and scikit-learn to make stock predictions", "created": "2018-10-17 08:51:23", "language": "Python", "type": "User", "username": "deysuman", "stars": 14, "forks": 12, "subscribers": 1, "open_issues": 1, "topics": ["stock-prediction", "stock-analysis", "machine-learning", "machine-learning-algorithms", "scikit-learn", "science", "data-science", "yahoo-finance", "sklearn", "historical-stock-fundamentals", "python", "python3", "india", "deysuman", "made-with-love", "math-with-python", "finance", "deep-learning"]}, {"id": 101768542, "repo_name": "temperature-prediction", "full_name": "jasonx1011/temperature-prediction", "description": "[Scikit-learn] Temperature Prediction Application using Machine Learning Algorithms; Predicted daily temperature using multiple Linear Regression models & MLP with Scikit-learn, score = 0.85", "created": "2017-08-29 14:09:39", "language": "Python", "type": "User", "username": "jasonx1011", "stars": 14, "forks": 12, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 80866686, "repo_name": "tsne_animate", "full_name": "sophronesis/tsne_animate", "description": "Automated animation for scikit-learn's t-sne algorithm", "created": "2017-02-03 20:29:43", "language": "Python", "type": "User", "username": "sophronesis", "stars": 14, "forks": 9, "subscribers": 2, "open_issues": 0, "topics": []}, {"id": 214360853, "repo_name": "Machine_Learning_Explanation-Code", "full_name": "abdelrahmaan/Machine_Learning_Explanation-Code", "description": "Python, Pandas, Numpy, Matplot,  Scikit-learn, NN, SVM, Classification, Regression, Tensorflow&Keras, Kaggle.", "created": "2019-10-11 06:32:14", "language": "Jupyter Notebook", "type": "User", "username": "abdelrahmaan", "stars": 14, "forks": 12, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 219838307, "repo_name": "MyFirstSciKitLearnModel", "full_name": "hockeygeekgirl/MyFirstSciKitLearnModel", "description": "Train your first machine learning model using Jupyter Notebooks and Scikit learn", "created": "2019-11-05 19:53:13", "language": "Jupyter Notebook", "type": "User", "username": "hockeygeekgirl", "stars": 14, "forks": 9, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 100838967, "repo_name": "sklearn-post-prune-tree", "full_name": "shenwanxiang/sklearn-post-prune-tree", "description": "this is post-prune tree code for scikit-learn 0.18.0", "created": "2017-08-20 04:47:48", "language": "Python", "type": "User", "username": "shenwanxiang", "stars": 14, "forks": 3, "subscribers": 2, "open_issues": 3, "topics": []}, {"id": 78608041, "repo_name": "AI-Stock-market-trend-predictor", "full_name": "sasankauppu3/AI-Stock-market-trend-predictor", "description": "A ML model to predict if a company\u2019s stock value will go up or down using Python and Sci-kit learn library.", "created": "2017-01-11 06:05:07", "language": "Python", "type": "User", "username": "sasankauppu3", "stars": 14, "forks": 7, "subscribers": 2, "open_issues": 1, "topics": ["python", "artificial-intelligence", "machine-learning-algorithms", "scikit-learn"]}, {"id": 304442389, "repo_name": "hpbandster-sklearn", "full_name": "Yard1/hpbandster-sklearn", "description": "A scikit-learn wrapper for HpBandSter hyper parameter search.", "created": "2020-10-15 20:36:53", "language": "Python", "type": "User", "username": "Yard1", "stars": 14, "forks": 1, "subscribers": 3, "open_issues": 0, "topics": ["scikit-learn", "sklearn", "python", "machine-learning", "hyperparameter-optimization", "hyperparameter-tuning", "bayesian-optimization", "automated-machine-learning", "automl"]}, {"id": 144579739, "repo_name": "ackeras", "full_name": "accurat/ackeras", "description": "AutoML library for Accurat, based on AutoKeras and Scikit-Learn.", "created": "2018-08-13 12:55:04", "language": "Python", "type": "Organization", "username": "accurat", "stars": 14, "forks": 1, "subscribers": 10, "open_issues": 2, "topics": ["automl", "python3", "keras"]}, {"id": 162071487, "repo_name": "EDA", "full_name": "notha99y/EDA", "description": "This repo serves as code reference for the following TDS post https://towardsdatascience.com/a-starter-pack-to-exploratory-data-analysis-with-python-pandas-seaborn-and-scikit-learn-a77889485baf", "created": "2018-12-17 03:50:03", "language": "Jupyter Notebook", "type": "User", "username": "notha99y", "stars": 14, "forks": 10, "subscribers": 2, "open_issues": 0, "topics": []}, {"id": 127626092, "repo_name": "ASD-ML-API", "full_name": "ritabratamaiti/ASD-ML-API", "description": "This project has 3 goals: To find out the best machine learning pipeline for predicting ASD cases using genetic algorithms, via the TPOT library. (Classification Problem) Compare the accuracy of the accuracy of the determined pipeline, with a standard Naive-Bayes classifier. Saving the classifier as an external file, and use this file in a Flask API to make predictions in the cloud.", "created": "2018-04-01 12:12:24", "language": "Rich Text Format", "type": "User", "username": "ritabratamaiti", "stars": 14, "forks": 11, "subscribers": 2, "open_issues": 0, "topics": ["genetic-algorithm", "machine-learning", "scikit-learn", "flask-api", "tpot"]}, {"id": 149168227, "repo_name": "Forecasting-Weather-Using-Machine-Learning", "full_name": "sksoumik/Forecasting-Weather-Using-Machine-Learning", "description": "Forecasting weather Using Multinomial Logistic Regression, Decision Tree, Na\u00efve Bayes Multinomial, and Support Vector Machine", "created": "2018-09-17 18:14:06", "language": "Python", "type": "User", "username": "sksoumik", "stars": 14, "forks": 11, "subscribers": 3, "open_issues": 2, "topics": ["scikit-learn", "pandas", "support-vector-machine", "logistic-regression", "decision-tree", "multinomial-naive-bayes", "python"]}, {"id": 184726367, "repo_name": "Phishing-Websites-Detection", "full_name": "sayakpaul/Phishing-Websites-Detection", "description": "Experiments to detect phishing websites using neural networks", "created": "2019-05-03 08:58:30", "language": "Jupyter Notebook", "type": "User", "username": "sayakpaul", "stars": 14, "forks": 9, "subscribers": 1, "open_issues": 0, "topics": ["cybersecurity", "phishing-attacks", "machine-learning", "neural-network", "keras-tensorflow", "scikit-learn"]}, {"id": 39599885, "repo_name": "nba-analysis", "full_name": "qmac/nba-analysis", "description": "Using machine learning libraries to analyze NBA data", "created": "2015-07-23 23:39:32", "language": "HTML", "type": "User", "username": "qmac", "stars": 14, "forks": 4, "subscribers": 4, "open_issues": 0, "topics": ["nba", "machine-learning", "d3", "statistics", "scikit-learn"]}, {"id": 88456755, "repo_name": "Multi-labelofChineseText", "full_name": "wx805541464/Multi-labelofChineseText", "description": "This is  the idea from scikit-learn to implement the task of multi-label for Chinese text.  ", "created": "2017-04-17 01:53:34", "language": "Python", "type": "User", "username": "wx805541464", "stars": 14, "forks": 1, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 149821461, "repo_name": "Sentiment-Analysis-by-combining-Machine-Learning-and-Lexicon-Based-methods", "full_name": "rsher60/Sentiment-Analysis-by-combining-Machine-Learning-and-Lexicon-Based-methods", "description": "This project is on twitter sentimental analysis by combining lexicon based and machine learning approaches. A supervised lexicon-based approach for extracting sentiments from tweets was implemented. Various supervised machine learning approaches were tested using scikit-learn libraries in python and implemented Decision Trees and Naive Bayes techniques.", "created": "2018-09-21 21:44:51", "language": "Python", "type": "User", "username": "rsher60", "stars": 14, "forks": 4, "subscribers": 0, "open_issues": 1, "topics": ["sentiment-analysis", "python27", "nltk-library", "nlp", "text-mining", "decision-tree-classifier", "naive-bayes-classifier"]}, {"id": 53597336, "repo_name": "operalib", "full_name": "operalib/operalib", "description": "Learning with operator-valued kernels", "created": "2016-03-10 15:55:28", "language": "Python", "type": "Organization", "username": "operalib", "stars": 14, "forks": 3, "subscribers": 8, "open_issues": 6, "topics": ["operator-valued", "kernel", "kernel-methods", "rff", "random", "fourier", "features", "machine-learning-library", "learning-algorithm", "scikit-learn"]}, {"id": 300844483, "repo_name": "personality_detection", "full_name": "amirmohammadkz/personality_detection", "description": "BB-SVM model for automatic personality detection of the essays dataset (Big-Five personality labeled traits) ", "created": "2020-10-03 09:34:46", "language": "Python", "type": "User", "username": "amirmohammadkz", "stars": 14, "forks": 3, "subscribers": 3, "open_issues": 5, "topics": ["personality-traits", "personality-detection", "bert", "svm", "essays-dataset", "machine-learning", "scikit-learn", "personality-profiling", "sentiment-analysis"]}, {"id": 418445217, "repo_name": "arm_python_packages", "full_name": "coaxsoft/arm_python_packages", "description": "Python packages for M1 users", "created": "2021-10-18 10:09:54", "language": null, "type": "Organization", "username": "coaxsoft", "stars": 14, "forks": 0, "subscribers": 1, "open_issues": 0, "topics": ["arm64", "python", "m1", "scikit-learn", "machine-learning", "xgboost"]}, {"id": 85988046, "repo_name": "NYCBuildingEnergyUse", "full_name": "mdh266/NYCBuildingEnergyUse", "description": "Creating Regression Models Of Building Emissions On Google Cloud", "created": "2017-03-23 19:11:56", "language": "Jupyter Notebook", "type": "User", "username": "mdh266", "stars": 14, "forks": 5, "subscribers": 2, "open_issues": 1, "topics": ["energy-efficiency", "exploratory-data-analysis", "regression-models", "regression", "bokeh", "data-science", "outlier-detection", "outlier-removal", "missing-values", "missing-data", "scikit-learn", "google-app-engine", "xgboost"]}, {"id": 379706214, "repo_name": "explainy", "full_name": "MauroLuzzatto/explainy", "description": "explainy is a Python library for generating machine learning model explanations for humans", "created": "2021-06-23 19:13:42", "language": "Python", "type": "User", "username": "MauroLuzzatto", "stars": 14, "forks": 0, "subscribers": 3, "open_issues": 0, "topics": ["machine-learning", "python", "machine-learning-explainability", "data-science", "explanation", "scikit-learn"]}, {"id": 265042406, "repo_name": "Reproducible-ML-with-DVC", "full_name": "curiousily/Reproducible-ML-with-DVC", "description": "Tutorial on experiment tracking and reproducibility for Machine Learning projects with DVC", "created": "2020-05-18 19:34:34", "language": "Python", "type": "User", "username": "curiousily", "stars": 14, "forks": 4, "subscribers": 1, "open_issues": 2, "topics": ["dvc", "reproducibility", "linear-regression", "random-forest", "python", "deep-learning", "machine-learning", "scikit-learn", "tracking", "experiment-tracking", "metrics"]}, {"id": 315412525, "repo_name": "CVE-Search", "full_name": "alexfrancow/CVE-Search", "description": "CVE-Search (name still in alpha), is a Machine Learning tool focused on the detection of exploits or proofs of concept in social networks such as Twitter, Github. It is also capable of doing related searches on Google, Yandex, DuckDuckGo on CVEs and detecting if the content may be a functional exploit, a proof of concept or simply information about the vulnerability.", "created": "2020-11-23 18:59:20", "language": "Jupyter Notebook", "type": "User", "username": "alexfrancow", "stars": 14, "forks": 0, "subscribers": 3, "open_issues": 1, "topics": ["machine-learning", "nlp-machine-learning", "cve", "exploits", "poc", "flask", "postgresql", "pandas", "scikit-learn", "python3"]}, {"id": 188256410, "repo_name": "scikit-learn-workshop-2019", "full_name": "glemaitre/scikit-learn-workshop-2019", "description": null, "created": "2019-05-23 15:02:58", "language": "Jupyter Notebook", "type": "User", "username": "glemaitre", "stars": 13, "forks": 13, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 147806614, "repo_name": "Skin-Extraction-from-Image-and-Finding-Dominant-Color", "full_name": "octalpixel/Skin-Extraction-from-Image-and-Finding-Dominant-Color", "description": "Project is an implementation of skin segmentation using OpenCV and dominant color extraction using SciKit-Learn", "created": "2018-09-07 10:05:50", "language": "Jupyter Notebook", "type": "User", "username": "octalpixel", "stars": 13, "forks": 11, "subscribers": 1, "open_issues": 0, "topics": ["machine-learning", "image-processing", "opencv", "python", "scikit-learn", "kmeans-clustering", "kmeans"]}, {"id": 93755264, "repo_name": "Ferry_ETA_Prediction", "full_name": "mtduman/Ferry_ETA_Prediction", "description": "Machine Learning using Python Scikit-Learn: Washington State Ferries estimate time of arrival prediction", "created": "2017-06-08 13:53:53", "language": "Jupyter Notebook", "type": "User", "username": "mtduman", "stars": 13, "forks": 5, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 265579186, "repo_name": "sklearn-sfa", "full_name": "wiskott-lab/sklearn-sfa", "description": "This project provides Slow Feature Analysis as a scikit-learn-style package.", "created": "2020-05-20 13:46:01", "language": "Python", "type": "Organization", "username": "wiskott-lab", "stars": 13, "forks": 5, "subscribers": 5, "open_issues": 0, "topics": []}, {"id": 74083298, "repo_name": "xlearn", "full_name": "wy2136/xlearn", "description": "xarray-aware scikit-learn", "created": "2016-11-18 01:31:23", "language": "Python", "type": "User", "username": "wy2136", "stars": 13, "forks": 1, "subscribers": 4, "open_issues": 0, "topics": []}, {"id": 43539491, "repo_name": "scikit-learn-to-spark-ml", "full_name": "ybenoit/scikit-learn-to-spark-ml", "description": "Notebook comparing scikit-learn and Spark ML for building Machine Learning Pipelines", "created": "2015-10-02 06:53:32", "language": null, "type": "User", "username": "ybenoit", "stars": 13, "forks": 1, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 99431907, "repo_name": "-ANT-", "full_name": "MahmoudAbdelRahman/-ANT-", "description": "Machine Learning plugin for Rhino\\Grasshopper based on Python\\scikit-learn module. [Gh_CPython generated version]", "created": "2017-08-05 15:41:01", "language": "Python", "type": "User", "username": "MahmoudAbdelRahman", "stars": 13, "forks": 2, "subscribers": 8, "open_issues": 0, "topics": []}, {"id": 159649772, "repo_name": "House_Price_Forecast", "full_name": "zmzhouXJTU/House_Price_Forecast", "description": "\u5229\u7528\u56de\u5f52\u6a21\u578b\u5b9e\u73b0\u623f\u4ef7\u9884\u6d4b", "created": "2018-11-29 10:38:46", "language": "Jupyter Notebook", "type": "User", "username": "zmzhouXJTU", "stars": 13, "forks": 6, "subscribers": 1, "open_issues": 0, "topics": ["machine-learning", "scikit-learn", "kaggle-competition"]}, {"id": 236754630, "repo_name": "Quizzes", "full_name": "DunderData/Quizzes", "description": "Python, Pandas, and Scikit-Learn Quizzes and Solutions", "created": "2020-01-28 14:30:24", "language": "Jupyter Notebook", "type": "Organization", "username": "DunderData", "stars": 13, "forks": 1, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 149483756, "repo_name": "fake-news-detection", "full_name": "nilkanthshirodkar/fake-news-detection", "description": "Building Fake News Detection using Angular 6 in the frontend, Node JS in Backend to build API using Express JS and Python Scikit Learn machine learning package for detecting Fake News. ", "created": "2018-09-19 16:57:09", "language": "TypeScript", "type": "User", "username": "nilkanthshirodkar", "stars": 13, "forks": 9, "subscribers": 4, "open_issues": 1, "topics": ["nodejs", "machine-learning", "angular", "expressjs", "scikitlearn-machine-learning"]}, {"id": 158783439, "repo_name": "Time-Series-Forecast-NSEPy", "full_name": "Atul-Anand-Jha/Time-Series-Forecast-NSEPy", "description": "Redcarpetup.com assignment Intern Task", "created": "2018-11-23 05:09:48", "language": "Jupyter Notebook", "type": "User", "username": "Atul-Anand-Jha", "stars": 13, "forks": 17, "subscribers": 4, "open_issues": 0, "topics": ["stock", "bokeh", "scikit-learn", "time-series", "time-series-analysis", "nse-stock-data", "python"]}, {"id": 314447477, "repo_name": "skgrf", "full_name": "crflynn/skgrf", "description": "scikit-learn compatible Python bindings for grf C++ random forest library", "created": "2020-11-20 04:36:24", "language": "Python", "type": "User", "username": "crflynn", "stars": 13, "forks": 1, "subscribers": 2, "open_issues": 7, "topics": ["machine-learning", "random-forest", "scikit-learn", "generalized-random-forest"]}, {"id": 184578021, "repo_name": "early-im-fault-diagnosis", "full_name": "mjuez/early-im-fault-diagnosis", "description": "\ud83e\udde0 A model for early detection of multiple faults in induction motors based on the use of PCA and multilabel decision-trees", "created": "2019-05-02 12:36:00", "language": "Jupyter Notebook", "type": "User", "username": "mjuez", "stars": 13, "forks": 8, "subscribers": 2, "open_issues": 0, "topics": ["multilabel-classification", "pca", "scikit-learn", "decision-trees", "induction-motor", "industry-4"]}, {"id": 197608242, "repo_name": "toai", "full_name": "tribeofai/toai", "description": null, "created": "2019-07-18 15:00:41", "language": "Python", "type": "Organization", "username": "tribeofai", "stars": 13, "forks": 6, "subscribers": 3, "open_issues": 3, "topics": ["python", "numpy", "scikit-learn", "tensorflow", "pandas", "jupyter-notebook"]}, {"id": 50459100, "repo_name": "jupyter_demonstrations", "full_name": "Yorko/jupyter_demonstrations", "description": "Random jupyter notebooks on data analysis and machine learning", "created": "2016-01-26 21:04:29", "language": "Jupyter Notebook", "type": "User", "username": "Yorko", "stars": 13, "forks": 25, "subscribers": 2, "open_issues": 0, "topics": ["data-analysis", "visualization", "machine-learning", "jupyter-notebook", "python", "pandas", "scikit-learn", "russian", "fun", "habrahabr-posts", "ipynb"]}, {"id": 117314723, "repo_name": "Zillow-prediction-models", "full_name": "eswar3/Zillow-prediction-models", "description": "Machine Learning Project using Kaggle dataset", "created": "2018-01-13 04:44:42", "language": "Jupyter Notebook", "type": "User", "username": "eswar3", "stars": 13, "forks": 2, "subscribers": 1, "open_issues": 0, "topics": ["machine-learning", "xgboost-algorithm", "eda", "parameter-tuning", "scikit-learn", "scikitlearn-machine-learning", "numpy"]}, {"id": 388393811, "repo_name": "hydra-sklearn-pipelines", "full_name": "elisim/hydra-sklearn-pipelines", "description": "Hydra-Sklearn preprocessing pipelines. Code accompanying the blogpost: Creating Configurable Data Pre-Processing Pipelines by Combining Hydra and Sklearn", "created": "2021-07-22 08:55:32", "language": "Jupyter Notebook", "type": "User", "username": "elisim", "stars": 13, "forks": 1, "subscribers": 1, "open_issues": 1, "topics": ["machine-learning", "hydra", "scikit-learn", "data-science"]}, {"id": 383957107, "repo_name": "web-crawler-detection", "full_name": "zivdar001matin/web-crawler-detection", "description": "Final project of Rahnema College internship. Crawler detection using unsupervised learning methods.", "created": "2021-07-08 00:26:50", "language": "Python", "type": "User", "username": "zivdar001matin", "stars": 13, "forks": 0, "subscribers": 1, "open_issues": 0, "topics": ["mlflow", "scikit-learn", "tensorflow2", "unsupervised-learning", "crawler-detection"]}, {"id": 241810847, "repo_name": "graduation-design", "full_name": "HongChutang/graduation-design", "description": "\u6bd5\u8bbe\u4f5c\u54c1\uff1a\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684SQL\u6ce8\u5165\u68c0\u6d4b\u7cfb\u7edf\u7684\u7814\u7a76\u4e0e\u5b9e\u73b0\u3002\u76d1\u7763\u5b66\u4e60\uff1b\u6734\u7d20\u8d1d\u53f6\u65af\uff1bScikit-Learn\uff1bPython\uff1bDjango", "created": "2020-02-20 06:30:42", "language": "HTML", "type": "User", "username": "HongChutang", "stars": 13, "forks": 0, "subscribers": 3, "open_issues": 2, "topics": []}, {"id": 108616160, "repo_name": "TextClassificationApp", "full_name": "mdh266/TextClassificationApp", "description": "Building and Deploying A Serverless Text Classification Web App ", "created": "2017-10-28 03:19:38", "language": "Jupyter Notebook", "type": "User", "username": "mdh266", "stars": 13, "forks": 6, "subscribers": 2, "open_issues": 3, "topics": ["scikit-learn", "natural-language-processing", "machine-learning", "nltk", "imbalanced-data", "imbalanced-learning", "nlp", "naive-bayes", "support-vector-machine", "text-classification", "docker", "data-science", "fastapi", "document-classification"]}, {"id": 107778913, "repo_name": "RookieML", "full_name": "bhaumik-choksi/RookieML", "description": "A collection of notebooks explaining basic machine learning concepts", "created": "2017-10-21 12:39:56", "language": "Jupyter Notebook", "type": "User", "username": "bhaumik-choksi", "stars": 13, "forks": 2, "subscribers": 3, "open_issues": 0, "topics": ["tutorial", "machine-learning", "machine-learning-concepts", "jupyter-notebook", "neural-network", "scikit-learn", "keras", "tensorflow"]}, {"id": 109551739, "repo_name": "cvopt", "full_name": "genfifth/cvopt", "description": "Machine learning's parameter search and feature selection module which is  integrated log management and visualization.", "created": "2017-11-05 04:29:25", "language": "Python", "type": "User", "username": "genfifth", "stars": 13, "forks": 6, "subscribers": 0, "open_issues": 2, "topics": ["scikit-learn", "integrated-visualization", "feature-selection", "hyperparameter-optimization", "hyperopt", "machine-learning", "logmanagement", "bayesian-optimization", "keras", "deep-learning", "python"]}, {"id": 105230166, "repo_name": "Network-based-Intrusion-Detection-Systems", "full_name": "imRP26/Network-based-Intrusion-Detection-Systems", "description": "Final Year project based upon Network Intrusion Detection System", "created": "2017-09-29 04:33:35", "language": "Jupyter Notebook", "type": "User", "username": "imRP26", "stars": 13, "forks": 4, "subscribers": 0, "open_issues": 0, "topics": ["python3", "scikit-learn", "machine-learning", "adaboost", "decision-tree", "naive-bayes", "knn-classification", "linear-discriminant-analysis", "linearsvc", "logistic-regression", "multilayer-perceptron", "quadratic-discriminant-analysis", "random-forest", "sgd-classifier", "correlation"]}, {"id": 309878273, "repo_name": "sdb_gui", "full_name": "rifqiharrys/sdb_gui", "description": "Python based GUI for Satellite Derived Bathymetry processing", "created": "2020-11-04 03:53:53", "language": "Jupyter Notebook", "type": "User", "username": "rifqiharrys", "stars": 13, "forks": 5, "subscribers": 2, "open_issues": 1, "topics": ["sdb-gui", "sdb", "bathymetry", "depth", "depth-prediction", "satellite", "python", "gui", "python3", "satellite-derived-bathymetry", "machine-learning", "scikit-learn"]}, {"id": 166795735, "repo_name": "python3-docker-devenv", "full_name": "resotto/python3-docker-devenv", "description": "Docker Start Guide with Python Development Environment", "created": "2019-01-21 10:33:46", "language": "Python", "type": "User", "username": "resotto", "stars": 13, "forks": 2, "subscribers": 3, "open_issues": 0, "topics": ["docker", "python3", "ubuntu", "development-environment", "matplotlib", "deep-learning", "tensorflow", "scikit-learn", "sklearn", "numpy", "dockerhub", "docker-container", "docker-image", "docker-commands", "dockerfile", "docker-volume", "docker-daemon", "python", "ssh"]}, {"id": 329076928, "repo_name": "machine-learning-in-scikit-learn", "full_name": "brianspiering/machine-learning-in-scikit-learn", "description": "Machine learning lab course (USF's MSDS 699)", "created": "2021-01-12 18:30:15", "language": null, "type": "User", "username": "brianspiering", "stars": 12, "forks": 11, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 193737027, "repo_name": "Model_Design-Selection", "full_name": "frank-ceballos/Model_Design-Selection", "description": "Model Design and Selection in Scikit Learn", "created": "2019-06-25 15:41:10", "language": "Python", "type": "User", "username": "frank-ceballos", "stars": 12, "forks": 14, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 98900245, "repo_name": "python_libraries_for_ml_and_dl", "full_name": "Dataweekends/python_libraries_for_ml_and_dl", "description": "Introduction to Pandas, Scikit-Learn and Keras", "created": "2017-07-31 14:51:22", "language": "Jupyter Notebook", "type": "Organization", "username": "Dataweekends", "stars": 12, "forks": 10, "subscribers": 6, "open_issues": 0, "topics": []}, {"id": 102018495, "repo_name": "python-sklearn-clustering-cookiecutter", "full_name": "microsoft/python-sklearn-clustering-cookiecutter", "description": "Cookiecutter template for testing Python scikit-learn clustering learners.", "created": "2017-08-31 15:54:34", "language": "Python", "type": "Organization", "username": "microsoft", "stars": 12, "forks": 14, "subscribers": 12, "open_issues": 1, "topics": ["python", "cookiecutter", "scikit-learn", "template", "machine-learning"]}, {"id": 219160899, "repo_name": "ANN_from_Scikit_learn_to_Embedded_Systems", "full_name": "abdallah-ali-abdallah/ANN_from_Scikit_learn_to_Embedded_Systems", "description": "Learn how to build ANN using scikit learn then convert the model to run on any embedded platform", "created": "2019-11-02 13:54:14", "language": "C", "type": "User", "username": "abdallah-ali-abdallah", "stars": 12, "forks": 8, "subscribers": 5, "open_issues": 0, "topics": []}, {"id": 51300840, "repo_name": "skboost", "full_name": "hbldh/skboost", "description": "MILBoost and other boosting algorithms, compatible with scikit-learn", "created": "2016-02-08 13:57:24", "language": "Python", "type": "User", "username": "hbldh", "stars": 12, "forks": 11, "subscribers": 3, "open_issues": 0, "topics": ["scikit-learn", "boosting-algorithms", "boosting", "machine-learning"]}, {"id": 249008050, "repo_name": "Intermediate-scikit-learn", "full_name": "raqueeb/Intermediate-scikit-learn", "description": "\u0986\u09b0\u09c7\u0995\u099f\u09be \u09b8\u09be\u0987\u0995\u09bf\u099f-\u09b2\u09be\u09b0\u09cd\u09a8 \u09ac\u0987, \u09a8\u09a4\u09c1\u09a8 \u09a1\u09c7\u099f\u09be\u09b8\u09c7\u099f \u09a8\u09bf\u09df\u09c7", "created": "2020-03-21 15:47:34", "language": "Jupyter Notebook", "type": "User", "username": "raqueeb", "stars": 12, "forks": 4, "subscribers": 2, "open_issues": 0, "topics": []}, {"id": 188692600, "repo_name": "scikit-learn-C4.5-tree-classifier", "full_name": "RaczeQ/scikit-learn-C4.5-tree-classifier", "description": "A C4.5 tree classifier based on a zhangchiyu10/pyC45 repository, refactored to be compatible with the scikit-learn library.", "created": "2019-05-26 14:22:24", "language": "Python", "type": "User", "username": "RaczeQ", "stars": 12, "forks": 6, "subscribers": 2, "open_issues": 3, "topics": ["c45", "c45-trees", "python", "scikit-learn", "sklearn", "sklearn-classify", "decision-trees", "decision-tree", "classifier"]}, {"id": 49604046, "repo_name": "kernel_eca", "full_name": "tsterbak/kernel_eca", "description": "Scikit-learn compatible Kernel Entropy Component Analysis in Python ", "created": "2016-01-13 21:44:38", "language": "Python", "type": "User", "username": "tsterbak", "stars": 12, "forks": 7, "subscribers": 2, "open_issues": 2, "topics": []}, {"id": 257017095, "repo_name": "Wine-Rating-Predictor-ML-Model", "full_name": "cereniyim/Wine-Rating-Predictor-ML-Model", "description": "Automated ML pipeline with Python, Docker, Luigi, SciKit-Learn and Pandas to predict wine quality ratings", "created": "2020-04-19 14:14:43", "language": "Jupyter Notebook", "type": "User", "username": "cereniyim", "stars": 12, "forks": 11, "subscribers": 3, "open_issues": 1, "topics": ["python", "scikit-learn", "luigi-tasks", "pandas", "machine-learning", "docker", "luigi", "random-forest-regression", "regression"]}, {"id": 142406832, "repo_name": "Machine-Learning-Fundamentals", "full_name": "TrainingByPackt/Machine-Learning-Fundamentals", "description": "Use Python and scikit-learn to get up and running with the hottest developments in machine learning", "created": "2018-07-26 07:44:09", "language": "Jupyter Notebook", "type": "Organization", "username": "TrainingByPackt", "stars": 12, "forks": 14, "subscribers": 3, "open_issues": 0, "topics": ["jupyter-notebook", "scikit-learn", "machine-learning", "python3"]}, {"id": 154453348, "repo_name": "machine-learning-by-examples", "full_name": "nnthanh101/machine-learning-by-examples", "description": "Machine Learning by Examples using Google Colab and Scikit-Learn, Keras, Tensorflow.", "created": "2018-10-24 06:55:15", "language": "Jupyter Notebook", "type": "User", "username": "nnthanh101", "stars": 12, "forks": 7, "subscribers": 1, "open_issues": 0, "topics": ["machine-learning", "scikit-learn", "keras", "tensorflow", "google-colaboratory"]}, {"id": 20005277, "repo_name": "titanic_machine_learning_example", "full_name": "ageitgey/titanic_machine_learning_example", "description": "A simple example of how to solve Kaggle's \"Titanic: Machine Learning from Disaster\" challenge using Python and scikit-learn", "created": "2014-05-21 02:31:04", "language": "Python", "type": "User", "username": "ageitgey", "stars": 12, "forks": 12, "subscribers": 1, "open_issues": 1, "topics": []}, {"id": 157051801, "repo_name": "hands-on-machine-learning", "full_name": "zhangxingjing/hands-on-machine-learning", "description": "\u300a\u673a\u5668\u5b66\u4e60\u5b9e\u7528\u6307\u5357\u57fa\u4e8escikit-learn & tensorflow\u300b\u4ee3\u7801\u8be6\u5c3d\u6ce8\u91cahands on machine learning with scikit-learn & tensorflow", "created": "2018-11-11 05:54:21", "language": "Jupyter Notebook", "type": "User", "username": "zhangxingjing", "stars": 12, "forks": 4, "subscribers": 2, "open_issues": 0, "topics": ["python", "machine-learning"]}, {"id": 118460922, "repo_name": "anytime-gridsearch", "full_name": "OryJonay/anytime-gridsearch", "description": "An anytime implementation of scikit-learn GridSearchCV", "created": "2018-01-22 13:30:07", "language": "Python", "type": "User", "username": "OryJonay", "stars": 12, "forks": 2, "subscribers": 2, "open_issues": 0, "topics": ["anytime-algorithms", "gridsearchcv", "search-algorithm", "machine-learning"]}, {"id": 64621558, "repo_name": "airbnb-data-analysis", "full_name": "pauljeon/airbnb-data-analysis", "description": "Using Scikit-learn, Numpy, Pandas and Matplotlib, analyzed Airbnb listing data to understand popular trends and predict SF prices", "created": "2016-07-31 23:46:40", "language": "Jupyter Notebook", "type": "User", "username": "pauljeon", "stars": 12, "forks": 9, "subscribers": 0, "open_issues": 0, "topics": []}, {"id": 184050559, "repo_name": "Analysing-Machine-Learning-Models-with-Yellowbrick", "full_name": "parulnith/Analysing-Machine-Learning-Models-with-Yellowbrick", "description": "Yellowbrick is an open source, Python project that extends the scikit-learn API with visual analysis and diagnostic tools", "created": "2019-04-29 10:30:48", "language": "Jupyter Notebook", "type": "User", "username": "parulnith", "stars": 12, "forks": 8, "subscribers": 1, "open_issues": 1, "topics": ["yellowbricks", "python", "visualization"]}, {"id": 178358248, "repo_name": "ml", "full_name": "xbb2yy/ml", "description": "\u673a\u5668\u5b66\u4e60\u5b9e\u6218\uff1a\u57fa\u4e8eScikit-Learn\u548cTensorFlow\u8bfb\u4e66\u7b14\u8bb0", "created": "2019-03-29 07:50:51", "language": "Jupyter Notebook", "type": "User", "username": "xbb2yy", "stars": 12, "forks": 4, "subscribers": 1, "open_issues": 1, "topics": []}, {"id": 17419746, "repo_name": "scikit-learn", "full_name": "burkostya/scikit-learn", "description": "Node.js wrapper of scikit-learn", "created": "2014-03-04 22:35:27", "language": "JavaScript", "type": "User", "username": "burkostya", "stars": 12, "forks": 1, "subscribers": 2, "open_issues": 0, "topics": []}, {"id": 121987423, "repo_name": "python-analisis-modelado-datos", "full_name": "CAChemE/python-analisis-modelado-datos", "description": "Curso de introducci\u00f3n al an\u00e1lisis y modelado de datos con Python (pandas y scikit-learn) - https://cacheme.org/curso-introduccion-datos-python/", "created": "2018-02-18 20:23:08", "language": "Jupyter Notebook", "type": "Organization", "username": "CAChemE", "stars": 12, "forks": 10, "subscribers": 11, "open_issues": 0, "topics": []}, {"id": 33745633, "repo_name": "tutorial-sklearn-lhcb", "full_name": "glouppe/tutorial-sklearn-lhcb", "description": "Tutorial \"An introduction to Machine Learning with Scikit-Learn\", presented at CERN", "created": "2015-04-10 19:02:44", "language": null, "type": "User", "username": "glouppe", "stars": 12, "forks": 3, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 288522036, "repo_name": "GeneticTree", "full_name": "pysiakk/GeneticTree", "description": "Constructing decision trees with genetic algorithm with a scikit-learn inspired API", "created": "2020-08-18 17:35:28", "language": "Python", "type": "User", "username": "pysiakk", "stars": 12, "forks": 3, "subscribers": 2, "open_issues": 4, "topics": ["genetic", "tree", "genetictree", "genetic-programming", "genetic-algorithm", "machine-learning", "python", "scikit-learn", "evolutionary-algorithm", "classification", "python-library", "data-science"]}, {"id": 145400776, "repo_name": "swift-digits", "full_name": "koher/swift-digits", "description": "Demo app of digits classification by scikit-learn and Core ML in Swift", "created": "2018-08-20 10:07:55", "language": "Swift", "type": "User", "username": "koher", "stars": 12, "forks": 2, "subscribers": 3, "open_issues": 1, "topics": []}, {"id": 274632370, "repo_name": "skstab", "full_name": "FlorentF9/skstab", "description": ":cookie: Clustering stability analysis in Python with a scikit-learn compatible API.", "created": "2020-06-24 09:45:32", "language": "Python", "type": "User", "username": "FlorentF9", "stars": 12, "forks": 2, "subscribers": 3, "open_issues": 0, "topics": []}, {"id": 127972357, "repo_name": "twitter-airlines", "full_name": "martinpella/twitter-airlines", "description": "Sentiment Analysis on tweets from US airlines customers", "created": "2018-04-03 21:45:53", "language": "Jupyter Notebook", "type": "User", "username": "martinpella", "stars": 12, "forks": 5, "subscribers": 1, "open_issues": 2, "topics": ["nlp", "text-classification", "scikit-learn", "keras"]}, {"id": 110681301, "repo_name": "embedding_vectorizer", "full_name": "ChristophAlt/embedding_vectorizer", "description": "Scikit-learn vectorizer implementing \"A simple but tough-to-beat baseline for sentence embeddings.\" by Arora, Sanjeev, Yingyu Liang, and Tengyu Ma. (2016)", "created": "2017-11-14 11:23:18", "language": "Python", "type": "User", "username": "ChristophAlt", "stars": 12, "forks": 3, "subscribers": 2, "open_issues": 0, "topics": ["sklearn-vectorizer", "sentence-embeddings"]}, {"id": 85613078, "repo_name": "kisanmitra", "full_name": "pateash/kisanmitra", "description": "Crop Yield Prediction  Web App Built using Sklearn and Laravel Web Framework", "created": "2017-03-20 18:40:07", "language": "HTML", "type": "User", "username": "pateash", "stars": 12, "forks": 6, "subscribers": 2, "open_issues": 15, "topics": ["machinelearning", "laravel", "scikit-learn", "farmers", "crop-yeild-prediction"]}, {"id": 183013346, "repo_name": "Predicting-Adverse-Drug-Reactions-with-Machine-Learning", "full_name": "ricardoamferreira/Predicting-Adverse-Drug-Reactions-with-Machine-Learning", "description": "The objective of this work is to develop machine learning (ML) methods that can accurately predict adverse drug reactions (ADRs) using the databases SIDER and OFFSIDES.", "created": "2019-04-23 12:46:18", "language": "Jupyter Notebook", "type": "User", "username": "ricardoamferreira", "stars": 12, "forks": 10, "subscribers": 0, "open_issues": 0, "topics": ["machine-learning", "adverse-drug-reaction", "rdkit", "scikit-learn", "xgboost", "imbalanced-learning"]}, {"id": 257040171, "repo_name": "Customer-Segmentation-Unsupervised-ML-Model", "full_name": "cereniyim/Customer-Segmentation-Unsupervised-ML-Model", "description": "Customer-base segmentation over e-commerce sales data", "created": "2020-04-19 15:54:25", "language": "Jupyter Notebook", "type": "User", "username": "cereniyim", "stars": 12, "forks": 9, "subscribers": 2, "open_issues": 0, "topics": ["plotly", "python", "scikit-learn", "unsupervised-machine-learning", "k-means-clustering", "plotlyjs", "customer-segmentation"]}, {"id": 118088860, "repo_name": "2018-Winter-ML", "full_name": "ubcs3/2018-Winter-ML", "description": "UBC Scientific Software Seminar: Hands-On Machine Learning with Scikit-Learn & Tensorflow", "created": "2018-01-19 06:53:01", "language": "Jupyter Notebook", "type": "Organization", "username": "ubcs3", "stars": 12, "forks": 1, "subscribers": 12, "open_issues": 1, "topics": []}, {"id": 179396923, "repo_name": "SpeakerClassifier", "full_name": "dave-fernandes/SpeakerClassifier", "description": "A random forest classifier to predict the age-group and gender of a speaker from voice measurements.", "created": "2019-04-04 01:15:05", "language": "Jupyter Notebook", "type": "User", "username": "dave-fernandes", "stars": 12, "forks": 7, "subscribers": 2, "open_issues": 0, "topics": ["machine-learning", "speech-analysis", "scikit-learn", "gender-classification", "age-classification", "random-forest", "data-science"]}, {"id": 139747454, "repo_name": "Titanic-Survival-In-Depth-Analysis", "full_name": "Chinmayrane16/Titanic-Survival-In-Depth-Analysis", "description": "Used Pandas , Matplotlib , Seaborn libraries to Analyze , Visualize and Explore the data of people travelling on Titanic, and Used Scikit-learn Modelling Algorithms to predict their probability of Survival.", "created": "2018-07-04 16:55:30", "language": "Jupyter Notebook", "type": "User", "username": "Chinmayrane16", "stars": 12, "forks": 4, "subscribers": 0, "open_issues": 0, "topics": ["data-visualization", "classification-model", "data-cleaning", "feature-engineering", "seaborn", "pandas", "matplotlib", "numpy"]}, {"id": 156108967, "repo_name": "chistes-nlp", "full_name": "liopic/chistes-nlp", "description": "Workshop for NLP introduction with Spanish jokes", "created": "2018-11-04 17:50:29", "language": "Jupyter Notebook", "type": "User", "username": "liopic", "stars": 12, "forks": 4, "subscribers": 2, "open_issues": 5, "topics": ["nlp", "workshop", "spanish-jokes", "python3", "scikit-learn", "classification", "spacy"]}, {"id": 106248317, "repo_name": "Optical-Character-Recognition-using-CNN-KNN-SVM-RF", "full_name": "l3lackcurtains/Optical-Character-Recognition-using-CNN-KNN-SVM-RF", "description": ":metal: Handwriting detection using CNN, KNN, SVM, and Random Forest algorithms.", "created": "2017-10-09 07:07:55", "language": "Python", "type": "User", "username": "l3lackcurtains", "stars": 12, "forks": 4, "subscribers": 1, "open_issues": 0, "topics": ["python", "machine-learning", "scikit-learn", "keras", "keras-tensorflow", "keras-neural-networks"]}, {"id": 430989476, "repo_name": "github-avatars", "full_name": "zeke/github-avatars", "description": "A machine learning model to detect whether a GitHub user has a custom or default avatar", "created": "2021-11-23 06:39:01", "language": "Jupyter Notebook", "type": "User", "username": "zeke", "stars": 12, "forks": 1, "subscribers": 1, "open_issues": 0, "topics": ["scikit-learn", "machine-learning", "cog", "replicate"]}, {"id": 373384433, "repo_name": "predict-meals", "full_name": "ds-wook/predict-meals", "description": "\ud83e\udd49\uad6c\ub0b4\uc2dd\ub2f9 \uc2dd\uc218 \uc778\uc6d0 \uc608\uce21 AI \uacbd\uc9c4\ub300\ud68c \uc194\ub8e8\uc158\ud83e\udd49", "created": "2021-06-03 04:51:28", "language": "Python", "type": "User", "username": "ds-wook", "stars": 12, "forks": 0, "subscribers": 2, "open_issues": 0, "topics": ["machine-learning", "scikit-learn", "pandas"]}, {"id": 193130446, "repo_name": "Heart-Diagnosis-Engine", "full_name": "anaclumos/Heart-Diagnosis-Engine", "description": "2019\ub144 \ubbfc\uc871\uc0ac\uad00\uace0\ub4f1\ud559\uad50 \uc878\uc5c5 \ud504\ub85c\uc81d\ud2b8", "created": "2019-06-21 16:35:41", "language": null, "type": "User", "username": "anaclumos", "stars": 12, "forks": 0, "subscribers": 2, "open_issues": 0, "topics": ["machine-learning", "scikit-learn", "pandas", "data-science", "python"]}, {"id": 187457830, "repo_name": "laplace", "full_name": "resotto/laplace", "description": "LSTM Model to predict BTCUSD ticker values", "created": "2019-05-19 09:35:04", "language": "Python", "type": "User", "username": "resotto", "stars": 12, "forks": 5, "subscribers": 5, "open_issues": 1, "topics": ["tensorflow", "numpy", "sklearn", "python3", "recurrent-neural-networks", "bidirectional-lstm", "lstm", "deep-learning", "scikit-learn", "python", "keras"]}, {"id": 224845437, "repo_name": "GMM_Digital_Voice_Recognition", "full_name": "zhengyima/GMM_Digital_Voice_Recognition", "description": "\u57fa\u4e8eGMM\u4e0eMFCC\u7279\u5f81\u8fdb\u884c\u6570\u5b570-9\u7684\u8bed\u97f3\u8bc6\u522b\uff0cGMM\uff0cMFCC\uff0c\u8bed\u97f3\u8bc6\u522b\uff0c\u4e2d\u6587\u6570\u636e\uff0csklearn\uff0cDigital Voice Recognition\u3002", "created": "2019-11-29 11:56:43", "language": "Python", "type": "User", "username": "zhengyima", "stars": 12, "forks": 1, "subscribers": 2, "open_issues": 1, "topics": ["gmm", "mfcc", "digital-signal-processing", "voice-recognition", "sklearn", "scikit-learn", "machine-learning"]}, {"id": 140093786, "repo_name": "100DaysOfMLCode", "full_name": "bksahu/100DaysOfMLCode", "description": "I am taking up the #100DaysOfMLCode Challenge \ud83d\ude0e", "created": "2018-07-07 15:03:58", "language": "Jupyter Notebook", "type": "User", "username": "bksahu", "stars": 12, "forks": 0, "subscribers": 2, "open_issues": 0, "topics": ["machine-learning", "python", "jupyter", "numpy", "pandas", "scikit-learn", "deep-learning", "keras-tensorflow"]}, {"id": 333652135, "repo_name": "Voice4Rural", "full_name": "sakshi-choudhary/Voice4Rural", "description": "A complete one stop solution for all the problems of Rural area people. \ud83d\udc69\ud83c\udffb\u200d\ud83c\udf3e", "created": "2021-01-28 05:09:25", "language": "Python", "type": "User", "username": "sakshi-choudhary", "stars": 12, "forks": 2, "subscribers": 2, "open_issues": 0, "topics": ["machine-learning", "artificial-intelligence", "deep-learning", "reactjs", "fastapi", "chartjs", "hackathon", "natural-language-processing", "tensorflow", "scikit-learn", "decision-trees", "mongodb", "pandas", "python", "javascript"]}, {"id": 251133149, "repo_name": "EmbML", "full_name": "lucastsutsui/EmbML", "description": "A tool to support using classification models in low-power and microcontroller-based embedded systems.", "created": "2020-03-29 20:58:29", "language": "Python", "type": "User", "username": "lucastsutsui", "stars": 12, "forks": 1, "subscribers": 2, "open_issues": 0, "topics": ["microcontroller", "embedded-systems", "classification-models", "weka", "scikit-learn", "machine-learning", "classifier", "embml", "microcontrollers", "tinyml", "iot-device", "edge-computing", "edge-machine-learning", "classification-model"]}, {"id": 73018739, "repo_name": "Relevance-Ranking-using-Latent-Semantic-Indexing--from-scratch-", "full_name": "vijeth8/Relevance-Ranking-using-Latent-Semantic-Indexing--from-scratch-", "description": "Latent Semantic Analysis  Introduction:  An information retrieval technique patented in 1988. In the context of its application to\u00a0information retrieval, it is sometimes called Latent Semantic Indexing (LSI).   LSI allows a search engine to determine what a page is about outside of specifically matching search query text. It looks at  \u201cThemes\u201d instead of \u201cKeywords\u201d.  Linear Algebra techniques used in the project: Singular Value Decomposition, Cosine Similarity, Matrix properties.  Dataset:   \u201cSci.space\u201d news group from 20 news groups dataset, available in the Scikit-Learn library. It contains 400 news articles related to space.    SVD (Singular Value Decomposition): SVD is a matrix decomposition algorithm, it decomposes a matrix into 3 matrices which are a set to transformations. Decomposition leads to an orthogonal matrix U, Diagonal matrix S and a Diagonal Matrix V. This is the best possible transformation of a matrix. In this decomposition method we are looking for a set of orthonormal basis in the row space that when multiplied by the original matrix goes to an orthonormal basis in the column space.Av1\u00a0= \u03c31u1\u00a0 Av2\u00a0= \u03c32u2\u00a0", "created": "2016-11-06 21:02:25", "language": "Jupyter Notebook", "type": "User", "username": "vijeth8", "stars": 12, "forks": 12, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 62497456, "repo_name": "Machine-Learning-SKLearn", "full_name": "pfrcks/Machine-Learning-SKLearn", "description": "Machine Learning using Scikit-Learn", "created": "2016-07-03 13:20:54", "language": "Jupyter Notebook", "type": "User", "username": "pfrcks", "stars": 11, "forks": 16, "subscribers": 4, "open_issues": 1, "topics": []}, {"id": 37462417, "repo_name": "sklearn-cookbook", "full_name": "DavidBrear/sklearn-cookbook", "description": "My code from the Scikit-Learn Cookbook", "created": "2015-06-15 12:00:47", "language": "Python", "type": "User", "username": "DavidBrear", "stars": 11, "forks": 16, "subscribers": 2, "open_issues": 0, "topics": []}, {"id": 266160664, "repo_name": "machine-learning-with-scikit-learn-live-training", "full_name": "datacamp/machine-learning-with-scikit-learn-live-training", "description": "Live Training Session: Machine Learning with Scikit Learn", "created": "2020-05-22 16:43:57", "language": "Jupyter Notebook", "type": "Organization", "username": "datacamp", "stars": 11, "forks": 10, "subscribers": 1, "open_issues": 0, "topics": []}, {"id": 102018638, "repo_name": "python-sklearn-regression-cookiecutter", "full_name": "microsoft/python-sklearn-regression-cookiecutter", "description": "Cookiecutter template for testing Python scikit-learn regression learners.", "created": "2017-08-31 15:56:17", "language": "Python", "type": "Organization", "username": "microsoft", "stars": 11, "forks": 18, "subscribers": 13, "open_issues": 0, "topics": ["python", "cookiecutter", "scikit-learn", "template", "machine-learning"]}, {"id": 146295533, "repo_name": "Hands-on-Scikit-learn-for-Machine-Learning-V-", "full_name": "PacktPublishing/Hands-on-Scikit-learn-for-Machine-Learning-V-", "description": null, "created": "2018-08-27 12:38:32", "language": null, "type": "Organization", "username": "PacktPublishing", "stars": 11, "forks": 6, "subscribers": 7, "open_issues": 0, "topics": []}, {"id": 108171775, "repo_name": "scikit-datasets", "full_name": "daviddiazvico/scikit-datasets", "description": "Scikit-learn-compatible datasets", "created": "2017-10-24 19:10:32", "language": "Python", "type": "User", "username": "daviddiazvico", "stars": 11, "forks": 3, "subscribers": 2, "open_issues": 5, "topics": []}, {"id": 93272131, "repo_name": "Kaggle-Data-Science-London-Scikit-Learn", "full_name": "siddharthagarwal/Kaggle-Data-Science-London-Scikit-Learn", "description": null, "created": "2017-06-03 20:22:38", "language": "Python", "type": "User", "username": "siddharthagarwal", "stars": 11, "forks": 5, "subscribers": 1, "open_issues": 0, "topics": []}]